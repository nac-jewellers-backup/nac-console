{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","components/Vendors/Vendors.js","screens/Vendorlist/Vendorlist.js","screens/Productlist/filterandsearch.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/ProducttypeList/components/Header/Header.js","screens/ProducttypeList/components/Results/Results.js","screens/ProducttypeList/Producttypecontent.js","screens/ProducttypeList/ProducttypeList.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/Header/Header.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","producttypes","voucherdiscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","ALLPRODUCTLIST","_templateObject3","GOLDPRICELIST","_templateObject5","DIAMONDMARKUP","_templateObject6","DIAMONDPRICELIST","_templateObject7","VENDORLIST","MAKINGCHARGEPRICELIST","_templateObject8","GEMPRICELIST","_templateObject9","PRODUCTDIAMONDTYPES","_templateObject10","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","MATERIALMASTER","queries_templateObject3","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","display","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","diamondtype","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","FullLoader","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingLeft","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","CircularProgress","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","columns","format","toFixed","useStyles1","flexShrink","secondary","TablePaginationActions","page","rowsPerPage","onChangePage","IconButton","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","Math","ceil","max","useStyles2","tableWrapper","overflowX","AddContact","setPage","setRowsPerPage","emptyRows","min","contactlist","stickyHeader","column","slice","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Vendorlist","Vendors_AddContact","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","descendingComparator","b","orderBy","EnhancedTableHead","onSelectAllClick","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","withApollo","useHistory","pageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","productlists","setProductlists","_React$useState11","_React$useState12","allproductlists","_React$useState13","_React$useState14","mastercategories","setMastercategories","_React$useState15","_React$useState16","masterproducttypes","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","setOrder","_React$useState21","_React$useState22","setOrderBy","getproductlist","client","fetchPolicy","then","catch","_getproductlist","productcategory","bodydata","offset","products","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","array","comparator","stabilizedThis","el","sort","stableSort","getComparator","product_name","product_category","dist_default","updatedAt","Productlist","text-align","Product","Header","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState3","_useState4","_useState5","_useState6","Create_default","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","action","Producttypecontent","ProducttypeList_components_Header_Header","ProducttypeList_components_Results_Results","ProducttypeList","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchername","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","discounttype","setDiscounttype","_useState11","_useState12","minreq","setMinreq","_useState13","_useState14","_useState15","_useState16","isonce","setIsonce","_useState17","_useState18","_useState19","Date","_useState20","selectedDate","handleDateChange","handleonceperorder","multiline","rows","categories","CardActionArea","DateTimePicker","inputVariant","minDate","strictCompareDates","handleminreq","tabs","VoucherComponent","selectedtab","setSelectedtab","Tabs","scrollButtons","tab","Tab","selected","components_CategoryComponents_CategoryComponents","tabname","CategoryComponents","setSelected","aboutvoucher","Voucherdiscountcontent","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherContext_VoucherProvider","pricingrows","update","handleAdd","downloadlog","productids","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_filterapllied","filterdata","_downloadlog","_callee3","_context3","href","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","showcolumns","createdAt","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","skus","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","Orderlistcontent_Producttypecontent","ConformationAlert","onCancel","Dialog","isshow","aria-labelledby","aria-describedby","DialogTitle","DialogContent","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","isadd","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","cardroot","setPageCount","editdiamond","setEditdiamond","setGoldpricelist","deleteid","setDeleteid","btnEdit","setBtnEdit","isconformation","setIsconformation","_React$useState23","_React$useState24","_handleSave","refetch","priceid","costprice","costPrice","sellingprice","sellingPrice","pricetype","sellingPriceType","negativebtn","datacontent","react_components_esm","onCompleted","allGoldPriceSettings","totalCount","variables","vendorCode","esm_Input_Input","heading","handleSave","generatedSku","Save_default","CancelOutlined_default","diamondData","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","Adddiamondprice_DialogActions","allDiamondPriceSettings","diamondColour","Adddiamondprice_Addmetalprice","Addgemstoneprice","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","Addgemstoneprice_DialogActions","editgem","setEditgem","gemlist","setgemlist","getgemlist","_getgemlist","ratetype","viewtype","gems","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","_React$useState25","_React$useState26","_React$useState27","_React$useState28","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","opts","res","fatchvalue","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","allPricingMarkups","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","Markuppricesetup_components_Product","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","drawer","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","_React$useContext2","optionname","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","DiamondDetails","snackMessage","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","Switch","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","parseFloat","variantFontSize","variantMarginTop","CreateVariant","prod_id","purities","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","_x5","_x6","_x7","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","link","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","_useContext","create_variant","duplicate_productName","state","setstate","pathname","split","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","productType","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productImagesByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","black","warning","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ea23a42.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup'\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\n\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode}) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n\n\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId {\n      nodes {\n        id\n        imagePosition\n        imageUrl\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n        allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: MATERIALMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        \n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-beta.stylori.com/\"\nexport const API_URL = \"https://api-beta.stylori.com/\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-beta.stylori.com/graphql\"\n\n\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Sign in\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Sign in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\"\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n\n    return (\n        <div style={{ position :\"absolute\",backgroundColor : \"#ddd\",zIndex : \"999\", height: '100vh', width: '100%', display: \"flex\",left : '0' ,top : '0', overflow: \"hidden\" }}>\n            { <h1 style={{margin: \"auto\"}}>Loading.......</h1> }\n            {/* <i class=\"fa fa-spinner fa-pulse fa-3x fa-fw\" style={{height: \"40px\"}}></i> */}\n            {/* <div className={classes.root}>\n                    <LinearProgress />\n                    </div> */}\n\n\n            <i class=\"fa fa-cog fa-spin fa-3x fa-fw\" style={{height: \"auto\", fontSize: \"66px\", margin: \"auto\", color: \"#00695C\"}} aria-hidden=\"true\"></i>\n        </div>\n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n     console.log(\"><><><><><\")\n     console.log(JSON.stringify(formdata))\n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','Master Materials']\n  const master_options_url = ['material','producttypes', 'Materials','Metal Colours','Metal Purities','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nconst columns = [\n  { id: 'name', label: 'Vendor Name', minWidth: 200 },\n  { id: 'SKU', label: 'Vendor Code', minWidth: 100 },\n  \n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'delete',\n    label: 'delete',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nexport default function AddContact(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n \n          <TableBody>\n            {props.contactlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.alias}</TableCell>\n                <TableCell align=\"center\"><EditIcon />\n                </TableCell>\n                <TableCell align=\"center\"><DeleteIcon />\n                </TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.contactlist.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendors from '../../components/Vendors'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\nexport const Vendorlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} >\n\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Vendor\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Vendors contactlist={[\n        {\n            \"name\":\"NAC1\"\n        }\n    ]} />\n   \n    </Grid>\n  )\n});\n\nexport default Vendorlist;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'productId', label: 'productId' },\n  { id: 'productName', label: 'productName' },\n  { id: 'productType', label: 'productType' },\n  { id: 'productCategory', label: 'productCategory' },\n  { id: 'updatedAt', label: 'updatedAt' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  useEffect( () => {\n\n    getproductlist(\"\")\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n        alert(\"success\")\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype)\n{\n  let bodydata = {\n    size : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products)\n  \n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.product_name}\n                                    {/* <Link target='blank_' href={row.transSkuListsByProductId.nodes.length > 0 ? BASE_URL+row.transSkuListsByProductId.nodes[0].skuUrl : '-'}  variant=\"body2\">\n                                   \n                                    </Link> */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Category\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header />\n    <Results\n      className={classes.results}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Producttypecontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const ProducttypeList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default ProducttypeList;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleInputChange('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                      //  onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        {props.categories.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: discounttype === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography className={discounttype === option ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>  \n              </div> \n                         \n            \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}\n        </Grid>\n         {discounttype === 'Free Shipping' || discounttype === \"\" ? null :  \n        <Grid item xs={12} sm={12} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          />\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n        label=\"Start Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={new Date()}    \n        onChange={handleDateChange}\n      />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: isonce\n            })}\n            onClick={event => handleonceperorder(event, isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea>\n          </Grid>\n         \n          <Grid item xs={12} sm={12} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        \n        </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n        {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n          \n          <Grid  item xs={3} sm={3} spacing={1}>\n          \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: minreq === option\n            })}\n            onClick={event => handleminreq(event, option)}\n\n            key={option}\n          >\n            {/* <Radio\n              checked={selected === option}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleChange(event, option)}\n            /> */}\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                className={minreq === option ? classes.selectedtext : null}\n                variant=\"h6\"\n              >\n                {option}\n              </Typography>\n              </div>\n            \n          </div>\n          </Grid>\n        ))}\n        </Grid>\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {minreq === 'None' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label={minreq === 'Minimum Order Value' ? 'Minimun Order' : 'Minimum Quantity'}\n          />\n        }\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Purity', label: 'Purity' },\n  { value: 'Availability', label: 'Availability' },\n  { value: 'Styles', label: 'Styles' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleTabsChange = (event, value) => {\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Tabs\n        className={classes.tabs}\n        scrollButtons=\"auto\"\n        value={selectedtab}\n        onChange={handleTabsChange}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            selected\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <div className={classes.content}>\n    \n     <CategoryComponents  tabname={selectedtab}  materials={['Gold', 'Diamond']} />\n     {/* <CategoryComponents  tabname={selectedtab}  materials={['Rings', 'Bracelets']} /> */}\n    \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} />\n    \n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {\"Running\"}\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\" disabled onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Price Update', label: 'Price Update' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n\n  async function updateprices(component)\n{\n\n  var  bodydata = {}\n  \n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Let Google help apps determine location. This means sending anonymous location data to\n            Google, even when no apps are running.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Material\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  function handledelete(datacontent)\n  {\n   \n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  useEffect(() => {\n    const query = props.client.query\n      query({\n        query: ALLPRODUCTLIST,\n        fetchPolicy: \"network-only\"\n      }).then((data) => {\n        // if (data) {\n        // setProductlists(data.data.allProductLists.nodes)\n        // setAllProductlists(data.data.allProductLists.nodes)\n        // setPageCount( data.data.allProductLists.totalCount )\n        // }else{\n        //   alert(\"success\")\n        // }\n      })\n    .catch((error) => {console.log(\"smbcj\")})\n    }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n      <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n     {open ? <Addmetalprice isadd={open} actionclose={handleClose}/> : null} \n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  function handledelete(datacontent)\n  {\n\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n      {open ? <Adddiamondprice isadd={open} actionclose={handleClose}/> : null} \n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  function handledelete()\n  {\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setIsconformation(true);\n  }\n\n\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice isadd={open} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  function handledelete(datacontent)\n  {\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  function handleAdd() {\n    setBtnEdit({ ...btnEdit, id:'', action: true })\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice isadd={open} title={\"Add Making Charge Setup\"} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Material\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleClose}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  function handledelete()\n  {\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setIsconformation(true);\n  }\n\n\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n       <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={6}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n       {/* <Grid item> \n       <TextField\n           variant=\"outlined\"\n           margin=\"dense\"\n           label=\"Search\"\n           className={classes.helperinput}\n           onChange={handleinputChange('weight_start')}\n           id=\"productvendorcode\"\n           name=\"Cost Price\"\n       />\n       </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  {/* <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell> */}\n                                \n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n      {open ? <Addmarkup isadd={open} title={props.title} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Diamond\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withRouter(Markupprice);","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n\n       <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography  variant=\"h6\" noWrap>\n            NAC Jewellers\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={5}\n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        onChange={handleChangeswitch('editreadytoship')}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisdefault : row.isdefault}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisdefault')}\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                       checked={(btnEdit.action && btnEdit.id == row.generatedSku) ? productCtx.editisactive : row.isActive}\n                        disabled={!(btnEdit.action && btnEdit.id == row.generatedSku)}\n                        onChange={handleChangeswitch('editisactive')}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n      <Grid container>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Save\n             </Button>\n                <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button>\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n\n            </Grid>\n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, CategoryList, ProducttypeList, Voucherdiscount, OrderList } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    <PrivateRoute  path={route.producttypes} component={ProducttypeList} />\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}