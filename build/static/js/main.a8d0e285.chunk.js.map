{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/components/Header/Header.js","screens/Materialmaster/components/Results/Results.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/components/Header/Header.js","screens/Mastermetalcolors/components/Results/Results.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","MASTERCOLORS","_templateObject13","SALEDISCOUNTS","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","MASTERPURITIES","_templateObject16","METALMASTER","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","DISCOUNTSTATUSEDIT","_templateObject21","DELETEMARKUPPRICE","_templateObject22","DELETEGOLDPRICE","_templateObject23","DELETESALEDISCOUNT","_templateObject24","DELETEVOUCHERDISCOUNT","_templateObject25","DELETEMAKINGCHARGE","_templateObject26","DELETEGEMCHARGE","_templateObject27","DELETEDIAMONDCHARGE","_templateObject28","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","VOUCHERMASTER","queries_templateObject3","queries_templateObject4","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","display","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","useEffect","handleChange","persist","target","type","checked","handleSubmit","signinobj","statuscode","setItem","accessToken","history","push","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","size","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","forEach","element","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","readOnly","masterproducttype","applyfilter","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","Cancelcreate","CancelOutlined_default","address","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","href","trans_sku_lists","sku_url","product_name","product_category","Switch","updatedAt","colSpan","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","minreq","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","ButtonGroup","categories","discounttype","DateTimePicker","inputVariant","minDate","val","startdate","strictCompareDates","enddate","limittouse","minorder","VoucherComponent","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","snackMessage","_React$useContext2","_creatediscount","isonce","minimumreq","_filterapllied","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","attributedata","filterapllied","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","filterdata","_downloadlog","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","fontWeight","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","columnobjs","column","showcolumns","shoppingCartByCartId","userProfileByUserprofileId","firstName","mobile","cartAddressesByCartId","addressline1","giftwrapsByCartId","paymentMode","paymentStatus","waybill","comments","pgresponse","Producttypecontent","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","OrderList_components_Header_Header","displycolumns","OrderList_components_Results_Results","OrderList","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","withStyles","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","res","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","opts","fatchvalue","allGoldPriceSettings","vendorCode","negativebtn","esm_Input_Input","heading","handleSave","generatedSku","diamondData","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","weightstart","weightend","getgemlist","_getgemlist","_callee4","_context4","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","boxShadow","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","drawer","discountobj","setDiscountobj","discountname","discountcontent","discountvalue","componenets","discounttitle","optionvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","onDelete","Viewsku_DialogActions","Products","handleOpen","Visibility_default","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isloaded","setIsloaded","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","attributeobj","setAttributeobj","discount_id","_getdiscountvalue","comparr","discountid","discunt","components","comp","product_ids","discount_name","discount_value","ispricerun","parseFloat","product_attributes","product_attributes_text","updateprices","eror_skus","_callee5","_context5","pathname","split","getdiscountvalue","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","join","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","Salediscount","Editvendor","taxName","components_EnhancedTableHead_EnhancedTableHead","allMasterTaxSettings","Taxsetup","Mastercontent","Materialmaster","Materialmaster_components_Header_Header","Materialmaster_components_Results_Results","Mastermetalcolors","Mastermetalcolors_components_Header_Header","Mastermetalcolors_components_Results_Results","Masterpurities","Masterpurities_components_Header_Header","Masterpurities_components_Results_Results","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","colimns","DiscountList","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","code","description","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","handleListItemClick","Drawer","ChevronRight_default","ChevronLeft_default","List","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","optionname","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","selected","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","renderMobileMenu","Badge","badgeContent","Mail_default","Notifications_default","aria-controls","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","parse","settingData","shapeData","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","discount","variantFontSize","variantMarginTop","CreateVariant","prod_id","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","Array","prototype","insert","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","bodycontent","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8d0e285.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id'\n\n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\n\n\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"diamondtype\":_.diamondColor+'-'+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\n\nexport const BASE_URL = \"https://staging.stylori.com/\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.2:8000/graphql\"\n// export const API_URL = \"http://192.168.1.2:8000\"\n// export const BASE_URL = \"http://192.168.1.2:8000/\"\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"auth\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n    props.history.push('/productlist')\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\n\nexport const Configuration = withRouter(props => {\n  const master_options = ['Tax','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Master Collections','Master Designs','Master Diamond Types',\n'Master Diamond Settings','Master Diamond Shapes','Master Earring Backings','Master Gemstone Settings','Master Gemstone Shapes','Master Gemstone Types',\n'Master Gender','Master Materials']\n  const master_options_url = ['Taxsetup','material','producttypes', 'materialmaster','mastercolors','masterpurities','Metal Purities']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n   \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3}  >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\"}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography>\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}>\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    setIsadd(false)\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    refetch()   \n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = props.newvendorcode\n    }\n    \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} alignItems={\"flex-end\"} >\n            <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n          <Button variant=\"outlined\" onClick={() => addnewvendor()}  color=\"primary\" >\n          Add New Vendor\n        </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'updatedAt', label: 'updated on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\">\n                                    {row.product_name}\n\n                                    </Link> \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Prodcuts\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"outlined\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value.toUpperCase()\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={vouchercode}\n                       value={vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n            // checked={state.checkedB}\n            // onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.voucherdiscount}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Active Date\n            </Typography>\n          </Grid>\n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <DateTimePicker\n            label=\"Start Date\"\n            fullWidth\n            inputVariant=\"outlined\"\n            value={selectedDate}\n            minDate={new Date()}    \n            onChange={handleDateChange}\n          />\n      </Grid>\n              <Grid  item xs={6} sm={6} spacing={1}>\n              <DateTimePicker\n        label=\"End Date\"\n        fullWidth\n        inputVariant=\"outlined\"\n        value={selectedendDate}\n        minDate={selectedDate}\n        strictCompareDates={true}\n        onChange={handleendDateChange}\n      />\n      </Grid>\n          </Grid>\n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.voucherdiscount}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={minreq === 'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n       \n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n         \n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n        </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n\n    \n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['discounttype'] = voucherCtx.discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minimumreq'] = voucherCtx.minimumreq;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <AboutVoucher className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <VoucherComponent className={classes.aboutvoucher} onAdded={attributesadded}/>\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n<Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid> </>\n          : null }\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                     \n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     {/* <h4 className=\"products\">Variants Table</h4>    */}\n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" fullWidth size=\"large\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n           <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography> \n        </Grid>\n        <Grid item>\n\n          <SortHeader columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(50);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.tableWrapper}>\n              <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\">\n                <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null }\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n   \n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header getColumnnames={columnchanged} columns={columnnames}/>\n    <Results\n      className={classes.results}\n     orders={orderCtx.orderMaster.orders}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n        setEditdiamond({\n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item xs={6}> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n   \n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"outlined\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  setDiscountobj({\n    ...discountobj,\n    \"discountname\": props.discountcontent.discountname,\n    \"discountvalue\":  props.discountcontent.discountvalue,\n    \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n    \"componenets\":props.discountcontent.componenets\n  })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen()\n  {\n    setOpen(true)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={props.products}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.products.length} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      <TableCell align=\"center\">243 SkUS\n                      <IconButton aria-label=\"delete\"  onClick={handleOpen}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  var discount_id = \"\";\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discounttype,\n      componenets: comparr\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n\n    \n    setIsloading(true)\n\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : products\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n    setIsshowpriceupdate(true)\n    if(ispricerun)\n    {\n      updateprices()\n    }else{\n     window.location='/salediscountlist'\n\n    }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n    \n  }\n  async function updateprices()\n  {\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n     discount_id = props.location.pathname.split('/')[2];\n    getdiscountvalue(discount_id)\n\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title=\"\" isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  products={products} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n      {statusmessage}\n          {isshowpriceupdate ? <>\n                        \n                        <IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></> : null\n                        }\n      </Grid>\n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n   \n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button>\n\n    </Grid>\n    </Grid>\n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(props.isadd)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      id : vendordata.id,\n      hsnNumber : vendordata.hsnNumber,\n      taxName : vendordata.taxName,\n      taxValue : vendordata.taxValue,\n      updatedAt : vendordata.updatedAt,\n      isedit : true\n    })\n  \n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n    refetch()\n  }\n  function Cancelcreate() {\n    props.onCancel();\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function CancelEdit(diamondData) {\n    \n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n  useEffect( () => {\n\n  \n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n // setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n\n  return (\n    <Paper className={classes.root}>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={TaxList}\n              onCompleted={data => setPageCount( data.allMasterTaxSettings.totalCount )}\n              >\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterTaxSettings.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && props.isadd ? <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('hsnNumber')}\n\n                              label=\"HSN Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('taxValue')}\n\n                              label=\"Tax %\"\n                             />\n                           </TableCell>\n                           <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null}\n                          \n                           <TableRow key={row.name}>\n                        {\n                        btnEdit.action && btnEdit.id == row.id && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('hsnNumber')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.hsnNumber}\n                           </TableCell> }\n                           {\n                        btnEdit.action && btnEdit.id == row.id && !props.isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('taxValue')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                             {row.taxValue}\n                           </TableCell> }\n                                      {\n                  btnEdit.action && btnEdit.id == row.id && !props.isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                                    \n                                                  </TableRow>\n                                                  </>\n                                                ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\n\n\nexport const Taxsetup = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n   \n  function canceltaxcreation()\n  {\n    setIsadd(false)\n  }\n  function addnewvendor()\n  {\n    setIsadd(true)\n  }\n   \n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Tax Setup\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Button variant=\"outlined\"  onClick={()=>addnewvendor() } color=\"primary\" >\n            Add New Tax\n        </Button>\n        \n        </Grid>\n    </Grid>\n    <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/> \n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Taxsetup;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New 12\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MASTERCOLORS} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MASTERCOLORS}\n                    onCompleted={data => setPageCount( data.allMasterMetalsColors.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                              alert(JSON.stringify(data))\n                                return <> \n\n                                {data.allMasterMetalsColors.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New 12\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MASTERPURITIES} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MASTERPURITIES}\n                    onCompleted={data => setPageCount( data.allMasterMetalsColors.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                              alert(JSON.stringify(data))\n                                return <> \n\n                                {data.allMasterMetalsColors.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><EditIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\n\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: !globalCtx.isExpand})\n\n  }\n  // const handleClick  = type => e => {\n      \n  //     setGlobalCtx({ ...globalCtx,optionname: isExpand: !globalCtx.isExpand })\n\n  // }\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index,isExpand: !globalCtx.isExpand})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          \n          <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}>\n\n            <ListItem button key={\"Configuration\"}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  >\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n       {/* <ListItem button onClick={handleClick('Discounts')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"Discounts\" />\n        {globalCtx.isExpand && globalCtx.optionname === 'Discounts' ? <ExpandLess /> : <ExpandMore />}\n      </ListItem> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n\n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        genders = genders.split(',')\n        let gender_arr = []\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport {BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport { Dashboard, Login, Productupload, Configuration,\n        Priceupdate,Vendorprice, Vendorlist,Markupprice,\n     Productlist, Materiallist, Materialmaster, CategoryList,Mastermetalcolors,Masterpurities\n     ,Voucherdiscount, Salediscount, OrderList, Taxsetup, DiscountList,VoucherdiscountListing } from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport {  NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext,ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return(\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute  path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute  path={route.productupload} component={Productupload} />\n                    <PrivateRoute  path={route.configuration} component={Configuration} />\n                    <PrivateRoute  path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute  path={route.productlist} component={Productlist} />\n                    <PrivateRoute  path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute  path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute  path={route.materiallistpage} component={newmaterial}/>\n                    {/* <PrivateRoute  path={route.producttypes} component={ProducttypeList} /> */}\n                    <PrivateRoute  path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute  path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute  path={route.orderlist} component={OrderList} />\n                    <PrivateRoute  path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute  path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute  path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute  path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute  path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute  path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute  path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute  path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute  path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n\n                    \n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />  \n\n                     <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />  \n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />            \n          </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}