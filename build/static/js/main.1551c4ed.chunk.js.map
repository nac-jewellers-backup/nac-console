{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/Table/style.js","components/Table/TableBodyRow.js","components/Table/TableComponent.js","components/datePickerComp/index.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Newarrival/component/NewarrivalComponent.js","components/Newarrival/NewArrival.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Page/Page.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Configuration/Configuration.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Customerdetails/Customerdetails.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","components/Input.js","screens/Dashboard/Dashboard.js","screens/DiscountList/components/Header/Header.js","components/ConformationAlert/ConformationAlert.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/Earringbacking/Earringbacking.js","screens/Goldpriceupdate/Goldpriceupdate.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Manageadminusers/Manageadminusers.js","screens/manageshedule/shedulemodal.js","screens/manageshedule/shedulemodalshow.js","screens/manageshedule/index.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/mangeappoinment/index.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Masterattribute/Masterattribute.js","screens/Mastercategories/Mastercategories.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstones/Masterstones.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masterweights/Masterweights.js","screens/Materialmaster/Materialmaster.js","screens/OrderList/OrderList.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/AppointmentManagementDetails/components/AppointmentInfo.js","screens/AppointmentManagementDetails/components/AppointmentExtra.js","screens/AppointmentManagementDetails/AppointmentManagement.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","utils/commonmethod.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","components/Loader/Fullloader.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/Priceupdate.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Shippingzones/Shippingzones.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Taxsetup/Taxsetup.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Userconfiguration/Userconfiguration.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/AbandonedCart/cart_details.js","screens/AbandonedCart/index.js","screens/PriceUpload/index.js","screens/MasterCountries/index.js","screens/DailyMetalPrice/index.js","screens/PriceLogs/index.js","utils/imageUpload.js","screens/ImageUpload/index.js","screens/CmsComponent/style.js","screens/CmsComponent/components/styles.js","screens/CmsComponent/components/TableHeadComp.js","screens/CmsComponent/components/bannerCMS.js","graphql/cmsQuery.js","screens/CmsComponent/components/storeLocatorCMS.js","screens/CmsComponent/components/richTextEditor.js","screens/CmsComponent/components/titleDescriptionCMS.js","screens/CmsComponent/components/queryFormCMS.js","screens/CmsComponent/components/slidingImageCardCMS.js","screens/CmsComponent/components/customCareerBannerCMS.js","screens/CmsComponent/components/customCareerCardCMS.js","screens/CmsComponent/components/customCollectionHeaderCMS.js","screens/CmsComponent/components/customCollectionCardsCMS.js","screens/CmsComponent/components/customNewsCMS.js","screens/CmsComponent/components/spclTitleDescrCMS.js","screens/CmsComponent/components/bookYourAppointmentCMS.js","screens/CmsComponent/components/testimonialCMS.js","screens/CmsComponent/components/aboutCollectionCMS.js","screens/CmsComponent/components/titleCompCMS.js","screens/CmsComponent/components/titleWithDescription.js","screens/CmsComponent/components/customAdvertisementCMS.js","screens/CmsComponent/components/siteMapCMS.js","screens/CmsComponent/components/experienceBannerCMS.js","screens/CmsComponent/components/experienceCardCMS.js","screens/CmsComponent/components/experienceTableCards.js","screens/CmsComponent/components/storeLocatorDetailsCMS.js","screens/CmsComponent/components/blogPageCMS.js","screens/CmsComponent/components/contactUsCMS.js","screens/CmsComponent/cmsComponent.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Variants.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/styles.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","APP_URL","GRAPHQL_DEV_CLIENT","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ABANDONEDCART","_templateObject38","CARTBYID","_templateObject39","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ALLNEWARRIVALPRODUCT","MUTATE_STATUS","GETORDERCOMMUNICATIONLOGS","FILTER_APPOINTEMENTS","_templateObject40","ALL_APPOINTMENTS_TIMESLOT","appointmentDateId","appointmentTypeId","_templateObject41","CHECK_TIMESLOT","_templateObject42","APPOINTMENTS_TYPE","SHOW_APPOINMENT_DETAILS","_templateObject43","SHOW_ALL_PPOINMENT_DETAILS","_templateObject44","PRICE_RUN_LOGS","_templateObject45","ORDERS","queries_templateObject","queries_templateObject2","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","hashtags","allMasterHashTags","metals","apidata","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","_React$useState9","_React$useState10","include","setInclude","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","filter","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","TableBodyRow","_ref$tableData","tableData","_ref$rowData","rowData","_ref$rowIndex","rowIndex","_ref$handleViewStores","handleViewStores","_ref$handleDelete","handleDelete","_ref$handleEdit","handleEdit","TableRow","val","TableCell","customWidth","lineBreak","parse","_data$rowData","_data$customText","customText","alt","src","gap","Edit_default","Delete_default","paddingBottom","moment","format","_data$rowData2","getComponent","customName","TableComp","_ref$header","_ref$data","Table","borderColor","stickyHeader","TableHead","TableBody","index","Table_TableBodyRow","DatePickerComp","log","react_datepicker_min_default","selected","Date","date","useStyles2","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","inputProps","labelPlacement","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","allNewArrivalProducts","NewarrivalComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","isactiveVariant","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","showPriceBreakup","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","button","&:hover","text","EnhancedTableHead","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","paddingLeft","paddingRight","highlight","lighten","light","primary","dark","flex","clip","overflow","position","contantview","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","handleInputChange","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x4","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","Save_default","CancelOutlined_default","scope","address","gstNo","vendorDelivaryDays","createdAt","vendordata","pincode","SelectProps","native","parseInt","process","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","divider","& + &","cardcontent","selectedOption","optionRadio","optionDetails","AttributeComponent","AttributesComponent_excluded","_React$useContext","attributes","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","handleoptionChange","elements_arr","forEach","element","indexOf","Card","fixedTag","shiprates","selectedrate","renderTags","getTagProps","multiple","components","textAlign","onAdded","results","Addshippingattributes","withRouter","history","rateid","setRateid","setMasters","setSelectedrate","selectedattr","setSelectedattr","isloaded","setIsloaded","_updateattributes","taxcontent","displaytext","reqbody","display_text","_getmastervalues","ratevalue","allShippingCharges","attr","categories","productAttributes","selectedcategory","catobj","prod_id","split","getmastervalues","AttributesComponent","attrs","display_arr","alias_arr","valueobj","join","updateattributes","aboutvoucher","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","allMasterTaxSettings","AttributesComponent_AttributesComponent","Header","Header_excluded","justify","autoComplete","onAdd","inner","Results","Results_excluded","orange","green","CardHeader","Divider","CardContent","CardActions","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","progress","CategoryList","_useQuery","useQuery","MaterialContext_MaterialProvider","Configuration","master_options_url","lg","Link","underline","RouterLink","to","General","General_excluded","first_name","last_name","email","isemailverified","components_Label_Label","ismobileverified","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","helperText","author","applyButton","white","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","_uploadimagetoserver","bodaydata","keyvalue","uploadtype","imagename","responsedata","returnData","signedRequest","filepathname","imageurl","previmagenames","previmages","image","fileExtension","foldername","product_id","filepath","axios","put","file","gutterBottom","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","alert","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","small","react_filepond","oninit","labelIdle","onaddfile","fileItem","uploadimagetoserver","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","splice","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","fxSyncAPI","button_title","sort_id","filterOrder","prefix","components_EnhancedTableHead_EnhancedTableHead","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","tabs","background","borderRight","master_options","Customerdetails","setCustomer","user_id","_getmaster","userinfo","userprofile","getmaster","components_General_General","match","_match$params","tab","find","t","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","Input_excluded","onKeyPress","which","input-label","textOverflow","input","&::placeholder","Dashboard_","Container","components_Input_Input","Component","Dashboard","DiscountList_components_Header_Header_excluded","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","components_Results_Results_excluded","isconformation","setIsconformation","deleteid","handledelete","_handledelete","datacontent","elementId","mutate","mutation","hidedeleteconformation","_handledelete2","handleChange","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","negativebtn","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","Earringbacking","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","_search","filteredHomes","x","Mastercontent","Goldpriceupdate","mastervendors","setMastervendors","cost_price","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","pricetype","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","vendorid","sellingpricejson","handlesellingPriceChange","disableClearable","pricejson","goldpurity","sellingprice","parseFloat","priceratio","goldprice_val","goldsellingprice_val","purityname","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","UPDATE_ORDER","mutation_templateObject10","CREATE_APPOINTMENT_DATE","mutation_templateObject11","CREATE_APPOINTMENT_TIME","mutation_templateObject12","DELETE_APPOINTMENT_TIME","mutation_templateObject13","DELETE_APPOINTMENT_DATE","mutation_templateObject14","closeButton","inputField","HolidayModal","disableTypography","IconButton","holiday","editItem","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","inputVariant","handleSave","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","setItem","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","LinearProgress","allHolidayManagers","updatedAt","DeleteForever_default","HolidayManager_HolidayModal","__typename","InventoryModal","_data$allWarehouses","setError","required","generatedSku","Boolean","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","allWarehouses","getOptionSelected","warehouse","InputProps","endAdornment","iconButton","& .MuiOutlinedInput-root","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","buildGradient","start","end","gradients","blue","indigo","validate","require","schema","presence","allowEmpty","password","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","backgroundImage","loginForm","person","fields","submitButton","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","accessToken","pageurl","is_write","hasError","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Manageadminusers","masterroles","setMasterroles","roles","username","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","SheduleModal","_props$date","minDate","datecard","available","availableTitle","time","notchedOutline","day","backdrop","zIndex","SheduleModalShow","_props$timeValue$star","_props$timeValue","_props$timeValue$endT","_props$timeValue2","appointmentTypes","getTime","_x$split","_x$split2","hour","minute","second","d","setHours","setMinutes","setSeconds","close","Backdrop","Select","labelId","defaultValue","filterType","MenuItem","timing","deleteTime","DeleteOutline","startTime","endTime","TimePicker","timeValue","handleTimeValue","handleSubmitTime","endDate","deleteDate","ManageShedule","setAppointmentDateId","setLoading","modalloading","setModalLoading","setDate","appointmentDate","setAppointmentDate","setAppointmentTypes","appointmentSlots","setAppointmentSlots","openAppointmentTime","setOpenAppointmentTime","showTime","setShowTime","setTimeValue","startOf","endOf","filterDate","setFilterDate","borderTop","calenderCard","& .MuiOutlinedInput-input","closedCard","GetAllAppointmentTypes","FilterDates","CheckAppointment","startDate","_res$data$allAppointm","allAppointmentDateTimeSlots","GetAllAppointment_TimeSlots","_ref4","loc","source","_ref5","_callee5","_context5","allAppointmentTypeMasters","_ref6","_callee6","_context6","CheckTimeslot","_ref7","_callee7","_context7","_res$data2","_res$data2$allAppoint","_ref8","_callee8","_context8","startDateTime","endDateTime","_x9","_ref9","_callee9","_context9","_x10","_ref10","_callee10","_context10","_x11","handleDateChange","_ref11","_callee11","_context11","_x12","_ref12","_callee12","_context12","allAppointmentDates","_x13","_x14","FilterTimeSlotes","views","Box","isSameOrAfter","shedulemodalshow","shedulemodal","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$createElement","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","select","& .MuiInputBase-root","filterData","Manageappoinment","_data$allAppointments","_data$allAppointments2","setStartDate","setEndDate","isNull","appointmentFilter","setAppointmentFilter","selectedStatus","setSelectedStatus","selectedType","setSelectedType","limit","appointment_filter","order_by","allAppointments","appointmentDateTimeSlotBySlotId","appointmentDateByAppointmentDateId","greaterThanOrEqualTo","lessThanOrEqualTo","ActionIcon","tConvert","toString","or","KeyboardButtonProps","autoOk","equalTo","_row$id","_row$customerName","_row$email","_row$mobile","_row$appointmentDateT","_row$appointmentDateT2","_row$appointmentDateT3","_row$appointmentDateT4","_row$appointmentDateT5","_row$appointmentDateT6","_row$type$name","_row$type","_row$status","onPageChange","other","Addmarkup_excluded","MuiDialogContent","MuiDialogActions","Addmarkup","markup","setMarkup","handleinputChange","actionclose","Addmarkup_DialogTitle","Addmarkup_DialogContent","readOnly","materiallist","puritylist","Addmarkup_DialogActions","actionSave","cardroot","editmarkup","setEditmarkup","setGoldpricelist","setDeleteid","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","_handleSave","column","allPricingMarkups","vendorCode","producttypes","heading","sellingPriceMin","sellingPriceMax","markupType","helperinput","markupValue","diamondData","markupid","editdiamond","setEditdiamond","allDiamondPriceSettings","diamondColour","costPrice","sellingPrice","sellingPriceType","descendingComparator","b","allGemstonePriceSettings","array","comparator","stabilizedThis","el","stableSort","getComparator","gemstoneType","weightStart","weightEnd","price","useStyle","allMakingChargeSettings","Markupprice","categorylist","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Product","vendor","Masterattribute","_Masterattribute","allAttributeMasters","Mastercategories","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Mastermetalcolors","Masteroccassions","Masterorderstatus","allOrderStatusMasters","Masterpaymentstatus","allPaymentStatusMasters","Masterproducttypes","Masterpurities_components_Results_Results_excluded","Masterpurities","form","formControl","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","isopen","pagecontent","displayname","Checkbox","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","_showpermissions","rowcontent","_updatepermissions","components_Addpermissions_Addpermissions","Masterscreens","_x$name","_x$name2","Masterstonecolors","Masterstones","Masterstoneshapes","allMasterStonesShapes","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masterweights","allMasterWeights","Materialmaster","getGiftMessage","giftFrom","giftTo","getPaymentStatus","paymentMode","paymentStatus","paymentResponse","payment_response","APTRANSACTIONID","MESSAGE","TRANSACTIONPAYMENTSTATUS","defaultColumns","Order ID","is_active","is_default","identifier","Order Date","Customer Name","SKUs","Email","Phone Number","Shipping Address","Gift Message","Order Status","Payment Mode","Payment Status","Waybill No","Comments","Actions","OrderList","_data$allOrders","_data$allOrders2","userProfileId","columnName","setColumnName","orderFilter","setOrderFilter","paymentMaster","setMasterData","orderStatus","fromDate","setFromDate","ToDate","setToDate","anchorEl","setAnchorEl","OrderList_templateObject","toConsumableArray","order_filter","allOrders","_item$shoppingCartByC","_item$shoppingCartByC2","_item$shoppingCartByC3","_item$shoppingCartByC4","_item$shoppingCartByC5","_item$shoppingCartByC6","_item$shoppingCartByC7","_item$shoppingCartByC8","_item$shoppingCartByC9","_item$shoppingCartByC10","_item$shoppingCartByC11","_item$shoppingCartByC12","_item$shoppingCartByC13","_item$shoppingCartByC14","_item$shoppingCartByC15","_item$shoppingCartByC16","_item$shoppingCartByC17","_item$paymentDetailsB","_item$paymentDetailsB2","_item$paymentDetailsB3","_item$smsDeliveredId","order_date","shoppingCartByCartId","shoppingCartItemsByShoppingCartId","_i$transSkuListByProd","transSkuListByProductSku","customer_name","cartAddressesByCartId","firstname","userProfileByUserprofileId","phone_number","contactNumber","shipping_address","addressline1","addressline2","state","gift_message","payment_mode","order_status","payment_status","paymentDetailsByOrderId","emailMessageId","smsDeliveredId","replace","waybill","awbNumber","comments","some","disableFuture","currentTarget","ViewColumn_default","Menu","PaperProps","_columnName$item","_columnName$column","OrderList_ActionIcon","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","paymentstatus","setPaymentstatus","orderstatus","setOrderstatus","errorMsg","setErrorMsg","waybillNum","updateOrder","setUpdateOrder","setCommunicationLogs","_updateOrder$comments","_order$awb_number","_order$payment_status","_order$order_status","_order$comments","awb_number","getOrderCommunicationLogs","_fatchvalue$data$orde","_fatchvalue$data","_fatchvalue$data$orde2","_fatchvalue$data$orde3","orderById","communicationLogsByOrderId","sendEmail","order_id","user_profile","shopping_cart","cart_addresses","country","contact_number","discounted_price","giftwraps","_updateOrder$comments2","_updateOrder$waybillN","_updateOrder$comments3","OrderItems","OrderItems_excluded","lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","objectFit","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","md","trans_sku_list","sku_weight","diamond_type","Math","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","productDetails","setProductDetails","communicationLogs","_fetchorderdetails","product_detail","com_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","xl","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","senderResponseId","messageType","AppointmentInfo","_order$allAppointment","_order$allAppointment2","_order$allAppointment3","_order$allAppointment4","_order$allAppointment5","_order$allAppointment6","_order$allAppointment7","_order$allAppointment8","_order$allAppointment9","_order$allAppointment10","_order$allAppointment11","_order$allAppointment12","_order$allAppointment13","_order$allAppointment14","_order$allAppointment15","_order$allAppointment16","_order$allAppointment17","_order$allAppointment18","_order$allAppointment19","_order$allAppointment20","_order$allAppointment21","_order$allAppointment22","_order$allAppointment23","_order$allAppointment24","_order$allAppointment25","_order$allAppointment26","_order$allAppointment27","_order$allAppointment28","_order$allAppointment29","_order$allAppointment30","_order$allAppointment31","_order$allAppointment32","_order$allAppointment33","_order$allAppointment34","_order$allAppointment35","_order$allAppointment36","_order$allAppointment37","_order$allAppointment38","_order$allAppointment39","_order$allAppointment40","_order$allAppointment41","_order$allAppointment42","_order$allAppointment43","_order$allAppointment44","_order$allAppointment45","_order$allAppointment46","_order$allAppointment47","_order$allAppointment48","AppointmentInfo_excluded","textTransform","metalType","Radio","isOnline","isItRequired","areMoreMembersJoining","overflowWrap","specialRequests","AppointmentExtra","AppointmentExtra_excluded","setSelected","meetingLink","setmeetingLink","handleMeeting","handleSelect","appointment_id","meeting_link","AppointmentManagementDetails","_fatchvalue$data$appo","_fatchvalue$data$appo2","_fatchvalue$data$appo3","appointmentById","appointmentCommunicationLogsByAppointmentId","notifyOnNetworkStatusChange","components_AppointmentInfo","components_AppointmentExtra","_val$senderResponseId","_val$communicationTyp","_val$type","communicationType","_val$senderResponseId2","_val$communicationTyp2","_val$type2","Priceupdate_components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","makeid","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","charAt","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","productids","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","producttypelist","FullLoader","PriceupdateContent","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","req_product_id","_rerun","history_id","update_products","pricingcomponent","_filterapllied","filterdata","_downloadlog","Fullloader","components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","productlists","showproductdetails","_showproductdetails","productid","filterparams","categoryname","Products_Product_EnhancedTableHead","_row$trans_sku_lists","trans_sku_lists","sku_id","product_name","vendor_code","appBar","textarea","resize","errorTable","LinearProgressWithLabel","mr","ChooseWareHouse","_data$allWarehouses$n","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","fullScreen","AppBar","Toolbar","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","FormControl","RadioGroup","ProductSync_ChooseWareHouse","ChipInput_default","_data$list","_data$list2","list","onDelete","newChipKeyCodes","newChipKeys","rowSpan","borderBottom","tooltip","arrow","download","CloudDownload_default","Productlist","setFilterparams","components_ProductFilter_ProductFilter","filterobj","Products_Product","Productlist_ProductSync","dropdownlayout","& .menu","& .MuiFormHelperText-root","fieldHint","dateField","AddressForm","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","_objectSpread4","test","material_names","_objectSpread9","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormLabel","isreorderable","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","placeholderzindex","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","includes","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","deletematerial","valueContainer","chipFocused","noOptionsMessage","singleValue","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","default_metal_size","Step5_excluded","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","setMetalcolour","imageposition","imagecolor","prodimages","prodid","imagecolourobj","imagecount","imageobj","_imageobj","image_url","unshift","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","allowMultiple","onupdatefiles","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","layout","up","stepper","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","handleNext","error_content","formdata","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","ProductuploadContext_ProductProvider","Component_Productupload","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","Create_default","AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","ButtonGroup","optionvalue","discounttype","discountvalue","VoucherComponent","VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","skus","setSkus","isloading","setIsloading","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","discount_id","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","snackMessage","_getdiscountvalue","comparr","discountid","discunt","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","_creatediscount","ispricerun","skuarray","sku_content","updatediscount","discount_count","product_attributes_text","eror_skus","getdiscountvalue","Salediscountcontent_Alert","components_VoucherComponent_VoucherComponent","componentsstring","filterapllied","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","creatediscount","Salediscount","VoucherContext_VoucherProvider","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Shipmentsettings","zones","allShippingZones","ranges","shipmentcharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","Shippingattributes","displayAttributes","Attributescontent","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Taxsettings","taxName","Attributescontent_Attributescontent","Taxsetup","Invoices","Useraddresses_components_Results_Results_excluded","setInvoices","invoice","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Userconfiguration","menu","Userwishlist_components_Results_Results_excluded","Userwishlist","wishlists","Userwishlist_components_Results_Results","Newvendor","Vendorlist","components_Vendor_Vendor","Addmetalprice_excluded","Addmetalprice","metaldata","setMetaldata","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","Addmetalprice_DialogActions","save","metalmaster","setMetalmaster","puritymaster","setPuritymaster","_handleAdd","metalcontent","costprice","priceid","allGoldPriceSettings","selectedsellingPriceType","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","Adddiamondprice_Addmetalprice","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstone_type","weight_start","weight_end","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","Vendorprice","setVendorcode","setVendorlist","components_Product","components_Diamonds","components_Gemstones","components_Makingcharge","Voucherdiscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","voucherprefix","setVoucherprefix","selectedDate","setSelectedDate","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","startdate","enddate","strictCompareDates","VoucherComponent_VoucherComponent_excluded","Voucherdiscountcontent","setAttributes","setDiscountid","attributesadded","attributedata","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","VoucherdiscountContent_Alert","Voucherdiscount_components_AboutVoucher_AboutVoucher","Voucherdiscount_components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","fieldset","boxSizing","gridArea","legend","font","textfield","inline","CartDetails","_state$data","_state$data$cart","_state$data$cart$user","_state$data2","_state$data2$cart","_state$data2$cart$use","_state$data3","_state$data3$cart","_state$data3$cart$use","_state$data4","_state$data4$cart","_state$data4$cart$use","_state$data5","_state$data5$cart","_state$data5$cart$use","_state$data$user$isem","_state$data6","_state$data6$user","_state$data$user$ismo","_state$data7","_state$data7$user","_state$data8","_state$data8$cart","_state$data8$cart$add","_state$data9","_state$data9$cart","_state$data9$cart$add","_state$data10","_state$data10$cart","_state$data$cart$gros","_state$data11","_state$data11$cart","_state$data$cart$disc","_state$data12","_state$data12$cart","_state$data$cart$taxA","_state$data13","_state$data13$cart","_state$data14","_state$data14$cart","_state$data14$cart$ca","_state$data15","_state$data15$cart","_state$data15$cart$fo","setState","cart","user","firstName","lastName","FormGroup","_item$salutation","salutation","lastname","countryCode","grossAmount","discountedPrice","taxAmount","List","dense","cart_items","_item$transSkuListByP","_product$productImage","_item$transSkuListByP2","_item$transSkuListByP3","skuDetails","product","ListItem","disableGutters","ListItemAvatar","material_ui_image_lib_default","ListItemText","markupPrice","markupPriceTax","follow_ups","ListItemIcon","Mail_default","Sms_default","Call_default","Headers","Cart ID","User Details","asc","desc","Total Products in cart","Contact","Status","Created On","Last Updated On","filterVariables","ordersByCartIdExist","withoutContact","userprofileId","withContact","emptyCart","every","AbandonedCart","_Headers$sort$by$sort","_filterVariables$filt","_filterVariables$filt2","_data$allShoppingCart","_data$allShoppingCart2","_data$allShoppingCart3","_data$allShoppingCart4","setFilter","by","setSort","condition","handleClickFilter","_filterVariables$valu","_filterVariables$valu2","_filterVariables$with","cartDetails","allShoppingCarts","_item$user","_item$user2","_item$user3","_item$user4","_item$cart_items","_item$cart_items$node","_item$cart_items$node2","_item$cart_items2","_item$cart_items2$nod","_item$cart_items2$nod2","_item$cart_items3","_item$cart_items3$nod","_item$cart_items3$nod2","cart_id","discountAmount","mobile_no","sku_ids","skuId","generated_skus","_i$transSkuListByProd2","product_names","_i$transSkuListByProd3","_i$transSkuListByProd4","downloadAbandonedCart","CloudDownloadOutlined_default","_Headers$item","_Headers$by$direction","_filterVariables$filt3","_filterVariables$filt4","applySort","_item$user5","_item$user6","_item$user7","_item$cart_items4","_item$cart_items5","_item$user8","_item$user9","_item$user10","_item$user11","_item$user12","userName","Email_default","disableElevation","disableFocusRipple","CircularProgressWithLabel","PriceUpload","BackupOutlined_default","fetchMasterCountries","MasterCountries_templateObject","addMutationMasterCountry","MasterCountries_templateObject2","updateMutationMasterCountry","MasterCountries_templateObject3","MasterCountry","_data$allMasterCountr","MasterCountries_excluded","currentTimeStamp","masterCountryPatch","fxConversionRate","Number","fetchDailyMetalPrices","DailyMetalPrice_templateObject","DailyMetalPrice_templateObject2","DailyMetalPrice_templateObject3","DailyMetalRate","_data$allDailyMetalPr","DailyMetalPrice_excluded","dailyMetalPricePatch","displayPrice","allDailyMetalPrices","PriceLogs","_data$allPriceRunning","_data$allPriceRunning2","_data$allPriceRunning3","_data$allPriceRunning4","allPriceRunningHistories","_item$completedProduc","_item$pricingComponen","_item$logs","_item$logs$nodes$","_item$logs2","_item$logs2$nodes$","_item$logs3","_item$logs3$nodes$","_item$logs3$nodes$$re","_item$logs4","_item$logs4$nodes$","_item$logs5","_item$logs5$nodes$","_item$logs6","_item$logs6$nodes$","_item$logs6$nodes$$su","_item$logs7","_item$logs7$nodes$","_item$logs8","_item$logs8$nodes$","_item$logs9","_item$logs9$nodes$","_item$logs9$nodes$$fa","completedProductCount","pricingComponent","wordWrap","logs","requestedProducts","req","successfullyExecutedProducts","failedProducts","UploadImage","Axios","Accept-Language","_boundary","ImageUpload","imgLink","setImgLink","disableButton","setDisableButton","_res$data$web","web","navigator","clipboard","writeText","_p","_p2","_p3","dialogPaper","dialogPaperMid","dialogHeader","blogInnerImage","& img","imageText","& p","alignText","contentText","datePicker","& .react-datepicker-wrapper","& .react-datepicker__input-container","& input","textFields","& .rdw-editor-main","& .public-DraftStyleDefault-ltr","headerBottom","dialogTitle","TableHeaderComp","_props$handleAddNew","handleAddNew","_props$noAddNew","noAddNew","BannerCMS","_props$data7","_props$data7$props","initialState","urlParam","initialEdit","isEdit","editIndex","editData","setEditData","onChangeData","_props$data","_props$data$props","_props$data2","editBanner","getData","_props$data3","_props$data4","_props$data4$props","_getData","banners","TableHeadComp","TableComponent","_props$data5","_props$data5$props","_props$data6","ALLCDNPAGES","storeHeader","viewStoreHeader","tableStoreData","tableStoreView","initialStoreDetails","para","StoreLocatorCMS","openStores","setOpenStores","stores","setStores","addStoresOpens","setAddStores","showStoreFields","setShowStoreFields","storeState","setStoreState","storesEdit","setStoresEdit","handleCloseStores","handleAddNewStoresClose","onChangeStoreData","validationHead","storeData","storeDetailsValidate","editStores","newState","newStore","deleteStores","storeDataEdit","EditorConvertToHTML","_this","call","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","handleChangeState","EditorState","createEmpty","parentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","fontFamily","dropdownClassName","TitleDescriptionCMS","richEditor","titleDesc","setTitleDesc","handleClickOpen","richTextEditor","QueryFormCMS","setImage","offerPrice","placeImage","hoverImage","diamondType","skuID","skuUrl","SlidingImageCardCMS","constructedData","setConstructedData","_props$data$props$lis","dataConstruct","listingProducts","_val$image","_val$image$placeImage","_props$data2$props","_getData$props","_getData$props$listin","_getData$props2","_getData$props2$listi","_dataConstruct","_val$image2","_val$image2$placeImag","_val$image3","_val$image3$placeImag","_props$data6$props","_getData$props3","_getData$props3$listi","_val$image4","_val$image4$placeImag","_res$data3","CustomCareerBannerCMS","CustomCareerCardCMS","job_Role","button_Text","editContent","cardContent","CustomCollectionHeaderCMS","editHeader","innerHeader","innerTableData","initialButtonState","CustomCollectionCardsCMS","buttonState","setButtonState","buttonEditState","setButtonEditState","editCard","onChangeButtonData","editButton","CustomNewsCMS","button_text","Title","Description","SpclTitleDescr","spclTitleDescr","setSpclTitleDescr","_data$props","_data$props2","_data$props3","BookYourAppointmentCMS","feed","TestimonialCMS","_props$data3$props","sub","sub2","AboutCollection","_data$props4","TitleComp","setTitle","TitleWithDescription","CustomAdvertisementCMS","italic_text","initialData","categoryHeading","categoryList","initialStateRow","SiteMapCMS","_data1$categoryList","_data1$categoryList2","stateRow","setStateRow","data1","setData1","parentKey","tempState","handleAddItem","updateState","categoryItems","alignContent","Item","delRow","handleDeleteItem","ExperienceBannerCMS","background_Image","header_Image","form_Title","submit_Content","ExperienceCardCMS","sendData","setSendData","ExperienceTableCardCMS","contactNo","StoreLocatorDetailsCMS","deleteContent","initialBlogDetails","header_Bottom","bottomText","description_1","description_2","description_3","end_Text","third_Image","second_Image","BlogPageCMS","_blogs$second_Image","_blogs$second_Image$b","_blogs$third_Image","_blogs$third_Image2","_blogState$third_Imag5","_blogState$second_Ima7","_blogState$second_Ima8","_blogState$second_Ima9","_blogState$third_Imag6","_blogState$third_Imag7","openBlog","setOpenBlog","blogs","setBlogs","addBlogsOpens","setAddBlogs","blogState","setBlogState","_blogState$second_Ima","_blogState$second_Ima2","_res$data4","_res$data5","_res$data6","_blogState$second_Ima3","newBanner","editBanners","_res$data7","innerDialog","datePickerComp_DatePickerComp","sx","esm_Delete","_blogState$second_Ima6","handleDeleteBanner","_blogState$second_Ima4","_blogState$second_Ima5","_blogState$third_Imag","_blogState$third_Imag2","_blogState$third_Imag3","_blogState$third_Imag4","ContactUsCMS","customer_Care","whatsApp","CmsComponent","useLocation","cloneDialog","setCloneDialog","cloneState","setCloneState","fetchCall","handleCloneDialogClose","_location$state","pageName","_data$data","_data$data$cdnByPage","dataRecieved","cdnByPage","propsKey","replaceIndex","stringifyState","findIndex","newStateSet","bannerCMS","storeLocatorCMS","titleDescriptionCMS","queryFormCMS","slidingImageCardCMS","customCareerBannerCMS","customCareerCardCMS","customCollectionHeaderCMS","customCollectionCardsCMS","customNewsCMS","spclTitleDescrCMS","bookYourAppointmentCMS","titleCompCMS","testimonialCMS","aboutCollectionCMS","titleWithDescription","customAdvertisementCMS","siteMapCMS","experienceCardCMS","experienceBannerCMS","experienceTableCards","blogPageCMS","storeLocatorDetailsCMS","contactUsCMS","getTheTable","cloneData","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","spaceing","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","conatiner","head","stateChange","resetButton","columnclose","useStyless","FormPropsTextFields","ArrowDownward_default","Popover","transformOrigin","FontWeight","noValidate","SortHeader","lassName","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","emptyRows","min","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","CmsHome","allCdns","handleChangeActive","createdName","getThePageTitle","SilverLandingPage","alllandingbanner","setalllandingbanner","createlandingbanner","setCreatelandingbanner","setDisable","allBanners","create_banner_data","now","toISOString","ClearState","SilverListingPage","SpecificListPages","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","checkboxrow","columnnames","selectcolumnfilter","displytype","saveaction","columns_Columns","getColumnnames","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","minHeight","Productimages","image_count","productimages","setProductimages","pop","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","isdefault","styleFile","wordBreak","ishover","aria-hidden","EditPrice","EditPrice_excluded","Variants","pricerun","Skupricesync","_Skupricesync","priceobj","skulistdata","costPriceTax","sellingPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","displycolumns","onShow","Components_EditPrice_EditPrice","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","_productListByProduct11","_productListByProduct12","_productListByProduct13","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","productHashTagsByProductId","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Variants_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","appointmentdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","priceupload","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","dailyMetalRate","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Newarrival","Manageshedule","abandoned_cart","pricelogs","imageUpload","cmsComponents","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","outline","drawerClose","mixins","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","menus","menuobj","submenu","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","grow","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"+VAqBkBA,YAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACJC,MAAO,OACPC,QAASH,EAAMI,QAAQ,GACvBC,UAAYL,EAAMI,QAAQ,IAE5BE,cAAe,CACXC,WAAYP,EAAMI,QAAQ,IAE9BI,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNC,UAAW,eACXL,WAAY,OACZM,WAAYb,EAAMc,YAAYC,OAAO,YAAa,CAChDC,SAAUhB,EAAMc,YAAYE,SAASC,YAGzCC,WAAY,CACVN,UAAW,kBAEbO,OAAQ,CACNC,gBAAiBC,IAAI,MAEvBC,KAAM,CACJC,MAAOvB,EAAMwB,QAAQC,QAAQC,aAC7BN,gBAAiBpB,EAAMwB,QAAQC,QAAQE,MAEzCC,YAAa,CACXL,MAAOvB,EAAMwB,QAAQC,QAAQC,aAC7BN,gBAAiBpB,EAAMwB,QAAQK,qHC/C/BC,EAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJC,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChBC,SAAU,EACVC,WAAY,EACZC,aAAcrC,EAAMsC,MAAMD,aAC1BE,WAAY,OACZC,SAAU,OACV/B,OAAQ,GACRgC,SAAU,GACVC,WAAY,SACZvC,QAASH,EAAMI,QAAQ,GAAK,IAE9BuC,QAAS,CACPN,aAAc,GACdlC,QAASH,EAAMI,QAAQ,QAIrBwC,EAAQ,SAAAC,GAAS,IAAAC,EACbC,EAA+DF,EAA/DE,UAAWC,EAAoDH,EAApDG,QAASzB,EAA2CsB,EAA3CtB,MAAOe,EAAoCO,EAApCP,MAAOW,EAA6BJ,EAA7BI,SAAUC,EAAmBL,EAAnBK,MAAUC,EAA9DC,OAAAC,EAAA,EAAAD,CAAuEP,EAAvES,GAEMC,EAAUzB,IAEV0B,EAAgBC,mBAAIX,EAAA,GAAAM,OAAAM,EAAA,EAAAN,CAAAN,EAErBS,EAAQxB,MAAO,GAFMqB,OAAAM,EAAA,EAAAN,CAAAN,EAGrBS,EAAQZ,QAAoB,YAAVL,GAHGQ,GAKxBC,GAGIY,EAAUP,OAAAQ,EAAA,EAAAR,CAAA,GAAQF,GAUxB,MARgB,cAAZF,GACFW,EAAWvC,gBAAkBG,EAC7BoC,EAAWpC,MAAQ,SAEnBoC,EAAWE,OAAX,aAAAC,OAAiCvC,GACjCoC,EAAWpC,MAAQA,GAInBwC,EAAAC,EAAAC,cAACC,EAAA,EAADd,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWS,EACXN,MAAOS,EACPX,QAAQ,aAEPC,IAcPL,EAAMwB,aAAe,CACnBlB,MAAO,GACP3B,MAAO8C,IAAOC,KAAK,KACnBtB,QAAS,YACTV,MAAO,UAGMM,oDC3EF2B,EAAU,uCACVC,EAAU,mCACVC,EAAqB,+CCG5BC,EAAmBC,YAAW,SAAC3E,GAAD,MAAY,CAC9C+B,KAAM,CACJX,gBAAiBpB,EAAMwB,QAAQ8C,KAAK,KACpC7D,OAAQT,EAAMI,QAAQ,GACtBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,KAC1BM,WAAY5E,EAAM6E,WAAWC,kBAC7BC,mBAAoB,CAClB3D,gBAAiBpB,EAAMwB,QAAQ8C,KAAK,MAEtCU,WAAY,CACVC,UAAWjF,EAAMkF,QAAQ,GACzB9D,gBAAiB+D,YAAUnF,EAAMwB,QAAQ8C,KAAK,KAAM,SAXjCK,CAcrBS,KAOW,SAASC,EAAsBxC,GAC5C,OACEkB,EAAAC,EAAAC,cAACqB,EAAA,EAAD,CAAaC,aAAW,cACtBxB,EAAAC,EAAAC,cAACS,EAAD,CACEc,UAAU,IACVC,KAAM,iBACNC,MAAO7C,EAAM8C,KAAO9C,EAAM8C,KAAO,gBACjCC,KAAM7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,CAAkBxB,SAAS,sOClCnCsD,GAAkBC,aAAHC,MAAA5C,OAAA6C,GAAA,EAAA7C,CAAA,2uFA8Lf8C,GAAsBH,aAAHI,MAAA/C,OAAA6C,GAAA,EAAA7C,CAAA,iXAwEnBgD,IA9CiBL,aAAHM,MAAAjD,OAAA6C,GAAA,EAAA7C,CAAA,8ZA8CA2C,aAAHO,MAAAlD,OAAA6C,GAAA,EAAA7C,CAAA,+VAqCXmD,IAfYR,aAAHS,MAAApD,OAAA6C,GAAA,EAAA7C,CAAA,4LAeF,iRAgCPqD,GAAc,mLAcdC,GAAoB,uMAgBpBC,GAAqB,wLAcrBC,GAAY,2JAaZC,GAAgB,qLAehBC,GAAgB,0KAehBC,GAAW,8JAeXC,GAAW,sLAeXC,GAAa,mLAebC,GAAmB,oSAuBnBC,GAAe,2JAafC,GAAa,2KAabC,GAAkB,iMAelBC,GAAgB,4MAgBhBC,GAAW,oIAUXC,GAAoB,6WAsBpBC,GAAc,yNAgBdC,GAAY,8KAcZC,GAAe,+HAUfC,GAAe,8TAqBfC,GAAmB,kIAUnBC,GAAa,0aA2BbC,GAAiB,oLAajBC,GAAa,iNAgBbC,GAAiB,sNAgBjBC,GAAgB,sMAkBhBC,GAAiB,4KAajBC,GAAe,uLAafC,GAAc,0LAadC,GAAY,+KAaZC,GAAa,sOAyCbC,GAAgBzC,aAAH0C,MAAArF,OAAA6C,GAAA,EAAA7C,CAAA,wVAmBbsF,GAAgB3C,aAAH4C,MAAAvF,OAAA6C,GAAA,EAAA7C,CAAA,4ZAuBbwF,GAAmB7C,aAAH8C,MAAAzF,OAAA6C,GAAA,EAAA7C,CAAA,wWA2BhB0F,GAAc/C,aAAHgD,MAAA3F,OAAA6C,GAAA,EAAA7C,CAAA,yKA2BX4F,IAdoBjD,aAAHkD,MAAA7F,OAAA6C,GAAA,EAAA7C,CAAA,oKAcA2C,aAAHmD,MAAA9F,OAAA6C,GAAA,EAAA7C,CAAA,sJA0Bd+F,IAbepD,aAAHqD,MAAAhG,OAAA6C,GAAA,EAAA7C,CAAA,wJAaI2C,aAAHsD,MAAAjG,OAAA6C,GAAA,EAAA7C,CAAA,ySAoBbkG,GAAmBvD,aAAHwD,QAAAnG,OAAA6C,GAAA,EAAA7C,CAAA,oOAmDhBoG,IAhCiBzD,aAAH0D,QAAArG,OAAA6C,GAAA,EAAA7C,CAAA,0JAgCH,kLAwDXsG,GAAwB3D,aAAH4D,QAAAvG,OAAA6C,GAAA,EAAA7C,CAAA,kcAuBrBwG,GAAe7D,aAAH8D,QAAAzG,OAAA6C,GAAA,EAAA7C,CAAA,mYAoFZ0G,IAhEwB/D,aAAHgE,QAAA3G,OAAA6C,GAAA,EAAA7C,CAAA,wUAqCJ2C,aAAHiE,QAAA5G,OAAA6C,GAAA,EAAA7C,CAAA,4fA2BM2C,aAAHkE,QAAA7G,OAAA6C,GAAA,EAAA7C,CAAA,qRAcjB8G,GAAqBnE,aAAHoE,QAAA/G,OAAA6C,GAAA,EAAA7C,CAAA,qSAclBgH,GAAoBrE,aAAHsE,QAAAjH,OAAA6C,GAAA,EAAA7C,CAAA,oKASjBkH,GAAkBvE,aAAHwE,QAAAnH,OAAA6C,GAAA,EAAA7C,CAAA,uKAQfoH,GAAqBzE,aAAH0E,QAAArH,OAAA6C,GAAA,EAAA7C,CAAA,mKASlBsH,GAAwB3E,aAAH4E,QAAAvH,OAAA6C,GAAA,EAAA7C,CAAA,8JASrBwH,GAAqB7E,aAAH8E,QAAAzH,OAAA6C,GAAA,EAAA7C,CAAA,0KASlB0H,GAAkB/E,aAAHgF,QAAA3H,OAAA6C,GAAA,EAAA7C,CAAA,2KAQf4H,GAAsBjF,aAAHkF,QAAA7H,OAAA6C,GAAA,EAAA7C,CAAA,0KASnB8H,GAAmB,wHAWnBC,GAAcpF,aAAHqF,QAAAhI,OAAA6C,GAAA,EAAA7C,CAAA,49GAqKXiI,GAAiB,mKAcjBC,GAAcvF,aAAHwF,QAAAnI,OAAA6C,GAAA,EAAA7C,CAAA,qVAoBXoI,GAAgBzF,aAAH0F,QAAArI,OAAA6C,GAAA,EAAA7C,CAAA,yMAebsI,GAAgB3F,aAAH4F,QAAAvI,OAAA6C,GAAA,EAAA7C,CAAA,6XAmBbwI,GAAuB7F,aAAH8F,QAAAzI,OAAA6C,GAAA,EAAA7C,CAAA,kKAUpB0I,GAAc/F,aAAHgG,QAAA3I,OAAA6C,GAAA,EAAA7C,CAAA,iQAkBX4I,GAAcjG,aAAHkG,QAAA7I,OAAA6C,GAAA,EAAA7C,CAAA,0JAgIX8I,GAAsB,sLAgBtBC,GAAyB,qeAkEzBC,IAjBuBrG,aAAHsG,QAAAjJ,OAAA6C,GAAA,EAAA7C,CAAA,uSAiBT,iLAqLXkJ,GAAgBvG,aAAHwG,QAAAnJ,OAAA6C,GAAA,EAAA7C,CAAA,8jCAsDboJ,GAAWzG,aAAH0G,QAAArJ,OAAA6C,GAAA,EAAA7C,CAAA,ypDAqHRsJ,GAAyB,8NA+BzBC,GAAkB,+mBA6ElBC,GAAoB,ymBAmDpBC,GAAa,2KAuBbC,GAAyB,iaAkGzBC,GAAuBhH,aAAHiH,QAAA5J,OAAA6C,GAAA,EAAA7C,CAAA,ubA2BpB6J,GAA2B,SAACC,EAAkBC,GAAnB,OAAyCpH,aAAzCqH,QAAAhK,OAAA6C,GAAA,EAAA7C,CAAA,4RAIL8J,EACDC,IAerBE,GAAetH,aAADuH,QAAAlK,OAAA6C,GAAA,EAAA7C,CAAA,2cA2BdmK,GAAiB,mRAoBjBC,GAA0BzH,aAAH0H,QAAArK,OAAA6C,GAAA,EAAA7C,CAAA,4vBA4CvBsK,GAA6B3H,aAAH4H,QAAAvK,OAAA6C,GAAA,EAAA7C,CAAA,2gBAiC1BwK,GAAiB7H,aAAH8H,QAAAzK,OAAA6C,GAAA,EAAA7C,CAAA,0gBC95EL0K,IAjGgB/H,aAAHgI,QAAA3K,OAAA6C,GAAA,EAAA7C,CAAA,maAgCA2C,aAAHiI,QAAA5K,OAAA6C,GAAA,EAAA7C,CAAA,s8CAiED2C,aAAHkI,QAAA7K,OAAA6C,GAAA,EAAA7C,CAAA,ouDA2HR8K,IAxCiBnI,aAAHoI,QAAA/K,OAAA6C,GAAA,EAAA7C,CAAA,igBAwCE2C,aAAHqI,QAAAhL,OAAA6C,GAAA,EAAA7C,CAAA,2pCAkGbiL,GAAc,8kCA2FdC,GAAS,kkCClZTC,GAAkB,CAC7BC,MAAO1I,GACP2I,OAAQ,SAACC,GACP,IAAMC,EAAWD,EAASE,2BAA2BC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC3D2L,GAD0D,IAE7DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAELuJ,EAAeR,EAASS,sBAAsBN,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC1D2L,GADyD,IAE5DC,MAAOD,EAAEK,UACT1J,MAAOqJ,EAAEpJ,KACT0J,MAAON,EAAEpJ,SAEL2J,EAAWZ,EAASa,mBAAmBV,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACnD2L,GADkD,IAErDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAEL6J,EAASd,EAASe,iBAAiBZ,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC/C2L,GAD8C,IAEjDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAEL+J,EAAahB,EAASiB,iBAAiBd,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACnD2L,GADkD,IAErDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACT3D,QAAS+M,EAAEpJ,KAAO,KAAOoJ,EAAEK,UAAY,SAGnCQ,EAAkBlB,EAASmB,0BAA0BhB,MAAMC,IAC/D,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACI2L,GADL,IAEEC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAGPmK,EAAgBpB,EAASqB,wBAAwBlB,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC7D2L,GAD4D,IAE/DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAELqK,EAAStB,EAASuB,gBAAgBpB,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC9C2L,GAD6C,IAEhDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACTuK,UAAWnB,EAAEpJ,SAETwK,EAASzB,EAAS0B,gBAAgBvB,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC9C2L,GAD6C,IAEhDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACT0K,UAAWtB,EAAEpJ,SAGT2K,EAAY5B,EAAS6B,mBAAmB1B,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACpD2L,GADmD,IAEtDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACT6K,cAAezB,EAAEpJ,SAEb8K,EAAc/B,EAASgC,qBAAqB7B,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACxD2L,GADuD,IAE1DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACTgL,eAAgB5B,EAAEpJ,SAEdiL,EAAgBlC,EAASmC,sBAAsBhC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC3D2L,GAD0D,IAE7DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACTmL,WAAY/B,EAAEpJ,SAEVoL,EAASrC,EAASsC,gBAAgBnC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC9C2L,GAD6C,IAEhDC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACTsL,WAAYlC,EAAEpJ,SAEVuL,EAAcxC,EAASyC,sBAAsBtC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACzD2L,GADwD,IAE3DqC,aAAcrC,EAAEpJ,KAChBqJ,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAEL0L,EAAc3C,EAAS4C,wBAAwBzC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC3D2L,GAD0D,IAE7DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,KACT4L,OAAQxC,EAAEpJ,SAEN6L,EAAgB9C,EAAS+C,wBAAwB5C,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC7D2L,GAD4D,IAE/DC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAGL+L,EAAmBhD,EAASiD,0BAA0B9C,MAAMC,IAChE,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACI2L,GADL,IAEEC,MAAOD,EAAEE,GACTvJ,MAAOqJ,EAAEpJ,SAGPiM,EAAgBlD,EAASmD,gBAAgBhD,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACrD2L,GADoD,IAEvDC,MAAOD,EAAE+C,kBAELC,EAAerD,EAASsD,wBAAwBnD,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC5D2L,GAD2D,IAE9DC,MAAOD,EAAEK,UACT1J,MAAOqJ,EAAEpJ,SAGLsM,EAAgBvD,EAASwD,yBAAyBrD,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC9D2L,GAD6D,IAEhEC,MAAOD,EAAEoD,MACTzM,MAAOqJ,EAAEpJ,SAELyM,EAAmB1D,EAAS2D,2BAA2BxD,MAAMC,IACjE,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GACI2L,GADL,IAEEC,MAAOD,EAAEoD,MACTzM,MAAOqJ,EAAEpJ,SAGP2M,EAAiB5D,EAAS6D,yBAAyB1D,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC/D2L,GAD8D,IAEjEC,MAAOD,EAAEoD,MACTzM,MAAOqJ,EAAEpJ,SAGL6M,EAAe9D,EAAS+D,sBAAsB5D,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC1D2L,GADyD,IAE5DC,MAAOD,EAAE2D,aAAe3D,EAAE4D,eAC1BjN,MAAOqJ,EAAE2D,aAAe3D,EAAE4D,mBAEtBC,EAAWlE,EAASmE,kBAAkBhE,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAClD2L,GADiD,IAEpDC,MAAOD,EAAEpJ,KACTD,MAAOqJ,EAAEpJ,SAWX,MAAO,CACLgJ,WACAO,eACAI,WACAE,SACAE,aACAwB,cACA4B,OATaC,GAAQD,OAUrBlD,kBACAE,gBACAE,SACAG,SACAG,YACAG,cACAG,gBACAG,SACAM,cACAG,gBACAgB,eACAd,mBACAE,gBACAG,eACAE,gBACAG,mBACAE,iBAEAM,cA6BOI,GAAiB,CAC5BxE,MAAON,GACPO,OAAQ,SAACC,GACP,IAAMuE,EAAYvE,EAASa,mBAAmBV,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACnD2L,KA8CL,MAAO,CACLmE,QA7CcxE,EAASiB,iBAAiBd,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GAC/C2L,KA6CHoE,mBA1CyBzE,EAASE,2BAA2BC,MAAMC,IACnE,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACK2L,KAyCLqE,cAtCoB1E,EAASS,sBAAsBN,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GAC1D2L,KAsCHkE,YACAI,mBArCyB3E,EAAS4E,2BAA2BzE,MAAMC,IACnE,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACK2L,KAoCL0B,YAjCkB/B,EAASgC,qBAAqB7B,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACvD2L,KAiCHwE,SA/Be7E,EAAS4C,wBAAwBzC,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACvD2L,KA+BHoB,OA7BazB,EAAS0B,gBAAgBvB,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GAC7C2L,KA6BHiB,OA1BatB,EAASuB,gBAAgBpB,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GAC7C2L,KA0BHyE,UAxBgB9E,EAAS6B,mBAAmB1B,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAAA,GACnD2L,KAwBHyD,aAtBmB9D,EAAS+D,sBAAsB5D,MAAMC,IAAI,SAACC,GAAD,OAAA3L,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAC1D2L,GADyD,IAE5DoD,MAAOpD,EAAEK,UACTqE,YAAa1E,EAAE2D,aAAe3D,EAAE4D,gCC3PhCe,GAAoB,CACxBC,WAAY,CACVlF,OAAQF,GACRqF,OAAQ,CACNC,QAAQ,EACRC,KAAM,GACNC,SAAS,EACTC,OAAO,EACPC,WAAY,IAEdC,cAAc,GAEhBC,cAAe,kBAAM,MACrBC,mBAAoB,kBAAM,OAGtBA,GAAkB,eAAAC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAOC,EAAKC,EAAQb,GAApB,IAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtG,EAAAuG,EAAAC,UAAA,OAAAX,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA0BV,EAA1BK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,IAAAA,EAAA,GACzBP,EAAMnQ,EAAUmQ,EAChBe,QAAQC,KAAK,MAAOhB,EAAKZ,GACnBe,EAASf,EAAO,OAAS,MAC7BgB,EAAU,CACRa,eAAgB,mBAChBC,8BAA+B,KAE/Bb,EAAU,KACVH,IACII,EAAQa,aAAaC,QA5BjB,kBA6BChB,EAAQ,kBAAoBE,GAXhBI,EAAAE,KAAA,EAcFS,MACrBrB,EACW,QAAXG,EACI,CAAEA,UACF,CACEA,SACAmB,KAAMC,oBAASnC,GAAQA,EAAOoC,KAAKC,UAAUrC,GAC7CgB,YArBiB,aAcnBpG,EAdmB0G,EAAAgB,MAyBZxC,OAAS,KAzBG,CAAAwB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0BP5G,EAAS2H,OA1BF,QA0BvBtB,EA1BuBK,EAAAgB,KAAAhB,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GA4BP5G,EAAS2H,OA5BF,QA4BvBtB,EA5BuBK,EAAAgB,KAAA,eAuCzBrB,EAAO,WAAiBrG,EAASkF,OAvCRwB,EAAAkB,OAAA,SAyClBvB,GAzCkB,yBAAAK,EAAAmB,SAAA9B,MAAH,gBAAA+B,EAAAC,EAAAC,GAAA,OAAArC,EAAAsC,MAAAC,KAAA1B,YAAA,GA4CX2B,GAAiBC,IAAMC,cAAcrD,IAIrCsD,IAFkBH,GAAeI,SAEf,SAACpU,GAC9B,IAAAqU,EAAoCJ,IAAMK,SACxCzD,GAAkBC,YADpByD,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOvD,EAAPyD,EAAA,GAAmBjD,EAAnBiD,EAAA,GAIA,OACErT,EAAAC,EAAAC,cAAC4S,GAAeS,SAAhB,CACEtI,MAAO,CAAE2E,aAAYQ,gBAAeC,wBAEnCvR,EAAMI,gCClBEsU,GA1DK,WAClB,IAAAC,EAA4BL,oBAAS,GAArCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOE,EAAPD,EAAA,GAAeE,EAAfF,EAAA,GACAG,EAAwCT,oBAAS,GAAjDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOE,EAAPD,EAAA,GAAqBE,EAArBF,EAAA,GACAG,EAA8Bb,mBAAS,CAAEc,OAAQ,GAAIC,SAAU,KAA/DC,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOI,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GACQ/D,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAEFmE,EAAY,eAAAlE,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAO+D,EAAOC,GAAd,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAzE,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBqC,GAAU,GADSvC,EAAAE,KAAA,EAEKlB,EAAmB,kBAAmB,GAAI,IAF/C,OAKnB,GAHIsE,EAFetD,EAAAgB,KAGfuC,EAAeD,EAAYO,SAEA,MAA3BP,EAAYQ,WAAoB,CAGlC,IAFIN,EAAU,GAEdC,EAAA,EAAAC,EAAoB1V,OAAO+V,QAAQR,EAAa,IAAhDE,EAAAC,EAAAvD,OAAAsD,IAAqDE,EAAA3V,OAAAiU,EAAA,EAAAjU,CAAA0V,EAAAD,GAAA,GAAzCG,EAAyCD,EAAA,GACnDH,EAAQQ,KAAK,CAAE1T,MAAOsT,EAAKA,IAAKA,IAGlCX,EAAWjV,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKgV,GAAN,IAAeH,OAAQW,EAASV,SAAUS,KACpDhB,GAAU,GACVI,GAAgB,GAdC,wBAAA3C,EAAAmB,SAAA9B,MAAH,gBAAA+B,EAAAC,GAAA,OAAApC,EAAAsC,MAAAC,KAAA1B,YAAA,GAuBlB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG3B,EACC3T,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWuW,UAAQ,EAAChY,MAAM,UAAU2B,MAAO,CAAEsW,YAAa,QACxEzV,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBC,KAAM,MAExB5B,EACF/T,EAAAC,EAAAC,cAAC0V,GAAA,QAAD,CACEC,OAAQxB,EAAQH,OAChBnE,KAAMsE,EAAQF,SACd2B,SAAU,sBACVC,QAAS,WAffzB,EAAW,CAAEJ,OAAQ,GAAIC,SAAU,KACnCH,GAAgB,IAiBV7U,MAAO,CAAE6W,eAAgB,SAEzBhW,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,UAAU2B,MAAO,CAAEsW,YAAa,QAAjE,iBAKFzV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,UAAU2B,MAAO,CAAEsW,YAAa,OAASM,QAAS,kBAAMvB,MAAzF,uJCxBFzW,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJtB,OAAQ,OACRuB,QAAS,OACTgY,cAAe,UAEjBC,OAAQ,CACN/Z,MAAO,IACPga,SAAU,QAEZN,OAAQ,CACNzZ,QAASH,EAAMI,QAAQ,EAAG,GAC1B4B,QAAS,OACTE,eAAgB,iBAElBiY,WAAY,CACVX,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,GAC1B+B,SAAU,GAEZkY,eAAgB,CACdla,QAASH,EAAMI,QAAQ,EAAG,IAE5Bka,qBAAsB,CACpBtY,QAAS,OACTE,eAAgB,gBAChBqY,OAAQ,WAEVC,sBAAuB,GACvBC,UAAW,CAETta,QAASH,EAAMI,QAAQ,EAAG,IAE5Bsa,WAAY,CACV1Y,QAAS,OACTC,WAAY,UAEd0Y,MAAO,CACLta,UAAW,EACXua,aAAc,GAEhBzY,SAAU,CACRA,SAAU,GAEZ0Y,UAAW,CACTta,WAAYP,EAAMI,QAAQ,IAE5B0a,KAAM,CACJza,UAAWL,EAAMI,QAAQ,IAE3B2a,UAAW,CACTvB,YAAaxZ,EAAMI,QAAQ,IAE7B4a,UAAW,CACTza,WAAYP,EAAMI,QAAQ,IAE5B6a,WAAY,GACZC,QAAS,CACP/a,QAASH,EAAMI,QAAQ,GACvB+a,YAAa,CACX9a,UAAWL,EAAMI,QAAQ,QAiMhBgb,GA5LA,SAAAvY,GACb,IAAQwY,EAAwDxY,EAAxDwY,KAAMC,EAAkDzY,EAAlDyY,QAAQC,EAA0C1Y,EAA1C0Y,QAASC,EAAiC3Y,EAAjC2Y,SAAUzY,EAAuBF,EAAvBE,UAAcI,EAAvDC,OAAAC,EAAA,EAAAD,CAAgEP,EAAhE4Y,IAEMlY,EAAUzB,KAEV4Z,EAAgB,CAClB/V,KAAM,GACNgW,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,QAAS,KACTC,UAAW,IAGfvE,EAA0CL,oBAAS,GAAnDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC4CN,oBAAS,IAArDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC4BV,mBAAS/T,OAAAQ,EAAA,EAAAR,CAAA,GAAKsY,KAA1CvD,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOgE,EAAP7D,EAAA,GAAe8D,EAAf9D,EAAA,GAcM+D,EAAqB,SAAAC,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCiN,EAAU,SAAAD,GAAM,OAAA5Y,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACX4Y,GADW,GAAA5Y,OAAAM,EAAA,EAAAN,CAAA,GAEb+Y,EAAOnN,QA0DZ,OACEjL,EAAAC,EAAAC,cAACmY,GAAA,EAAD,CACEC,OAAO,QACP9Y,QAAS,CAAE+Y,MAAO/Y,EAAQ0W,QAC1BqB,QAASA,EACTD,KAAMA,EACNrY,QAAQ,aAERe,EAAAC,EAAAC,cAAA,OAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,GAC9BwZ,SArBe,SAAA/D,GACnBA,EAAMgE,iBAENhB,GAAYA,EAASQ,GACrBV,GAAWA,OAmBPvX,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQqW,QACtB7V,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAASwB,EACT5B,KAAK,SAEL3V,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,CAAWjB,UAAWQ,EAAQ4W,aAJhC,UAQFpW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACtBrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAc9B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,IACX7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACM5N,GAAG,iBACH6N,QAASvB,EAAQpI,mBACjB4J,OAAO,QACPC,WAAS,EACThO,MAAOgN,EAAOiB,iBACdC,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCyX,SAAUlB,EAAmB,oBAC7BmB,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAO,mBAAoBsX,WAAS,EAACD,OAAO,QAAQ/Z,QAAQ,kBAKlHe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CAEM5N,GAAG,iBACH6N,QAASvB,EAAQnI,cACjB2J,OAAO,QACPC,WAAS,EACThO,MAAOgN,EAAO9M,aACdkO,SAAUlB,EAAmB,gBAC7BgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAO,eAAgBsX,WAAS,EAACD,OAAO,QAAQ/Z,QAAQ,oBAKlHe,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2X,SACtBnX,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE0D,WAAS,EACTlD,QA9IU,WAClBmC,EAAU7Y,OAAAQ,EAAA,EAAAR,CAAA,GACLsY,KA6IG1Y,QAAQ,aAERe,EAAAC,EAAAC,cAACuZ,GAAAxZ,EAAD,CAAYjB,UAAWQ,EAAQ4W,aALjC,SAQApW,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyb,WAAS,EACTb,KAAK,SACLnZ,QAAQ,aAJV,0FChQJlB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJC,QAAS,OACTC,WAAY,UAEdwb,OAAQ,CACNtb,SAAU,EACV1B,OAAQ,GACRN,QAASH,EAAMI,QAAQ,EAAG,GAC1B4B,QAAS,OACTC,WAAY,UAEdyb,WAAY,CACVlE,YAAaxZ,EAAMI,QAAQ,GAC3BmB,MAAOvB,EAAMwB,QAAQoE,MAEvB+X,YAAa,CACXxb,SAAU,GAEZyb,aAAc,CACZrd,WAAYP,EAAMI,QAAQ,OA8Cfyd,GA1CA,SAAAhb,GACb,IAAQib,EAAiCjb,EAAjCib,SAAU/a,EAAuBF,EAAvBE,UAAcI,EAAhCC,OAAAC,EAAA,EAAAD,CAAyCP,EAAzCkb,IACA7G,EAA0CJ,IAAMK,SAAS,IAAzDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO8G,EAAP5G,EAAA,GAAsB6G,EAAtB7G,EAAA,GAEM7T,EAAUzB,KAIhB,OACEiC,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CACEnb,UAAWQ,EAAQka,OACnBU,UAAW,GAEXpa,EAAAC,EAAAC,cAACma,GAAApa,EAAD,CAAYjB,UAAWQ,EAAQma,aAC/B3Z,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQoa,YACnBW,kBAAgB,EAChBC,YAAY,sCACZnB,SAjB0B,SAAAoB,GAChCP,EAAiBO,EAAEC,OAAOzP,WAmBxBjL,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEvW,UAAWQ,EAAQqa,aACnB9D,QAAS,kBAAMgE,EAASE,IACxBtE,KAAK,QACL1W,QAAQ,aAJV,mGCvDK0b,GAAa,CACtBC,SAAU,CACRC,IAAK,MACLC,OAAQ,UAEVC,WAAY,CACVC,KAAM,OACNC,MAAO,QACPC,OAAQ,UAEVC,SAAU,CACRzd,QAAS,UACTuS,MAAO,QACPmL,QAAS,UACTzJ,KAAM,SAQC0J,GAAetI,IAAMC,cAAc,CAC5CsE,MAAM,EACN6D,SAAUR,GAAWQ,SAASzd,QAC9B4d,IAAK,GACLV,SAAUD,GAAWC,SAASC,IAC9BE,WAAYJ,GAAWI,WAAWG,OAClCK,QAAS,kBAAM,MACfC,SAAU,kBAAM,kBCTZC,GAAa1I,IAAM2I,WAAW,SAAoB5c,EAAO6c,GAC7D,OAAO3b,EAAAC,EAAAC,cAAC0b,GAAA,EAADvc,OAAAe,OAAA,CAAOyb,UAAU,KAAKF,IAAKA,GAAS7c,MAyI9Bgd,GAvIK,SAAChd,GACnB,IAAAqU,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA8BjJ,IAAMK,SAAS,IAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOjD,EAAPkD,EAAA,GAAgBC,EAAhBD,EAAA,GACAE,EAA4BpJ,IAAMK,UAAS,GAA3CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOxI,EAAPyI,EAAA,GAAexI,EAAfwI,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOE,EAAPD,EAAA,GAAoBE,EAApBF,EAAA,GACAG,EAA8B1J,IAAMK,UAAS,GAA7CsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOE,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GACMG,EAASC,eACTC,EAAQhK,IAAMwB,WAAW8G,IACvBhL,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAKF2M,EAAc,WAClBjB,GAAQ,IAGVhJ,IAAMkK,UAAU,WACdJ,EACGpS,MAAM,CACLA,MAAOzI,aAAFkb,QAAA7d,OAAA6C,GAAA,EAAA7C,CAAA,+LAUN8d,KAAK,SAACC,GACLlB,EACEkB,EAAIrN,KAAKqI,KAAKtN,MAAMuS,OAAO,SAACC,GAAD,OAAOA,EAAE1b,OAAMmJ,IAAI,SAACuS,GAAD,OAAOA,EAAE1b,UAG1D2b,MAAM,SAACC,GACN9L,QAAQzB,MAAMuN,MAEjB,IAkCH,OACExd,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAM,UACNuY,QApEkB,WACtBgG,GAAQ,IAoEJ5c,MAAO,CAAEsW,YAAa,QAJxB,sBAQAzV,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMA,EACNoG,oBAAqBjC,GACrBkC,aAAW,EACXpG,QAASyF,EACTY,kBAAgB,2BAChBC,mBAAiB,kCAEjB7d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,4BACb,yCAEHlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,OACH6N,QAASA,EACT9N,MAAOsR,EACPpD,eAAgB,SAACC,GAAD,OAAYA,GAC5Bja,MAAO,CAAEhD,MAAO,KAChBkd,SAAU,SAACoB,EAAGxP,GACZuR,EAAevR,IAEjBqO,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAM,eAAe1C,QAAQ,iBAGxDe,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACEC,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAASxB,EACTtD,SAAU,WACRuD,GAAYD,IAEdnf,MAAM,UACNoE,KAAK,YAGTD,MAAO,+BAGX3B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACGzK,GAAU3T,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBC,KAAM,KACnC3V,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,EAAaxf,MAAM,WAApC,UAGAwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAtFG,WACjB,GAAmB,MAAfwG,EACF,OAAOQ,EAAMvB,SAAS,CACpBlE,MAAM,EACN6D,SAAU,UACVG,IAAK,kCAGT1H,GAAU,GACVvD,EAAmB,cAAe,GAAI,CAAE+H,KAAMmE,EAAaI,YACxDQ,KAAK,SAACpN,GACLsO,aAAe,CACbtO,OACAuO,SAAQ,GAAAve,OAAKwc,GACbgC,WAAY,QAEdxC,GAAQ,GACRnI,GAAU,GACV4I,EAAe,QAEhBe,MAAM,SAACC,GAIN,OAHA9L,QAAQzB,MAAMuN,GACdzB,GAAQ,GACRnI,GAAU,GACHmJ,EAAMvB,SAAS,CACpBlE,MAAM,EACN6D,SAAU,QACVG,IAAK,gEA2DwB9d,MAAM,WAAnC,2EC5IJO,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJC,QAAS,OACTC,WAAY,SACZC,eAAgB,gBAChBqgB,SAAU,QAEZ9E,OAAQ,CACNtb,SAAU,EACV+X,SAAU,IACVsI,UAAW,KAEbC,aAAc,CACZliB,WAAY,QAEdmiB,WAAY,CACVlJ,YAAaxZ,EAAMI,QAAQ,OAiDhBuiB,GA7CO,SAAC9f,GACrB,IAAQ2Y,EAA6D3Y,EAA7D2Y,SAAUsC,EAAmDjb,EAAnDib,SAAUvC,EAAyC1Y,EAAzC0Y,QAAkBxY,GAAuBF,EAAhCuV,QAAgCvV,EAAvBE,WAAcI,EAA5DC,OAAAC,EAAA,EAAAD,CAAqEP,EAArE+f,IAEMrf,EAAUzB,KAEhB0V,EAAoCL,oBAAS,GAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOqL,EAAPpL,EAAA,GAAmBqL,EAAnBrL,EAAA,GAUA,OACE1T,EAAAC,EAAAC,cAACyY,EAAA,EAADtZ,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,GAAY4Z,WAAS,EAACvc,QAAS,IAC3E2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAC8e,GAAD,CAAQhgB,UAAWQ,EAAQka,OAAQK,SAAUA,KAG/C/Z,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KAAoC,iBAA7BsG,OAAOC,SAASC,UAA+Bnf,EAAAC,EAAAC,cAACkf,GAAD,OACtDpf,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KAAoC,iBAA7BsG,OAAOC,SAASC,UAA+Bnf,EAAAC,EAAAC,cAACmf,GAAD,OACtDrf,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAWQ,EAAQkf,aAAclhB,MAAM,UAAUuY,QAnB1C,WACvBgJ,GAAc,IAkB8EpJ,KAAK,QAAQ1W,QAAQ,YACvGe,EAAAC,EAAAC,cAACof,GAAArf,EAAD,CAAgBjB,UAAWQ,EAAQmf,aADrC,cAON3e,EAAAC,EAAAC,cAACqf,GAAD,CAAQhI,QAtBc,WACxBwH,GAAc,IAqBwBtH,SAAUA,EAAUH,KAAMwH,EAAYtH,QAASA,4BC1DrFgI,GAAQ,SAAC1gB,GACX,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,KAGzC4gB,GAAS,SAAC5gB,GACrB,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAMwY,MAA7CjE,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GAEM2J,EAAc,SAACvI,EAAOkL,GACX,cAAXA,IAGJ7gB,EAAMyc,UACNQ,GAAQ,KAGV,OACE/b,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CACE1U,GAAG,sBACH2U,aAAc,CACZjF,SAAU9b,EAAM8b,SAChBG,WAAYjc,EAAMic,YAEpBzD,KAAMA,EACNwI,iBAAkB,IAClBvI,QAASyF,GAEThd,EAAAC,EAAAC,cAAC6f,GAAD,CAAO7U,GAAG,aAAaiQ,SAAUrc,EAAMqc,SAAU5D,QAASyF,GACvDle,EAAMwc,8DC9BFvd,GAAY/B,YAAW,SAACC,GAAD,MAAY,CAC9C+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,OACX/iB,gBAAgB,OAChBwZ,aAAa,QAEfwJ,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,6DCqHI+iB,GAlCM,SAAAjQ,GAOf,IAAAkQ,EAAAlQ,EANJmQ,iBAMI,IAAAD,EANQ,GAMRA,EAAAE,EAAApQ,EALJqQ,eAKI,IAAAD,EALM,GAKNA,EAAAE,EAAAtQ,EAJJuQ,gBAII,IAAAD,EAJO,KAIPA,EAAAE,EAAAxQ,EAHJyQ,wBAGI,IAAAD,EAHe,kBAAM,MAGrBA,EAAAE,EAAA1Q,EAFJ2Q,oBAEI,IAAAD,EAFW,kBAAM,MAEjBA,EAAAE,EAAA5Q,EADJ6Q,kBACI,IAAAD,EADS,kBAAM,MACfA,EACJ,OACElhB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGX,EAAU1V,IAAI,SAACsW,EAAK/D,GAAN,OACbtd,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KArHa,SAACvR,GACpB,OAAQA,EAAKqI,MACX,IAAK,OACH,OACEpY,EAAAC,EAAAC,cAAA,OACEf,MAAO,CACLhD,OAAW,OAAJ4T,QAAI,IAAJA,OAAA,EAAAA,EAAMwR,aAAN,OAAoBxR,QAApB,IAAoBA,OAApB,EAAoBA,EAAMwR,YAAc,GAC/CC,WAAe,OAAJzR,QAAI,IAAJA,OAAA,EAAAA,EAAMwR,aAAc,WAAa,UAG7CxR,EAAK4Q,SAIZ,IAAK,WACH,OAAO3gB,EAAAC,EAAAC,cAAA,WAAMuhB,aAAM1R,EAAK4Q,UAE1B,IAAK,YACH,OAAO3gB,EAAAC,EAAAC,cAAA,WAAM6P,EAAK8Q,SAAW,GAE/B,IAAK,eAAgB,IAAAa,EACnB,OAAO1hB,EAAAC,EAAAC,cAAA,kBAAM6P,QAAN,IAAMA,OAAN,UAAA2R,EAAM3R,EAAM4Q,eAAZ,IAAAe,OAAA,EAAMA,EAAelQ,QAE9B,IAAK,cAAe,IAAAmQ,EAClB,OACE3hB,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAE3B,MAAO,OAAQgZ,OAAQ,UAAWR,eAAgB,aAC3DD,QAAO,OAAEhG,QAAF,IAAEA,OAAF,EAAEA,EAAMgR,kBAFjB,QAAAY,EAAA,OAIG5R,QAJH,IAIGA,OAJH,EAIGA,EAAM6R,kBAJT,IAAAD,IAIuB,gBAI3B,IAAK,YASL,IAAK,YACH,OACE3hB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAK/R,EAAK4Q,QACVxhB,MAAO,CAAEhD,MAAO,QAASO,OAAQ,UAIvC,IAAK,SACH,OACEsD,EAAAC,EAAAC,cAAA,OACEf,MAAO,CACLlB,QAAS,OACTC,WAAY,SACZ6jB,IAAK,IAGP/hB,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,CAAU8V,QAAO,OAAEhG,QAAF,IAAEA,OAAF,EAAEA,EAAMoR,WAAYhiB,MAAO,CAAEqX,OAAQ,aACtDxW,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,CAAY8V,QAAO,OAAEhG,QAAF,IAAEA,OAAF,EAAEA,EAAMkR,aAAc9hB,MAAO,CAAE3B,MAAO,MAAOgZ,OAAQ,cAI9E,IAAK,OACH,OACExW,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,CAAUd,MAAO,CAAEqX,OAAQ,WAAaT,QAAO,OAAEhG,QAAF,IAAEA,OAAF,EAAEA,EAAMoR,aAG3D,IAAK,eACH,OACEnhB,EAAAC,EAAAC,cAAA,WACG6P,EAAK4Q,QAAQ5V,IAAI,SAACsW,GAAD,OAChBrhB,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE+iB,cAAe,QAC3BliB,EAAAC,EAAAC,cAAA,WAAMmhB,EAAIzf,MACTyf,EAAI1Q,IAAIa,OAAS,GAChBxR,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE3B,MAAO,SAAW6jB,EAAI1Q,SAOhD,IAAK,cACH,OACE3Q,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG4P,EAAK4Q,QAAUwB,KAAOpS,EAAK4Q,SAASyB,OAAO,iBAAmB,MAKvE,IAAK,YAAa,IAAAC,EAChB,cACEtS,QADF,IACEA,OADF,UAAAsS,EACEtS,EAAM4Q,eADR,IAAA0B,OAAA,EACEA,EAAetX,IAAI,SAACC,GAClB,OAAOhL,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACLH,EAAAC,EAAAC,cAAA,WAAM8K,EAAEpJ,MACPoJ,EAAE2F,IAAIa,OAAS,GAAKxR,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE3B,MAAO,SAAWwN,EAAE2F,SAoBxD2R,CAAa,CACZlK,KAAMiJ,EAAIjJ,KACVuI,QAASA,EAAQU,EAAIzf,MACrBif,SAAUA,EACVE,iBAAkB,SAACtG,GACjBsG,EAAiBtG,EAAGkG,EAASE,IAE/BI,aAAc,SAACxG,GACbwG,EAAaxG,EAAGkG,EAASE,IAE3BM,WAAY,SAAC1G,GACX0G,EAAW1G,EAAGkG,EAASE,IAEzBU,YAAW,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKllB,MAClBylB,WAAU,OAACP,QAAD,IAACA,OAAD,EAACA,EAAKkB,kBCzEbC,GApDG,SAAAlS,GAOZ,IAAAmS,EAAAnS,EANJuF,cAMI,IAAA4M,EANK,GAMLA,EAAAjC,EAAAlQ,EALJmQ,iBAKI,IAAAD,EALQ,GAKRA,EAAAkC,EAAApS,EAJJP,YAII,IAAA2S,EAJG,GAIHA,EAAA5B,EAAAxQ,EAHJyQ,wBAGI,IAAAD,EAHe,kBAAM,MAGrBA,EAAAE,EAAA1Q,EAFJ2Q,oBAEI,IAAAD,EAFW,kBAAM,MAEjBA,EAAAE,EAAA5Q,EADJ6Q,kBACI,IAAAD,EADS,kBAAM,MACfA,EACE1hB,EAAUzB,KAChB,OACEiC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,YACGvL,QADH,IACGA,OADH,EACGA,EAAQ9K,IAAI,SAACsW,GAAD,OACXrhB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,OAIjBtR,EAAKyB,OAAS,EACbxR,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGhT,EAAKhF,IAAI,SAACsW,EAAK2B,GAAN,OACRhjB,EAAAC,EAAAC,cAAC+iB,GAAD,CACExC,UAAWA,EACXE,QAASU,EACTR,SAAUmC,EACVjC,iBAAkBA,EAClBE,aAAcA,EACdE,WAAYA,OAIlBnhB,EAAAC,EAAAC,cAAA,OACEf,MAAO,CACLlB,QAAS,OACTE,eAAgB,SAChB/B,QAAS,aAGX4D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,4CCnDCikB,WAAiB,SAACpkB,GAE7B,OADA4S,QAAQyR,IAAR,OAAYrkB,QAAZ,IAAYA,OAAZ,EAAYA,EAAOmM,MAAQ,MAEzBjL,EAAAC,EAAAC,cAACkjB,GAAAnjB,EAAD,CAAYojB,UAAe,OAALvkB,QAAK,IAALA,OAAA,EAAAA,EAAOmM,OAAQ,IAAIqY,KAAJ,OAASxkB,QAAT,IAASA,OAAT,EAASA,EAAOmM,OAAO,KAAMoO,SAAU,SAACkK,GAAD,cAAUzkB,QAAV,IAAUA,OAAV,EAAUA,EAAOua,SAASkK,QCgBpGC,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WA0PIimB,GAvPmB,SAAC3kB,GACjC,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACAI,EAAoDL,mBAAS,IAA7DM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOiQ,EAAPhQ,EAAA,GAA2BiQ,EAA3BjQ,EAAA,GACAG,EAA0DT,mBAAS,CACjEwQ,UAAW,GACXC,UAAU,IAFZ/P,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOiQ,EAAPhQ,EAAA,GAA8BiQ,EAA9BjQ,EAAA,GAKAmJ,oBAAU,WAAM,SAAA+G,IAAA,OAAAA,EAAA3kB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KACd,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO7B,MANbyI,EAAAE,KAAA,EAUQS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAKoU,oBAAoBrZ,MAE/C6Y,EAAsB5T,KAEvBwN,MAAM7L,QAAQzB,OAjBnB,wBAAAoB,EAAAmB,SAAA9B,OADckC,MAAAC,KAAA1B,YAAA,WAAA6S,EAAApR,MAAAC,KAAA1B,WAoBdiT,IACC,IAEH,IAIMpH,EAAc,WAClBjB,GAAQ,IAiCJkF,EAAY,eAAAoD,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,EAAOC,GAAP,IAAA5T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MfmhEmB,8KelhEnBga,UAAW,CAAEF,UAAWA,MAPTC,EAAAjT,KAAA,EAWbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhBE,wBAAAuU,EAAAhS,SAAA8R,MAAH,gBAAA5R,GAAA,OAAA2R,EAAAzR,MAAAC,KAAA1B,YAAA,GAmBZwT,EAAa,eAAAC,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAoU,IAAA,IAAAC,EAAAnU,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cAChBuT,EAA0B,CAC5BP,UAAWT,EAAsBF,UACjCC,SAAUC,EAAsBD,UAG5BlT,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,Mfk+DmB,2Pej+DnBga,UAAWK,KAZKC,EAAAxT,KAAA,EAgBdS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnI,GAAQ,GACRkD,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAtBG,wBAAA8U,EAAAvS,SAAAqS,MAAH,yBAAAD,EAAAhS,MAAAC,KAAA1B,YAAA,GAyBnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,0CASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QA3GY,WACtBgG,GAAQ,KAuGA,aAUJ/b,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACb,IADH,0CAE0C,KAE1ClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,YACHvJ,MAAM,aACN1C,QAAQ,WACRga,WAAS,EACTI,SAxHS,SAAC5E,GACpBsP,EAAyB1kB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACpBykB,GADmB,GAAAzkB,OAAAM,EAAA,EAAAN,CAAA,GAErBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAsH1BA,MAAO6Y,EAAsBF,UAC7BhiB,KAAK,cAEP5B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAM,QACNgT,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS2F,EAAsBD,SAC/BxK,SA3HQ,SAAC5E,GACvBsP,EAAyB1kB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACpBykB,GADmB,GAAAzkB,OAAAM,EAAA,EAAAN,CAAA,GAErBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOyD,YAyHtBvc,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,wBAGhCG,MAAM,iBACN0jB,eAAe,WAGnBrlB,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,mBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,cACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,eACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGW,EAAmB3Y,IAAI,SAACsW,EAAK2B,GAAN,IAAAsC,EAAAC,EAAAC,EAAAC,EAAAC,EAtJN9B,EAsJM,OACtB5jB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIuC,WAChB5jB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,YACGD,QADH,IACGA,OADH,UAAAiE,EACGjE,EAAKsE,8BADR,IAAAL,OAAA,EACGA,EAA6BM,aAEhC5lB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAG,OACDT,QADC,IACDA,OADC,UAAAkE,EACDlE,EAAKsE,8BADJ,IAAAJ,OAAA,UAAAC,EACDD,EAA6BM,gCAD5B,IAAAL,OAAA,UAAAC,EACDD,EACI1a,MAAM,UAFT,IAAA2a,OAAA,EACDA,EACcK,SAEhB3mB,MAAO,CAAEhD,MAAO,OAAQO,OAAQ,WAGpCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAAuH,EAAErE,EAAIwC,gBAAN,IAAA6B,KACPrM,UAzKUuK,EAyKqBvC,EAAIuC,UAzK1B,eAAAtT,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAe,SAAAsV,EAAOtR,GAAP,IAAA9D,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACpCZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MfwhEqB,6RevhErBga,UAAW,CAAEF,UAAWX,EAAWC,SAAUpP,EAAMiG,OAAOyD,YAPpB6H,EAAAzU,KAAA,EAWpCS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhByB,wBAAA+V,EAAAxT,SAAAuT,MAAf,gBAAAtT,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,IA0KT3T,MAAM,UACNoE,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,uBAGhCxB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAIuC,YAChCzkB,MAAO,CACL3B,MAAO,OACPH,gBAAiB,MACjBmZ,OAAQ,uBALZ,oBC/QLyP,GARS,SAACnnB,GACvB,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAI,WAAW/O,KAAK,kBACjC5B,EAAAC,EAAAC,cAACgmB,GAAD,QCmBA1C,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAyPIimB,GAtPmB,SAAC3kB,GACjC,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACAI,EAAoDL,mBAAS,IAA7DM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOiQ,EAAPhQ,EAAA,GAA2BiQ,EAA3BjQ,EAAA,GACAG,EAA0DT,mBAAS,CACjEwQ,UAAW,GACXC,UAAU,IAFZ/P,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOiQ,EAAPhQ,EAAA,GAA8BiQ,EAA9BjQ,EAAA,GAKAmJ,oBAAU,WAAM,SAAA+G,IAAA,OAAAA,EAAA3kB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KACd,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO5B,MANbwI,EAAAE,KAAA,EAUQS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAKoW,sBAAsBrb,MACjD6Y,EAAsB5T,KAEvBwN,MAAM7L,QAAQzB,OAhBnB,wBAAAoB,EAAAmB,SAAA9B,OADckC,MAAAC,KAAA1B,YAAA,WAAA6S,EAAApR,MAAAC,KAAA1B,WAmBdiT,IACC,IAEH,IAIMpH,EAAc,WAClBjB,GAAQ,IAiCJkF,EAAY,eAAAoD,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,EAAOC,GAAP,IAAA5T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjBilEqB,uLiBhlErBga,UAAW,CAAEF,UAAWA,MAPTC,EAAAjT,KAAA,EAWbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhBE,wBAAAuU,EAAAhS,SAAA8R,MAAH,gBAAA5R,GAAA,OAAA2R,EAAAzR,MAAAC,KAAA1B,YAAA,GAmBZwT,EAAa,eAAAC,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAoU,IAAA,IAAAC,EAAAnU,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cAChBuT,EAA0B,CAC5BP,UAAWT,EAAsBF,UACjCC,SAAUC,EAAsBD,UAG5BlT,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjBogEqB,iQiBngErBga,UAAWK,KAZKC,EAAAxT,KAAA,EAgBdS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnI,GAAQ,GACRkD,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAtBG,wBAAA8U,EAAAvS,SAAAqS,MAAH,yBAAAD,EAAAhS,MAAAC,KAAA1B,YAAA,GAyBnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,qCASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QA3GY,WACtBgG,GAAQ,KAuGA,aAUJ/b,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACb,IADH,0CAE0C,KAE1ClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,YACHvJ,MAAM,aACN1C,QAAQ,WACRga,WAAS,EACTI,SAxHS,SAAC5E,GACpBsP,EAAyB1kB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACpBykB,GADmB,GAAAzkB,OAAAM,EAAA,EAAAN,CAAA,GAErBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAsH1BA,MAAO6Y,EAAsBF,UAC7BhiB,KAAK,cAEP5B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAM,QACNgT,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS2F,EAAsBD,SAC/BxK,SA3HQ,SAAC5E,GACvBsP,EAAyB1kB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACpBykB,GADmB,GAAAzkB,OAAAM,EAAA,EAAAN,CAAA,GAErBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOyD,YAyHtBvc,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,wBAGhCG,MAAM,iBACN0jB,eAAe,WAGnBrlB,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,mBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,cACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,eACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGW,EAAmB3Y,IAAI,SAACsW,EAAK2B,GAAN,IAAAsC,EAAAC,EAAAC,EAAAC,EAAAC,EAtJN9B,EAsJM,OACtB5jB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIuC,WAChB5jB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,YACGD,QADH,IACGA,OADH,UAAAiE,EACGjE,EAAKsE,8BADR,IAAAL,OAAA,EACGA,EAA6BM,aAEhC5lB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAG,OACDT,QADC,IACDA,OADC,UAAAkE,EACDlE,EAAKsE,8BADJ,IAAAJ,OAAA,UAAAC,EACDD,EAA6BM,gCAD5B,IAAAL,OAAA,UAAAC,EACDD,EACI1a,MAAM,UAFT,IAAA2a,OAAA,EACDA,EACcK,SAEhB3mB,MAAO,CAAEhD,MAAO,OAAQO,OAAQ,WAGpCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAAuH,EAAErE,EAAIwC,gBAAN,IAAA6B,KACPrM,UAzKUuK,EAyKqBvC,EAAIuC,UAzK1B,eAAAtT,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAe,SAAAsV,EAAOtR,GAAP,IAAA9D,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACpCZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjBylEuB,6QiBxlEvBga,UAAW,CAAEF,UAAWX,EAAWC,SAAUpP,EAAMiG,OAAOyD,YAPpB6H,EAAAzU,KAAA,EAWpCS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhByB,wBAAA+V,EAAAxT,SAAAuT,MAAf,gBAAAtT,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,IA0KT3T,MAAM,UACNoE,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,uBAGhCxB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAIuC,YAChCzkB,MAAO,CACL3B,MAAO,OACPH,gBAAiB,MACjBmZ,OAAQ,uBALZ,oBC9QLyP,GARS,SAACnnB,GACvB,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAI,WAAW/O,KAAK,kBACjC5B,EAAAC,EAAAC,cAACkmB,GAAD,8BCMAC,GAAU,CACd,CAAEnb,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,eAAgBvJ,MAAO,iBAC7B,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,QAASvJ,MAAO,SACtB,CAAEuJ,GAAI,UAAWvJ,MAAO,WACxB,CAAEuJ,GAAI,YAAavJ,MAAO,WAC1B,CAAEuJ,GAAI,WAAYvJ,MAAO,WAErB6hB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WA4KAkG,GAvIQ,SAACxnB,GACtB,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAxI,EAAkCL,mBAAS,IAA3CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOkT,EAAPjT,EAAA,GAAkBkT,EAAlBlT,EAAA,GAWAuJ,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MnB2hCZ,ySmBzhCbuH,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAK8W,mBAAmB/b,MAC9C4G,QAAQyR,IAAIpT,GACZ6W,EAAa7W,KAEdwN,MAAM7L,QAAQzB,QAChB,IAEH,IAkBM6W,EAAuB,SAACC,GAAD,sBAAA1C,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAQ,SAAAsV,EAAOtR,GAAP,IAAA9D,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAC7BZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MA1FY,kWA2FZga,UAAW,CAAEvZ,GAAI6b,EAAIlD,SAAUpP,EAAMiG,OAAOyD,YAPb6H,EAAAzU,KAAA,EAW7BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhBkB,wBAAA+V,EAAAxT,SAAAuT,MAAR,gBAAArT,GAAA,OAAA2R,EAAAzR,MAAAC,KAAA1B,YAAA,IAmB7B,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAACic,GAAD,OACXhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd/L,MAAO,CAAER,WAAY,UACrBsoB,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,WAE3CH,EAASrlB,WAKlB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACG4D,EACES,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1b,IAAI,SAACsc,EAAKrE,GAAN,IAAAsE,EAAAC,EAhEcR,EAgEd,OACH/mB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIG,YAC7BxnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAII,cAC7BznB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIK,QAC7B1nB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI/b,OAC7BtL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIM,SAC7B3nB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAAmJ,EAAED,EAAIO,iBAAN,IAAAN,KACPjO,UA1EW0N,EA0EqBM,EAAInc,GA1E1B,eAAAoF,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAQ,SAAAC,EAAO+D,GAAP,IAAA9D,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC9BZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAvDa,wUAwDbga,UAAW,CAAEvZ,GAAI6b,EAAIa,UAAWnT,EAAMiG,OAAOyD,YAPb9M,EAAAE,KAAA,EAW9BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLjF,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OAhBmB,wBAAAoB,EAAAmB,SAAA9B,MAAR,gBAAA+B,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,OA6EdnR,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAAoJ,EAAEF,EAAIxD,gBAAN,IAAA0D,KACPlO,SAAUyN,EAAqBO,EAAInc,WAM/ClL,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CC,MAAOrB,EAAUnV,OACjBiV,YAAaA,EACbF,KAAMA,EACN0B,aAvHW,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAuHIC,oBApHkB,SAAC1T,GAC/BiS,EAAejS,EAAMiG,OAAOzP,OAC5Bub,EAAQ,YCrEGP,GARS,SAACnnB,GACvB,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAI,WAAW/O,KAAK,kBACjC5B,EAAAC,EAAAC,cAACkoB,GAAD,QCLAC,GAAmB,CACrBC,UAAW,CACPzX,KAAK,CACD0X,UAAU,EACVC,SAAU,IAEdC,aAAa,EACbC,UAAU,EACVC,cAAe,EACfC,UAAWloB,GAEfmoB,aAAc,kBAAM,OAGXC,GAAgB/V,IAAMC,cAAcqV,IAIpCU,IAFiBD,GAAc5V,SAEd,SAAApU,GAC1B,IAAAqU,EAAqCJ,IAAMK,SAASiV,GAAiBC,WAArEjV,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAQmV,EAARjV,EAAA,GAAmBwV,EAAnBxV,EAAA,GAGA,OACIrT,EAAAC,EAAAC,cAAC4oB,GAAcvV,SAAf,CAAwBtI,MAAO,CAAEqd,YAAWO,iBACvC/pB,EAAMI,YCzBb8pB,GAA0B,CAC9BC,WAAY,CACVC,gBAAiB,GACjBC,MAAO,CAAC,QAAS,QAAS,SAC1Bhe,aAAc,GACdie,YAAa,GACb7d,SAAU,GACV8d,YAAa,GACbC,YAAa,GACbC,YAAa,GACb7sB,OAAQ,GACR8U,OAAQ,GACRjD,eAAgB,GAChBib,uBAAwB,GACxB5e,SAAU,GACV6e,YAAa,GACbC,cAAe,GACfhB,UAAU,EACViB,eAAgB,GAChBC,sBAAuB,GACvBne,OAAQ,GACRoe,eAAgB,GAChBle,WAAY,GACZkC,cAAe,GACf8H,KAAM,EACNmU,MAAO,GACPC,eAAgB,GAChBC,YAAa,GACbC,kBAAmB,GACnBC,MAAO,CACLjf,MAAO,EACPtJ,MAAO,WAETuN,UAAW,CACT,UACA,OACA,WACA,YACA,SACA,YAEFlB,aAAc,GACdE,cAAe,GACfic,aAAc,GACdC,UAAU,EACVC,aAAc,GACdC,YAAa,GACbC,SAAU,GACVC,qBAAsB,GACtBC,sBAAuB,GACvBC,kBAAmB,GACnBC,mBAAoB,GACpBC,oBAAqB,GACrBC,sBAAuB,GACvBC,oBAAqB,GACrBC,cAAe,GACfC,yBAA0B,GAC1BC,4BAA6B,GAC7BC,iBAAkB,GAClBC,kBAAmB,GACnBC,aAAc,GACdC,iBAAkB,GAClBC,kBAAmB,GACnBC,mBAAoB,CAClB,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAEpEC,aAAc,GACdC,aAAc,GACdC,cAAe,GACfrd,iBAAkB,GAClBsd,aAAc,GACdC,cAAe,GACfC,eAAgB,GAChBC,UAAW,GACXC,gBAAiB,GACjBC,aAAc,GACdC,iBAAiB,EACjBC,eAAe,EACfC,aAAc,KAEdC,cAAe,EACfC,iBAAkB,EAClBC,gBAAiB,EACjBC,kBAAmB,EACnBC,iBAAkB,EAClBC,oBAAqB,EACrBC,mBAAoB,EACpBC,qBAAsB,EAEtBC,eAAgB,GAChBC,aAAc,GACdhhB,gBAAiB,GACjBihB,aAAc,GACdC,aAAc,GACdC,cAAe,GACfC,gBAAiB,GACjBC,mBAAoB,GACpBC,mBAAoB,GACpBC,iBAAkB,GAClBC,oBAAqB,GACrBC,oBAAqB,GACrBC,YAAa,EACbthB,OAAQ,GACRuhB,YAAa,GACbC,WAAY,GACZ/gB,YAAa,GACbmC,SAAU,GACV3B,WAAY,GACZwgB,YAAa,GACbC,eAAgB,GAChBxgB,YAAa,GACbygB,aAAc,GACdtgB,YAAa,GACbugB,YAAa,EACbC,aAAc,EACdC,eAAgB,EAChBC,gBAAiB,EACjBC,aAAc,EACdC,YAAa,EACbC,aAAc,EACdC,aAAc,EACd1e,YAAa,EACbX,OAAQ,GACRsf,cAAe,GACfC,iBAAkB,MAEpBC,WAAY,GACZC,cAAe,kBAAM,OAGVC,GAAiB1b,IAAMC,cAAcgW,IAI5C0F,IAFyBD,GAAevb,SAEzB,SAACyb,EAASjkB,EAAQkkB,GACrC,OAAoC,IAAhCvvB,OAAOwvB,KAAKF,GAASnd,OAAqB,IAE9CwX,GAAwBC,WAAW2F,GAAclkB,EAAOikB,GAEjD3F,GAAwBC,cAGpB6F,GAAkB,SAAChwB,GAC9B4S,QAAQC,KAAK,QAAS7S,EAAOA,EAAMmM,MAAM2jB,YACzC,IAAAzb,EAAoCJ,IAAMK,SACxCsb,GAAa5vB,EAAMmM,MAAM8E,KAAMjR,EAAMmM,MAAMP,OAAQ5L,EAAMmM,MAAM2jB,aADjEvb,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO8V,EAAP5V,EAAA,GAAmBmb,EAAnBnb,EAAA,GAUA,OAJAN,IAAMkK,UAAU,WACdvL,QAAQC,KAAK,eAAgBsX,IAC5B,CAACA,EAAW1d,WAGbvL,EAAAC,EAAAC,cAACuuB,GAAelb,SAAhB,CACEtI,MAAO,CACLge,aACAuF,gBACAD,WAAYG,GACV5vB,EAAMmM,MAAM8E,KACZjR,EAAMmM,MAAMP,OACZ5L,EAAMmM,MAAM2jB,cAIf9vB,EAAMI,WCtKP6vB,GAAqB,CACvBC,YAAa,GAGb/f,eAAgB,CACZC,UAAW,IAEf+f,eAAgB,kBAAM,OAGbC,GAAkBnc,IAAMC,cAAc+b,IAI7CL,IAF0BQ,GAAgBhc,SAE3B,SAACyb,EAASjkB,EAAQkkB,GACnC,OAAmC,IAAhCvvB,OAAOwvB,KAAKF,GAASnd,OAAqB,IAC7CE,QAAQyR,IAAI,mBAAmBhR,KAAKC,UAAUuc,IAC9CI,GAAmBC,YAAYJ,GAAclkB,EAAOikB,GAEpDjd,QAAQyR,IAAI,mBAAmBhR,KAAKC,UAAU2c,GAAmBC,cAE1DD,GAAmBC,eAGjBG,GAAmB,SAAArwB,GAC5B4S,QAAQC,KAAK,QAAQ7S,EAAMA,EAAMmM,MAAM2jB,YACvC,IAAAzb,EAAyCJ,IAAMK,SAASsb,GAAa5vB,EAAMmM,MAAM8E,KAAMjR,EAAMmM,MAAMP,OAAO5L,EAAMmM,MAAM2jB,aAAtHvb,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAQ6b,EAAR3b,EAAA,GAAqB+b,EAArB/b,EAAA,GAQA,OAJAN,IAAMkK,UAAU,WACZvL,QAAQC,KAAK,gBAAgBqd,IAC/B,CAACA,EAAYzjB,WAGXvL,EAAAC,EAAAC,cAACgvB,GAAgB3b,SAAjB,CAA0BtI,MAAO,CAAE+jB,cAAaI,iBAAgBb,WAAYG,GAAa5vB,EAAMmM,MAAM8E,KAAMjR,EAAMmM,MAAMP,OAAQ5L,EAAMmM,MAAM2jB,cACtI9vB,EAAMI,WCpCbmwB,GAAoB,CACtBC,WAAY,CACRC,QAAQ,GACRC,QAAQ,IAEZC,cAAe,CACXvgB,UAAW,IAEfwgB,cAAe,kBAAM,OAGZC,GAAiB5c,IAAMC,cAAcqc,IAI5CX,IAFyBiB,GAAezc,SAEzB,SAACyb,EAASjkB,EAAQkkB,GACnC,OAAmC,IAAhCvvB,OAAOwvB,KAAKF,GAASnd,OAAqB,IAC7CE,QAAQyR,IAAI,mBAAmBhR,KAAKC,UAAUuc,IAC9CU,GAAkBC,WAAWV,GAAclkB,EAAOikB,GAG3CU,GAAkBC,cAGhBM,GAAkB,SAAA9wB,GAC3B,IAAAqU,EAAuCJ,IAAMK,SAASsb,GAAa5vB,EAAMmM,MAAM8E,KAAMjR,EAAMmM,MAAMP,OAAO5L,EAAMmM,MAAM2jB,aAApHvb,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAQmc,EAARjc,EAAA,GAAoBqc,EAApBrc,EAAA,GAQA,OAJAN,IAAMkK,UAAU,WACZvL,QAAQC,KAAK,gBAAgB2d,IAC/B,CAACA,EAAWC,UAGVvvB,EAAAC,EAAAC,cAACyvB,GAAepc,SAAhB,CAAyBtI,MAAO,CAAEqkB,aAAYI,gBAAenB,WAAYG,GAAa5vB,EAAMmM,MAAM8E,KAAMjR,EAAMmM,MAAMP,OAAQ5L,EAAMmM,MAAM2jB,cACnI9vB,EAAMI,WCnCb2wB,GAAkB,CACtBC,SAAU,GACVC,YAAa,CACXC,OAAQ,IAEVC,YAAa,kBAAM,OAGRC,GAAend,IAAMC,cAAc6c,QAEnBK,GAAahd,0KCIvBlX,YAAW,SAACC,GAAD,MAAY,CACxCk0B,OAAQ,CACN3yB,MAAO,UACPsC,OAAQ,oBACRswB,UAAW,CACT/yB,gBAAiB,yBACjByC,OAAQ,yBAKI9D,YAAW,SAACC,GAAD,MAAY,CACvC6E,WAAY,CACV1E,QAASH,EAAMI,QAAQ,mDCSrBgqB,GAAU,CACd,CAAEnb,GAAI,aAAcvJ,MAAO,eAC3B,CAAEuJ,GAAI,OAAQvJ,MAAO,QACrB,CAAEuJ,GAAI,UAAWvJ,MAAO,WACxB,CAAEuJ,GAAI,OAAQvJ,MAAO,QACrB,CAAEuJ,GAAI,QAASvJ,MAAO,SACtB,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,cAC1B,CAAEuJ,GAAI,UAAWvJ,MAAO,YAIP3F,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAoG9B,SAASi0B,GAAkBxxB,GACzB,IAAQU,EAAoFV,EAApFU,QAA2B+wB,GAAyDzxB,EAA3E0xB,iBAA2E1xB,EAAzDyxB,OAAOE,EAAkD3xB,EAAlD2xB,QAAgCC,GAAkB5xB,EAAzC6xB,YAAyC7xB,EAA5B8xB,SAA4B9xB,EAAlB4xB,eAK1E,OACE1wB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KASGiF,GAAQtb,IAAI,SAAAic,GAAQ,OACnBhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd+b,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,UAC5C0J,cAAeJ,IAAYzJ,EAAS9b,IAAKqlB,GAEzCvwB,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACEC,OAAQN,IAAYzJ,EAAS9b,GAC7B2Q,UAAW4U,IAAYzJ,EAAS9b,GAAKqlB,EAAQ,MAC7Cxa,SAzBcib,EAyBahK,EAAS9b,GAzBV,SAAAuJ,GACpCic,EAAcjc,EAAOuc,MA0BVhK,EAASrlB,MACT8uB,IAAYzJ,EAAS9b,GACpBlL,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQyxB,gBACH,IAEpB,OAhCU,IAAAD,MAmDHh1B,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3Bw1B,YAAa,CACZC,WAAY,SACX7zB,QAAS,OACTE,eAAgB,UAElB+hB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WA+cA2R,gBA3cA,SAACjzB,GACAkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAiCpJ,IAAMK,SAAS,GAAhDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8V,EAAP7V,EAAA,GAAiB8V,EAAjB9V,EAAA,GACAC,EAAqCtJ,IAAMK,SAAS,GAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO8V,EAAP7V,EAAA,GAAmB8V,EAAnB9V,EAAA,GACAG,EAAuC1J,IAAMK,SAAS,IAAtDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAoB4V,GAApB3V,EAAA,GAAAA,EAAA,IACA4V,EAA6Cvf,IAAMK,SAAS,IAA5Dmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC+Cxf,IAAMK,SAAS,KAA9Dqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAwBE,GAAxBD,EAAA,GAAAA,EAAA,IACAE,EAAmD5f,IAAMK,SAAS,IAAlEwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAA0BE,GAA1BD,EAAA,GAAAA,EAAA,IACQviB,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACRyiB,EAAmC/f,IAAMK,SAAS,IAAlD2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACqChgB,IAAMK,SAAS,KAApD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAOE,EAAPD,EAAA,GAAmBE,EAAnBF,EAAA,GACAG,EAAqBrgB,IAAMK,UAAS,GAApCigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyBtgB,IAAMK,UAAS,IAAxCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GACAG,EAA0C3gB,IAAMK,SAAS,IAAzDugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAOE,EAAPD,EAAA,GAAsBE,EAAtBF,EAAA,GAEAG,GAA8B/gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFN8oB,GAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,GAAA,GAAOG,GAAPD,GAAA,GAAgBE,GAAhBF,GAAA,GAlBuB,SAAAG,KAAA,OAAAA,GAAA90B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsBvB,SAAAC,IAAA,IAAA/F,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,oBAAqB,GAAI,IAHpE,OAGM1F,EAHN0G,EAAAgB,KAIE6hB,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,KACxCN,GAAS,GACTI,EAAiBlpB,EAASipB,eAN5B,wBAAAviB,EAAAmB,SAAA9B,OAtBuBkC,MAAAC,KAAA1B,WAAA,SAiDRijB,GAjDQ3hB,GAAA,OAAA4hB,GAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,KAAA,OAAAA,GAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDvB,SAAAsV,EAA0BuO,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACM2hB,EAAYqB,SAGdrB,EAAW,QAAa,EACxBA,EAAW,UAAgBU,GAL/B5N,EAAAzU,KAAA,EAQyBlB,EAAmB,gBAAiB,GAAI6iB,GARjE,OAAAlN,EAAA3T,KASGvT,EAAM01B,WACPN,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,KAEtCb,EAAYqB,OAKZD,IAFJrV,OAAOC,SAASwF,SAfhB,wBAAAsB,EAAAxT,SAAAuT,OAjDuBnT,MAAAC,KAAA1B,WA0EvB,IAAMsjB,GAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAGpDypB,GAA0B3hB,IAAMK,SAAS,OAAzCuhB,GAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,GAAA,GAAOnE,GAAPoE,GAAA,GAAcC,GAAdD,GAAA,GACAE,GAA8B9hB,IAAMK,SAAS,cAA7C0hB,GAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,GAAA,GAAOpE,GAAPqE,GAAA,GAAgBC,GAAhBD,GAAA,GAOA7X,oBAAW,YAITxS,EADY3L,EAAM+d,OAAOpS,OACnB,CACJA,MAAOtI,GACP6yB,YAAa,iBACZ7X,KAAK,SAACpN,GACHA,IAEH2iB,EAAoB3iB,EAAKA,KAAKlF,2BAA2BC,OACzD+nB,EAAuB9iB,EAAKA,KAAK3E,sBAAsBN,UAI3DyS,MAAM,SAACtN,GAAWyB,QAAQyR,IAAI,YAC5B,IAtGoB,SAkIR8R,GAlIQviB,EAAAC,EAAAuiB,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,GAAA3iB,MAAAC,KAAA1B,WAAA,SAAAokB,KAAA,OAAAA,GAAAl2B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkIvB,SAAA6T,EAA8BkR,EAAWC,EAAgBC,EAAYC,EAASC,EAAYC,EAAKC,GAA/F,IAAAC,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAEIwkB,EAAW,CACbpgB,KAAOggB,GAAsBlP,EAC7BuP,OAAS7D,EACTqD,WAAYA,EACZC,gBAAiBA,EACjBC,YAAaA,EACbnF,MAAOsF,GAActF,GACrBuF,QAAUA,GAAoBrF,IAThCjM,EAAAjT,KAAA,EAYsBlB,EAAmB,kBAAmB,GAAI0lB,GAZhE,OAYIprB,EAZJ6Z,EAAAnS,KAaAggB,EAAgB1nB,EAASsrB,SAASC,MAClChE,EAAavnB,EAASsrB,SAASjO,OAd/B,wBAAAxD,EAAAhS,SAAA8R,OAlIuB1R,MAAAC,KAAA1B,WA0KvB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAIhmB,UAAWQ,EAAQqyB,aACtD7xB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAC+lB,aAAa,OAAQ9oB,QAAQ,SACtE4D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAasB,UAAU,KAAKxC,QAAQ,MAApC,YAIAe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAC+lB,aAAa,QAAQ9oB,QAAU,QACxE4D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAAS,kBAnLxB,kBAAAoe,GAAAvhB,MAAAC,KAAA1B,WAmL8BglB,IAAiB34B,MAAM,WAAlE,oBAONwC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GAcvF7iB,EAAAC,EAAAC,cAACowB,GAAD,CACG9wB,QAASA,EACT+wB,MAAOA,GACPE,QAASA,GACTC,cA5Fc,SAACjc,EAAOuc,GAChC,IAAMoF,EAAQ3F,KAAYO,GAAsB,QAAVT,GAEtCqE,GAASwB,EAAQ,OAAS,OAC1BrB,GAAW/D,GACXiE,GAAe,GAAG,GAAG,GAAG,GAAG,GAAGmB,EAAQ,OAAS,MAAMpF,MAyF/ChxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOpI,GACPi0B,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKnE,iBAAiB2qB,aACzD9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACQ/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACHvF,EAAKnE,iBAAiBd,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OACpChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAcwQ,EACfxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAO2oB,EACPva,SAAUob,GAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAYyD,SACnBtd,SAAUob,GAAkB,QAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAYyD,SACnBtd,SAAUob,GAAkB,WAE5B9yB,MAAM,aAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAYyD,SACnBtd,SAAUob,GAAkB,QAE5B9yB,MAAM,UAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAY0D,UACnBvd,SAAUob,GAAkB,SAE5B9yB,MAAM,gBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAY0D,UACnBvd,SAAUob,GAAkB,sBAE5B9yB,MAAM,wBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACP,IAAIkB,OAInBtjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,GAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GA3RpCwE,OAAOC,SAASwF,WA2RiD1kB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAG5B,KAGTD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACjB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIhc,WAGvB4oB,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAClDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,aACHtJ,KAAK,aACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,GAAkB,QAC5B9yB,MAAM,gBATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGtDqyB,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAClDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,gBACHtJ,KAAK,gBACLqJ,MAAOioB,EAAY+D,QACnB5d,SAAUob,GAAkB,WAAmC9yB,MAAM,mBAR3E,KASyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI4P,SAIhDhD,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAClDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,aACHtJ,KAAK,aACLqJ,MAAOioB,EAAYpb,KACnBuB,SAAUob,GAAkB,QAE5B9yB,MAAM,gBAVZ,KAWwB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIvP,MAIrDmc,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAClDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,SACHtJ,KAAK,SACLqJ,MAAOioB,EAAYgE,MACnB7d,SAAUob,GAAkB,SAE5B9yB,MAAM,eAVZ,KAWwB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI6P,OAIrDjD,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAClDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOioB,EAAYiE,mBACnB9d,SAAUob,GAAkB,sBAE5B9yB,MAAM,yBAVZ,KAWwB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI8P,oBAG3Cn3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACdiF,EAAI+P,YAIrBnD,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAIhc,YAAcmoB,EAChDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,GAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAlVpCyZ,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAkVmB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OA3XjC4c,EA2XmDhQ,EA1XrE8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ7nB,UAAYgsB,EAAWhsB,UACvBzJ,KAAOy1B,EAAWz1B,KAClBq1B,QAAUI,EAAWJ,QACrBnf,KAAOuf,EAAWvf,KAClBwf,QAAUD,EAAWC,QACrBJ,MAAQG,EAAWH,MACnBC,mBAAqBE,EAAWF,mBAChC5C,QAAQ,UAEVL,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAZ5D,IAAoBsD,GA2XyDl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAaFD,EAAAC,EAAAC,cAAA,WAAM,qBAUzBF,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAG,IAAI,IAAI,KAChCC,MAAOiK,EACPxL,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aAhXd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAQzB,IA+WX0B,oBA1Vd,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,GACRyO,GAAe,GAAG,GAAG,GAAGxgB,EAAMiG,OAAOzP,MAAM,+CC5ZzClN,IAFoB25B,8CAAYC,4BAEpB37B,YAAW,CAC3BS,MAAO,CACLC,OAAQ,QAIG,SAASk7B,GAAK94B,GACXf,KACqBe,EAA7BwM,MADR,IACepM,EAAsBJ,EAAtBI,SAAaE,EAA5BC,OAAAC,EAAA,EAAAD,CAAqCP,EAArC+4B,IAcA,OACE73B,EAAAC,EAAAC,cAAA,MAASd,EAINF,wBCHDnB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACVq5B,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9By7B,QAAS,CACPz6B,gBAAiBiD,IAAOC,KAAK,MAE/By3B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBiD,IAAOC,KAAK,MAE/B23B,YAAa,CACXlf,QAAS,IAEX3C,QAAS,CACP/Z,UAAWL,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAGzB87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OAmaf+7B,GA9ZY,SAAAt5B,GACzB,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/Bu5B,IACM74B,EAAUzB,KAChBu6B,EAAoDvlB,IAAMwB,WAAWob,IACrElc,GADA6kB,EAAQhJ,WAARgJ,EAAoB5I,cAApB4I,EAAmC7I,cACLrc,mBAAStU,EAAMy5B,aAA7C7kB,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+b,EAAP9b,EAAA,GAAgB8kB,EAAhB9kB,EAAA,GACAG,EAA4BT,oBAAS,GAArCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO4kB,EAAP3kB,EAAA,GAAe4kB,EAAf5kB,EAAA,GACAG,EAAkCb,oBAAS,GAA3CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO0kB,EAAPvkB,EAAA,GAAkBwkB,EAAlBxkB,EAAA,GACAykB,EAAgCzlB,mBAAS,CACvC,WACA,cACA,WACA,cACA,YACA,SACA,WAPF0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAWAE,GAXAD,EAAA,GAAAA,EAAA,GAWgC1lB,mBAAS,IAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsC5lB,mBAAS,aAA/C8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyC9lB,mBAAS,IAAIkQ,OAAtD8V,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAKAnc,oBAAU,aAGP,CAACne,EAAMy5B,aACX,IAGOc,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzC,GAAY,cAATmN,EACH,CACE,IAAIkhB,EAAe,GACnBruB,EAAMsuB,QAAQ,SAAAC,GACZF,EAAajkB,KAAKmkB,EAAQ53B,QAGzB03B,EAAaG,QAAQ,SAAW,EAEjCf,GAAU,GAGVA,GAAU,GAGTY,EAAaG,QAAQ,YAAc,EAEpCb,GAAa,GAGbA,GAAa,GAGfJ,EAAWn5B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNmwB,GADK,GAAAnwB,OAAAM,EAAA,EAAAN,CAAA,GAEP+Y,EAAOnN,OAsBd,OAFAgS,oBAAU,aACP,IAEDjd,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAI9BgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACxBrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACHsK,UAAQ,EACRxW,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAChCmX,QAASja,EAAM0Y,QAAQoiB,UACxB3uB,MAAOnM,EAAM+6B,aACbC,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAK1BjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAUA,EAAQ5kB,SAAW,GACpC5L,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAM0Y,QAAQpI,mBACvBiK,SAAUggB,EAAmB,YAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAMxBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACA5N,GAAG,mBACH8uB,UAAQ,EAER/uB,MAAOukB,EAAQngB,cACfrQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQnI,cACxBgK,SAAUggB,EAAmB,iBAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQZjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAQtgB,UACflQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EAETF,QAASja,EAAM0Y,QAAQtI,UACvBmK,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQnBwf,GAAWjJ,EAAQhgB,SAClBxP,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAExBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQhgB,SAChBxQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQhI,SACvB6J,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAEjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOC,KAEV0f,GAAanJ,EAAQyK,WACtBj6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQyK,WAChBj7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAO1J,aAEjCqJ,QAASja,EAAM0Y,QAAQ/I,aACvB4K,SAAUggB,EAAmB,cAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAO1J,aAAiBqqB,EAAY,CAAE/W,eAGnF1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOT,KACXjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQ9iB,YAChB1N,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQ9K,YACvB2M,SAAUggB,EAAmB,eAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGzBk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACpB9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQ/f,UAChBzQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQ/H,UACxB4J,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQpjB,OAChBpN,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQpL,OACvBiN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQvjB,OAChBjN,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQvL,OACxBoN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQXna,EAAMy1B,OAAS,KAAOv0B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC7C,UAAU,GAAI49B,UAAU,WAExEl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMq7B,QAAQ3K,IAAUhyB,MAAM,UAAUyB,QAAQ,aAAvE,eClcJlB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBg+B,GAAwBC,YAAW,SAAAx7B,GAC9C,IAAIy7B,EAAUvI,cACd7e,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GAC4BN,IAAMK,SAAS,KAA3C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOwe,EAAPve,EAAA,GAAewe,EAAfxe,EAAA,GAEAxI,EAAoCL,mBAAS,IAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR8L,EAA8BpJ,IAAMK,SAAS,IAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO3E,EAAP4E,EAAA,GAAgBse,EAAhBte,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwCvJ,IAAMK,SAAS,KAAvDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOod,EAAPnd,EAAA,GAAqBie,EAArBje,EAAA,GACA4V,EAAwCvf,IAAMK,SAAS,IAAvDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOsI,EAAPrI,EAAA,GAAqBsI,EAArBtI,EAAA,GACAC,EAAgCzf,IAAMK,UAAS,GAA/Cqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOsI,EAAPrI,EAAA,GAAiBsI,EAAjBtI,EAAA,GAEMjzB,EAAUzB,KAEhB40B,EAAsC5f,IAAMK,SAAS,IAArDwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAfuD,SAAAoI,IAAA,OAAAA,EAAA37B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuCvD,SAAAC,EAAgCuqB,EAAWC,GAA3C,IAAAC,EAAA,OAAA3qB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEM4pB,EAAU,CACZX,OAASA,EACTjC,WAAa0C,EACbG,aAAeF,GALnB7pB,EAAAE,KAAA,EAQwBlB,EAAmB,4BAA6B,GAAI8qB,GAR5E,OAAA9pB,EAAAgB,KAWGkoB,EAAQllB,KAAK,uBAXhB,wBAAAhE,EAAAmB,SAAA9B,OAvCuDkC,MAAAC,KAAA1B,WAAA,SAAAkqB,IAAA,OAAAA,EAAAh8B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAqDvD,SAAAsV,EAA+BuV,GAA/B,IAAA3qB,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOH,MAGhC0H,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IACMzV,EAAeyV,EAAWnU,KAAKrB,sBAAsB5D,MAAMC,IAAI,SAAAC,GAAC,OAAA3L,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjE2L,GADiE,IAEpEoD,MAASpD,EAAEK,UACXqE,YAAc1E,EAAE2D,aAAa3D,EAAE4D,mBAEqB,GAAnDsV,EAAWnU,KAAKwrB,mBAAmBzwB,MAAM0G,SAE1CkpB,EAAW,CACTtrB,mBAAqB8U,EAAWnU,KAAKlF,2BAA2BC,MAChEuE,cAAgB6U,EAAWnU,KAAK3E,sBAAsBN,MACtDoE,UAAagV,EAAWnU,KAAKvE,mBAAmBV,MAChD0E,SAAY0U,EAAWnU,KAAKxC,wBAAwBzC,MACpD2D,aAAeA,EACf/B,YAAcwX,EAAWnU,KAAKpD,qBAAqB7B,MACnD2E,UAAYyU,EAAWnU,KAAKvD,mBAAmB1B,MAC/CsB,OAAS8X,EAAWnU,KAAK1D,gBAAgBvB,MACzCmB,OAASiY,EAAWnU,KAAK7D,gBAAgBpB,MACzC8uB,UAAY1V,EAAWnU,KAAKwrB,mBAAmBzwB,QAEjDiwB,GAAY,IAEd7W,EAAWnU,KAAKwrB,mBAAmBzwB,MAAMyuB,QAAQ,SAAAC,GAE/C,GAAGA,EAAQtuB,IAAMowB,EACjB,CACE,IAAIE,EAAO,GACXb,EAAgBnB,GAChB,IAAIiC,EAAajC,EAAQkC,kBACrBC,EAAmB,GACvBzX,EAAWnU,KAAKlF,2BAA2BC,MAAMyuB,QAAQ,SAAAqC,GACpDH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAG1BJ,EAAI,SAAeG,EACnBA,EAAmB,GACnBzX,EAAWnU,KAAK3E,sBAAsBN,MAAMyuB,QAAQ,SAAAqC,GAC/CH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,cAAoBG,EAExBA,EAAmB,GACnBzX,EAAWnU,KAAKvE,mBAAmBV,MAAMyuB,QAAQ,SAAAqC,GAC5CH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,UAAgBG,EACpBA,EAAmB,GACnBzX,EAAWnU,KAAKxC,wBAAwBzC,MAAMyuB,QAAQ,SAAAqC,GACjDH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,SAAeG,EACnBA,EAAmB,GACnBzX,EAAWnU,KAAKpD,qBAAqB7B,MAAMyuB,QAAQ,SAAAqC,GAC9CH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,YAAkBG,EACtBA,EAAmB,GACnBzX,EAAWnU,KAAKvD,mBAAmB1B,MAAMyuB,QAAQ,SAAAqC,GAC5CH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,UAAgBG,EACpBA,EAAkB,GAClBzX,EAAWnU,KAAK1D,gBAAgBvB,MAAMyuB,QAAQ,SAAAqC,GACzCH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,OAAaG,EACjBA,EAAkB,GAClBzX,EAAWnU,KAAK7D,gBAAgBpB,MAAMyuB,QAAQ,SAAAqC,GACzCH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,OAAaG,EACjBA,EAAkB,GAClBltB,EAAa8qB,QAAQ,SAAAqC,GAChBH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAI1BJ,EAAI,WAAiBG,EACrBd,EAAgBW,GAElBd,EAAW,CACTtrB,mBAAqB8U,EAAWnU,KAAKlF,2BAA2BC,MAChEuE,cAAgB6U,EAAWnU,KAAK3E,sBAAsBN,MACtDoE,UAAagV,EAAWnU,KAAKvE,mBAAmBV,MAChD0E,SAAY0U,EAAWnU,KAAKxC,wBAAwBzC,MACpD2D,aAAeA,EACf/B,YAAcwX,EAAWnU,KAAKpD,qBAAqB7B,MACnD2E,UAAYyU,EAAWnU,KAAKvD,mBAAmB1B,MAC/CsB,OAAS8X,EAAWnU,KAAK1D,gBAAgBvB,MACzCmB,OAASiY,EAAWnU,KAAK7D,gBAAgBpB,MACzC8uB,UAAY1V,EAAWnU,KAAKwrB,mBAAmBzwB,QAEjDiwB,GAAY,OAOfxd,MAAM7L,QAAQzB,OA/InB,wBAAA+V,EAAAxT,SAAAuT,OArDuDnT,MAAAC,KAAA1B,WA6RvD,OA1BA8L,oBAAU,WACR,IAAI4e,EAAU/8B,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GACjDrB,EAAUoB,GArQ2C,SAAAlpB,GAAA0oB,EAAAzoB,MAAAC,KAAA1B,WAsQrD4qB,CAAgBF,IAEf,IAsBD77B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEFw5B,EAAY96B,EAAAC,EAAAC,cAAC87B,GAAD,CAAqBzH,QAAQ,EAAOgE,WAAYqC,GAA8B,GAAIf,aAAcA,EAAcriB,QAASA,EAAS2iB,QA5R5I,SAAuBlvB,GAGrB,IAAIgxB,EAAQ,GACVC,EAAc,GACL78B,OAAOwvB,KAAK5jB,GAClBsuB,QAAQ,SAAAtkB,GACX,IAAIgD,EAAS,GACTkkB,EAAY,GAChBlxB,EAAMgK,GAAKskB,QAAQ,SAAA6C,GACjBnkB,EAAO5C,KAAK+mB,EAASx6B,MACrBu6B,EAAU9mB,KAAK+mB,EAAShuB,OACxB6tB,EAAM5mB,KAAK+mB,EAASx6B,QAGtB,IAAIs5B,EAAcjmB,EAAM,MAAQgD,EAAOokB,KAAK,OAC5CH,EAAY7mB,KAAK6lB,KAjCkC,SAAAzoB,EAAAC,GAAAsoB,EAAApoB,MAAAC,KAAA1B,WAoCvDmrB,CAAiBrxB,EAAMixB,EAAYG,KAAK,SAyQ4Hr9B,UAAWQ,EAAQ+8B,eAAmB,mCC3StMx+B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACVq5B,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9By7B,QAAS,CACPz6B,gBAAiBiD,IAAOC,KAAK,MAE/By3B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBiD,IAAOC,KAAK,MAE/B23B,YAAa,CACXlf,QAAS,IAEX3C,QAAS,CACP/Z,UAAWL,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAGzB87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OAmaf+7B,GA9ZY,SAAAt5B,GACzB,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B09B,IACMh9B,EAAUzB,KAChBu6B,EAAoDvlB,IAAMwB,WAAWob,IACrElc,GADA6kB,EAAQhJ,WAARgJ,EAAoB5I,cAApB4I,EAAmC7I,cACLrc,mBAAStU,EAAMy5B,aAA7C7kB,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+b,EAAP9b,EAAA,GAAgB8kB,EAAhB9kB,EAAA,GACAG,EAA4BT,oBAAS,GAArCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO4kB,EAAP3kB,EAAA,GAAe4kB,EAAf5kB,EAAA,GACAG,EAAkCb,oBAAS,GAA3CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO0kB,EAAPvkB,EAAA,GAAkBwkB,EAAlBxkB,EAAA,GACAykB,EAAgCzlB,mBAAS,CACvC,WACA,cACA,WACA,cACA,YACA,SACA,WAPF0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAWAE,GAXAD,EAAA,GAAAA,EAAA,GAWgC1lB,mBAAS,IAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsC5lB,mBAAS,aAA/C8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyC9lB,mBAAS,IAAIkQ,OAAtD8V,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAKAnc,oBAAU,aAGP,CAACne,EAAMy5B,aACX,IAGOc,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzC,GAAY,cAATmN,EACH,CACE,IAAIkhB,EAAe,GACnBruB,EAAMsuB,QAAQ,SAAAC,GACZF,EAAajkB,KAAKmkB,EAAQ53B,QAGzB03B,EAAaG,QAAQ,SAAW,EAEjCf,GAAU,GAGVA,GAAU,GAGTY,EAAaG,QAAQ,YAAc,EAEpCb,GAAa,GAGbA,GAAa,GAGfJ,EAAWn5B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNmwB,GADK,GAAAnwB,OAAAM,EAAA,EAAAN,CAAA,GAEP+Y,EAAOnN,OAsBd,OAFAgS,oBAAU,aACP,IAEDjd,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAI9BgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACxBrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACHsK,UAAQ,EACRxW,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOwd,WAChC7d,QAASja,EAAM0Y,QAAQoiB,UACxB3uB,MAAOnM,EAAM+6B,aACbC,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOwd,WAAemD,EAAY,CAAE/W,eAGjF1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAK1BjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAUA,EAAQ5kB,SAAW,GACpC5L,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAM0Y,QAAQpI,mBACvBiK,SAAUggB,EAAmB,YAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAMxBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACA5N,GAAG,mBACH8uB,UAAQ,EAER/uB,MAAOukB,EAAQngB,cACfrQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQnI,cACxBgK,SAAUggB,EAAmB,iBAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQZjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAQtgB,UACflQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EAETF,QAASja,EAAM0Y,QAAQtI,UACvBmK,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQnBwf,GAAWjJ,EAAQhgB,SAClBxP,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAExBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQhgB,SAChBxQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQhI,SACvB6J,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAEjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOC,KAEV0f,GAAanJ,EAAQyK,WACtBj6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQyK,WAChBj7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAO1J,aAEjCqJ,QAASja,EAAM0Y,QAAQ/I,aACvB4K,SAAUggB,EAAmB,cAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAO1J,aAAiBqqB,EAAY,CAAE/W,eAGnF1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOT,KACXjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQ9iB,YAChB1N,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQ9K,YACvB2M,SAAUggB,EAAmB,eAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGzBk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACpB9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQ/f,UAChBzQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQ/H,UACxB4J,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQpjB,OAChBpN,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASja,EAAM0Y,QAAQpL,OACvBiN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EACP/uB,MAAOukB,EAAQvjB,OAChBjN,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACRF,QAASja,EAAM0Y,QAAQvL,OACxBoN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MAGjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQXna,EAAMy1B,OAAS,KAAOv0B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC7C,UAAU,GAAI49B,UAAU,WAExEl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMq7B,QAAQ3K,IAAUhyB,MAAM,UAAUyB,QAAQ,aAAvE,eClcJlB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBogC,GAAmBnC,YAAW,SAAAx7B,GACzC,IAAIy7B,EAAUvI,cACd7e,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GAC4BN,IAAMK,SAAS,KAA3C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOwe,EAAPve,EAAA,GAAewe,EAAfxe,EAAA,GAEAxI,EAAoCL,mBAAS,IAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR8L,EAA8BpJ,IAAMK,SAAS,IAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO3E,EAAP4E,EAAA,GAAgBse,EAAhBte,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwCvJ,IAAMK,SAAS,KAAvDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOod,EAAPnd,EAAA,GAAqBie,EAArBje,EAAA,GACA4V,EAAwCvf,IAAMK,SAAS,IAAvDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOsI,EAAPrI,EAAA,GAAqBsI,EAArBtI,EAAA,GACAC,EAAgCzf,IAAMK,UAAS,GAA/Cqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOsI,EAAPrI,EAAA,GAAiBsI,EAAjBtI,EAAA,GAEMjzB,EAAUzB,KAEhB40B,EAAsC5f,IAAMK,SAAS,IAArDwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAfkD,SAAAoI,IAAA,OAAAA,EAAA37B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuClD,SAAAC,EAAgCuqB,EAAWC,GAA3C,IAAAC,EAAA,OAAA3qB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEM4pB,EAAU,CACZX,OAASA,EACTjC,WAAa0C,EACbG,aAAeF,GALnB7pB,EAAAE,KAAA,EAQwBlB,EAAmB,uBAAwB,GAAI8qB,GARvE,OAAA9pB,EAAAgB,KAUGkoB,EAAQllB,KAAK,gBAVhB,wBAAAhE,EAAAmB,SAAA9B,OAvCkDkC,MAAAC,KAAA1B,WAAA,SAAAkqB,IAAA,OAAAA,EAAAh8B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAoDlD,SAAAsV,EAA+BuV,GAA/B,IAAA3qB,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOF,MAGhCyH,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IACMzV,EAAeyV,EAAWnU,KAAKrB,sBAAsB5D,MAAMC,IAAI,SAAAC,GAAC,OAAA3L,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjE2L,GADiE,IAEpEoD,MAASpD,EAAEK,UACXqE,YAAc1E,EAAE2D,aAAa3D,EAAE4D,mBAEuB,GAArDsV,EAAWnU,KAAK2sB,qBAAqB5xB,MAAM0G,SAE5CkpB,EAAW,CACTtrB,mBAAqB8U,EAAWnU,KAAKlF,2BAA2BC,MAChEuE,cAAgB6U,EAAWnU,KAAK3E,sBAAsBN,MACtDoE,UAAagV,EAAWnU,KAAKvE,mBAAmBV,MAChD0E,SAAY0U,EAAWnU,KAAKxC,wBAAwBzC,MACpD2D,aAAeA,EACf/B,YAAcwX,EAAWnU,KAAKpD,qBAAqB7B,MACnD2E,UAAYyU,EAAWnU,KAAKvD,mBAAmB1B,MAC/CsB,OAAS8X,EAAWnU,KAAK1D,gBAAgBvB,MACzCmB,OAASiY,EAAWnU,KAAK7D,gBAAgBpB,MACzC8uB,UAAY1V,EAAWnU,KAAK2sB,qBAAqB5xB,QAEnDiwB,GAAY,IAEd7W,EAAWnU,KAAK2sB,qBAAqB5xB,MAAMyuB,QAAQ,SAAAC,GAEjD,GAAGA,EAAQtuB,IAAMowB,EACjB,CACE,IAAIE,EAAO,GACXb,EAAgBnB,GAChB,IAAIiC,EAAajC,EAAQkC,kBAErBC,EAAmB,GAEvBzX,EAAWnU,KAAKlF,2BAA2BC,MAAMyuB,QAAQ,SAAAqC,GACpDH,GAEEA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAO5BJ,EAAI,SAAeG,EACnBA,EAAmB,GACnBzX,EAAWnU,KAAK3E,sBAAsBN,MAAMyuB,QAAQ,SAAAqC,GAC/CH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,cAAoBG,EAExBA,EAAmB,GACnBzX,EAAWnU,KAAKvE,mBAAmBV,MAAMyuB,QAAQ,SAAAqC,GAC5CH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,UAAgBG,EACpBA,EAAmB,GACnBzX,EAAWnU,KAAKxC,wBAAwBzC,MAAMyuB,QAAQ,SAAAqC,GACjDH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,SAAeG,EACnBA,EAAmB,GACnBzX,EAAWnU,KAAKpD,qBAAqB7B,MAAMyuB,QAAQ,SAAAqC,GAC9CH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,YAAkBG,EACtBA,EAAmB,GACnBzX,EAAWnU,KAAKvD,mBAAmB1B,MAAMyuB,QAAQ,SAAAqC,GAC5CH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,UAAgBG,EACpBA,EAAkB,GAClBzX,EAAWnU,KAAK1D,gBAAgBvB,MAAMyuB,QAAQ,SAAAqC,GACzCH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,OAAaG,EACjBA,EAAkB,GAClBzX,EAAWnU,KAAK7D,gBAAgBpB,MAAMyuB,QAAQ,SAAAqC,GACzCH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,OAAaG,EACjBA,EAAkB,GAClBltB,EAAa8qB,QAAQ,SAAAqC,GAChBH,GAEAA,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCutB,EAAiBtmB,KAAKumB,KAK1BJ,EAAI,WAAiBG,EACrBd,EAAgBW,GAElBd,EAAW,CACTtrB,mBAAqB8U,EAAWnU,KAAKlF,2BAA2BC,MAChEuE,cAAgB6U,EAAWnU,KAAK3E,sBAAsBN,MACtDoE,UAAagV,EAAWnU,KAAKvE,mBAAmBV,MAChD0E,SAAY0U,EAAWnU,KAAKxC,wBAAwBzC,MACpD2D,aAAeA,EACf/B,YAAcwX,EAAWnU,KAAKpD,qBAAqB7B,MACnD2E,UAAYyU,EAAWnU,KAAKvD,mBAAmB1B,MAC/CsB,OAAS8X,EAAWnU,KAAK1D,gBAAgBvB,MACzCmB,OAASiY,EAAWnU,KAAK7D,gBAAgBpB,MACzC8uB,UAAY1V,EAAWnU,KAAK2sB,qBAAqB5xB,QAEnDiwB,GAAY,OAOfxd,MAAM7L,QAAQzB,OA/KnB,wBAAA+V,EAAAxT,SAAAuT,OApDkDnT,MAAAC,KAAA1B,WA4TlD,OA1BA8L,oBAAU,WACR,IAAI4e,EAAU/8B,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GACjDrB,EAAUoB,GApSsC,SAAAlpB,GAAA0oB,EAAAzoB,MAAAC,KAAA1B,WAqShD4qB,CAAgBF,IAEf,IAsBD77B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEFw5B,EAAY96B,EAAAC,EAAAC,cAACy8B,GAAD,CAAqBpI,QAAQ,EAAOgE,WAAYqC,GAA8B,GAAIf,aAAcA,EAAcriB,QAASA,EAAS2iB,QA3T5I,SAAuBlvB,GAGrB,IAAIgxB,EAAQ,GACRC,EAAc,GACP78B,OAAOwvB,KAAK5jB,GAClBsuB,QAAQ,SAAAtkB,GACX,IAAIgD,EAAS,GACTkkB,EAAY,GAChBlxB,EAAMgK,GAAKskB,QAAQ,SAAA6C,GACjBnkB,EAAO5C,KAAK+mB,EAASx6B,MACrBu6B,EAAU9mB,KAAK+mB,EAAShuB,OACxB6tB,EAAM5mB,KAAK+mB,EAASx6B,QAGtB,IAAIs5B,EAAcjmB,EAAM,MAAQgD,EAAOokB,KAAK,OAC5CH,EAAY7mB,KAAK6lB,KAjC6B,SAAAzoB,EAAAC,GAAAsoB,EAAApoB,MAAAC,KAAA1B,WAoClDmrB,CAAiBrxB,EAAMixB,EAAYG,KAAK,SAwS4Hr9B,UAAWQ,EAAQ+8B,eAAmB,+CCnWtMx+B,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,MAwFO4+B,GArFA,SAAA99B,GACb,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B+9B,IACAppB,EAA8CL,oBAAS,GAAvDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE0CN,mBAAS,KAAnDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOoG,EAAPnG,EAAA,GAAsBoG,EAAtBpG,EAAA,GAiBMtU,EAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEza,WAAW,WACX0a,WAAS,EACTkkB,QAAQ,gBACRzgC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EACP1a,WAAW,aAChBsb,MAAI,EAAGX,GAAI,EAAGxc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GAEVxZ,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNC,KAAK,OACLyX,SAzC0B,SAAC5E,EAAM2E,GACvCc,EAAiBzF,EAAMiG,OAAOzP,QAyCxB8xB,aAAa,OACb9xB,MAAOgP,KAGRja,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GAERxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACC/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,kBAAIjX,EAAMib,SAASE,KAH7B,YASHja,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GAERxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,kBAAIjX,EAAMk+B,UAHrB,8FCxCJj/B,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAACp+B,GACf,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCq+B,IACAhqB,EAAkCJ,IAAMK,SAAS,GAAjDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAkB+e,GAAlB7e,EAAA,GAAAA,EAAA,IACA2I,EAAsCjJ,IAAMK,SAAS,GAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAoB6W,EAApB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GACnC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB3B,SA2BVmpB,EA3BU3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2BzB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA3ByBkC,MAAAC,KAAA1B,WA2Cb7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC3CgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,aAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE9BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KAEI/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO1F,GACPuxB,YAAa,SAACvmB,GAAD,OACXmiB,EAAaniB,EAAKlF,2BAA2B0rB,aAE/C9R,UAAW,CAAE+R,KAAM/P,EAAagQ,OAAQtE,IAEvC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIxB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EAEA/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACGvF,EAAKlF,2BAA2BC,MAAMC,IACrC,SAACsc,EAAKrE,GAAN,OACEhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACY,GAAT0N,GAAclkB,EAAM00B,MACnBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACjB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EACR,aAEF9yB,MAAM,iBAGV3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EACR,aAEF9yB,MAAM,iBAIV3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,IAChB8qB,MAAM,UAENjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAE3Bt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA3FrDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,UACzCj1B,EAAM01B,aA2FgCx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIJ,KACJD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAChBqyB,EAAQF,QACTE,EAAQ/oB,IAAMmc,EAAIhc,YACjBvM,EAAM00B,MACLxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SACL,KAGL3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACdI,EAAIzlB,MAGRqyB,EAAQF,QACTE,EAAQ/oB,IAAMmc,EAAIhc,YACjBvM,EAAM00B,MACLxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SAC5B9yB,MAAM,UACL,KAGL3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACdI,EAAIhc,WAGR4oB,EAAQF,QACTE,EAAQ/oB,IAAMmc,EAAIhc,YACjBvM,EAAM00B,MACLxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,IAChB8qB,MAAM,UAENjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAE3Bt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAjKhDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAmKH/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACNlR,QAAS,SAAC0E,GAAD,OApL3B4c,EAoL6ChQ,EAnL/D8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAOipB,EAAWjpB,MAClBxM,KAAMy1B,EAAWz1B,KACjB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAImsB,EAAWhsB,UAAW0oB,QAAQ,KAP7D,IAAoBsD,GAqLkBl4B,MAAO,CAAEhD,MAAO,KAEhB6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KACEvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAWXD,EAAAC,EAAAC,cAAA,WAAM,wBAU7BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aApMe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAoMA4B,oBAjMsB,SAAC1T,GAC/BiS,EAAejS,EAAMiG,OAAOzP,QAiMpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,UCpSTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAId,SAASqhC,KACtB,IAAMl+B,EAAUzB,KAChB0V,EAA4BL,mBAAS,IAArCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAekqB,GAAfjqB,EAAA,GAAAA,EAAA,IACA4kB,EAAuDvlB,IAAMwB,WAAW2a,IAAhEF,EAARsJ,EAAQtJ,YACRnb,GADAykB,EAAqBrJ,eAArBqJ,EAAqCrpB,eACDmE,mBAAS,KAA7CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO2hB,EAAP1hB,EAAA,GAAmB8pB,EAAnB9pB,EAAA,GACAG,EAA0Bb,oBAAS,GAAnCgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOuf,EAAPpf,EAAA,GAAcqf,EAAdrf,EAAA,GA6CA,OA7BA6I,oBAAU,WAwBR,OApBE0gB,EAAW,CACT,CACEzyB,GAAI2yB,OACJC,WAAY,OACZC,SAAU,CACRn8B,KAAM,qBAERo8B,QAAS,CACPriB,IAAK,SACL7K,OAAQ,aACRmtB,MAAO,SACPC,SAAU,IACVruB,OAAQ,WAEVA,OAAQ,cAMP,YACK,IAEX,IAGD7P,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAENtL,EAAAC,EAAAC,cAACi+B,GAAD,CAAQpkB,SA/CV,SAAqBE,GAEnB2jB,EAAc3jB,IA6CiB+iB,MA3CjC,WAEEvJ,GAAS,MA0CTzzB,EAAAC,EAAAC,cAACk+B,GAAD,CACEp/B,UAAWQ,EAAQ46B,QACnB5E,WAAYA,EACZhC,MAAOA,EACPgB,SA5CJ,WAEEf,GAAS,IA2CPzD,OAAQhB,EAAY/f,eAAeC,aCpEzC,IAAMnR,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACnCoiC,SAAU,CACRrlB,OAAQ/c,EAAMI,QAAQ,OAGfiiC,GAAehE,YAAW,SAAAx7B,GACnC,IAAMU,EAAUzB,KAEhBwgC,EAAiCC,aAASvvB,GAAexE,OAAjDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAEvB,OAAGD,EAAgBhQ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAE1DpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAGbF,EAAAC,EAAAC,cAACu+B,GAAD,CAAkBxzB,MAAO,CAAE8E,OAAMrF,OAAQuE,GAAevE,OAAQkkB,WAAa,mBAEjF5uB,EAAAC,EAAAC,cAACw9B,GAAc5+B,iBCdbf,WAAY/B,YAAW,iBAAO,CAClCgC,KAAM,GACN6zB,YAAa,CACX5zB,QAAS,OACTgY,cAAe,SACf9X,eAAgB,cAGPugC,GAAgBpE,YAAW,SAACx7B,GACvC,IAmCM6/B,EAAqB,CACzB,mBACA,YACA,mBACA,aACA,eACA,iBACA,eACA,iBACA,cACA,mBACA,eACA,eACA,UACA,UACA,WACA,kBACA,gBACA,iBACA,mBACA,iBACA,gBACA,eACA,oBACA,oBACA,UACA,cACA,WACA,cACA,gBACA,cACA,QACA,kBACA,sBAGFxrB,EAA4BJ,IAAMK,UAAS,GAA3CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACkCN,IAAMK,UAAU,IAAlD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAAC,EAAA,GAAAA,EAAA,GACgBle,KAUhB,OACEiC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GAEvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,cAvFiB,CACrB,mBACA,uBACA,mBACA,aACA,eACA,YACA,gBACA,iBACA,cACA,aACA,SACA,SACA,UACA,UACA,gBACA,mBACA,iBACA,mBACA,oBACA,kBACA,iBACA,SACA,gBACA,eACA,SACA,iBACA,iBACA,iBACA,iBACA,eACA,iBACA,qBACA,uBA2DkB8L,IAAI,SAACslB,EAAMrN,GAAP,OAClBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEC,UAAU,OACVr9B,UAAWs9B,IACXC,GAAIL,EAAmB3b,IAEvBhjB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAEPoxB,2BCxHDr0B,YAAW,iBAAO,CAClCgC,KAAM,MCaUhC,YAAW,iBAAO,CAClCgC,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX6gC,MAAO,GAGP9c,aAAc,gCCRVpiB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX+a,QAAS,CACPlB,cAAe,SACf/X,WAAY,aACZkZ,YAAa,CACX5a,WAAY,IAGhB4Z,WAAY,CACVX,YAAaxZ,EAAMI,QAAQ,OAoGhB4iC,GAhGC,SAAAngC,GACd,IAAQi/B,EAAiCj/B,EAAjCi/B,SAAU/+B,EAAuBF,EAAvBE,UAAcI,EAAhCC,OAAAC,EAAA,EAAAD,CAAyCP,EAAzCogC,IAEM1/B,EAAUzB,KAEhB0V,EAAgCL,oBAAS,GAAzCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAUA,OACE1T,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,kBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYyc,EAASoB,WAArB,IAAkCpB,EAASqB,YAE7Cp/B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,cACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGyc,EAAWA,EAASsB,MAAQ,GAC5BtB,EAASuB,iBAAmBt/B,EAAAC,EAAAC,cAAA,WAC3BF,EAAAC,EAAAC,cAACq/B,EAAD,CACE/hC,MACKugC,EAASuB,gBAAkBh/B,IAAO+8B,MAAM,KAAO/8B,IAAO88B,OAAO,MAInEW,EAASuB,gBACJ,iBACA,yBAKZt/B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,cACCthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYyc,EAASlmB,OACpBkmB,EAASuB,iBAAmBt/B,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAACq/B,EAAD,CACE/hC,MACKugC,EAASyB,iBAAmBl/B,IAAO+8B,MAAM,KAAO/8B,IAAO88B,OAAO,MAIpEW,EAASyB,iBACJ,kBACA,8LC7BTlP,OA/Df,SAA2BxxB,GACzB,IACEU,EAOEV,EAPFU,QAEA+wB,GAKEzxB,EANF0xB,iBAME1xB,EALFyxB,OACAE,EAIE3xB,EAJF2xB,QAGAC,GACE5xB,EAHF6xB,YAGE7xB,EAFF8xB,SAEE9xB,EADF4xB,eAOF,OADAhf,QAAQyR,IAAIrkB,GAEVkB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KASGtiB,EAAMunB,QAAQtb,IAAI,SAACic,GAAD,OACjBhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd/O,MAAwB,GAAjB6qB,EAAS5O,KAAY,IAAM,KAClC6O,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,UAC5C0J,cAAeJ,IAAYzJ,EAAS9b,IAAKqlB,GAEzCvwB,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACEC,OAAQN,IAAYzJ,EAAS9b,GAC7B2Q,UAAW4U,IAAYzJ,EAAS9b,GAAKqlB,EAAQ,MAC7Cxa,SA3Beib,EA2BYhK,EAAS9b,GA3BR,SAACuJ,GACvCic,EAAcjc,EAAOuc,MA4BVhK,EAASrlB,MAAQqlB,EAASrlB,MAAQqlB,EAASplB,KAC3C6uB,IAAYzJ,EAAS9b,GACpBlL,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQyxB,gBACH,IAEpB,OAlCU,IAACD,mFCsB7ByO,0BAAeC,KAAoCC,MAInD,IAAM5hC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,KAET0Z,OAAQ,CACNzZ,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,IACV6C,OAAQ,UAEV3C,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,GAC1B6lB,cAAejmB,EAAMI,QAAQ,GAC7B8Z,SAAU,IACV6C,OAAQ,UAEV4mB,WAAY,CACV1F,UAAW,QACXzkB,YAAa,GAEfoqB,OAAQ,CACN7mB,OAAQ/c,EAAMI,QAAQ,EAAG,GACzB4B,QAAS,QAEXb,OAAQ,CACNqY,YAAaxZ,EAAMI,QAAQ,IAE7B8a,QAAS,CACP9Z,gBAAiBiD,IAAOC,KAAK,KAC7BnE,QAASH,EAAMI,QAAQ,GACvB4B,QAAS,OACTE,eAAgB,UAElB2hC,YAAa,CACXtiC,MAAOvB,EAAMwB,QAAQsiC,MACrBtqB,YAAaxZ,EAAMI,QAAQ,OAyQhB2jC,GAjQK,SAAClhC,GACnB,IAAQmhC,EAAoEnhC,EAApEmhC,QAAS1H,EAA2Dz5B,EAA3Dy5B,WAAYjhB,EAA+CxY,EAA/CwY,KAAMC,EAAyCzY,EAAzCyY,QAAS2oB,EAAgCphC,EAAhCohC,QAASlhC,EAAuBF,EAAvBE,UAAcI,EAAnEC,OAAAC,EAAA,EAAAD,CAA4EP,EAA5EqhC,IACMxoB,EAAatY,OAAAQ,EAAA,EAAAR,CAAA,GACd4gC,GAELxsB,EAAsCL,oBAAS,GAA/CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO2sB,EAAP1sB,EAAA,GAAoB2sB,EAApB3sB,EAAA,GACAG,EAAoCT,mBAAS,IAA7CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOysB,EAAPxsB,EAAA,GACAG,GADAH,EAAA,GAC0BV,mBAAS,KAAnCgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GACAqkB,GADAlkB,EAAA,GAAAA,EAAA,GACsCrB,IAAMwB,WAAWka,KACvDtb,GADAmlB,EAAQrP,WAARqP,EAAoB9J,cACkBzb,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,CAAA,GACjCsY,KADLtE,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO+f,EAAP7f,EAAA,GAAoB8f,EAApB9f,EAAA,GAGQhD,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAEF7Q,EAAUzB,KACVs7B,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAM3C,IAAMwpB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GAEnC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAxBvB,SAAAs1B,IAAA,OAAAA,EAAAlhC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiC7B,SAAAC,EAAmC8vB,EAAWC,EAAUC,GAAxD,IAAAC,EAAAC,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAC,EAAAjoB,EAAAkoB,EAAAC,EAAA,OAAA1wB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMovB,EAAYxe,KAAO,IAAImB,MAAQlB,OAAO,sBAD5C/Q,EAAAE,KAAA,EAE2BlB,EACvB,eACA,GACA,CACE8wB,MAAOX,EAAUY,cACjBtrB,SAAU6qB,EACVU,WAAY,gBACZC,WAAY,OAEd,GAXJ,cAEMV,EAFNvvB,EAAAgB,KAaMwuB,EAAaD,EAAa7wB,KAAK8wB,WAC/BC,EAAgBD,EAAWC,cAC3BnwB,EAAMkwB,EAAWlwB,IACrBe,QAAQyR,IAAI,cAAgBxS,GACxBowB,EAAeF,EAAWU,SAC1BP,EAAW,yDAA2DD,EAEtEhoB,EAAU,CACZhI,QAAS,CACPa,eAAgB4uB,EAAUY,cAC1BvvB,8BAA+B,MAvBrCR,EAAAE,KAAA,GA2BQiwB,KAAMC,IAAIX,EAAeN,EAAUkB,KAAM3oB,GA3BjD,QA4BMkoB,EAAiB/N,EAAYuN,GAC7BS,EAAa,GACbD,IACFC,EAAaD,EAAenF,MAAM,MACvBzmB,KAAK2rB,GAElB7N,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoBohC,EAAWS,EAAW7E,KAAK,QAlC/D,yBAAAhrB,EAAAmB,SAAA9B,OAjC6BkC,MAAAC,KAAA1B,WA4E7B,OAFA4B,IAAMkK,UAAU,aAAW,CAACiW,IAG1BlzB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQtH,SAAS,KAAKoB,QAASA,EAASD,KAAMA,GAC5CtX,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC3CgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQqW,QACtB7V,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8mB,MAAM,SAASjoB,UAAWQ,EAAQ8L,MAAOq2B,cAAY,EAAC1iC,QAAQ,MACvEH,EAAMwM,QAGXtL,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACrBkiB,EAAWxtB,IAAI,SAAC62B,EAAY5e,GAAb,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG8qB,GACCpgC,EAAAC,EAAAC,cAAC2hC,GAAA,EAAD,CACEC,MAAM,OACNC,QAASzB,EAGT0B,eAAgB,kBAAM3B,GAAe,IACrC4B,kBAAmB,kBAAMC,MAAM,SAC/BC,kBAAmB,kBAAMD,MAAM,WAGnCliC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAC5BulC,EAAWxpB,MAA2B,GAAnBwpB,EAAWxpB,MAAiC,KAApBwpB,EAAWxpB,MAAkC,UAAlBwpB,EAAW3sB,IAchF,KAbFjV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAI02B,EAAW3sB,IACfrT,KAAMggC,EAAW3sB,IACjBhK,MAAOioB,EAAY0O,EAAW3sB,KAC9BoE,SAAUob,EAAkBmN,EAAW3sB,KACvCtT,MAAOigC,EAAWjgC,MAClB6T,SAA8B,KAApBosB,EAAWxpB,QAKR,SAAlBwpB,EAAW3sB,KAAmBgrB,EAAQ1L,OAcnC,KAbFv0B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAI02B,EAAW3sB,IACfrT,KAAMggC,EAAW3sB,IACjBhK,MAAOioB,EAAY0O,EAAW3sB,KAC9BoE,SAAUob,EAAkBmN,EAAW3sB,KACvCtT,MAAOigC,EAAWjgC,MAClB6T,SAA8B,KAApBosB,EAAWxpB,QAIN,IAApBwpB,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACErc,MAAOigC,EAAW3sB,IAClBoQ,eAAe,QACfpH,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS+U,EAAY0O,EAAW3sB,KAChCrT,KAAK,WACLpE,MAAM,UACN6b,UAlHDjB,EAkHyBwpB,EAAW3sB,IAlH3B,SAACwF,GAC/B0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,GAAQ8a,EAAY9a,aAuHrB,IAApBwpB,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,iBACH6N,QAAS6oB,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,QACtFwB,OAAO,QACPC,WAAS,EACThO,MAAOioB,EAAY0O,EAAWS,YAC9BhpB,SAAUggB,EAAmBuI,EAAWS,YACxClpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBqI,WAAS,EAACD,OAAO,QAAQrX,MAAOigC,EAAWjgC,MAAO1C,QAAQ,kBAMrE,GAAnB2iC,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAc8/B,EAAQ2B,EAAW3sB,OAIjB,GAAnB2sB,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,iBAEH8N,OAAO,QACPC,WAAS,EACTF,QAAS6oB,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,QACtF6B,SAAUggB,EAAmBuI,EAAWS,YACxCp3B,MAAOioB,EAAY0O,EAAWS,YAC9BlpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBqI,WAAS,EAACD,OAAO,QAAQrX,MAAOigC,EAAWjgC,MAAO1C,QAAQ,iBAElF,KAIc,IAApB2iC,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,WAC9BokC,EAAWU,cACJ,KAIO,IAApBV,EAAWxpB,MACVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,IACvB7Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACqiC,GAAA,EAAD,CAAaC,IAAK,GACfvC,EAAQ2B,EAAW3sB,KAChBgrB,EAAQ2B,EAAW3sB,KAClB6mB,MAAM,KACN/wB,IAAI,SAACk1B,EAASjd,GAAV,OACHhjB,EAAAC,EAAAC,cAACuiC,GAAA,EAAD,CACE5gB,IAAI,aACJC,IAAKme,EACLlqB,QAAS,aACT/W,UAAWQ,EAAQkjC,UAGvB,OAGR1iC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACyiC,GAAA,SAAD,CACExjC,MAAO,CAAEzC,OAAQ,MAAOP,MAAO,OAC/BymC,OAAQ,WA3L5BlxB,QAAQyR,IAAI,sCA4LQ0f,UAAU,mBACVC,UAAW,SAAC7yB,EAAO8yB,GACZ9yB,GA5NA,SAAAwC,EAAAC,EAAAC,GAAA4tB,EAAA3tB,MAAAC,KAAA1B,WA6NH6xB,CAAoBD,EAAUnB,EAAW3sB,IAAK,cAnMlD,IAACmD,KAgNjBpY,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2X,SACtBnX,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAWQ,EAAQsgC,YAAa/pB,QAAS,kBAAMmqB,EAAQhN,IAAc11B,MAAO,UAAWyB,QAAQ,aAAvG,QAGAe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMwB,KAAWtY,QAAQ,aAA1C,cCpRVwgC,0BAAeC,KAAoCC,MAchC3jC,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAmHLL,YAAW,SAACC,GAAD,MAAY,CAC9C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA+CQz1B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAhGX,IAoGMqnB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEVyzB,OAAQ,CACN3zB,WAAYP,EAAMI,QAAQ,OAqlBf01B,gBAjlBA,SAACjzB,GACAkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,GAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsCrJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAoB+V,GAApB9V,EAAA,GAAAA,EAAA,IACAG,EAAoC1J,IAAMK,SAAStU,EAAMmZ,QAAzDyE,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwmB,EAAPvmB,EAAA,GAAmBwmB,EAAnBxmB,EAAA,GACA4V,EAAsCvf,IAAMK,SAAS,MAArDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOY,EAAPX,EAAA,GAAoBY,EAApBZ,EAAA,GAEAC,EAAwCzf,IAAMK,SAAS,IAAvDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8C1f,IAAMK,SAAS,KAA7Dwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACgD7f,IAAMK,SAAS,KAA/D2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACoDhgB,IAAMK,SAAS,KAAnE6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACQ3iB,GADR4iB,EAAA,GAAAA,EAAA,GAC+BlgB,IAAMwB,WAAWzB,IAAxCzC,oBACR+iB,EAAoCrgB,IAAMK,SAAS,IAAnDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACgCtgB,IAAMK,UAAS,IAA/CmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAO6P,EAAP5P,EAAA,GAAiB6P,EAAjB7P,EAAA,GACAG,EAAkC3gB,IAAMK,UAAS,GAAjDugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAO2P,EAAP1P,EAAA,GAAkB2P,EAAlB3P,EAAA,GACAG,EAA0B/gB,IAAMK,UAAS,GAAzC4gB,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAON,EAAPQ,EAAA,GAAcP,EAAdO,EAAA,GACAU,GAA4B3hB,IAAMK,UAAS,GAA3CuhB,GAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,GAAA,GAKAG,IALAF,GAAA,GAAAA,GAAA,GAKkC5hB,IAAMK,SAAS,KAAjD0hB,GAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,GAAA,GAAO0O,GAAPzO,GAAA,GAAkB0O,GAAlB1O,GAAA,GACA2O,GAA8B1wB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNw4B,GAAArkC,OAAAiU,EAAA,EAAAjU,CAAAokC,GAAA,GAAOxP,GAAPyP,GAAA,GAAgBxP,GAAhBwP,GAAA,GAzBwB,SA8DTtP,GA9DS3hB,GAAA,OAAA4hB,GAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,KAAA,OAAAA,GAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8DxB,SAAAC,EAA0B2F,GAA1B,OAAA7F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACEzS,EAAM6kC,SAASttB,GACfod,GAAS,GACTN,EAAe,MACfiQ,GAAY,GAJd,wBAAA/xB,EAAAmB,SAAA9B,OA9DwBkC,MAAAC,KAAA1B,WA+CxByyB,MAAMC,UAAUC,OAAS,SAAU9gB,EAAOxJ,GACxC3G,KAAKkxB,OAAO/gB,EAAO,EAAGxJ,IA2DxB,IAAMib,GAAoB,SAACrc,GAAD,OAAU,SAACqC,GACnC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAE9CouB,GAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAQ3CwI,GAAsCL,oBAAS,GAA/CM,GAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,GAAA,GAAO2sB,GAAP1sB,GAAA,GAAoB2sB,GAApB3sB,GAAA,GACAG,GAAoCT,mBAAS,IAA7CU,GAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,GAAA,GAAOysB,GAAPxsB,GAAA,GAAmBkwB,GAAnBlwB,GAAA,GAEAmwB,GAA0BlxB,IAAMK,SAAS,OAAzC8wB,GAAA7kC,OAAAiU,EAAA,EAAAjU,CAAA4kC,GAAA,GAAO1T,GAAP2T,GAAA,GAActP,GAAdsP,GAAA,GACAC,GAA8BpxB,IAAMK,SAAS,aAA7CgxB,GAAA/kC,OAAAiU,EAAA,EAAAjU,CAAA8kC,GAAA,GAAO1T,GAAP2T,GAAA,GAAgBrP,GAAhBqP,GAAA,GA3HwB,SAAA7D,KAAA,OAAAA,GAAAlhC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiIxB,SAAAsV,EAAmCya,EAAWC,EAAUC,GAAxD,IAAAC,EAAAC,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAC,EAAAjoB,EAAAkoB,EAAAC,EAAA,OAAA1wB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMovB,EAAYxe,KAAO,IAAImB,MAAQlB,OAAO,sBAD5C4D,EAAAzU,KAAA,EAE2BlB,EACvB,eACA,GACA,CACE8wB,MAAOX,EAAUY,cACjBtrB,SAAU6qB,EACVU,WAAY,gBACZC,WAAY,OAEd,GAXJ,cAEMV,EAFN5a,EAAA3T,KAaMwuB,EAAaD,EAAa7wB,KAAK8wB,WAC/BC,EAAgBD,EAAWC,cAC3BnwB,EAAMkwB,EAAWlwB,IACrBe,QAAQyR,IAAI,cAAgBxS,GACxBowB,EAAeF,EAAWU,SAC1BP,EACF,yDAA2DD,EAEzDhoB,EAAU,CACZhI,QAAS,CACPa,eAAgB4uB,EAAUY,cAC1BvvB,8BAA+B,MAxBrCmU,EAAAzU,KAAA,GA4BQiwB,KAAMC,IAAIX,EAAeN,EAAUkB,KAAM3oB,GA5BjD,QA6BMkoB,EAAiB/N,EAAYuN,GAC7BS,EAAa,GACbD,IACFC,EAAaD,EAAenF,MAAM,MACvBzmB,KAAK2rB,GAElB7N,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoBohC,EAAWS,EAAW7E,KAAK,QAnC/D,yBAAArW,EAAAxT,SAAAuT,OAjIwBnT,MAAAC,KAAA1B,WAsKxB8L,oBAAU,WACRimB,EAAcpkC,EAAMmZ,SACnB,CAACnZ,EAAMmZ,SAoBV,OACEjY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG8qB,IACCpgC,EAAAC,EAAAC,cAAC2hC,GAAA,EAAD,CACEC,MAAM,OACNC,QAASzB,GAGT0B,eAAgB,kBAAM3B,IAAe,IACrC4B,kBAAmB,kBAAMC,MAAM,SAC/BC,kBAAmB,kBAAMD,MAAM,WAGnCliC,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAChCH,EAAMwM,QAGXtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACrM,WAAS,EAACC,GAAI,EAAGmM,GAAI,EAAG9mB,WAAW,UACjD8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT8jB,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBAELyX,SAAUob,GAAkB,iBAC5B9yB,MAAM,iBAGV3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACR8W,QAAS,WA3JrBjX,EAAMib,SACJmZ,EAAYjZ,cAAgBiZ,EAAYjZ,cAAcoqB,cAAgB,KA2J5D7mC,MAAM,WAHR,YASJwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,WAClD,OAALpmB,QAAK,IAALA,OAAA,EAAAA,EAAOwlC,YACNtkC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEvW,UAAWQ,EAAQ2wB,OACnBlxB,QAAQ,YACR8W,QAAS,kBAAMjX,EAAMwlC,aACrB9mC,MAAM,WAJR,uBASDsB,EAAMylC,aACLvkC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEvW,UAAWQ,EAAQ2wB,OACnBlxB,QAAQ,YACR8W,QAAS,kBAjOvB,WACE,IAAIyuB,EAAUvB,EAAWzxB,OAAS,EAAIyxB,EAAW,GAAGwB,YAAc,EAAI,EACtEjB,GAAa1kC,EAAM4lC,OAASF,GAE5BrR,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,CACb+O,MAAOm1B,IACJrQ,GAFS,IAGZqB,QAAQ,KAOVd,GAAS,GACT2P,GAAY,GAkNejN,IACf34B,MAAM,WAELsB,EAAMylC,cAEP,OAIRvkC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAeZ7iB,EAAAC,EAAAC,cAACykC,GAAD,CACEte,QAASvnB,EAAMunB,QACf7mB,QAASA,EACT+wB,MAAOA,GACPE,QAASA,GACTC,cA5Gc,SAACjc,EAAOuc,GAGhC4D,GAFcnE,KAAYO,GAAsB,QAAVT,GAErB,OAAS,OAC1BwE,GAAW/D,MA0GHhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGkgB,EAAWl4B,IAAI,SAACsc,EAAKrE,GAAN,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC62B,EAAY5e,GAAb,OACjBhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACsB,WAAnBssB,EAAW3sB,IACVjV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACvC83B,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAO2Z,OACtBp0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA/MzC+Y,IACYyP,EAENc,OAAO,EAAG,GAClBb,EAAcD,IAEhBxP,GAAS,GACTN,EAAe,SACfe,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAwMX/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIJD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAnQzB4c,EAmQ2ChQ,EAlQ7Dic,GAAa,UACNjM,EAAU,OAEjBlE,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GACAmE,GAFS,IAGZ9C,QAAQ,UAEV6O,GAAY,GATd,IAAoB/L,IAoQUr3B,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAKND,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG2e,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACM,IAApB2a,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACE7E,UA5MZjB,EA4MmCwpB,EAAW3sB,IA5MrC,SAACR,GAC9B0e,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAO3D,EAAMiG,OAAOyD,aA4MtBA,QAAS+U,EAAY0O,EAAW3sB,KAChCzX,MAAM,UACNoE,KAAK,WACLwjB,WAAY,CACV5jB,aAAc,sBAGhB,KACiB,IAApBogC,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,WAC9BokC,EAAWU,cAEZ,KACgB,GAAnBV,EAAWxpB,KACVpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,iBACH6N,QACE6oB,EAAWQ,eACPtjC,EAAM0Y,QACJoqB,EAAWQ,gBAEbtjC,EAAM0Y,QAEZwB,OAAO,QACPC,WAAS,EACThO,MAAOioB,EAAY0O,EAAWS,YAC9BhpB,SAAUggB,GACRuI,EAAWS,YAEblpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAOigC,EAAWjgC,MAClB1C,QAAQ,iBAIZ,KACgB,GAAnB2iC,EAAWxpB,KACVpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACyiC,GAAA,SAAD,CACEC,OAAQ,WA1R1ClxB,QAAQyR,IAAI,sCA2RsB0f,UAAU,mBACVC,UAAW,SAAC7yB,EAAO8yB,GACZ9yB,GA/WnB,SAAAyC,EAAAC,EAAAuiB,GAAAqL,GAAA3tB,MAAAC,KAAA1B,WAgXgB6xB,CACED,EACAnB,EAAW3sB,IACX,UAORjV,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQwgB,gBACrBkT,EAAY0O,EAAW3sB,KACpBie,EAAY0O,EAAW3sB,KACpB6mB,MAAM,KACN/wB,IAAI,SAACsc,EAAKrE,GAAN,OACHhjB,EAAAC,EAAAC,cAAC0kC,GAAA,EAAD,CACEC,QAAQ,SACRhlB,aAAc,CACZjF,SAAU,MACVG,WAAY,SAEd+pB,aACE9kC,EAAAC,EAAAC,cAAC6kC,GAAA9kC,EAAD,CACExB,SAAS,QACTsX,QAAS,kBApT3D,SAAqB4qB,EAAWF,GAC9B,IAAIQ,EAAiB/N,EAAYuN,GAC7BuE,EAAY,GACC/D,EAAenF,MAAM,KAC3BvC,QAAQ,SAACC,GACdA,GAAWmH,GAEbqE,EAAU3vB,KAAKmkB,KAGnBrG,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoBohC,EAAWuE,EAAU3I,KAAK,QA2SV4I,CACE5d,EACAua,EAAW3sB,SAMnBjV,EAAAC,EAAAC,cAACuiC,GAAA,EAAD,CACE5gB,IAAI,aACJC,IAAKuF,EACLroB,UAAWQ,EAAQkjC,WAI3B,OAGN,KACgB,GAAnBd,EAAWxpB,KACVpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,iBAIH8N,OAAO,QACPC,WAAS,EACTF,QACE6oB,EAAWQ,eACPtjC,EAAM0Y,QACJoqB,EAAWQ,gBAEbtjC,EAAM0Y,QAEZ6B,SAAUggB,GACRuI,EAAWS,YAEbp3B,MAAOioB,EAAY0O,EAAWS,YAC9BlpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAOigC,EAAWjgC,MAClB1C,QAAQ,iBAIZ,KACgB,GAAnB2iC,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,IACAknB,EAAIua,EAAW3sB,MAEhB,KACgB,GAAnB2sB,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IACrCpoB,QAAQ,WACR0W,KAAK,QACLnY,MAAM,WAJR,QAQE,KACFokC,EAAWxpB,MAA2B,GAAnBwpB,EAAWxpB,KAU5B,KATFpY,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACP9N,GAAI02B,EAAW3sB,IACfrT,KAAMggC,EAAW3sB,IACjBhK,MAAOioB,EAAY0O,EAAW3sB,KAC9BoE,SAAUob,GAAkBmN,EAAW3sB,KACvCtT,MAAOigC,EAAWjgC,QAEZ,KAGZ3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAasB,GAAnBsgB,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IACrCpoB,QAAQ,WACR0W,KAAK,QACLnY,MAAM,WAJR,QAQE,KACiB,IAApBokC,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IACrCpoB,QAAQ,WACR0W,KAAK,QACLnY,MAAM,WAELokC,EAAWU,cAEZ,KAEiB,IAApBV,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACqiC,GAAA,EAAD,CAAaC,IAAK,GACfnb,EAAIua,EAAW3sB,KACZoS,EAAIua,EAAW3sB,KACZ6mB,MAAM,KACN/wB,IAAI,SAACsc,EAAKrE,GAAN,OACHhjB,EAAAC,EAAAC,cAACuiC,GAAA,EAAD,CACE5gB,IAAI,aACJC,IAAKuF,EACLtR,QAAS,kBA/UnDiuB,GA+UsE3c,QA9UtEgZ,IAAe,IA+U2BrhC,UAAWQ,EAAQkjC,UAGzB,KAAM,KAGV,KACiB,IAApBd,EAAWxpB,KACVpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACE1gB,MAAM,UACNoE,KAAK,WACLyX,SAAUob,GAAkBmN,EAAW3sB,KACvCkJ,QAASkJ,EAAIua,EAAW3sB,KACxBmQ,WAAY,CACV5jB,aAAc,sBAGhB,KACgB,GAAnBogC,EAAWxpB,MACO,GAAnBwpB,EAAWxpB,MACQ,GAAnBwpB,EAAWxpB,MACQ,GAAnBwpB,EAAWxpB,KACTpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACG,IACAknB,EAAIua,EAAW3sB,MAEhB,QAxab,IAACmD,SAybZpY,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,IAAK,IAAK,KACnCC,MAAO,CAAClpB,EAAMmZ,OAAOzG,QACrBiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA5bhB,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAUzB,IA2bX0B,oBAhZhB,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,SAoZD0M,GACClzB,EAAAC,EAAAC,cAACilC,GAAD,CACElF,QAAS/M,EACTqF,WAAYz5B,EAAMunB,QAClB/a,MAAOxM,EAAMwM,MACbkM,QAAS1Y,EAAM0Y,QACf0oB,QAAS9L,GACT7c,QAljBmB,WAC7B4b,EAAe,MACfiQ,GAAY,IAijBF9rB,KAAM6rB,EACNuB,OAAQnB,GACR6B,UAAW/B,gBCnzBzB,IAAMtlC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJI,SAAU,EACVH,QAAS,OACTvB,OAAQ,QAEV2oC,KAAM,CACJ3mC,SAAU,QACVyX,SAAU,QACV9Y,gBAAiBpB,EAAMwB,QAAQ6nC,WAAW/sB,MAC1C9C,YAAcxZ,EAAMI,QAAQ,GAC5BkpC,YAAW,aAAAxlC,OAAe9D,EAAMwB,QAAQq6B,aAGtC0N,GAAiB,CAAC,eAAe,YAAY,UAC3C7G,GAAqB,CAAC,WAAW,gBAAgB,cAE5C8G,GAAkBnL,YAAW,SAAAx7B,GACxBf,KACFi0B,cADd,IAGA7e,EAA0BJ,IAAMK,SAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACQ9C,GADRgD,EAAA,GAAAA,EAAA,GAC+BN,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAA8BjJ,IAAMK,SAAS,IAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAgB0e,GAAhBze,EAAA,GAAAA,EAAA,IACAE,EAAgCpJ,IAAMK,SAAS,IAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO4hB,EAAP3hB,EAAA,GAAiBspB,EAAjBtpB,EAAA,GAMA,IAAIupB,EAAU7mC,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GAbA,SAAA8J,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkBnD,SAAAC,IAAA,IAAA/F,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAE0BlB,EAAmB,eAAgB,GAAI,CAACs1B,QAAUA,IAF5E,OAEQh7B,EAFR0G,EAAAgB,KAGIqoB,EAAW/vB,EAASk7B,UAEpBH,EAAY/6B,EAASm7B,aALzB,wBAAAz0B,EAAAmB,SAAA9B,OAlBmDkC,MAAAC,KAAA1B,WA4BjD,OAHA4B,IAAMkK,UAAU,YAzBiC,WAAA2oB,EAAAhzB,MAAAC,KAAA1B,WA0B/C40B,IACC,IAED/lC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAO1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI4Z,GAAI,IACzC5+B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG4Z,GAAI,GAC/B5+B,EAAAC,EAAAC,cAAC8lC,GAAD,CAASjI,SAAWA,MAKnByH,GAAez6B,IAAI,SAACslB,EAAMrN,GAAP,OACpBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC9B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAaC,GAAIL,GAAmB3b,GAAO,IAAI2iB,GAChF3lC,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAEfjmB,UAAU,SACPgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAC+6B,UAAW,SAAS59B,UAAU,GAAImF,UAAU,KAAKxC,QAAQ,MAC1EoxB,YCpHPtyB,ICTY/B,YAAW,iBAAO,CAClCgC,KAAM,MCgBUhC,YAAW,iBAAO,CAClCgC,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,SFdI1C,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,IAEzBgpC,KAAM,CACJ/oC,UAAWL,EAAMI,QAAQ,IAE3By7B,QAAS,CACPz6B,gBAAiBiD,IAAOC,KAAK,MAE/B8V,QAAS,CACP/Z,UAAWL,EAAMI,QAAQ,QAGvBmpC,GAAiB,CAAC,mBAAmB,aAAa,eAAgB,YAAY,gBAAgB,iBAAiB,cAAc,aAAa,SAAS,SAAS,UAAU,UAAU,gBACtL,mBAAmB,iBAAiB,mBAAmB,oBAAoB,kBAAkB,iBAAiB,SAAS,gBAAgB,eACvI,SAAS,iBAAiB,iBAAiB,iBAAiB,iBAAiB,eAAe,iBAAiB,qBAAqB,uBAC1H7G,GAAqB,CAAC,mBAAmB,aAAa,eAAgB,iBAAiB,eAAe,iBAAiB,cAAc,mBAAmB,eAAe,eAAe,UAAU,UAAU,WAAW,kBAAkB,gBAAgB,iBAC7P,mBAAmB,iBAAiB,gBAAgB,eAAe,oBAAoB,oBAAoB,UAAU,cAAc,WAAW,cAAc,gBAAgB,cAAc,QAAQ,kBAAkB,0BAE7KrE,YAAW,SAAAx7B,GAElD,IAAQmnC,EAAmBnnC,EAAnBmnC,MAERC,GAF2BpnC,EAAZy7B,QACCx8B,KACIkoC,EAAMr1B,QAAdu1B,GAAZD,EAAQh7B,GAARg7B,EAAYC,KAoBZ,MAda,CACX,CAAEl7B,MAAO,UAAWtJ,MAAO,WAC3B,CAAEsJ,MAAO,WAAYtJ,MAAO,YAC5B,CAAEsJ,MAAO,OAAQtJ,MAAO,SAOhBykC,KAAK,SAAAC,GAAC,OAAIA,EAAEp7B,QAAUk7B,IAK9BnmC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAE1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GACtC2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,cAKPumC,GAAez6B,IAAI,SAACslB,EAAMrN,GAAP,OACpBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC9B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAIL,GAAmB3b,IACpEhjB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EACfjmB,UAAU,SACPgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAC+6B,UAAW,SAAS59B,UAAU,GAAImF,UAAU,KAAKxC,QAAQ,MAC1EoxB,wHG3DAiW,GAAQ,SAAAxnC,GACnB,IAAAynC,EAOIznC,EANF0nC,gBADF,IAAAD,KAEEE,EAKE3nC,EALF2nC,QACAC,EAIE5nC,EAJF4nC,UACAC,EAGE7nC,EAHF6nC,UACA/G,EAEE9gC,EAFF8gC,WACGxgC,EANLC,OAAAC,EAAA,EAAAD,CAOIP,EAPJ8nC,IAmCA,OACE5mC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,CACUglB,WAAY,CAAEqhB,UAASC,YAAWC,aAE1CxnC,MAAO,CAAEhD,MAAO,QAChByjC,WAAYA,EACZiH,WAbiB,SAAApsB,GACjB+rB,IACI/rB,EAAEqsB,OAAS,IAAMrsB,EAAEqsB,OAAS,IAAKrsB,EAAEhC,oBAvBxB,CACnBO,OAAQ,QACR/Z,QAAS,WACT8nC,cAAe,CACbC,aAAc,WACdroC,WAAY,SACZgzB,SAAU,SACVx1B,MAAO,OACPqB,MAAO,OAGTypC,MAAS,CACPC,iBAAkB,CAChBF,aAAc,sBACdxpC,MAAO,SAsBH4B,MCrDN+nC,2KAGJ,WACA,OACEnnC,EAAAC,EAAAC,cAACknC,GAAA,EAAD,CAAWpoC,UAAU,OAAOyC,UAAU,QACtCzB,EAAAC,EAAAC,cAACmnC,GAAD,cANqBt0B,IAAMu0B,YAalBC,GAAYjN,YAAW6M,8BCZ9BppC,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,MA0FO4+B,GAvFA,SAAA99B,GACb,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B0oC,IACA/zB,EAA8CL,oBAAS,GAAvDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE0CN,mBAAS,KAAnDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAiBMrU,GAjBNsU,EAAA,GAAAA,EAAA,GAiBgB/V,MAEhB,OACEiC,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEza,WAAW,WACX0a,WAAS,EACTkkB,QAAQ,gBACRzgC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EACP1a,WAAW,aAChBsb,MAAI,EAAGX,GAAI,EAAGxc,QAAS,IA0B1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACVxZ,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAI,iCCpE3C,SAASyI,GAAkB3oC,GAExC,IAGMke,EAAc,WAClBle,EAAM01B,YAER,OACEx0B,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAM4oC,OACZnwB,QAASyF,EACT/D,WAAW,EACX9C,SAAU,KACVyH,kBAAgB,qBAChBC,mBAAiB,4BAEjB7d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,sBAAsBpM,EAAMwM,OAC5CtL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,CAAe4pB,UAAQ,GACrB3nC,EAAAC,EAAAC,cAAC0nC,GAAA,EAAD,CAAmB18B,GAAG,4BACnBpM,EAAM6oB,QADT,mCAKF3nB,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,EAAaxf,MAAM,WAApC,UAGAwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QA5BC,WACfjX,EAAM+oC,UAAU/oC,EAAMiR,KAAMjR,EAAMw1B,UA2BDr1B,QAAS,YAAazB,MAAM,UAAU2nB,WAAS,GACzErmB,EAAMgpC,mECEX/pC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CAEN7c,UAAW,QAEZjJ,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAIy7B,EAAUvI,cAENhzB,EAA+BF,EAA/BE,UAAsBI,GAASN,EAApBkxB,OAAnB3wB,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCipC,KACA50B,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO8e,EAAP5e,EAAA,GAAiB6e,EAAjB7e,EAAA,GACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAIAE,GAJAD,EAAA,GAAAA,EAAA,GAI2CrJ,IAAMK,UAAS,IAA1DkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2rB,EAAP1rB,EAAA,GAAsB2rB,EAAtB3rB,EAAA,GAGAG,EAAqC1J,IAAMK,SAAS,IAApDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAEMjd,GAFNkd,EAAA,GAAAA,EAAA,GAEgB3e,MAChBu0B,EAAgCvf,IAAMK,SAAS,IAA/Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO4V,EAAP3V,EAAA,GAEA9e,GAFA8e,EAAA,GAE4Cnf,mBAAS,KAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GApBuB,SA6BT+zB,EA7BS11B,EAAAC,GAAA,OAAA01B,EAAAx1B,MAAAC,KAAA1B,WAAA,SAAAi3B,IAAA,OAAAA,EAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA6BxB,SAAAC,EAA4B23B,EAAY/T,GAAxC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEOkT,EAAW,CACb6jB,UAAUJ,GAHf72B,EAAAE,KAAA,EAKSzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAAS/hC,GAAmBge,cAAYtH,KAAK,SAAAC,GAE7D,OAANA,GACDkX,MAGD/W,MAAM,SAAAC,MAXZ,OAcGyqB,GAAkB,GAdrB,wBAAA52B,EAAAmB,SAAA9B,OA7BwBkC,MAAAC,KAAA1B,WAkEvB,IAGMs3B,EAAyB,WAC7BR,GAAkB,IAtEG,SAgFRE,EAhFQjT,EAAAC,GAAA,OAAAuT,EAAA91B,MAAAC,KAAA1B,WAAA,SAAAu3B,IAAA,OAAAA,EAAArpC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgFvB,SAAA6T,EAA4B+jB,EAAY/T,GAAxC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAGMkT,EAAW,CACb6jB,UAAUJ,GAJd1jB,EAAAjT,KAAA,EAMQzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAAS/hC,GAAmBge,cAAYtH,KAAK,SAAAC,GAE7D,OAANA,GACDkX,MAGD/W,MAAM,SAAAC,MAZX,OAeEyqB,GAAkB,GAfpB,wBAAAzjB,EAAAhS,SAAA8R,OAhFuB1R,MAAAC,KAAA1B,WAkGvB,SAASw3B,EAAal0B,EAAMm0B,EAAWtU,IAlGhB,SAAAc,EAAAC,EAAAC,GAAAuT,EAAAj2B,MAAAC,KAAA1B,WAoGrB23B,CAAmBF,EAAUn0B,EAAMiG,OAAOyD,QAASmW,GApG9B,SAAAuU,IAAA,OAAAA,EAAAxpC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuGvB,SAAAoU,EAAkC3Z,EAAGkf,EAASkK,GAA9C,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cACMkT,EAAW,CACbskB,WAAW79B,EACX2Y,SAASuG,GAHbrF,EAAAxT,KAAA,EAKQzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAASriC,GAAmBse,cAAYtH,KAAK,SAAAC,GAE7D,OAANA,GACDkX,MAED/W,MAAM7L,QAAQzB,OAVnB,wBAAA8U,EAAAvS,SAAAqS,OAvGuBjS,MAAAC,KAAA1B,WAqHX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAOxM,EAAMwM,MACbyoB,OACE/zB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAI,iBAClDh/B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACA/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,kBAAIjX,EAAMk+B,UAHnB,cAUJh9B,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMkqC,aAAaj+B,IAAI,SAACsc,EAAKrE,GAAN,OAClBhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAY+F,OAKtBrnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOrF,GACPkxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKk5B,iBAAiB1S,aACzD9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACNtV,EAAAC,EAAAC,cAACunC,GAAD,CACGn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT5X,KAAMm4B,EACN5T,QAASA,EACTuT,UAAWM,EACX3T,SAAUiU,EACVf,OAAQM,IACXj4B,EAAKk5B,iBAAiBn+B,MAAMsc,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,EAAKrE,GAAN,OAE5FhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAECtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI8hB,cAE3BnpC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI4S,WAAWoC,KAAK,QAEnCr8B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAA4B,GAApBI,EAAI+hB,aAAoB/hB,EAAIgiB,cAAc,IAAMhiB,EAAIgiB,eAE7ErpC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIiiB,sBAAwBjiB,EAAIiiB,sBAAwB,IAGjFtpC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,IAAyBjnB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACnBrc,OAAO0lB,EAAIxD,SAAW,IAEtB5F,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CAAQC,QAASkJ,EAAIxD,SAAW5Y,MAAM,WACtCoO,SAAU,SAAC5E,GAAD,OAAWk0B,EAAal0B,EAAM4S,EAAInc,GAAGopB,SAQjEt0B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAU9nB,MAAS,CAAChD,MAAO,KAC1C6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OArK/BvP,EAqKmDmc,EAAInc,QAlK5EqvB,EAAQllB,KAAR,gBAAAtV,OAA6BmL,IAH9B,IAAsBA,IAqK4DlL,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,aAUvDD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOiK,EACPhK,aAxKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAwKA4B,oBAnKsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QAmKpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGK+B,8DAAWmL,IC9SpBn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAGzBmtC,GAAU,CACZ,OACA,aACA,iBACA,qBACA,SACA,WAEWC,GAAenP,YAAW,SAAAx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOqgB,EAAPngB,EAAA,GAAcogB,EAAdpgB,EAAA,GACAI,EAAoCL,mBAAS,IAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+hB,EAAP9hB,EAAA,GAAmBkqB,EAAnBlqB,EAAA,GACMlU,EAAUzB,KAOhB,SAAS2rC,IAGPjW,GAAS,GAOX,OACEzzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAGNtL,EAAAC,EAAAC,cAACypC,GAAD,CAAS5vB,SArBX,SAAqBE,GAEnB2jB,EAAc3jB,IAmBkB+iB,MAAO0M,IACvC1pC,EAAAC,EAAAC,cAAC0pC,GAAD,CACAt+B,MAAO,gBACJtM,UAAWQ,EAAQ46B,QACnB4O,aAAcQ,GACfhU,WAAYA,EACZwH,MAAO0M,EACPlW,MAAOA,EACPgB,SApBJ,WAEEf,GAAS,oBC7BP11B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBwtC,GAAiBvP,YAAW,SAAAx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARgD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAYhD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,iBAAkB,GAAI4qB,GAHjE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAZgDkC,MAAAC,KAAA1B,WAAA,SAkBjC40B,IAlBiC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkBhD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO/G,MAIhCsO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKvB,yBAAyB1D,OACxDm/B,EAAe/lB,EAAWnU,KAAKvB,yBAAyB1D,SAEzDyS,MAAM7L,QAAQzB,OAhBnB,wBAAA+V,EAAAxT,SAAAuT,OAlBgDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAoDhD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OApDgD1R,MAAAC,KAAA1B,WA2DhD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,mBAAoBi5B,aAAa,UAAUZ,SA1ExB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YA0E6C4I,SA1E7C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YA0E+DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBC/E1IjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBkuC,GAAkBjQ,YAAW,SAAAx7B,GACxC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAA0CjJ,IAAMK,SAAS,IAAzD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOwuB,EAAPvuB,EAAA,GAAsBwuB,EAAtBxuB,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,CAC/Cs3B,WAAa,GACbC,cAAgB,KAFlBvuB,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOyuB,EAAPxuB,EAAA,GAAkByuB,EAAlBzuB,EAAA,GAIAC,EAA0CtJ,IAAMK,SAAS,IAAzDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOyuB,EAAPxuB,EAAA,GAAsByuB,EAAtBzuB,EAAA,GACAG,EAAwC1J,IAAMK,SAAS,IAAvDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOuuB,EAAPtuB,EAAA,GAAqBuuB,EAArBvuB,EAAA,GACA4V,EAAsDvf,IAAMK,SAAS,IAArEmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO4Y,EAAP3Y,EAAA,GAA4B4Y,EAA5B5Y,EAAA,GACAC,EAAwCzf,IAAMK,SAAS,IAAvDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAO4Y,EAAP3Y,EAAA,GAAqB4Y,EAArB5Y,EAAA,GACAE,EAAkC5f,IAAMK,SAAS,IAAjDwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAO2Y,EAAP1Y,EAAA,GAAkB2Y,EAAlB3Y,EAAA,GAEAE,EAA8C/f,IAAMK,SAAS,IAA7D2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAAO0Y,EAAPzY,EAAA,GAAwB0Y,EAAxB1Y,EAAA,GACAC,EAAkCjgB,IAAMK,SAAS,IAAjD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAO9jB,EAAP+jB,EAAA,GAAkByY,EAAlBzY,EAAA,GAEAG,EAA4CrgB,IAAMK,SAAS,IAA3DigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOuY,EAAPtY,EAAA,GAAuBuY,GAAvBvY,EAAA,GAEAC,GAAkDvgB,IAAMK,UAAS,GAAjEmgB,GAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,GAAA,GAAOuY,GAAPtY,GAAA,GAA0BuY,GAA1BvY,GAAA,GAEM/zB,GAAUzB,KAEhB21B,GAAsC3gB,IAAMK,SAAS,IAArDugB,GAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,GAAA,GAAAC,GAAA,GAAAA,GAAA,GAxBiD,SAAAoY,KAAA,OAAAA,GAAA1sC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA0BjD,SAAAC,IAAA,IAAAs7B,EAAA,OAAAx7B,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEMy6B,EAAc,CAChBC,WAAajB,EACbkB,cAAgBhB,EAChB/7B,QAAUq8B,EACVthB,MAAQkhB,EACRE,UAAYA,GAPhBj6B,EAAAE,KAAA,EASyBlB,EAAmB,yBAA0B,GAAI27B,GAT1E,OAAA36B,EAAAgB,KAUG6vB,MAAM,8BAVT,wBAAA7wB,EAAAmB,SAAA9B,OA1BiDkC,MAAAC,KAAA1B,WAAA,SAAAy0B,KAAA,OAAAA,GAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgFjD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOhH,MAGhCuO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IAKI/U,EAAU,GACdA,EAAQkG,KANM,CACZzT,KAAQ,cACRsJ,GAAM,MACNG,UAAa,QAKfqgC,EAAaxnB,EAAWnU,KAAKvE,mBAAmBV,OAChD8gC,GAAkB1nB,EAAWnU,KAAKxC,wBAAwBzC,OAC1DoZ,EAAWnU,KAAKnE,iBAAiBd,MAAMyuB,QAAQ,SAAA4S,GAC7Ch9B,EAAQkG,KAAK82B,GACbX,EAAgBn2B,KAAK82B,EAAU9gC,aAEhCo/B,EAAiBt7B,KAEnBoO,MAAM7L,QAAQzB,OA5BnB,wBAAA+V,EAAAxT,SAAAuT,OAhFiDnT,MAAAC,KAAA1B,WA8GjD8L,oBAAU,YA9GuC,WAAA2oB,GAAAhzB,MAAAC,KAAA1B,WA+G/C40B,IACC,IACH,IAAM1M,GAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GAE1C,IAAImhC,EAAW,GACfnhC,EAAMsuB,QAAQ,SAAAC,GACW,OAArBA,EAAQnuB,WAETm/B,EAAcjR,QAAQ,SAAAC,GACpB4S,EAAS/2B,KAAKmkB,EAAQnuB,aAExBogC,EAAmBW,KAEnBA,EAAS/2B,KAAKmkB,EAAQnuB,WACtBogC,EAAmBW,QAiCjB3X,GAAoB,SAAArc,GAAI,OAAI,SAAA3D,GAGjC,GAAyB,SAAtB22B,EAAaxpC,UAGf,CACE,IAAIyqC,EAAmB,GACvBA,EAAiBvB,EAAcz/B,WAAaoJ,EAAMiG,OAAOzP,MAC7C,eAATmN,GAED6yB,EAAgBoB,GAGN,kBAATj0B,GAED+yB,EAAuBkB,GAI3BxB,EAAaxrC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAIurC,GAAL,GAAAvrC,OAAAM,EAAA,EAAAN,CAAA,GAAgB+Y,EAAO3D,EAAMiG,OAAOzP,WAU5CqhC,GAA2B,SAAAl0B,GAAI,OAAI,SAAA3D,GAKvC02B,EAAuB9rC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI6rC,GAAL,GAAA7rC,OAAAM,EAAA,EAAAN,CAAA,GAA0B+Y,EAAM3D,EAAMiG,OAAOzP,WAyCrE,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,GAAQxB,KACnBsN,MAAM,0BAELtL,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,GAAQxB,KAAMiB,QAAQ,YACtCe,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACIx9B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACf5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAAC6N,KAAG,EAACnpB,WAAW,UACpC8B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,iBACH6N,QAAS7J,EACT8J,OAAO,QACPC,WAAS,EACTszB,kBAAkB,EACnBthC,MAAOmgC,EACL/xB,SAtHiB,SAAC5E,EAAOxJ,GAGrCA,GAEoB,MAApBA,EAAMI,UAEPygC,IAAqB,GAGrBA,IAAqB,GAEpB/7B,GAAK9E,EAAMrJ,OAEZmpC,EAAiBh7B,GAAK9E,EAAMrJ,QAK9BkqC,IAAqB,GAGrBT,EAAgBpgC,IAiGFkO,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBzR,MAAO,CAAChD,MAAM,KAAM6c,OAAO,QAAQrX,MAAO,WAAY1C,QAAQ,iBAOtHe,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACkBta,QAAQ,WACR+Z,OAAO,QACP7Z,MAAO,CAAC3C,WAAY,IACpBugC,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAO2/B,EAAUF,WAChBrxB,SAAUob,GAAkB,cAC7B9yB,MAAM,eAElB3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,iBACH6N,QAAShJ,GAAKu7B,UACdtyB,OAAO,QACPC,WAAS,EACT9Z,MAAO,CAAC3C,WAAY,IACrByO,MAAOqgC,EACNjyB,SApJc,SAAC5E,EAAOxJ,GACpCsgC,EAAatgC,IAoJCkO,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC2X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBzR,MAAO,CAAChD,MAAM,KAAM6c,OAAO,QAAQrX,MAAO,qBAAsB1C,QAAQ,iBAE1He,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACYta,QAAQ,WACR+Z,OAAO,QACP7Z,MAAO,CAAC3C,WAAY,IACpBugC,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAO2/B,EAAUD,cAChBtxB,SAAUob,GAAkB,iBAC7B9yB,MAAM,kBAGpBmpC,EAAclpC,KAAQ5B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CAClB5N,GAAG,iBACH6N,QAAS4yB,EACT3yB,OAAO,QACPC,WAAS,EACTzD,UAAQ,EACRrW,MAAO,CAAC3C,WAAY,GAAIL,MAAM,KAC9B8O,MAAO6/B,EACNzxB,SAAUggB,KACXlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAwBoI,OAAO,QAAQrX,MAAO,SAA4BxC,MAAO,CAAEhD,MAAM,KAClH8C,QAAQ,iBACJ,KACgB,QAArBmsC,EAAaxpC,KACd5B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY0W,KAAK,QAAQI,QAjHvD,WAEE,GAAyB,SAAtBq1B,EAAaxpC,KAChB,CACwB61B,WAArB,IACE+U,EAAY,GACZH,EAAmB,GACxBt8B,GAAK08B,WAAWlT,QAAQ,SAAAC,GACtB,IAAIkT,EAAe9B,EAAUD,cACP,GAAnBW,EAAUrgC,QAEXyhC,EAAeC,WAAW/B,EAAUF,YAAciC,WAAW/B,EAAUF,YAAcE,EAAUD,cAAc,OAG/G,IAAIiC,EAAapT,EAAQnuB,UAAYy/B,EAAcz/B,UAE/CwhC,EAAgBD,EAAWhC,EAAUF,WACrCoC,EAAuBF,EAAWF,EACtCL,EAAiB7S,EAAQnuB,WAAayhC,EAEtCN,EAAUhT,EAAQnuB,WAAawhC,IAEjC1B,EAAuBkB,GACvBpB,EAAgBuB,OACX,CACH,IAAIA,EAAY,GACZH,EAAmB,GACvBA,EAAiBvB,EAAcz/B,WAAau/B,EAAUD,cAEtD6B,EAAU1B,EAAcz/B,WAAau/B,EAAUF,WAC/CS,EAAuBkB,GACvBpB,EAAgBuB,GAIjBV,IAAqB,IA8EsD3sC,MAAO,CAAC3C,WAAY,IAAMgB,MAAM,WAAhG,aAEW,MAEhBquC,GACD7rC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACCu2B,IAAiD,MAA3BT,EAAa//B,UAAoBrL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACvDvF,GAAK08B,WAAW1hC,IAAI,SAACgiC,EAAY/pB,GAAb,OAEpBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAAC6N,KAAG,EAACnpB,WAAW,UAEnC8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,GAAQ8L,MAAOnM,MAAO,CAACsW,YAAa,IAAKjY,MAAM,iBAAtE,aACcuvC,EAAWnrC,MAGpB5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIta,QAAQ,WACR+Z,OAAO,QACP+jB,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAO+/B,EAAa+B,EAAW1hC,WAC9BgO,UAtJMjB,EAsJsB20B,EAAW1hC,UAtJzB,SAAAoJ,GAIhCw2B,EAAgB5rC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI2rC,GAAL,GAAA3rC,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAM3D,EAAMiG,OAAOzP,WAmJpCtJ,MAAM,UAEP3B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACCta,QAAQ,WACR+Z,OAAO,QACP+jB,aAAa,MACb59B,MAAO,CAAC3C,WAAY,IAEpB0O,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOigC,EAAoB6B,EAAW1hC,WACrCgO,SAAUizB,GAAyBS,EAAW1hC,WAC/C1J,MAAM,WAnKC,IAAAyW,IAsIsC,KAgChD,KACRpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG4Z,GAAI,GAC9B5+B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,iBACH6N,QAASyxB,EACPxQ,UAAQ,EAET3gB,SAAUggB,KACXlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAwBoI,OAAO,QAAQC,WAAS,EAACtX,MAAO,UAAW1C,QAAQ,mBAGtG,MAGPe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GAEVxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAa0W,KAAK,QAAQI,QA3WA,kBAAAg2B,GAAAn5B,MAAAC,KAAA1B,YA2WsBhS,MAAO,CAAC7C,UAAW,IAAOkB,MAAM,WAAhG,kGCvYLwvC,GAAiBhrC,aAAHirC,QAAA5tC,OAAA6C,GAAA,EAAA7C,CAAA,6KAUd6tC,GAAiBlrC,aAAHmrC,QAAA9tC,OAAA6C,GAAA,EAAA7C,CAAA,0MAUd+tC,GAAiBprC,aAAHqrC,QAAAhuC,OAAA6C,GAAA,EAAA7C,CAAA,4HAQdiuC,GAAmBtrC,aAAHurC,QAAAluC,OAAA6C,GAAA,EAAA7C,CAAA,yJAUhBmuC,GAAmBxrC,aAAHyrC,QAAApuC,OAAA6C,GAAA,EAAA7C,CAAA,sLAUhBquC,GAAmB1rC,aAAH2rC,QAAAtuC,OAAA6C,GAAA,EAAA7C,CAAA,uIAUhBuuC,GAAmB5rC,aAAH6rC,QAAAxuC,OAAA6C,GAAA,EAAA7C,CAAA,yJAUhByuC,GAAmB9rC,aAAH+rC,QAAA1uC,OAAA6C,GAAA,EAAA7C,CAAA,uLAUhB2uC,GAAmBhsC,aAAHisC,QAAA5uC,OAAA6C,GAAA,EAAA7C,CAAA,wIAUhB6uC,GAAelsC,aAAHmsC,QAAA9uC,OAAA6C,GAAA,EAAA7C,CAAA,sgBA6BZ+uC,GAA0BpsC,aAAHqsC,QAAAhvC,OAAA6C,GAAA,EAAA7C,CAAA,ovBAuCvBivC,GAA0BtsC,aAAHusC,QAAAlvC,OAAA6C,GAAA,EAAA7C,CAAA,82BAsCrBmvC,GAA0BxsC,aAAHysC,QAAApvC,OAAA6C,GAAA,EAAA7C,CAAA,+OAYvBqvC,GAA0B1sC,aAAH2sC,QAAAtvC,OAAA6C,GAAA,EAAA7C,CAAA,6MC7LvBtB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,MAE5BsuC,WAAY,CACVh4B,aAAc5a,EAAMI,QAAQ,OAmEjByyC,GA/DM,SAAChwC,GACpB,IAAMU,EAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAMwY,KACZC,QAASzY,EAAMyY,QACfqG,kBAAiB,iBAEjB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAaixB,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAChDgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,GAAAc,OAA6BjB,EAAMsZ,KAAnC,aACCtZ,EAAMyY,QACLvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,QACXxC,UAAWQ,EAAQovC,YACnB74B,QAASjX,EAAMyY,SAEfvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,MAEND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,CAAe/e,UAAWQ,EAAQxB,MAChB,WAAfc,EAAMsZ,MACLpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQqvC,WACnBltC,MAAO,UACPC,KAAK,UACLqX,WAAS,EACTha,QAAQ,WACRgM,MAAOnM,EAAM0a,KAAKy1B,QAClB51B,SAAUva,EAAMowC,WAElBlvC,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACEtwC,UAAWQ,EAAQqvC,WACnBltC,MAAO,OACPC,KAAK,OACLqX,WAAS,EACTs2B,aAAa,WACbtkC,MAAOnM,EAAM0a,KAAK+J,KAClBlK,SAAU,SAACrO,EAAGC,GAAJ,OAAcnM,EAAMowC,SAASjkC,EAAO,SAC9CmX,OAAQ,iBAKA,WAAftjB,EAAMsZ,MACLpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,wDAKJH,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAepf,UAAWQ,EAAQxB,MAChCgC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAM0wC,WAAYhyC,MAAM,UAAUyB,QAAQ,aAA3D,GAAAc,OACqB,WAAfjB,EAAMsZ,KAAoB,OAAS,WAEzCpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAMyY,SAAvB,gECvDFxZ,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B4qC,MAAO,CACLhpC,QAAS,WAIAwxC,GAAiB,SAAC3wC,GAAU,IAAA4wC,EAAAC,EAAAC,EAAAC,EACjCrwC,EAAUzB,KAChBoV,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GAUAsiB,EAAyDC,aACvDj3B,GACA,CACEkd,UAAW,CAAEqrB,MAAOrpB,EAAauP,OAAQzP,EAAOE,KAH5CzW,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAME,EAAvBsuB,EAAuBtuB,MAAOqkB,EAA9BiK,EAA8BjK,QAASyb,EAAvCxR,EAAuCwR,cAMvC5zB,EAAwBpJ,IAAMK,UAAS,GAAvCgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO7E,EAAP8E,EAAA,GAAaL,EAAbK,EAAA,GACAC,EAAwBtJ,IAAMK,WAA9BkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOjE,EAAPkE,EAAA,GAAa0zB,EAAb1zB,EAAA,GACAG,EAAwB1J,IAAMK,SAAS,CAAE67B,QAAS,GAAI1rB,KAAM,OAA5D7G,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOjD,EAAPkD,EAAA,GAAauzB,EAAbvzB,EAAA,GAcMG,EAASC,eAETC,EAAQhK,IAAMwB,WAAW8G,IAEzB9D,EAAU,WACdwE,GAAQ,GACRi0B,EAAQ,MACRC,EAAQ,CAAEhB,QAAS,GAAI1rB,KAAM,QA6H/B,OACEvjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,mBAEAe,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,OACPlxC,UAAWQ,EAAQynC,MACnB/7B,GAAG,mBACHkN,KAAK,OACLiB,SAAU,SAAC5E,GACT,IAAM07B,EAAQ17B,EAAMiG,OAAOy1B,MACvBA,GA5CO,SAACzO,GACpB,IAAI0O,EAAe,IAAIC,SACvBD,EAAaE,IAAI,OAAQ5O,GAEzBF,KACG+O,KAAK/vC,EAAU,eAAgB4vC,GAC/BjzB,KAAK,SAACC,GACDA,IACFL,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,iCAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAyBDk1B,CAAaL,EAAM,OAIzBnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,oBACbzwC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNgE,aAAW,iBACXC,UAAU,QAEVzB,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,mBACbtL,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,SAKND,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACP,IAAI9V,EAAI2wC,SAAS1wC,cAAc,KAC/BD,EAAEyB,KAAO,uBACTzB,EAAE4wC,aAAa,WAAY,gBAC3B5wC,EAAE6wC,UAGJ9wC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,wBACbtL,EAAAC,EAAAC,cAAC6wC,GAAA9wC,EAAD,QAIJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACPgG,GAAQ,GACRi0B,EAAQ,SAGVhwC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,eACbtL,EAAAC,EAAAC,cAAC8wC,GAAA/wC,EAAD,SAIND,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,WACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,QACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,cACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,mBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,MACI/S,GAAWkhC,KAAc5c,UAAYyb,IACrC/vC,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,SAAU7qB,QAAQ,QAC9C4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,GACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAML4P,GAAkD,IAAtC,OAAJA,QAAI,IAAJA,OAAA,UAAA2/B,EAAA3/B,EAAMshC,0BAAN,IAAA3B,OAAA,EAAAA,EAA0B5kC,MAAM0G,SACvCxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,6BAIL4P,IACK,OAAJA,QAAI,IAAJA,OAAA,UAAA4/B,EAAA5/B,EAAMshC,0BAAN,IAAA1B,OAAA,EAAAA,EAA0B7kC,MAAM0G,QAAS,IAD1C,OAECzB,QAFD,IAECA,OAFD,UAAA6/B,EAEC7/B,EAAMshC,0BAFP,IAAAzB,OAAA,EAECA,EAA0B9kC,MAAMC,IAAI,SAACyO,GAAD,OAClCxZ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAKy1B,SAERjvC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK+J,KAAM,cAAcnB,OAAO,gBAE1CpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK4d,WAAWhV,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK83B,WAAWlvB,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QAClC4D,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,QACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,QACbtL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,UACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,UACbtL,EAAAC,EAAAC,cAACqxC,GAAAtxC,EAAD,cAOdD,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEqpB,QAAS,EACTlqB,MAAO,QACPc,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,MAAK,OAAEjY,QAAF,IAAEA,OAAF,UAAA8/B,EAAE9/B,EAAMshC,0BAAR,IAAAxB,OAAA,EAAEA,EAA0BtZ,WACjC9P,YAAaA,EACbF,KAAMA,EACN0B,aA1TS,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IA0TMC,oBAvTgB,SAAC1T,GAC/BiS,GAAgBjS,EAAMiG,OAAOzP,OAC7Bub,EAAQ,WA4TNxmB,EAAAC,EAAAC,cAACsxC,GAAD,CACEl6B,KAAMA,EACNc,KAAMA,EACNoB,KAAMA,EACN01B,SApTW,SAACz6B,EAAO2D,GACvB,IAAIxW,EAAMqJ,EACE,QAARmN,GACFxW,EAAOwW,EACPnN,EAAQwJ,IAER7S,EAAO6S,EAAMiG,OAAO9Y,KACpBqJ,EAAQwJ,EAAMiG,OAAOzP,OAEvBglC,EAAQ5wC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKma,GAAN,GAAAna,OAAAM,EAAA,EAAAN,CAAA,GAAauC,EAAOqJ,MA4SvBukC,WA/Ra,WACjB,GAAY,QAARp3B,EAAgB,CAClB,IAAIlN,EAAKsO,EAAKtO,UACPsO,EAAKtO,UACLsO,EAAK4d,iBACL5d,EAAK83B,iBACL93B,EAAKi4B,WACZj4B,EAAI,UAAgB,IAAI8J,KACxBzG,EACG0rB,OAAO,CACNC,SAAU0E,GACVzoB,UAAW,CACTvZ,KACAsO,UAGH2D,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAID,OAARlD,GACFyE,EACG0rB,OAAO,CACNC,SAAUwE,GACVvoB,UAAW,CACTjL,OACA4d,UAAW,IAAI9T,KACfguB,UAAW,IAAIhuB,QAGlBnG,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,wBAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAID,UAARlD,IACElN,EAAKsO,EAAKtO,GACd2R,EACG0rB,OAAO,CACNC,SAAU4E,GACV3oB,UAAW,CACTvZ,QAGHiS,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4BAqMT/D,QAASA,iBC3WXxZ,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,MAE5BsuC,WAAY,CACVh4B,aAAc5a,EAAMI,QAAQ,OAmHjBq1C,GA/GQ,SAAC5yC,GAAU,IAAA6yC,EAC1BnyC,EAAUzB,KAChBwgC,EAA0BC,aAAS/2B,IAA3BuI,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAEX8M,EAASC,eACf3J,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOlD,EAAPoD,EAAA,GAAcu+B,EAAdv+B,EAAA,GAiBA,OACErT,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAMwY,KACZC,QAASzY,EAAMyY,QACfqG,kBAAiB,iBAEjB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAaixB,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAChDgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,GAAAc,OAA6BjB,EAAMsZ,KAAnC,eACCtZ,EAAMyY,QACLvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,QACXxC,UAAWQ,EAAQovC,YACnB74B,QAASjX,EAAMyY,SAEfvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,MAEND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,CAAe/e,UAAWQ,EAAQxB,MAChB,WAAfc,EAAMsZ,MACLpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQqvC,WACnBgD,UAAQ,EACRlwC,MAAO,SACPC,KAAK,eACLqX,WAAS,EACTha,QAAQ,WACRgM,MAAOnM,EAAM0a,KAAKs4B,aAClBz4B,SAAUva,EAAMowC,SAChBj/B,MAAO8hC,QAAQ9hC,GACf2vB,WAAY3vB,EACZ+hC,OAAQ,kBA/CUF,EA+CiBhzC,EAAM0a,KAAKs4B,kBA9CxDj1B,EACG0rB,OAAO,CACNC,SAAU3gC,GACV4c,UAAW,CAAEqtB,kBAEd30B,KAAK,SAACC,GAAQ,IAAA60B,EAAAC,EAAAC,EACsC,KAA5C,OAAH/0B,QAAG,IAAHA,OAAA,UAAA60B,EAAA70B,EAAKrN,YAAL,IAAAkiC,OAAA,UAAAC,EAAAD,EAAWG,wBAAX,IAAAF,OAAA,UAAAC,EAAAD,EAA6BpnC,aAA7B,IAAAqnC,OAAA,EAAAA,EAAoC3gC,QACtCogC,EAAS,0BAETA,GAAS,KAVY,IAACE,KAiDpB9xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQqvC,WACnBgD,UAAQ,EACRz5B,KAAM,SACNzW,MAAO,WACPC,KAAK,gBACLqX,WAAS,EACTha,QAAQ,WACRgM,MAAOnM,EAAM0a,KAAK64B,cAClBh5B,SAAUva,EAAMowC,WAElBlvC,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE9I,QAASA,EACT+I,QAAO,OAAEhJ,QAAF,IAAEA,OAAF,UAAA4hC,EAAE5hC,EAAMuiC,qBAAR,IAAAX,OAAA,EAAEA,EAAqB7mC,MAC9BynC,kBAAmB,SAACn5B,EAAQnO,GAAT,OAAmBmO,EAAOxX,OAASqJ,EAAMrJ,MAC5DuX,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOnM,EAAM0a,KAAKg5B,UAClBn5B,SAAUva,EAAMowC,SAChB51B,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACN1C,QAAQ,WACRwzC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERC,aACE1yC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACGtF,EACChQ,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,UAAUmY,KAAM,KACtC,KACH/E,EAAO6hC,WAAWC,uBASnB,WAAf5zC,EAAMsZ,MACLpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,wDAKJH,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAepf,UAAWQ,EAAQxB,MAChCgC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAM0wC,WAAYhyC,MAAM,UAAUyB,QAAQ,aAA3D,GAAAc,OACqB,WAAfjB,EAAMsZ,KAAoB,OAAS,WAEzCpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAMyY,SAAvB,4CC/FFxZ,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B4qC,MAAO,CACLhpC,QAAS,QAEX00C,WAAY,CACV35B,OAAQ/c,EAAMI,QAAQ,GACtB69B,UAAW,SACXjkB,cAAe,UAEjBpU,KAAM,CACJzF,QAAS,EACTg0B,UAAW,CACT/yB,gBAAiB,YAGrBuc,YAAa,CACXg5B,2BAA4B,CAC1Bt0C,aAAc,OAKdu0C,GAAc,SAAC/zC,GACnB,IAAMU,EAAUzB,KACRgS,EAASyuB,aAASz2B,IAAlBgI,KACR,OACE/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACGvF,GACCA,EAAKuiC,cAAcxnC,MAAM0G,OAAS,GAClCzB,EAAKuiC,cAAcxnC,MAAMC,IAAI,SAACyO,EAAMwJ,GAAP,IAAA8vB,EAAAC,EAAAC,EAAA,OAC3BhzC,EAAAC,EAAAC,cAAC0kC,GAAA,EAAD,CACEE,aAAY,OACVtrB,QADU,IACVA,OADU,UAAAs5B,EACVt5B,EAAMy5B,gCADI,IAAAH,OAAA,UAAAC,EACVD,EAAgCI,kBADtB,IAAAH,OAAA,UAAAC,EACVD,EAA4CI,WADlC,IAAAH,OAAA,EACVA,EAAiDX,cAEnD7P,IAAK,SACLhlC,MAAO,QACPyX,IAAK+N,EACLvhB,UAAU,MACVzC,UAAWQ,EAAQmzC,WACnB9N,QAAQ,UAER7kC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEoE,eAAa,EACbp0C,UAAWQ,EAAQqC,KACnBkU,QAAS,WACPjX,EAAMu0C,aAAN,OAAmB75B,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAM5X,QAG3B5B,EAAAC,EAAAC,cAACozC,GAAArzC,EAAD,CACEd,MAAO,CAAEV,SAAU,IACnBjB,OAAW,OAAJgc,QAAI,IAAJA,OAAA,EAAAA,EAAM5X,QAAS9C,EAAM0zC,UAAY,YAAc,aAG1DxyC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,aAApB,OAAiCua,QAAjC,IAAiCA,OAAjC,EAAiCA,EAAM5X,WAOtC2xC,GAAY,SAACz0C,GAAU,IAAA00C,EAAAC,EAAAC,EAAAC,EAAAC,EAC5Bp0C,EAAUzB,KAEhBoV,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAA4BpJ,IAAMK,SAAS,MAA3CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOzC,EAAP0C,EAAA,GAAey3B,EAAfz3B,EAAA,GACAC,EAAkCtJ,IAAMK,SAAS,MAAjDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOm2B,EAAPl2B,EAAA,GAAkB+2B,EAAlB/2B,EAAA,GAUAw3B,EAAyDtV,aACvD72B,GACA,CACE8c,UAAW,CACTqrB,MAAOrpB,EACPuP,OAAQzP,EAAOE,EACfpJ,QAAMm2B,EAAA,GAAAn0C,OAAAM,EAAA,EAAAN,CAAAm0C,EACH,eAAiB95B,EAAS,CAAEq6B,oBAAqBr6B,GAAW,MADzDra,OAAAM,EAAA,EAAAN,CAAAm0C,EAAA,yBAEoB,CACtB5xC,KAAM,CACJmyC,oBAAqBvB,KAJrBgB,MANJxjC,EAAR8jC,EAAQ9jC,QAASD,EAAjB+jC,EAAiB/jC,KAAME,EAAvB6jC,EAAuB7jC,MAAOqkB,EAA9Bwf,EAA8Bxf,QAASyb,EAAvC+D,EAAuC/D,cAiBvCtzB,EAAwB1J,IAAMK,UAAS,GAAvCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOnF,EAAPoF,EAAA,GAAaX,EAAbW,EAAA,GACA4V,EAAwBvf,IAAMK,WAA9Bmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOla,EAAPma,EAAA,GAAayd,EAAbzd,EAAA,GACAC,EAAwBzf,IAAMK,SAAS,CACrC0+B,aAAc,GACdO,cAAe,GACfG,UAAW,CAAEtnC,GAAI,GAAItJ,KAAM,MAH7B6wB,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOhZ,EAAPiZ,EAAA,GAAawd,EAAbxd,EAAA,GAmBM5V,EAASC,eAETC,EAAQhK,IAAMwB,WAAW8G,IAEzB9D,EAAU,WACdwE,GAAQ,GACRi0B,EAAQ,OAkIV,OACEhwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,EACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,aAEAe,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,OACPlxC,UAAWQ,EAAQynC,MACnB/7B,GAAG,mBACHkN,KAAK,OACLiB,SAAU,SAAC5E,GACT,IAAM07B,EAAQ17B,EAAMiG,OAAOy1B,MACvBA,GA5CO,SAACzO,GACpB,IAAI0O,EAAe,IAAIC,SACvBD,EAAaE,IAAI,OAAQ5O,GACzBhwB,QAAQyR,IAAIue,GACZF,KACG+O,KAAK/vC,EAAU,kBAAmB4vC,GAClCjzB,KAAK,SAACC,GACDA,IACFL,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK8B,EAAIrN,KAAK4X,SAAW,2BAE3B2M,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAyBDk1B,CAAaL,EAAM,OAIzBnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,oBACbzwC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNgE,aAAW,iBACXC,UAAU,QAEVzB,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,oBACbtL,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,SAKND,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACP,IAAI9V,EAAI2wC,SAAS1wC,cAAc,KAC/BD,EAAEyB,KAAO,wBACTzB,EAAE4wC,aAAa,WAAY,iBAC3B5wC,EAAE6wC,UAGJ9wC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,wBACbtL,EAAAC,EAAAC,cAAC6wC,GAAA9wC,EAAD,QAIJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACPgG,GAAQ,GACRi0B,EAAQ,OACRC,EAAQ,CACN6B,aAAc,GACdO,cAAe,GACfG,UAAW,CAAEtnC,GAAI,GAAItJ,KAAM,QAI/B5B,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,iBACbtL,EAAAC,EAAAC,cAAC8wC,GAAA/wC,EAAD,QAGJD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQoa,YACnBhY,KAAK,QACL4Y,YAAY,iBACZ7E,KAAK,SACL1W,QAAQ,WACRoa,SAAU,SAACoB,GACTo5B,EAAUp5B,EAAEC,OAAOzP,QAErBwnC,WAAY,CACVuB,eACEh0C,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,SACvB5xB,EAAAC,EAAAC,cAACma,GAAApa,EAAD,WAMVD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJZ,WAAS,EACTC,GAAI,EACJgD,UAAU,MACVihB,QAAQ,WACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACg0C,GAAD,CAAa1B,UAAWA,EAAWa,aAAcA,KAEnDrzC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,YACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,aACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,cACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,mBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,MACI/S,GAAW+/B,IAAkBmB,KAAc5c,UAC3Ct0B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,SAAU7qB,QAAQ,QAC9C4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,GACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAML4P,GAA8C,IAAlC,OAAJA,QAAI,IAAJA,OAAA,UAAA0jC,EAAA1jC,EAAMokC,sBAAN,IAAAV,OAAA,EAAAA,EAAsB3oC,MAAM0G,SACnCxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,iCAIL4P,IACK,OAAJA,QAAI,IAAJA,OAAA,UAAA2jC,EAAA3jC,EAAMokC,sBAAN,IAAAT,OAAA,EAAAA,EAAsB5oC,MAAM0G,QAAS,IADtC,OAECzB,QAFD,IAECA,OAFD,UAAA4jC,EAEC5jC,EAAMokC,sBAFP,IAAAR,OAAA,EAECA,EAAsB7oC,MAAMC,IAAI,SAACyO,GAAD,OAC9BxZ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAKs4B,cAER9xC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAK64B,eAERryC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAKg5B,UAAU5wC,MAElB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK4d,WAAWhV,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK83B,WAAWlvB,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QAClC4D,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,QACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,QACbtL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,UACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,UACbtL,EAAAC,EAAAC,cAACqxC,GAAAtxC,EAAD,cAOdD,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEqpB,QAAS,EACTlqB,MAAO,QACPc,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,MAAK,OAAEjY,QAAF,IAAEA,OAAF,UAAA6jC,EAAE7jC,EAAMokC,sBAAR,IAAAP,OAAA,EAAEA,EAAsBrd,WAC7B9P,YAAaA,EACbF,KAAMA,EACN0B,aAlXS,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAkXMC,oBA/WgB,SAAC1T,GAC/BiS,GAAgBjS,EAAMiG,OAAOzP,OAC7Bub,EAAQ,WAoXNxmB,EAAAC,EAAAC,cAACk0C,GAAD,CACE98B,KAAMA,EACNc,KAAMA,EACNoB,KAAMA,EACN01B,SA7VW,SAACz6B,EAAO4/B,GACvB,IAAIzyC,EAAMqJ,EACNopC,GACF3iC,QAAQyR,IAAIkxB,GACZzyC,EAAO,YACPqJ,EAAQopC,IAERzyC,EAAO6S,EAAMiG,OAAO9Y,KACpBqJ,EAAQwJ,EAAMiG,OAAOzP,OAEvBglC,EAAQ5wC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKma,GAAN,GAAAna,OAAAM,EAAA,EAAAN,CAAA,GAAauC,EAAOqJ,MAoVvBukC,WAxUa,WACjB,GAAa,SAATp3B,EAAiB,CACnB,IAAIlN,EAAKsO,EAAKtO,GACd2R,EACG0rB,OAAO,CACNC,SAAUsF,GACVrpB,UAAW,CACTvZ,KACAsO,KAAM,CACJs4B,aAAct4B,EAAKs4B,aACnBO,cAAe5a,SAASje,EAAK64B,eAC7BiC,YAAa96B,EAAKg5B,UAAUtnC,GAC5BomC,UAAW,IAAIhuB,SAIpBnG,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAIA,QAATlD,GACFyE,EACG0rB,OAAO,CACNC,SAAUoF,GACVnpB,UAAW,CACTjL,KAAM,CACJtO,GAAI2yB,gBACJiU,aAAct4B,EAAKs4B,aACnBO,cAAe5a,SAASje,EAAK64B,eAC7BiC,YAAa96B,EAAKg5B,UAAUtnC,IAE9BksB,UAAW,IAAI9T,KACfguB,UAAW,IAAIhuB,QAGlBnG,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,wBAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAIA,WAATlD,IACElN,EAAKsO,EAAKtO,GACd2R,EACG0rB,OAAO,CACNC,SAAUwF,GACVvpB,UAAW,CACTvZ,QAGHiS,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4BAyOT/D,QAASA,MCnfXg9B,WAAgB,SAACC,EAAOC,GAAR,iCAAA10C,OACOy0C,EADP,SAAAz0C,OACoB00C,EADpB,YAUPC,GAAA,CACbn0C,KARWg0C,GAAcj0C,IAAOC,KAAK,KAAMD,IAAOC,KAAK,MASvDo0C,KARWJ,GAAcj0C,IAAOq0C,KAAK,KAAMr0C,IAAOq0C,KAAK,MASvDC,OARaL,GAAcj0C,IAAOs0C,OAAO,KAAMt0C,IAAOs0C,OAAO,MAS7DvX,MARYkX,GAAcj0C,IAAO+8B,MAAM,KAAM/8B,IAAO+8B,MAAM,MAS1DD,OARamX,GAAcj0C,IAAO88B,OAAO,KAAM98B,IAAO88B,OAAO,MAS7D9/B,IARUi3C,GAAcj0C,IAAOhD,IAAI,KAAMgD,IAAOhD,IAAI,wBCelDu3C,GAAWC,EAAQ,KAEjBC,GAAS,CACb1V,MAAO,CACL2V,SAAU,CAAEC,YAAY,EAAOttB,QAAS,eACxC0X,OAAO,GAET6V,SAAU,CACRF,SAAU,CAAEC,YAAY,EAAOttB,QAAS,iBAItC5pB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGN9B,KAAM,CACJia,SAAU,OACVwb,SAAU,QACV1zB,QAAS,OACT2zB,SAAU,WACV3R,QAAS,CACP7hB,SAAU,EACVqgB,UAAW,MACXtiB,MAAO,QAGXka,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,EAAG,EAAG,IAElCI,MAAM4C,OAAAM,EAAA,EAAAN,CAAA,CACJ81C,qBAAsB,EACtBC,wBAAyB,EACzB53C,MAAOvB,EAAMwB,QAAQsiC,MACrB9hC,QAAS,OACTgY,cAAe,SACf9X,eAAgB,YACflC,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9Br3C,QAAS,SAGb4D,KAAM,CACJ0zC,gBAAiBb,GAAUrX,MAC3B7/B,MAAOvB,EAAMwB,QAAQsiC,MACrBzhC,aAAcrC,EAAMsC,MAAMD,aAC1BlC,QAASH,EAAMI,QAAQ,GACvBu1B,SAAU,WACV/W,KAAM,GACNG,KAAM/e,EAAMI,QAAQ,GACpBK,OAAQ,GACRP,MAAO,GACPsC,SAAU,IAEZ+2C,UAAW,GAGX1d,QAAS,CACP9e,OAAQ/c,EAAMI,QAAQ,EAAG,IAE3Bo5C,OAAQ,CACNx3C,QAAS,QAEXb,OAAQ,CACNqY,YAAaxZ,EAAMI,QAAQ,IAE7Bq5C,OAAQ,CACN18B,OAAQ/c,EAAMI,SAAS,GACvB4B,QAAS,OACTugB,SAAU,OACVyB,QAAS,CACP7hB,SAAU,EACV4a,OAAQ/c,EAAMI,QAAQ,KAG1Bs5C,aAAc,CACZr5C,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,WAGX,SAASqjB,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAEtD,IA0Lew7B,eA1LG,SAAAx7B,GAChB,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B82C,IAEMp2C,EAAUzB,KACRsS,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACRwlC,EAAoC9iC,IAAMwB,WAAWuU,IAGrDrV,GAHAoiC,EAAQvtB,UAARutB,EAAmBhtB,aAGezV,mBAAS,CACzC0iC,SAAS,EACT79B,OAAQ,GACR89B,QAAS,GACTC,OAAQ,MAJVtiC,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOwiC,EAAPviC,EAAA,GAAkBwiC,EAAlBxiC,EAAA,GAMAP,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOm6B,EAAPl6B,EAAA,GAAoBm6B,EAApBn6B,EAAA,GACAE,EAA8BpJ,IAAMK,UAAS,GAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAMMa,GANNZ,EAAA,GAAAA,EAAA,GAMoB,SAAC3H,EAAOkL,GACX,cAAXA,GAIJ5D,GAAQ,KAEVkB,oBAAU,WACT,IAAM+4B,EAASnB,GAASoB,EAAUh+B,OAAQ88B,IAEzCmB,EAAa,SAAAD,GAAS,OAAA52C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjB42C,GADiB,IAEpBH,SAASE,EACTA,OAAQA,GAAU,QAEnB,CAACC,EAAUh+B,SAEd,IAAM0wB,EAAe,SAAAl0B,GACnBA,EAAM4hC,UAENH,EAAa,SAAAD,GAAS,OAAA52C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjB42C,GADiB,IAEpBh+B,OAAO5Y,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACF42C,EAAUh+B,QADT,GAAA5Y,OAAAM,EAAA,EAAAN,CAAA,GAEHoV,EAAMiG,OAAO9Y,KACU,aAAtB6S,EAAMiG,OAAOtC,KACT3D,EAAMiG,OAAOyD,QACb1J,EAAMiG,OAAOzP,QAErB8qC,QAAQ12C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACH42C,EAAUF,SADR,GAAA12C,OAAAM,EAAA,EAAAN,CAAA,GAEJoV,EAAMiG,OAAO9Y,MAAO,SAKrB00C,EAAY,eAAAhmC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAM+D,GAAN,IAAA8hC,EAAAC,EAAAC,EAAAC,EAAA,OAAAlmC,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBkD,EAAMgE,kBACHw9B,EAAUH,QAFM,CAAAzkC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKIlB,EAAmB,mBAAoB,GAAI4lC,EAAUh+B,QALzD,UAOQ,OAFxBs+B,EALgBllC,EAAAgB,MAOP8C,WAPO,CAAA9D,EAAAE,KAAA,gBASnBO,aAAam+B,QAAQ,cAAesG,EAAUI,aAT3BtlC,EAAAE,KAAA,EAWMlB,EAAmB,iBAAkB,GAAI,IAAI,GAXnD,OAWfmmC,EAXenlC,EAAAgB,KAYfokC,EAAQ,GACRC,EAAkB,GACtBF,EAAWC,MAAMld,QAAQ,SAAAC,GACvBid,EAAMphC,KAAKmkB,EAAQod,SAKhBpd,EAAQqd,UAETH,EAAgBrhC,KAAKmkB,EAAQod,WAMjC9kC,aAAam+B,QAAQ,cAAewG,GACpC3kC,aAAam+B,QAAQ,kBAAmByG,GAGxC53C,EAAMy7B,QAAQllB,KAAK,gBAhCAhE,EAAAE,KAAA,iBAsCnB6kC,EAAeG,EAAU5uB,SACzB5L,GAAQ,GAvCW,QAAA1K,EAAAE,KAAA,iBA2CjB2wB,MAAM,kBA3CW,yBAAA7wB,EAAAmB,SAAA9B,MAAH,gBAAA+B,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,GAoDZ2lC,EAAW,SAAAlgC,GAAK,SACpBq/B,EAAUF,QAAQn/B,KAAUq/B,EAAUD,OAAOp/B,KAE/C,OACE5W,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQtD,MACvB8D,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhC,cAAY,EACZ1iC,QAAQ,MAFV,eAMAe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,cAIpBe,EAAAC,EAAAC,cAAA,OAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,GAC9B+9B,aAAc,MACdvkB,SAAU89B,IAEVt2C,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk2C,QACtB11C,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEtJ,MAAO6mC,EAAS,SAChB79B,WAAS,EACT2mB,WAAYkX,EAAS,SAAWb,EAAUD,OAAO3W,MAAM,GAAK,KAC5D19B,MAAM,gBACNC,KAAK,QAELyX,SAAUsvB,EACV19B,MAAOgrC,EAAUh+B,OAAOonB,OAAS,GACjCpgC,QAAQ,aAEVe,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEtJ,MAAO6mC,EAAS,YAChB79B,WAAS,EACT2mB,WACEkX,EAAS,YAAcb,EAAUD,OAAOd,SAAS,GAAK,KAExDvzC,MAAM,WACNC,KAAK,WACLyX,SAAUsvB,EACVvwB,KAAK,WACLnN,MAAOgrC,EAAUh+B,OAAOi9B,UAAY,GACpCj2C,QAAQ,cAGZe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEvW,UAAWQ,EAAQm2C,aACnBn4C,MAAM,UACNmY,KAAK,QACLyC,KAAK,SACLnZ,QAAQ,aALV,UASAe,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IACxCD,aAAc,CAACjF,SAAS,MAAOG,WAAW,UAC1CxD,QAASyF,GACPhd,EAAAC,EAAAC,cAAC62C,GAAD,CAAOx/B,QAASyF,EAAa7B,SAAS,SACpCg7B,SChQDa,GAAb,SAAAC,GAAA53C,OAAA63C,GAAA,EAAA73C,CAAA23C,EAAAC,GAAA,IAAAE,EAAA93C,OAAA+3C,GAAA,EAAA/3C,CAAA23C,GAAA,SAAAA,IAAA,OAAA33C,OAAAg4C,GAAA,EAAAh4C,CAAAwT,KAAAmkC,GAAAG,EAAAvkC,MAAAC,KAAA1B,WAAA,OAAA9R,OAAAi4C,GAAA,EAAAj4C,CAAA23C,EAAA,EAAA/hC,IAAA,SAAAhK,MAGE,WACA,OACEjL,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAU,OACRsM,MAAM,SAERtL,EAAAC,EAAAC,cAACq3C,GAAD,WATJP,EAAA,CAA2BjkC,IAAMu0B,eAkBfhN,YAAW0c,YCvBvBj5C,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBm7C,GAAmBld,YAAW,SAACx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GACAE,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOs7B,EAAPr7B,EAAA,GAAoBs7B,EAApBt7B,EAAA,GACM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GARoD,SAAA4tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUpD,SAAAC,EAAyBuqB,GAAzB,IAAA0c,EAAA5hB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMomC,EAAQ,GACZ1c,EAAW0c,MAAMpe,QAAQ,SAACC,GACxBme,EAAMtiC,KAAKmkB,EAAQ53B,QAEjBm0B,EAAW,CACb6hB,SAAU3c,EAAW2c,SACrB1C,SAAU,YACV7V,MAAOpE,EAAWoE,MAClBsY,MAAOA,GATXtmC,EAAAE,KAAA,EAYuBlB,EAAmB,mBAAoB,GAAI0lB,GAZlE,OAAA1kB,EAAAgB,KAaE0zB,IAbF,wBAAA10B,EAAAmB,SAAA9B,OAVoDkC,MAAAC,KAAA1B,WAAA,SAAA0mC,IAAA,OAAAA,EAAAx4C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAyBpD,SAAAsV,IAAA,IAAApb,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EACuBlB,EAAmB,kBAAmB,GAAI,IADjE,OACM1F,EADNqb,EAAA3T,KAGEqlC,EAAe/sC,EAASgtC,OAExB5R,IALF,wBAAA/f,EAAAxT,SAAAuT,OAzBoDnT,MAAAC,KAAA1B,WAAA,SAgCrC40B,IAhCqC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgCpD,SAAA6T,IAAA,IAAA3Z,EAAAmtC,EAAAC,EAAA,OAAAvnC,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EACuBlB,EAAmB,iBAAkB,GAAI,IADhE,OACM1F,EADN6Z,EAAAnS,KAEMylC,EAAantC,EAASotC,MACtBA,EAAQ,GACZD,EAAWve,QAAQ,SAACC,GAClB,IAAIwe,EAAU,GACdA,EAAO,GAASxe,EAAQtuB,GACxB8sC,EAAO,SAAexe,EAAQoe,SAC9BI,EAAO,SAAexe,EAAQ0b,SAC9B8C,EAAO,MAAYxe,EAAQ6F,MAC3B2Y,EAAO,OAAaxe,EAAQ3hB,OAC5BmgC,EAAO,OAAgC,WAAnBxe,EAAQ3pB,OAC5B,IAAI8nC,EAAQ,GACRM,EAAa,GAEDze,EAAQ0e,WACd3e,QAAQ,SAAC4e,GACjB,IAAIC,EAAU,GACdA,EAAO,GAASD,EAAYE,YAAYntC,GACxCktC,EAAO,KAAWD,EAAYE,YAAYz2C,KAC1C+1C,EAAMtiC,KAAK+iC,GACXH,EAAW5iC,KAAK8iC,EAAYE,YAAYz2C,QAE1Co2C,EAAO,MAAYL,EACnBK,EAAO,UAAgBC,EAAW5b,KAAK,OACvC0b,EAAM1iC,KAAK2iC,KAGb/N,EAAe8N,GACfhO,EAAegO,GA7BjB,wBAAAvzB,EAAAhS,SAAA8R,OAhCoD1R,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8EpD,SAAAoU,EAAsBoW,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OACQ64B,EAAgBN,EAAYzsB,OAAO,SAACgtB,GAAD,OACvCA,EAAEzoC,KAAKyiC,cACHgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAa,MACxC,OAENgP,EAAeG,GANjB,wBAAArlB,EAAAvS,SAAAqS,OA9EoDjS,MAAAC,KAAA1B,WAsFpD,OAtBA8L,oBAAU,YAhE0C,WAAA46B,EAAAjlC,MAAAC,KAAA1B,WAiElDmnC,IACC,IAqBDt4C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAACoB,EAAD,CACEqP,IAAI,oBACJ/O,KAAK,uBAUP5B,EAAAC,EAAAC,cAACoqC,GAAD,CACEh/B,MAAO,cACPi5B,aAAa,UACbZ,SAxG4C,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyG5C4I,SAzG4C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YA0G5CkV,QAAStW,GAAKsW,QACd7O,QAASigC,EACTx/B,OAAQ+xB,kBC1EHuO,GA5CM,SAACz5C,GAAU,IAAA05C,EACxBh5C,EAAUxD,cAEhB,OACEgE,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAMwY,KACZC,QAASzY,EAAMyY,QACfqG,kBAAiB,kBAEjB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CACE5S,GAAG,gBACH6jC,mBAAiB,EACjB/vC,UAAWQ,EAAQxB,MAEnBgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,sBAEFe,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,CAAe/e,UAAWQ,EAAQxB,MAChCgC,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACEtwC,UAAWQ,EAAQqvC,WACnBjtC,KAAK,OACL4Y,YAAY,gBACZvB,WAAS,EACTs2B,aAAa,WACbtkC,MAAK,QAAAutC,EAAE15C,EAAMykB,YAAR,IAAAi1B,IAAgB,KACrBn/B,SAAU,SAACrO,EAAGC,GAAJ,OAAcnM,EAAMowC,SAASjkC,IACvCwtC,QAAS,IAAIn1B,KACblB,OAAQ,iBAIdpiB,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAepf,UAAWQ,EAAQxB,MAChCgC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAM0wC,WAAYhyC,MAAM,UAAUyB,QAAQ,aAA3D,QAIAe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAMyY,QAAStY,QAAQ,aAAxC,yDC9BFlB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBq8C,SAAU,CACRr7C,gBAAiB,QACjBjB,QAAS,OACToa,OAAQ,UACRtV,UAAW,sBACX0wB,SAAS,YAEXgd,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,MAE5BsuC,WAAY,CACVh4B,aAAc5a,EAAMI,QAAQ,IAE9BiP,MAAO,CACL7M,SAAU,OACV9B,WAAY,MACZulB,cAAe,OAEjBy2B,UAAW,CACTl6C,SAAU,OACVyjB,cAAe,OAEjB02B,eAAe,CACbn6C,SAAU,OACV9B,WAAY,QAEdk8C,KAAM,CACJp6C,SAAU,QAEZq6C,eAAe,CACd38C,MAAM,OAEP48C,IAAI,CACFt6C,SAAS,QAEXu6C,SAAU,CACRC,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9B1Y,MAAO,WAqMI07C,GAjMU,SAACp6C,GAAU,IAAAq6C,EAAAC,EAAAC,EAAAC,EAC5B95C,EAAUzB,KACTw7C,EAAoBz6C,EAApBy6C,iBAEDC,EAAQ,SAACX,GACb,IACAY,EADQZ,EACwB/c,MAAM,KAAtC4d,EAAAr6C,OAAAiU,EAAA,EAAAjU,CAAAo6C,EAAA,GAAQE,EAARD,EAAA,GAAaE,EAAbF,EAAA,GAAoBG,EAApBH,EAAA,GACII,EAAI,IAAIx2B,KAIZ,OAHAw2B,EAAEC,SAASJ,GACXG,EAAEE,WAAWJ,GACbE,EAAEG,WAAWJ,GACN13B,KAAO23B,GAAG13B,OAAO,YAG1B,OACEpiB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAMwY,KACZC,QAASzY,EAAMo7C,MACf/jC,SAAS,KACT8C,WAAW,GAEVjZ,EAAAC,EAAAC,cAACi6C,GAAA,EAAD,CAAUn7C,UAAWQ,EAAQw5C,SAAU1hC,KAAMxY,EAAMkR,SACxChQ,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,aAEpCwC,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,kBAChBlL,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAClB,QAAQ,OAAOE,eAAe,kBACtC6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQo5C,gBAA/B,uBACsBz2B,KAAOrjB,EAAMykB,MAAMnB,OAAO,OADhD,KAEAD,KAAOrjB,EAAMykB,MAAMnB,OAAO,MAF1B,KAGAD,KAAOrjB,EAAMykB,MAAMnB,OAAO,QAH1B,KAKDpiB,EAAAC,EAAAC,cAACk6C,GAAA,EAAD,CACMp7C,UAAWQ,EAAQs5C,eACnB75C,QAAQ,WACR+Z,OAAO,QACPqhC,QAAQ,oCACRC,aAAc,EACdpvC,GAAG,8BACHsP,YAAY,cACZnB,SAAU,SAACoB,GAAD,OAAO3b,EAAMy7C,WAAW9/B,EAAEC,OAAOzP,SARjD,OAUAsuC,QAVA,IAUAA,OAVA,EAUAA,EAAkBxuC,IAAI,SAACC,GACvB,OACEhL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAOD,EAAEE,IAAKF,EAAEpJ,UAK9B5B,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,OAGFv9B,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KAEGjf,EAAM27C,QAAU37C,EAAM27C,OAAOjpC,OAAS,EACrCxR,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQm5C,YAI/B34C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQm5C,WAA/B,WAGH34C,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACtB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGD,WAAS,EAACvc,QAAS,GACpCyC,EAAM27C,QACP37C,EAAM27C,OAAOjpC,OAAS,GACtB1S,EAAM27C,OAAO1vC,IAAI,SAACsW,GAChB,OACErhB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAA,OACElB,UACEQ,EAAQk5C,UAGV14C,EAAAC,EAAAC,cAAA,OAAMf,MAAO,CAAEyyB,SAAU,WACvB3W,MAAO,MACPJ,IAAK,SACH7a,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAaj5B,QAAS,kBAAMjX,EAAM47C,WAAWr5B,EAAInW,MAC9ClL,EAAAC,EAAAC,cAACy6C,GAAA,EAAD,CAAex7C,MAAO,CAAC3B,MAAM,WAKtCwC,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAACxC,WAAW,SAEvBqD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQu5C,KAA/B,gBAAAh5C,OACkBy5C,EAAO,OAACn4B,QAAD,IAACA,OAAD,EAACA,EAAKu5B,aAE9B56C,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQu5C,KAA/B,cAAAh5C,OACey5C,EAAO,OAACn4B,QAAD,IAACA,OAAD,EAACA,EAAKw5B,iBAUpC76C,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAClB,QAAS,OAC/BE,eAAgB,WAClB6B,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,CAASt+B,QAAQ,cAEnBe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG,IACDtV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQm5C,WAA/B,gBACA34C,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAAC46C,GAAA,EAAD,CACE97C,UAAWQ,EAAQqvC,WACnBjtC,KAAK,YACL4Y,YAAY,oBACZ+0B,aAAa,WACbtkC,MAAK,QAAAkuC,EAAA,OAAEr6C,QAAF,IAAEA,OAAF,UAAAs6C,EAAEt6C,EAAOi8C,iBAAT,IAAA3B,OAAA,EAAEA,EAAkBwB,iBAApB,IAAAzB,IAAiC,KACtClgC,WAAS,EACTI,SAAU,SAACpO,GAAD,OAAWnM,EAAMk8C,gBAAgB/vC,EAAO,cAClDwtC,QAAS,IAAIn1B,QAGjBtjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQm5C,WAA/B,cACA34C,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAAC46C,GAAA,EAAD,CACE97C,UAAWQ,EAAQqvC,WACnBjtC,KAAK,UACL4Y,YAAY,kBACZ+0B,aAAa,WACbt2B,WAAS,EACThO,MAAK,QAAAouC,EAAA,OAAEv6C,QAAF,IAAEA,OAAF,UAAAw6C,EAAEx6C,EAAOi8C,iBAAT,IAAAzB,OAAA,EAAEA,EAAkBuB,eAApB,IAAAxB,IAA+B,KACpChgC,SAAU,SAACpO,GAAD,OAAWnM,EAAMk8C,gBAAgB/vC,EAAO,YAClDwtC,QAAS,IAAIn1B,QAEU,IAmBlBtjB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACCQ,QAAS,kBAAMjX,EAAMm8C,iBAAiBn8C,EAAMqK,kBAAkBrK,EAAMykB,KAAKzkB,EAAMo8C,UAC/E19C,MAAM,UACNyB,QAAQ,aAHT,eAabe,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAAA,YAGFF,EAAAC,EAAAC,cAACke,GAAA,EAAD,KASEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAMo7C,MAAOj7C,QAAQ,aACnC,IADH,SAIAe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAAS,kBAAMjX,EAAMq8C,WAAWr8C,EAAMqK,qBAHxC,kBCvNKiyC,GAAgB,SAACt8C,GAE5B,IAAAqU,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAkDjJ,IAAMK,SAAS,MAAjE6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO7S,EAAP8S,EAAA,GAA0Bo/B,EAA1Bp/B,EAAA,GACAE,EAAwBpJ,IAAMK,WAA9BgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO/D,EAAPgE,EAAA,GAAa4zB,EAAb5zB,EAAA,GACAC,EAA8BtJ,IAAMK,UAAS,GAA7CkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOrM,EAAPsM,EAAA,GAAgBg/B,EAAhBh/B,EAAA,GACAG,EAAwC1J,IAAMK,UAAS,GAAvDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO8+B,EAAP7+B,EAAA,GAAqB8+B,EAArB9+B,EAAA,GACA4V,EAAwBvf,IAAMK,SAAS,IAAIkQ,MAA3CiP,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO/O,EAAPgP,EAAA,GAAakpB,EAAblpB,EAAA,GACA9e,EAA8CL,mBAAS,IAAvDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOioC,EAAPhoC,EAAA,GAAwBioC,EAAxBjoC,EAAA,GACAG,EAAgDT,mBAAS,IAAzDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0lC,EAAPzlC,EAAA,GAAyB8nC,EAAzB9nC,EAAA,GACAG,EAAgDb,mBAAS,IAAzDgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO4nC,EAAPznC,EAAA,GAAyB0nC,EAAzB1nC,EAAA,GACAykB,EAAsDzlB,oBAAS,GAA/D0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOkjB,EAAPjjB,EAAA,GAA4BkjB,EAA5BljB,EAAA,GACAC,EAAgC3lB,oBAAS,GAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAOkjB,GAAPjjB,EAAA,GAAiBkjB,GAAjBljB,EAAA,GACAC,GAAkC7lB,mBAAS,CACzCwnC,UAAW,IAAIt3B,KACfu3B,QAAS,IAAIv3B,KACblL,KAAM,IAHR8gB,GAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,GAAA,GAAO8hB,GAAP7hB,GAAA,GAAkBijB,GAAlBjjB,GAAA,GAKAC,GAAoC/lB,mBAAS,CAC3CwnC,UAAWz4B,KAAO,IAAImB,MAAQ84B,QAAQ,SAASh6B,OAAO,cACtDy4B,QAAS14B,KAAO,IAAImB,MAAQ+4B,MAAM,SAASj6B,OAAO,cAClDmB,KAAM,IAAID,OAHZ8V,GAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,GAAA,GAAOmjB,GAAPljB,GAAA,GAAmBmjB,GAAnBnjB,GAAA,GAMMvc,GAASC,eACTC,GAAQhK,IAAMwB,WAAW8G,IACzBtd,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCy8C,SAAU,CACRr7C,gBAAiB,QACjBjB,QAAS,OACToa,OAAQ,UACR1W,OAAQ,kBACRoB,UAAW,sBACX/E,MAAM,QACNO,OAAO,QACPsc,OAAO,EACPoX,UAAW,CACTosB,UAAW,oBACXt7C,UAAW,wBAGf+lC,MAAO,CACLhpC,QAAS,QAEX+6C,SAAU,CACRC,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9B1Y,MAAO,QAETi/C,aAAa,CACXx+C,QAAQ,OAAOugB,SAAS,OAAOhiB,WAAW,QAE5CqyC,WAAY,CACVh4B,aAAc5a,EAAMI,QAAQ,GAC5BqgD,4BAA4B,CAC1BtgD,QAAS,gBAGbugD,WAAY,CACVt/C,gBAAiB,QACjBjB,QAAS,OACToa,OAAQ,UACR1W,OAAQ,kBACRoB,UAAW,sBACX/E,MAAM,QACNO,OAAO,QACPsc,OAAO,EACPoX,UAAW,CACTosB,UAAW,gBACXt7C,UAAW,wBAIfqiB,KAAM,CACJ9kB,SAAU,OACVrC,QAAS,YAEX28C,IAAK,CACHt6C,SAAU,WAMdwe,oBAAU,WACR2/B,KACAC,GAAYP,GAAW1B,UAAU0B,GAAWzB,UAC3C,IAGH,IAGMtjC,GAAU,WACdwE,GAAQ,GACRi0B,EAAQ,OAMJgL,GAAkB,SAAC/vC,EAAOrJ,GAC9Bu6C,GAAa98C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK07C,IAAN,GAAA17C,OAAAM,EAAA,EAAAN,CAAA,GAAkBuC,EAAOqJ,MAuBjC6xC,GAAgB,eAAAz4B,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,IAAA,IAAA3T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cACjBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MnEspEe,mWmErpEfga,UAAU,CAAEs4B,UAAW56B,KAAOoB,GAAMnB,OAAO,cAAe84B,QAAS/4B,KAAOoB,GAAMnB,OAAO,kBAPpEoC,EAAAjT,KAAA,EAUjBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAFG,eAAAyH,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAEE,SAAAsV,EAAM3I,GAAN,IAAA60B,EAAA+K,EAAA,OAAAxsC,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,aACE,OAAH6L,QAAG,IAAHA,OAAA,UAAA60B,EAAA70B,EAAKrN,YAAL,IAAAkiC,OAAA,UAAA+K,EAAA/K,EAAWgL,mCAAX,IAAAD,OAAA,EAAAA,EAAwClyC,MAAM0G,QAAS,GADtD,CAAAwU,EAAAzU,KAAA,QAEFwL,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,4BALL0K,EAAAzU,KAAA,sBAAAyU,EAAAzU,KAAA,EASGi+B,KATH,wBAAAxpB,EAAAxT,SAAAuT,MAFF,gBAAAtT,GAAA,OAAAmS,EAAAhS,MAAAC,KAAA1B,YAAA,IAcHoM,MAAM7L,QAAQzB,OAxBM,wBAAAuU,EAAAhS,SAAA8R,MAAH,yBAAAD,EAAAzR,MAAAC,KAAA1B,YAAA,GA2BhB+rC,GAA2B,eAAAC,EAAA99C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAoU,EAAO3Z,EAAGkN,GAAV,IAAAzH,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cAClCiqC,GAAgB,GACV7qC,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOvB,GAA0BgC,GAAU/B,EAAkBiP,GAAMglC,IAAIC,OAAOprC,QAPhD8S,EAAAxT,KAAA,EAU5BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACC,GACJ0+B,EAAoB1+B,EAAIrN,KAAKktC,4BAA4BnyC,OACzDkxC,GAAuB,GACvBX,EAAqBnwC,GACrBswC,GAAgB,KAElBj+B,MAAM7L,QAAQzB,OAlBiB,wBAAA8U,EAAAvS,SAAAqS,MAAH,gBAAAnS,EAAAC,GAAA,OAAAwqC,EAAAvqC,MAAAC,KAAA1B,YAAA,GAqB3ByrC,GAAsB,eAAAU,EAAAj+C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA8sC,IAAA,IAAA5sC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAosC,GAAA,cAAAA,EAAAlsC,KAAAksC,EAAAjsC,MAAA,cACvBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOjB,MANkBg0C,EAAAjsC,KAAA,EASvBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACC,GACHw+B,EAAoBx+B,EAAIrN,KAAK0tC,0BAA0B3yC,SAE1DyS,MAAM7L,QAAQzB,OAdY,wBAAAutC,EAAAhrC,SAAA+qC,MAAH,yBAAAD,EAAA1qC,MAAAC,KAAA1B,YAAA,GAiBtBq+B,GAAU,eAAAkO,EAAAr+C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAktC,IAAA,OAAAntC,GAAAvQ,EAAAmR,KAAA,SAAAwsC,GAAA,cAAAA,EAAAtsC,KAAAssC,EAAArsC,MAAA,cACjB+pC,GAAW,GADMsC,EAAArsC,KAAA,EAEXsL,GACH0rB,OAAO,CACNC,SAAU4F,GACV3pB,UAAW,CACTvZ,GAAI2yB,OACJzG,UAAW,IAAI9T,KACfguB,UAAW,IAAIhuB,KACfC,KAAMA,EACNw5B,UAAW56B,KAAOoB,GAAMnB,OAAO,cAC/ByB,UAAU,KAGb1G,KAAK,SAACC,GACHy/B,GAAYP,GAAW1B,UAAU0B,GAAWzB,SAC5CtjC,OAEHgG,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,KACAwF,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAxBM,wBAAAsiC,EAAAprC,SAAAmrC,MAAH,yBAAAD,EAAA9qC,MAAAC,KAAA1B,YAAA,GA6BV0sC,GAAa,eAAAC,EAAAz+C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAstC,EAAO7yC,EAAGqY,EAAK23B,GAAf,OAAA1qC,GAAAvQ,EAAAmR,KAAA,SAAA4sC,GAAA,cAAAA,EAAA1sC,KAAA0sC,EAAAzsC,MAAA,cAAAysC,EAAAzsC,KAAA,EACdsL,GAAOpS,MAAM,CACjBA,MAAQnB,GACRmb,UAAU,CACRm2B,UAAWz4B,KAAO44B,GAAUH,WAAWx4B,OAAO,SAC9Cy4B,QAAS14B,KAAO44B,GAAUF,SAASz4B,OAAO,UAE5C4S,YAAY,aACX7X,KAAK,SAACC,GAAM,IAAA6gC,EAAAC,GACP,OAAH9gC,QAAG,IAAHA,OAAA,UAAA6gC,EAAA7gC,EAAKrN,YAAL,IAAAkuC,OAAA,UAAAC,EAAAD,EAAWhB,mCAAX,IAAAiB,OAAA,EAAAA,EAAwCpzC,MAAM0G,QAAS,EACxDuL,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,gCAIP2/B,GAAiB/vC,EAAGqY,EAAK23B,KAG5B39B,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KArBM,wBAAAwgC,EAAAxrC,SAAAurC,MAAH,gBAAA7oB,EAAAC,EAAAC,GAAA,OAAA0oB,EAAAlrC,MAAAC,KAAA1B,YAAA,GAyBb8pC,GAAgB,eAAAkD,EAAA9+C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA2tC,EAAOlzC,EAAGqY,EAAK23B,GAAf,OAAA1qC,GAAAvQ,EAAAmR,KAAA,SAAAitC,GAAA,cAAAA,EAAA/sC,KAAA+sC,EAAA9sC,MAAA,UACD,KAAnBwpC,GAAU3iC,KADU,CAAAimC,EAAA9sC,KAAA,eAErBiqC,GAAgB,GAFK6C,EAAA9sC,KAAA,EAGfsL,GACL0rB,OAAO,CACNC,SAAU8F,GACV7pB,UAAW,CACTvZ,GAAI2yB,OACJzG,UAAW,IAAI9T,KACfguB,UAAW,IAAIhuB,KACfg7B,cAAe,IAAIh7B,KAAKC,GACxBg7B,YAAa,IAAIj7B,KAAK43B,GACtB9xC,kBAAmB2xC,GAAU3iC,KAC7BjP,kBAAmB+B,EACnB0vC,UAAWz4B,KAAO44B,GAAUH,WAAWx4B,OAAO,YAC9Cy4B,QAAS14B,KAAO44B,GAAUF,SAASz4B,OAAO,aAE5C4S,YAAY,aAEb7X,KAAK,SAACC,GACDA,IACF8/B,GAA4B/zC,EAAkB4xC,GAAU3iC,MACxD2E,GAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPkgC,GAAgB,MAGnBj+B,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,KACAwF,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAnCY,OAuCvB4gC,IAAaD,IAvCU,wBAAAoC,EAAA7rC,SAAA4rC,MAAH,gBAAA/oB,EAAAC,EAAAkpB,GAAA,OAAAL,EAAAvrC,MAAAC,KAAA1B,YAAA,GA2ChBupC,GAAU,eAAA+D,EAAAp/C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAiuC,EAAOxzC,GAAP,OAAAsF,GAAAvQ,EAAAmR,KAAA,SAAAutC,GAAA,cAAAA,EAAArtC,KAAAqtC,EAAAptC,MAAA,cACjBiqC,GAAgB,GADCmD,EAAAptC,KAAA,EAEXsL,GACH0rB,OAAO,CACNC,SAAUgG,GACV/pB,UAAW,CACTvZ,GAAIA,KAGPiS,KAAK,SAACC,GACDA,IACF8/B,GAA4B/zC,EAAkB4xC,GAAU3iC,MACxDb,KACAikC,GAAgB,GAChBz+B,GAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,6BAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,KACAwF,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BA1BM,wBAAAqjC,EAAAnsC,SAAAksC,MAAH,gBAAAE,GAAA,OAAAH,EAAA7rC,MAAAC,KAAA1B,YAAA,GA+BVgqC,GAAU,eAAA0D,EAAAx/C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAquC,EAAO5zC,GAAP,OAAAsF,GAAAvQ,EAAAmR,KAAA,SAAA2tC,GAAA,cAAAA,EAAAztC,KAAAytC,EAAAxtC,MAAA,cACjByqC,GAAuB,GADN+C,EAAAxtC,KAAA,EAEXsL,GACH0rB,OAAO,CACNC,SAAUkG,GACVjqB,UAAW,CACTvZ,GAAIA,KAGPiS,KAAK,SAACC,GACDA,IACFy/B,GAAYP,GAAW1B,UAAU0B,GAAWzB,SAC5C99B,GAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,6BAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,KACAwF,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAxBM,wBAAAyjC,EAAAvsC,SAAAssC,MAAH,gBAAAE,GAAA,OAAAH,EAAAjsC,MAAAC,KAAA1B,YAAA,GA6BV8tC,GAAgB,eAAAC,EAAA7/C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAE,SAAA0uC,EAAO57B,GAAP,IAAAixB,EAAAC,EAAA,OAAAjkC,GAAAvQ,EAAAmR,KAAA,SAAAguC,GAAA,cAAAA,EAAA9tC,KAAA8tC,EAAA7tC,MAAA,OAClBijC,EAAQryB,KAAOoB,GAAM64B,QAAQ,SAASh6B,OAAO,cAC7CqyB,EAAMtyB,KAAOoB,GAAM84B,MAAM,SAASj6B,OAAO,cAC7Cm6B,GAAcl9C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAIi9C,IAAL,IAAgB/4B,KAAKA,EAAKq3B,UAAUpG,EAAMqG,QAAQpG,KAC/DoI,GAAYrI,EAAMC,GAJI,wBAAA2K,EAAA5sC,SAAA2sC,MAAF,gBAAAE,GAAA,OAAAH,EAAAtsC,MAAAC,KAAA1B,YAAA,GAOhB0rC,GAAW,eAAAyC,EAAAjgD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA8uC,EAAO/K,EAAMC,GAAb,OAAAjkC,GAAAvQ,EAAAmR,KAAA,SAAAouC,GAAA,cAAAA,EAAAluC,KAAAkuC,EAAAjuC,MAAA,cAClB+pC,GAAW,GADOkE,EAAAjuC,KAAA,EAEZsL,GACLpS,MAAM,CACLA,MAAOzB,GACPyb,UAAU,CACRs4B,UAAUvI,EACV0G,QAAQzG,GAEVzf,YAAY,aAEb7X,KAAK,SAACC,GACLu+B,EAAmBv+B,EAAIrN,KAAK0vC,oBAAoB30C,OAChDwwC,GAAW,KAEZ/9B,MAAM,SAACC,GACN9L,QAAQzB,MAAMuN,KAhBE,wBAAAgiC,EAAAhtC,SAAA+sC,MAAH,gBAAAG,EAAAC,GAAA,OAAAL,EAAA1sC,MAAAC,KAAA1B,YAAA,GA6CXyuC,GAAiB,SAACxnC,GACtB8kC,GAA4B/zC,EAAkBiP,GAC9C+jC,GAAa98C,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI07C,IAAL,IAAe3iC,KAAKA,MAI5B5Y,GAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACi6C,GAAA,EAAD,CAAUn7C,UAAWQ,GAAQw5C,SAAU1hC,KAAMtH,GACjChQ,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,aAEpCwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,EACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,mBACAe,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,OACPlxC,UAAWQ,GAAQynC,MACnB/7B,GAAG,mBACHkN,KAAK,OACLiB,SAAU,SAAC5E,GACT,IAAM07B,EAAQ17B,EAAMiG,OAAOy1B,MACvBA,GAtDO,SAACzO,GACpB,IAAI0O,EAAe,IAAIC,SACvBD,EAAaE,IAAI,OAAQ5O,GACzBhwB,QAAQyR,IAAIue,GACZF,KACG+O,KAAK/vC,EAAU,+BAAgC4vC,GAC/CjzB,KAAK,SAACC,GACDA,IACFL,GAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK8B,EAAIrN,KAAK4X,SAAW,2BAE3Bk1B,GAAYP,GAAW1B,UAAU0B,GAAWzB,YAG/Ct9B,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZT,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAmCDk1B,CAAaL,EAAM,OAIzBnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,oBACbzwC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNgE,aAAW,iBACXC,UAAU,QAEVzB,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,gBACbtL,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,SAKND,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACPgG,GAAQ,GACRi0B,EAAQ,SAGVhwC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,iBACbtL,EAAAC,EAAAC,cAAC8wC,GAAA/wC,EAAD,SAIND,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,EACJxc,QAAS,EACTwf,UAAU,MACVihB,QAAQ,WACR5+B,WAAW,SACXC,eAAe,UAEf6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,GAAQm5C,WAA/B,oBACE34C,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACErwC,QAAQ,SACRswC,aAAa,WACbntB,OAAO,UACPpJ,OAAO,SACP6mC,MAAO,CAAC,OAAQ,SAChB50C,MAAOqxC,GAAW/4B,KAClBlK,SAAU,SAACkK,GAAD,OAAU07B,GAAiB17B,IACrCpkB,MAAO,CAAE7C,UAAW,QAO5B0D,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,GAAQi9C,cAErBf,GAAmBA,EAAgBlqC,OAAS,EAC3CkqC,EAAgB3wC,IAAI,SAACsW,GACnB,OACErhB,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CAAM7qC,IAAKoM,EAAInW,IACblL,EAAAC,EAAAC,cAAA,OACElB,UACEmjB,KACEA,KAAOd,EAAIi9B,eAAel8B,OAAO,eACjC29B,cACA59B,KAAO,IAAImB,MAAQlB,OAAO,cAC1B,OAEE5iB,GAAQk5C,SACRl5C,GAAQm9C,WAEd5mC,QAAS,WArZD,IAAC7K,IAsZSmW,EAAInW,GArZpCgyC,GAA4BhyC,EAAG,KAwZjBlL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,GAAQu5C,KAC5B52B,KAAOd,EAAIi9B,eAAel8B,OAAO,QAEpCpiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,GAAQ+jB,MAC5BpB,KAAOd,EAAIi9B,eAAel8B,OAAO,OAEpCpiB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,GAAQu5C,KAC5B52B,KAAOd,EAAIi9B,eAAel8B,OAAO,UAGrCjZ,IAAsBkY,EAAInW,IAAM6wC,GAC/B/7C,EAAAC,EAAAC,cAAC8/C,GAAD,CACE1oC,KAAMykC,EACNx4B,KAAMlC,EAAIi9B,cACVpD,QAAS75B,EAAIk9B,YACbp1C,kBAAmBA,EACnBsxC,OACEoB,GAAsC,GAExC3B,MAAO,kBAAM8B,GAAuB,IACpCC,SAAUA,GACVlB,UAAWA,GACXC,gBAAiBA,GACjBC,iBAAkB4C,GAClBtD,WAAYqF,GACZlF,WAAYA,GACZS,WAAYA,GACZ5B,iBAAkBA,EAClBvpC,QAASurC,OAOnBv7C,EAAAC,EAAAC,cAAA,qBAGJF,EAAAC,EAAAC,cAAC+/C,GAAD,CACE3oC,KAAMA,EACNc,KAAMA,EACNmL,KAAMA,EACN2rB,SA1cW,SAACjkC,GAChBwwC,EAAQxwC,IA0cJukC,WAAYsN,GACZvlC,QAASA,OClhBEvb,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAsGLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MA3FX,IAmGMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,OA0VGq1B,gBAtVA,SAACjzB,GACAkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAStU,EAAMohD,eAAevqC,MAA1EsG,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAiCpJ,IAAMK,SAAStU,EAAMohD,eAAelqB,QAArE5Z,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACqCrJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAmB+V,GAAnB9V,EAAA,GAAAA,EAAA,IACAG,EAAmC1J,IAAMK,SAAStU,EAAMmZ,QAAxDyE,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwmB,EAAPvmB,EAAA,GAAkBwmB,EAAlBxmB,EAAA,GAEA4V,EAAuCvf,IAAMK,SAAS,IAAtDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC6Cxf,IAAMK,SAAS,KAA5Dqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC+C1f,IAAMK,SAAS,KAA9Dwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACmD7f,IAAMK,SAAS,KAAlE2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,GAC+BhgB,IAAMwB,WAAWzB,IAAxCzC,mBAC2B0C,IAAMK,SAAS,KAAlD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACqClgB,IAAMK,SAAS,KAApDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOF,EAAPG,EAAA,GAAmBF,EAAnBE,EAAA,GACAC,EAAyBvgB,IAAMK,UAAS,GAAxCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GACAG,EAA2B3gB,IAAMK,UAAS,GAA1CugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACyC5gB,IAAMK,SAAS,CACtD+sC,YAAgBrhD,EAAMohD,eAAe1qB,WACrC7f,KAAQ7W,EAAMohD,eAAevqC,KAC7BqgB,OAASl3B,EAAMohD,eAAelqB,UAHhChC,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAOssB,EAAPpsB,EAAA,GAAqBqsB,EAArBrsB,EAAA,GAMAU,EAA8B3hB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNypB,EAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,EAAA,GAAOT,GAAPU,EAAA,GAAgBT,GAAhBS,EAAA,GAxBuB,SAAAN,KAAA,OAAAA,GAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA0DvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIzS,EAAM6kC,SAASzQ,GACfO,GAAS,GAEXS,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,KAJ1C,wBAAA1iB,EAAAmB,SAAA9B,OA1DuBkC,MAAAC,KAAA1B,WA0CvByyB,MAAMC,UAAUC,OAAS,SAAW9gB,EAAOxJ,GACzC3G,KAAKkxB,OAAQ/gB,EAAO,EAAGxJ,IAgDzB,IAAMib,GAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAEhDouB,GAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAWzC4pB,GAA0B9hB,IAAMK,SAAS,OAAzC0hB,GAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,GAAA,GAAOtE,GAAPuE,GAAA,GAAcF,GAAdE,GAAA,GACA2O,GAA8B1wB,IAAMK,SAAS,aAA7CswB,GAAArkC,OAAAiU,EAAA,EAAAjU,CAAAokC,GAAA,GAAOhT,GAAPiT,GAAA,GAAgB3O,GAAhB2O,GAAA,GASAzmB,oBAAW,WAETimB,EAAcpkC,EAAMmZ,SACnB,CAACnZ,EAAMmZ,SAuBV,OACEjY,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAEvBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC/C,QAAS,QAAS4oB,GAAI,GAAI9mB,WAAY,YAC1E8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE5BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAClCH,EAAMwM,QAITtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACrM,WAAS,EAACC,GAAI,EAAGmM,GAAI,EAAG9mB,WAAW,UACnD8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC1BhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACYta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT8jB,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACJqJ,MAAOioB,EAAYjZ,cACpBZ,SAAUob,GAAkB,iBAC5B9yB,MAAM,iBAGb3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE3ChlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAa8W,QAAS,WA/F5CjX,EAAMib,SAASmZ,EAAYjZ,gBA+FwCzc,MAAM,WAAnE,YAKAwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAC+lB,aAAa,UACvDpmB,EAAMylC,aAAevkC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAa8W,QAAS,kBAnJpE,WAEEod,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZqB,QAAS,KAEX,IAAI/c,EAAUyrB,EACdzrB,EAAQssB,OAAO,EAAG,IAElBZ,EAAc1rB,GACbic,GAAS,GACTS,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,KAAM6oB,QAAQ,KAwI2BoC,IAAiB34B,MAAM,WACrFsB,EAAMylC,cACE,OAKdvkC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GAcvF7iB,EAAAC,EAAAC,cAACykC,GAAD,CACGte,QAASvnB,EAAMunB,QACf7mB,QAASA,EACT+wB,MAAOA,GACPE,QAASA,GACTC,cAtEc,SAACjc,EAAOuc,GAGhC4D,GAFcnE,KAAYO,GAAsB,QAAVT,GAErB,OAAS,OAC1BwE,GAAW/D,MAoELhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACCkgB,EAAWl4B,IAAI,SAACsc,EAAKrE,GAAN,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAGAtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC62B,EAAY5e,GAAb,IAAAs9B,EA7GZloC,EA6GY,OACjBpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACoB,WAAnBssB,EAAW3sB,IACZjV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAS,CAAChD,MAAO,KAEvC83B,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAInc,GAAOlL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAC3CtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAxNb,SAAAhI,GAAA,OAAA4hB,GAAAzhB,MAAAC,KAAA1B,WAwNoBijB,KAAcp0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA3IhC+Y,IAEayP,EAEPc,OAAO,EAAG,GAClBb,EAAcD,IAGZxP,GAAS,GACXN,EAAe,SACfe,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAiIkB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAC1BD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,cA9K/B4c,EA8KiDhQ,GA7KlD,OAGjB8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GACAmE,GAFS,IAGZ9C,QAAS,UAGXL,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAGmsB,EAAWnsB,GAAI6oB,QAAQ,KAVrD,IAAoBsD,IA8KwDr3B,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAI9DD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACC2e,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAInc,GACrClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACI,IAApB2a,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACxB7E,UA9HGjB,EA8HoBwpB,EAAW3sB,IA9HvB,SAACR,GAC5B0e,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAO3D,EAAMiG,OAAOyD,aA8HtCA,QAAS+U,EAAY0O,EAAW3sB,KAChCzX,MAAM,UACNoE,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,sBACzB,KACiB,IAApBogC,EAAWxpB,KAAiBpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,WAC5BokC,EAAWU,cACF,KACxB,GAAnBV,EAAWxpB,KACVpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACAkhB,UAAQ,EACR9uB,GAAG,iBACH6N,QAAS6oB,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,QACtFwB,OAAO,QACPC,WAAS,EACThO,MAAOioB,EAAY0O,EAAWS,YAC9BhpB,SAAUggB,GAAmBuI,EAAWS,YACxClpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAOigC,EAAWjgC,MAAO1C,QAAQ,iBAC9E,KACgB,GAAnB2iC,EAAWxpB,KACXpY,EAAAC,EAAAC,cAAC4Y,GAAA,GAADwnC,EAAA,CAEAp1C,GAAG,iBACH6N,QAASja,EAAM0Y,QAAQoqB,EAAWQ,gBAClCppB,OAAO,QACPC,WAAS,GALT5Z,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,UAMS1e,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,SANtFnY,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,WAOUjnB,GAAmBuI,EAAWS,aAPxChjC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAQOptB,EAAY0O,EAAWS,aAR9BhjC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,iBASgB,SAAClnC,GAAD,OAAYA,EAAOxX,OATnCvC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,cAUa,SAAC1vC,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAOigC,EAAWjgC,MAAO1C,QAAQ,gBAVjFqhD,IAWG,KACe,GAAnB1e,EAAWxpB,KACZpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAcknB,EAAIua,EAAW3sB,MAAqB,KAChD2sB,EAAWxpB,MAA2B,GAAnBwpB,EAAWxpB,KAUxB,KAVoCpY,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACtCta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAI02B,EAAW3sB,IACfrT,KAAMggC,EAAW3sB,IACjBhK,MAAOioB,EAAY0O,EAAW3sB,KAC9BoE,SAAUob,GAAkBmN,EAAW3sB,KAEvCtT,MAAOigC,EAAWjgC,QA/CxB,MAiDG3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACsB,GAAnBsgB,EAAWxpB,KAAYpY,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBAClBiF,EAAIua,EAAW3sB,MACR,KACU,GAAnB2sB,EAAWxpB,KAAapY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACtC/X,MAAM,UACNiE,UAAWs9B,IACXppB,KAAK,QACLqpB,GAAI,oBAAoB3X,EAAG,GAC3BpoB,QAAQ,YAL8B,QAQ9B,KACS,IAApB2iC,EAAWxpB,KAAiBpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IAAMpoB,QAAQ,WAAW0W,KAAK,QAAQnY,MAAM,WACzFokC,EAAWU,cACF,KACjB,IAApBV,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACxB1gB,MAAM,UACNoE,KAAK,WACLyX,SAAUob,GAAkBmN,EAAW3sB,KACvCkJ,QAASkJ,EAAIua,EAAW3sB,KACxBmQ,WAAY,CAAE5jB,aAAc,sBACzB,KACa,GAAnBogC,EAAWxpB,MAAgC,GAAnBwpB,EAAWxpB,MAAgC,GAAnBwpB,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAcknB,EAAIua,EAAW3sB,MAAqB,eAsBtIjV,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAG,IAAI,IAAI,KAEhCC,MAAO,CAAClpB,EAAMyhD,YACd95B,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA/Nd,SAA0BxT,EAAOyT,GAC/Bm4B,EAAiBhhD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI+gD,GAAL,IAAoBpqB,OAAQ9N,EAAQzB,KAEpDD,EAAQ0B,GACRkK,EAAelK,EAAQzB,GACvB3nB,EAAM0hD,aAAct4B,EAAQzB,IA2NhB0B,oBApNd,SAAiC1T,GAE/B4rC,EAAiBhhD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI+gD,GAAL,IAAoBzqC,KAAM8hB,SAAShjB,EAAMiG,OAAOzP,MAAO,OACvEyb,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,GACR1nB,EAAM2hD,iBAAiBhpB,SAAShjB,EAAMiG,OAAOzP,MAAO,yBC5XlDlN,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBqkD,GAAcpmB,YAAW,SAAAx7B,GACpC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAoB+tB,GAApB9tB,EAAA,GAAAA,EAAA,IACAE,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOs7B,EAAPr7B,EAAA,GAAoBs7B,EAApBt7B,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,GAAnDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOkkC,EAAPjkC,EAAA,GAAmBqkC,EAAnBrkC,EAAA,GAEAG,EAAsC1J,IAAMK,SAAS,CACnD+sC,YAAgB,GAChBxqC,KAAQ,GACRqgB,OAAS,IAHXtZ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOmkC,EAAPlkC,EAAA,GAAoBmkC,EAApBnkC,EAAA,GAMMld,EAAUzB,KAEhBu0B,EAAsCvf,IAAMK,SAAS,IAArDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO0X,EAAPzX,EAAA,GAAoB0X,EAApB1X,EAAA,GAhB6C,SAAA2X,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkB7C,SAAAC,EAAyBuqB,GAAzB,IAAA0c,EAAA5hB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEMomC,EAAQ,GACZ1c,EAAW0c,MAAMpe,QAAQ,SAAAC,GACvBme,EAAMtiC,KAAKmkB,EAAQ53B,QAEjBm0B,EAAW,CACb6hB,SAAW3c,EAAW2c,SACtB1C,SAAW,YACX7V,MAAOpE,EAAWoE,MAClBsY,MAAQA,GAVZtmC,EAAAE,KAAA,EAcwBlB,EAAmB,mBAAoB,GAAI0lB,GAdnE,OAAA1kB,EAAAgB,KAeG0zB,IAfH,wBAAA10B,EAAAmB,SAAA9B,OAlB6CkC,MAAAC,KAAA1B,WAAA,SAAA0mC,IAAA,OAAAA,EAAAx4C,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmC7C,SAAAsV,IAAA,IAAApb,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EAGwBlB,EAAmB,kBAAmB,GAAI,IAHlE,OAGM1F,EAHNqb,EAAA3T,KAMEqlC,EAAe/sC,EAASgtC,OAEvB5R,EAAU,GAAG,GARhB,wBAAA/f,EAAAxT,SAAAuT,OAnC6CnT,MAAAC,KAAA1B,WAAA,SAiD9B40B,EAjD8BrzB,EAAAC,EAAAuiB,GAAA,OAAA0Q,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiD7C,SAAA6T,EAAyB3O,EAAKqgB,EAAOR,GAArC,IAAA7qB,EAAAmtC,EAAAC,EAAA,OAAAvnC,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EAGwBlB,EAAmB,eAAgB,GAAI,CAACsF,OAAKqgB,SAAOR,eAH5E,OAGM7qB,EAHN6Z,EAAAnS,KAIMylC,EAAantC,EAASotC,MAAM7hB,KAC5B6hB,EAAQ,GACZ4I,EAAch2C,EAASotC,MAAM/vB,OAC7B8vB,EAAWve,QAAQ,SAAAC,GAsBZA,EAAQxJ,OAETwJ,EAAO,OAAaA,EAAQxJ,OAAOxe,OAEnCgoB,EAAO,OAAa,EAEtBue,EAAM1iC,KAAKmkB,KAGfyQ,EAAe8N,GACfhO,EAAegO,GAvCjB,wBAAAvzB,EAAAhS,SAAA8R,OAjD6C1R,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4G7C,SAAAoU,EAAsBoW,GAAtB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OAEEw0B,EAAU6a,EAAYjrC,KAAKirC,EAAY5qB,OAAOiF,GAFhD,wBAAAlW,EAAAvS,SAAAqS,OA5G6CjS,MAAAC,KAAA1B,WAAA,SAAA2vC,IAAA,OAAAA,EAAAzhD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgH7C,SAAA8sC,EAAgCtiB,GAAhC,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAosC,GAAA,cAAAA,EAAAlsC,KAAAksC,EAAAjsC,MAAA,OAEEsvC,EAAexhD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAIuhD,GAAL,IAAiB5qB,OAAQiF,KACvC8K,EAAU6a,EAAYjrC,KAAKslB,EAAW2lB,EAAYT,aAHpD,wBAAA3C,EAAAhrC,SAAA+qC,OAhH6C3qC,MAAAC,KAAA1B,WAAA,SAAA4vC,IAAA,OAAAA,EAAA1hD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAqH7C,SAAAktC,EAA8B1iB,GAA9B,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAwsC,GAAA,cAAAA,EAAAtsC,KAAAssC,EAAArsC,MAAA,OAEEsvC,EAAexhD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAIuhD,GAAL,IAAiBjrC,KAAMslB,KACrC8K,EAAU9K,EAAW2lB,EAAY5qB,OAAO4qB,EAAYT,aAHtD,wBAAAvC,EAAAprC,SAAAmrC,OArH6C/qC,MAAAC,KAAA1B,WA0H7C,OA/BA8L,oBAAU,YA3FmC,WAAA46B,EAAAjlC,MAAAC,KAAA1B,WA4F3CmnC,IACC,IA8BDt4C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUFtL,EAAAC,EAAAC,cAAC8gD,GAAD,CAAe11C,MAAQ,gBAAiBi1C,WAAYA,EAAYL,eAAgBU,EAAcjd,SAxIvD,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwI4E4I,SAxI5E,SAAAob,GAAA,OAAAgV,EAAAv3B,MAAAC,KAAA1B,YAwI8FqvC,aAxI9F,SAAAprB,GAAA,OAAA0rB,EAAAluC,MAAAC,KAAA1B,YAwI8HsvC,iBAxI9H,SAAAprB,GAAA,OAAA0rB,EAAAnuC,MAAAC,KAAA1B,YAwIgKkV,QAAStW,GAAKsW,QAAS7O,QAASigC,EAAax/B,OAAQ+xB,QCvI9P3jB,GAAU,CACd,CAAEnb,GAAI,UAAWvJ,MAAO,MACxB,CAAEuJ,GAAI,OAAQvJ,MAAO,QACrB,CAAEuJ,GAAI,QAASvJ,MAAO,SACtB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,OAAQvJ,MAAO,QAErB,CAAEuJ,GAAI,YAAavJ,MAAO,cAC1B,CAAEuJ,GAAI,UAAWvJ,MAAO,YACxB,CAAEuJ,GAAI,OAAQvJ,MAAO,QACrB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,UAAWvJ,MAAO,KAGpB6hB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,IACVrB,gBAAgB,SAElB8iB,aAAc,CACZC,UAAW,QAEb9U,MAAO,CACL9N,MAAO,QACPiB,SAAU,OACVrC,QAAS,QAEX6kD,OAAO,CACLC,uBAAuB,CACrBxkD,OAAO,QAGXs8C,SAAU,CACRC,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9B1Y,MAAO,WAIP2jD,GAAa,GAEJC,GAAmB,SAACtiD,GAAU,IAAAuiD,EAAAC,EACnC9hD,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,GAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,MAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO4gC,EAAP3gC,EAAA,GAAkBmlC,EAAlBnlC,EAAA,GACAC,EAA8BtJ,IAAMK,SAAS,MAA7CkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6+B,EAAP5+B,EAAA,GAAgBklC,EAAhBllC,EAAA,GACAG,EAAkD1J,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAC7C8hD,IAD6C,IAEhDj2C,GAAI,CAAEu2C,QAAQ,MAFhB/kC,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOilC,EAAPhlC,EAAA,GAA0BilC,EAA1BjlC,EAAA,GAIAjJ,EAAgDL,mBAAS,IAAzDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO8lC,EAAP7lC,EAAA,GAAyBkoC,EAAzBloC,EAAA,GACA4e,EAA4Cvf,IAAMK,SAAS,IAA3Dmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOsvB,EAAPrvB,EAAA,GAAuBsvB,EAAvBtvB,EAAA,GACAC,EAAwCzf,IAAMK,SAAS,IAAvDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOsvB,EAAPrvB,EAAA,GAAqBsvB,EAArBtvB,EAAA,GACAE,EAA8B5f,IAAMK,SAAS,CAAC,oBAA9Cwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOlC,EAAPmC,EAAA,GAWA2L,GAXA3L,EAAA,GAWgD4L,aAAS/0B,GAAyB,CAChFgb,UAAW,CACTu9B,MAAOv7B,EACPuP,OAAQzP,EAAOE,EACfw7B,mBAAmB5iD,OAAAQ,EAAA,EAAAR,CAAA,GAAMqiD,GACzBQ,SAAUzxB,MALNzgB,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAjBwuB,EAAuBtuB,MAAvBsuB,EAA8BwR,cAS9Bh9B,IAAMkK,UAAU,WACd2/B,KACA,IAEF,IAAMA,EAAsB,eAAAtsC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOjB,MANkB6H,EAAAE,KAAA,EASvBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACC,GACHw+B,EAAoBx+B,EAAIrN,KAAK0tC,0BAA0B3yC,SAE1DyS,MAAM7L,QAAQzB,OAdY,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAiBxBwP,EAAO,OAAG5Q,QAAH,IAAGA,OAAH,UAAAsxC,EAAGtxC,EAAMoyC,uBAAT,IAAAd,OAAA,EAAGA,EAAuBv2C,MAE/Bm0C,EAAmB,SAAC17B,EAAMtY,GAChB,UAAVA,GACFs2C,EAAah+B,GAED,QAAVtY,IACEsY,EAAOw5B,GAAaA,GACtByE,EAAWj+B,GACXo+B,EAAqBtiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAChBqiD,GADe,IAElBU,gCAAiC,CAC/BC,mCAAoC,CAClCtF,UAAW,CAAEuF,qBAAsBngC,KAAO46B,GAAW36B,OAAO,cAAcmgC,kBAAmBpgC,KAAOoB,GAAMnB,OAAO,eACjH84B,QAAS,CAAEoH,qBAAsBngC,KAAO46B,GAAW36B,OAAO,cAAemgC,kBAAmBpgC,KAAOoB,GAAMnB,OAAO,qBAIjH8f,MAAM,0CAIXsgB,EAAa,SAAC1jD,GAClB,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAAS,WACPkJ,OAAO3H,KAAP,sBAAAvX,OAAkCjB,EAAMoM,OAG1ClL,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,SAyBR,SAASwiD,GAAS5J,GAYhB,OAVAA,EAAOA,EACJ6J,WACAzc,MAAM,6CAA+C,CAAC4S,IAEhDrnC,OAAS,KAEhBqnC,EAAOA,EAAKzxB,MAAM,IACb,IAAMyxB,EAAK,GAAK,GAAK,KAAO,KACjCA,EAAK,IAAMA,EAAK,GAAK,IAAM,IAEtBA,EAAKxc,KAAK,IAGnB,OACEr8B,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MAEZgC,EAAAC,EAAAC,cAACi6C,GAAA,EAAD,CAAUn7C,UAAWQ,EAAQw5C,SAAU1hC,KAAMtH,GAC3ChQ,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,aAGlCwC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ8L,OAA/B,sBACAtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC9C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACTuB,YAAY,+BACZi4B,WAAY,CACVuB,eACEh0C,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,SACvB5xB,EAAAC,EAAAC,cAACma,GAAApa,EAAD,QAINoZ,SAAU,SAAC5E,GACTktC,EAAqBtiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACdqiD,GADa,IAEhBiB,GAAI,CAAE,CAAC9qC,OAAQ,CAAEk8B,oBAAqBt/B,EAAMiG,OAAOzP,QAAW,CAACwc,aAAc,CAAEssB,oBAAqBt/B,EAAMiG,OAAOzP,QAAU,CAACo0B,MAAO,CAAE0U,oBAAqBt/B,EAAMiG,OAAOzP,gBAKjLjL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAChCrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACAt2B,OAAO,SACPrX,MAAM,aACNsJ,MAAO8xC,EACP1jC,SAAU,SAACkK,GAAD,OAAU07B,EAAiB17B,EAAM,UAC3CpkB,MAAO,CAAE7C,UAAW,GACpBsmD,oBAAqB,CACnBphD,aAAc,eAEhBqhD,QAAM,EACN5jD,QAAQ,SACRswC,aAAa,eAIfvvC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAChCrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACAt2B,OAAO,SACPrX,MAAM,WACNsJ,MAAOiwC,EACP7hC,SAAU,SAACkK,GAAD,OAAU07B,EAAiB17B,EAAM,QAC3CpkB,MAAO,CAAE7C,UAAW,GACpBsmD,oBAAqB,CACnBphD,aAAc,eAEhBqhD,QAAM,EACN5jD,QAAQ,SACRswC,aAAa,eAIfvvC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACzB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAN,WAAS,EACTha,QAAQ,WACRgiD,QAAM,EACNt/C,MAAM,SACNsJ,MAAO22C,EACPvoC,SAAU,SAAC5E,GACTotC,EAAkBptC,EAAMiG,OAAOzP,OAC/B02C,EAAqBtiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAChBqiD,GADe,IAElB7xC,OAAQ,CAACizC,QAASruC,EAAMiG,OAAOzP,WAGnCwnC,WAAY,CACVC,aACE1yC,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,QAAQzyB,MAAO,CAAEqX,OAAQ,YAC5B,KAAnBorC,GACC5hD,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,CACE8V,QAAS,SAACtB,GACRotC,EAAkB,WACXH,EAAkB7xC,OACzB8xC,EAAqBtiD,OAAAQ,EAAA,EAAAR,CAAA,GAAKqiD,UAQpB1hD,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,eAAhB,eACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,YAAhB,YACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,aACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,aACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,eAGlBjL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACzB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAN,WAAS,EACTha,QAAQ,WACRgiD,QAAM,EACNt/C,MAAM,OACNsJ,MAAO62C,EACPzoC,SAAU,SAAC5E,GACTstC,EAAgBttC,EAAMiG,OAAOzP,OAC7B02C,EAAqBtiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAChBqiD,GADe,IAElBt4C,kBAAmB,CAAC05C,QAASruC,EAAMiG,OAAOzP,WAG9CwnC,WAAY,CACVC,aACE1yC,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,QAAQzyB,MAAO,CAAEqX,OAAQ,YAC9B,KAAjBsrC,GACC9hD,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,CACE8V,QAAS,SAACtB,GACRstC,EAAgB,WACTL,EAAkBt4C,kBACzBu4C,EAAqBtiD,OAAAQ,EAAA,EAAAR,CAAA,GAAKqiD,UArBtC,OA6BqBnI,QA7BrB,IA6BqBA,OA7BrB,EA6BqBA,EAAkBxuC,IAAI,SAACC,GAC1C,OACEhL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAOD,EAAEE,IAAKF,EAAEpJ,WAM9B5B,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MAC3Bna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KAEE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAACic,GAAD,OACXhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd/L,MAAO,CAAER,WAAY,UACrBsoB,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,WAE3CH,EAASrlB,WAKlB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGpC,GACGA,EAAQnP,OAAS,EACjBmP,EAAQ5V,IAAI,SAACsc,EAAKrE,GAAN,IAAA+/B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACR3jD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAA87B,EAAA,OAAyB17B,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAKnc,UAA9B,IAAA63C,IAAoC,IACpC/iD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAA+7B,EAAA,OACG37B,QADH,IACGA,OADH,EACGA,EAAKI,oBADR,IAAAu7B,IACwB,IAExBhjD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAAg8B,EAAA,OAAyB57B,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAKgY,aAA9B,IAAA4jB,IAAuC,IACvCjjD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAAi8B,EAAA,OAAyB77B,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAKxP,cAA9B,IAAAqrC,IAAwC,IACxCljD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SACX,OAAHI,QAAG,IAAHA,OAAA,UAAA87B,EAAA97B,EAAK+6B,uCAAL,IAAAe,OAAA,EAAAA,EAAsC7E,eACnCn8B,KAAM,OACJkF,QADI,IACJA,OADI,UAAA+7B,EACJ/7B,EAAK+6B,uCADD,IAAAgB,OAAA,EACJA,EACI9E,eACJl8B,OAAO,eACT,IAKNpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SACX,OAAHI,QAAG,IAAHA,OAAA,UAAAg8B,EAAAh8B,EAAK+6B,uCAAL,IAAAiB,OAAA,EAAAA,EAAsCzI,WACnC6H,GAAQ,OACNp7B,QADM,IACNA,OADM,UAAAi8B,EACNj8B,EAAK+6B,uCADC,IAAAkB,OAAA,EACNA,EAAsC1I,WAExC,IAEN56C,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SACX,OAAHI,QAAG,IAAHA,OAAA,UAAAk8B,EAAAl8B,EAAK+6B,uCAAL,IAAAmB,OAAA,EAAAA,EAAsC1I,SACnC4H,GAAQ,OACNp7B,QADM,IACNA,OADM,UAAAm8B,EACNn8B,EAAK+6B,uCADC,IAAAoB,OAAA,EACNA,EAAsC3I,SAExC,IAEN76C,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAAw8B,EAAA,OACGp8B,QADH,IACGA,OADH,UAAAq8B,EACGr8B,EAAKjP,YADR,IAAAsrC,OAAA,EACGA,EAAW9hD,YADd,IAAA6hD,IACsB,IAEtBzjD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,QAAA08B,EAAA,OACGt8B,QADH,IACGA,OADH,EACGA,EAAKxX,cADR,IAAA8zC,IACkB,IAElB3jD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACsiD,EAAD,CAAYt3C,GAAImc,EAAInc,SAI5BlL,EAAAC,EAAAC,cAAA,KAAGf,MAAO,CAACyyB,SAAS,WAAW3W,MAAM,QAAS,YAEpDjb,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,KAC5CC,MAAK,OAAEjY,QAAF,IAAEA,OAAF,UAAAuxC,EAAEvxC,EAAMoyC,uBAAR,IAAAb,OAAA,EAAEA,EAAuB/qB,WAC9B9P,YAAaA,EACbF,KAAMA,EACN0B,aAhUW,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAgUIC,oBA7TkB,SAAC1T,GAC/BiS,EAAejS,EAAMiG,OAAOzP,OAC5Bub,EAAQ,IA4TIo9B,aAAc,yDC7XxB9lC,GAAcld,YAbL,SAAC3E,GAAD,MAAY,CACzB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAC9B,GACtC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDglD,IACA,OACE9jD,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,QACXxC,UAAWQ,EAAQovC,YACnB74B,QAASwB,GAETvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAC3E,GAAD,MAAY,CAC3C+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAC3E,GAAD,MAAY,CAC3C+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MAEW,SAASC,GAAUnlD,GAChC,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GAC4BN,IAAMK,SAAS,KAA3C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOkoC,EAAPjoC,EAAA,GAAekoC,EAAfloC,EAAA,GAKMod,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3Ck5C,EAAU9kD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6kD,GAAN,GAAA7kD,OAAAM,EAAA,EAAAN,CAAA,GAAe+Y,EAAOnN,OAE3Bm5C,EAAoB,SAAChsC,GAAD,OAAU,SAACqC,GACnC0pC,EAAU9kD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACL6kD,GADI,GAAA7kD,OAAAM,EAAA,EAAAN,CAAA,GAEN+Y,EAAOqC,EAAEC,OAAOzP,WAMf+R,EAAc,WAClBle,EAAMulD,eAGR,OACErkD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACElG,QAASyF,EACTY,kBAAgB,0BAChBtG,KAAMA,GAENtX,EAAAC,EAAAC,cAACokD,GAAD,CAAap5C,GAAG,0BAA0BqM,QAASyF,GAAnD,wBACwBle,EAAMyM,UAE9BvL,EAAAC,EAAAC,cAACqkD,GAAD,CAAe5c,UAAQ,GACrB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAASja,EAAM8L,SACfkvB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACR/gB,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,eAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAASja,EAAM42B,YACfoE,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,sBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACR/gB,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,gBAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAASja,EAAM2lD,aACf3qB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,uBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACR/gB,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,cAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAASja,EAAM4lD,WACf5qB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,oBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,uBAIT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,oBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCyX,SAAUggB,EAAmB,cAC7BtgB,QAAS,CACP,CAAEpX,MAAO,EAAGC,KAAM,QAClB,CAAED,MAAO,EAAGC,KAAM,eAEpBk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,gBACN0X,SAAU+qC,EAAkB,UAC5BnrC,WAAS,EACT/N,GAAG,oBACHtJ,KAAK,kBAKb5B,EAAAC,EAAAC,cAACykD,GAAD,KACE3kD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,UAGAhd,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAvPjB,WACjBjX,EAAM8lD,WAAWV,EAAQplD,EAAMw1B,UAsPwB92B,MAAM,WAAvD,WCnRV,IAAM6oB,GAAU,CACd,CAAEnb,GAAI,YAAavJ,MAAO,cAC1B,CAAEuJ,GAAI,mBAAoBvJ,MAAO,oBACjC,CAAEuJ,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,oBAAqBvJ,MAAO,qBAClC,CAAEuJ,GAAI,oBAAqBvJ,MAAO,qBAClC,CAAEuJ,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAGrCjrB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAwKLL,YAAW,SAACC,GAAD,MAAY,CAC9C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA+CQz1B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAnFX,IAuFMqnB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,QAET0oD,SAAU,CACRzmD,SAAU,GAEZ45B,YAAa,CACX57B,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WA8dA2R,gBA1dI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAkB+V,GAAlB9V,EAAA,GAAAA,EAAA,IACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACoCvJ,IAAMK,SAAS,KAAnDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOqoC,EAAPpoC,EAAA,GAAmBqoC,EAAnBroC,EAAA,GACA4V,EAA0Cvf,IAAMK,SAAS,IAAzDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAsB0yB,GAAtBzyB,EAAA,GAAAA,EAAA,IACQliB,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACRmiB,EAAgCzf,IAAMK,SAAS,IAA/Cqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAO0V,EAAPzV,EAAA,GAAiBwyB,EAAjBxyB,EAAA,GACAE,EAA8B5f,IAAMK,SAAS,MAA7Cwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACgC7f,IAAMK,UAAS,IAA/C2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAAiBoyB,GAAjBnyB,EAAA,GAAAA,EAAA,IACAC,EAA2CjgB,IAAMK,SAAS,WAA1D6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAOmyB,EAAPlyB,EAAA,GAAuBmyB,EAAvBnyB,EAAA,GAGAG,EAA0BrgB,IAAMK,SAAS,OAAzCigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC8BtgB,IAAMK,SAAS,eAA7CmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC8BxgB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNyoB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAOO,EAAPN,EAAA,GAAgBO,EAAhBP,EAAA,GAKAG,EAAwB/gB,IAAMK,UAAS,GAAvC4gB,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAOxc,EAAP0c,EAAA,GAAajY,EAAbiY,EAAA,GAKMhX,GAAc,WAClBjB,GAAQ,IAGV2Y,GAA4C3hB,IAAMK,UAAS,GAA3DuhB,GAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,GAAA,GAAOsT,GAAPrT,GAAA,GAAuBsT,GAAvBtT,GAAA,GAKM8T,GAAyB,WAC7BR,IAAkB,IAtCQ,SAwCbE,GAxCa11B,EAAAC,GAAA,OAAA01B,GAAAx1B,MAAAC,KAAA1B,WAAA,SAAAi3B,KAAA,OAAAA,GAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAwC5B,SAAAC,EAA4B23B,EAAa/T,GAAzC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACE2zC,GAAY,GACRzgC,EAAY,CACd6jB,UAAWJ,GAHf72B,EAAAE,KAAA,EAKQzS,EAAM+d,OACT0rB,OAAO,CAAEC,SAAUniC,GAAmBoe,cACtCtH,KAAK,SAACC,GACO,OAARA,GACFkX,MAIH/W,MAAM,SAACC,MAbZ,OAcEyqB,IAAkB,GAdpB,wBAAA52B,EAAAmB,SAAA9B,OAxC4BkC,MAAAC,KAAA1B,WAAA,SA8Dbk0C,GA9Da1yC,EAAAuiB,GAAA,OAAAowB,GAAA1yC,MAAAC,KAAA1B,WAAA,SAAAm0C,KAAA,OAAAA,GAAAjmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8D5B,SAAAsV,EAA4Bw/B,EAAejxB,GAA3C,IAAAnpB,EAAAq6C,EAAAC,EAAA1vB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMpG,EAAeo6C,EAAc7vB,YAC7B6vB,EAAc7vB,YACd,GACA8vB,EAAgBD,EAAcd,aAC9Bc,EAAcd,aACd,GACAgB,EAAcF,EAAcb,WAAaa,EAAcb,WAAa,IAEpE3uB,EAAW,IACP,SAAewvB,EAAc36C,SAAShJ,KAC9Cm0B,EAAQ,YAAkB5qB,EAC1B4qB,EAAQ,gBAAsBwvB,EAAcG,aAC5C3vB,EAAQ,gBAAsBwvB,EAAcI,aAC5C5vB,EAAQ,WAAiBwvB,EAAcK,WAAWjkD,MAClDo0B,EAAQ,cAAoByvB,EAC5BzvB,EAAQ,YAAkB0vB,EAC1B1vB,EAAQ,YAAkBwvB,EAAcrB,OACxCnuB,EAAQ,SAAeovB,EACvBzzC,QAAQyR,IAAI,YAnBd6C,EAAAzU,KAAA,GAoBQlB,EAAmB,aAAc,GAAI0lB,GApB7C,QAqBEha,GAAQ,GACRmY,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzCO,IAvBF,yBAAAtO,EAAAxT,SAAAuT,OA9D4BnT,MAAAC,KAAA1B,WAAA,SAAA00C,KAAA,OAAAA,GAAAxmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiH5B,SAAA6T,EAA0BpZ,EAAIopB,GAA9B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EAGQlB,EAAmB,gBAAiB,GAAIy0C,GAHhD,OAKE5wB,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzCO,IANF,wBAAA9P,EAAAhS,SAAA8R,OAjH4B1R,MAAAC,KAAA1B,WAyH5B,IAMMizC,GAAoB,SAAChsC,GAAD,OAAU,SAACqC,GACnCsqC,EAAc1lD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTylD,GADQ,GAAAzlD,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOqC,EAAEC,OAAOzP,WA4BrB,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQw4B,aACvBh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTkkB,QAAQ,OACR5+B,WAAW,SACXc,UAAWQ,EAAQqlD,SACnBxoD,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAM,+BAE5Be,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAc6K,EACdpsC,QAAS,CAAC,UAAW,WAAY,OAAQ,gBAAiB,OAC1DM,SArD4B,SAAC5E,EAAOxJ,GAC9Cm6C,EAAiBn6C,IAqDP6uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0C,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKlDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE+6B,UAAW,UACpCl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyB,QAAQ,YACR0W,KAAK,QACLxW,MAAO,CAAEgyB,aAAc,GAAID,YAAa,IACxCnb,QArLY,WACtBgG,GAAQ,KA+KA,cAYN/b,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAC+6C,GAAD,OACX9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO9F,GACP2xB,YAAa,SAACvmB,GAAD,OACXmiB,EAAaniB,EAAKg2C,kBAAkBxvB,aAEtC9R,UAAW,CAAEuhC,WAAYb,IAExB,SAAA70C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAKxB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,GACFi1C,EAAiBj1C,GAEf/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACunC,GAAD,CACEn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT2M,QAASA,EACTuT,UAAWM,GACX3T,SAAUiU,GACVf,OAAQM,KAET1wB,EACCtX,EAAAC,EAAAC,cAAC+jD,GAAD,CACEzwB,MAAOlc,EACP/L,SAAU45C,EACV7wB,QAASA,EACTswB,WAAYS,GACZz6C,SAAU9L,EAAM28B,WAChB/F,YAAa52B,EAAMmnD,aACnBxB,aAAc3lD,EAAM2lD,aACpBC,WAAY5lD,EAAM4lD,WAClBp5C,MAAOxM,EAAMwM,MACb+4C,YAAarnC,KAEb,KAEHjN,EAAKg2C,kBAAkBj7C,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAChChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzc,UACjB5K,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI9b,UAEPvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIzc,UAEP5K,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI9K,YAAc8K,EAAI9K,YAAc,OAEvCvc,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAcfjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI8+B,gBAAiB,MAG1BnmD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAafjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI++B,gBAAiB,MAI1BpmD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACdgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCyX,UAxNNjB,EAyNQ,mBAzNC,SAAC3D,EAAOxJ,GAC3C85C,EAAc1lD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKylD,GAAN,GAAAzlD,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OA0NP8N,QAAS,CACP,CAAEpX,MAAO,EAAGC,KAAM,QAClB,CAAED,MAAO,EAAGC,KAAM,eAEpBk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,iBAMZpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACT,IAAnB7+B,EAAIg/B,WACD,OACA,aAAc,MAK1BrmD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACdgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAO65C,EAAWyB,YAClBltC,SAAU+qC,GAAkB,eAC5Bl5C,GAAG,oBACHtJ,KAAK,eAGL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIk/B,YAAa,MAK1BvmD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZ6R,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACjC45C,EAAWxT,UACXjqB,EAAIiqB,YAGXrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,KAChB8qB,MAAM,UAENjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OA3Zf,SAAA0a,EAAAC,GAAA,OAAAywB,GAAAjzC,MAAAC,KAAA1B,WA2ZsBq+B,CAAWnoB,EAAInc,GAAIopB,KAEnCt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAlUhDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAmUT/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIFD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,MAEhB6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAzU/B+rC,EAyUiDn/B,EAxUnE09B,EAAc1lD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTylD,GADQ,IAEX2B,SAAUD,EAAYt7C,GACtBi7C,gBAAiBK,EAAYL,gBAC7BC,gBAAiBI,EAAYJ,gBAC7BG,YAAaC,EAAYD,YACzBjV,UAAW,IAAIhuB,aASjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAhBvD,IAAoByyB,IA0UgBxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OAnX3CwqC,EAmX+D59B,EAnXvCnc,SAExB+8B,IAAkB,KAmXgBjoC,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,UArTT,IAACmY,MA+THpY,EAAAC,EAAAC,cAAA,WAAM,2BC/tB3BmmB,GAAU,CACd,CAAEnb,GAAI,iBAAkBvJ,MAAO,kBAC/B,CAAEuJ,GAAI,kBAAmBvJ,MAAO,mBAChC,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,OAAQvJ,MAAO,SAIJ3F,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiJLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WC5PTiG,IDufS0L,aAvPI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAkB+V,GAAlB9V,EAAA,GAAAA,EAAA,IACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACsCvJ,IAAMK,SAAS,KAArDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOiqC,EAAPhqC,EAAA,GAAoBiqC,EAApBjqC,EAAA,GAGA4V,EAA0Bvf,IAAMK,SAAS,OAAzCmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC8Bxf,IAAMK,SAAS,eAA7Cqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8B1f,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFN0nB,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOsB,EAAPrB,EAAA,GAAgBsB,EAAhBtB,EAAA,GA2EA,OACE5yB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO5F,GACPyxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAK62C,wBAAwBrwB,aAC/D9R,UAAW,CAAEuhC,WAAc,cAEzB,SAAA11C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAKhB,OALqCK,EAAdgkB,QAKnBrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACK/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACJvF,EAAK62C,wBAAwB97C,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OACtChjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzY,gBACjB5O,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIzY,gBAGP5O,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIw/B,eAGP7mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYI,UACnB57C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIy/B,UADP,MAGN9mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYK,aACnB77C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI0/B,aADP,MAGN/mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACvC5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAAEpX,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eACxDk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,iBAG3DpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACN,IAAzB7+B,EAAI2/B,iBAAyB,OAAS,aADtC,MAKThnD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAkB4M,EAAIyqB,kBAvInE5d,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAuIyC/zB,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtDD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAtK9CyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAsK4B/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvK3B+rC,EAuK6Cn/B,EAtK/Ds/B,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,IAEZI,UAAWN,EAAYM,UACvBE,iBAAkBR,EAAYQ,iBAC9BD,aAAcP,EAAYO,aAC1BzV,UAAW,IAAIhuB,aAWjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAjBvD,IAAoByyB,IAuKmDxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,YAS9CD,EAAAC,EAAAC,cAAA,WAAM,0BCtdjB,CACd,CAAEgL,GAAI,iBAAkBvJ,MAAO,kBAC/B,CAAEuJ,GAAI,kBAAmBvJ,MAAO,mBAChC,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,OAAQvJ,MAAO,UAIJ3F,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiE9B,SAAS4qD,GAAqBhnD,EAAGinD,EAAGz2B,GAClC,OAAIy2B,EAAEz2B,GAAWxwB,EAAEwwB,IACT,EAENy2B,EAAEz2B,GAAWxwB,EAAEwwB,GACV,EAEF,EAyEgBz0B,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WCvQTiG,IDueS0L,aA5NI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,GAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8V,EAAP7V,EAAA,GAAkB8V,EAAlB9V,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAoB+V,GAApB9V,EAAA,GAAAA,EAAA,IAGAG,EAA0B1J,IAAMK,SAAS,OAAzCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO8T,EAAP7T,EAAA,GACA4V,GADA5V,EAAA,GAC8B3J,IAAMK,SAAS,eAA7Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO7B,EAAP8B,EAAA,GACAC,GADAD,EAAA,GACsCxf,IAAMK,SAAS,KAArDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOk0B,EAAPj0B,EAAA,GAAoBk0B,EAApBl0B,EAAA,GAEAE,EAA8B5f,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFN0nB,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOsB,EAAPrB,EAAA,GAAgBsB,EAAhBtB,EAAA,GA4EA,OACE5yB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO5E,GACPywB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAKo3C,yBAAyB5wB,aAChE9R,UAAW,CAAEuhC,WAAc,cAEzB,SAAA11C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAKhB,OALqCK,EAAdgkB,QAKnBrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACK/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAjS3B,SAAoB8xC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMr8C,IAAI,SAACw8C,EAAIvkC,GAAL,MAAe,CAACukC,EAAIvkC,KAMrD,OALAskC,EAAezxB,KAAK,SAAC51B,EAAGinD,GACtB,IAAM32B,EAAQ82B,EAAWpnD,EAAE,GAAIinD,EAAE,IACjC,OAAc,IAAV32B,EAAoBA,EACjBtwB,EAAE,GAAKinD,EAAE,KAEXI,EAAev8C,IAAI,SAAAw8C,GAAE,OAAIA,EAAG,KA2RdC,CAAWz3C,EAAKo3C,yBAAyBr8C,MAxShE,SAAuBylB,EAAOE,GAC5B,MAAiB,SAAVF,EACH,SAACtwB,EAAGinD,GAAJ,OAAUD,GAAqBhnD,EAAGinD,EAAGz2B,IACrC,SAACxwB,EAAGinD,GAAJ,OAAWD,GAAqBhnD,EAAGinD,EAAGz2B,IAqS2Bg3B,CAAcl3B,EAAOE,IAAUrJ,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,EAAKrE,GAAN,OAC9IhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIqgC,cACjB1nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIqgC,cAGP1nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIsgC,aAGP3nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIugC,WAC7B5nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIwgC,OAC7B7nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACvC5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAAEpX,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eACxDk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,iBAG3DpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACN,IAAzB7+B,EAAI2/B,iBAAyB,OAAS,aADtC,MAKThnD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAkB4M,EAAIyqB,kBA3GnE5d,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OA2GyC/zB,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtDD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GA3I9CyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OA2I4B/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA5I3B+rC,EA4I6Cn/B,EA3I/Ds/B,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,IAEZI,UAAWN,EAAYM,UACvBE,iBAAkBR,EAAYQ,iBAC9BD,aAAcP,EAAYO,aAC1BzV,UAAW,IAAIhuB,aAWjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAjBvD,IAAoByyB,IA4ImDxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,YAS9CD,EAAAC,EAAAC,cAAA,WAAM,qBAUvBF,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAAK,KAClCC,MAAOiK,EACPxL,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aAhMd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAUzB,IA+Lb0B,oBA5Ld,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,aCnSI,CACd,CAAEtb,GAAI,iBAAkBvJ,MAAO,kBAC/B,CAAEuJ,GAAI,kBAAmBvJ,MAAO,mBAChC,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,OAAQvJ,MAAO,UAIJ3F,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiJLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WCzQT0nC,IDgdS/1B,aAnMI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,GAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8V,EAAP7V,EAAA,GAAkB8V,EAAlB9V,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAoB+V,GAApB9V,EAAA,GAAAA,EAAA,IAEAG,EAA0B1J,IAAMK,SAAS,OAAzCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GACA6V,GADA5V,EAAA,GAAAA,EAAA,GAC8B3J,IAAMK,SAAS,eAA7Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsCxf,IAAMK,SAAS,KAArDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOk0B,EAAPj0B,EAAA,GAAoBk0B,EAApBl0B,EAAA,GAEAE,EAA8B5f,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFN0nB,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOsB,EAAPrB,EAAA,GAAgBsB,EAAhBtB,EAAA,GA8EA,OACE5yB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO9E,GACP2wB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAKg4C,wBAAwBxxB,aAC/D9R,UAAW,CAAEuhC,WAAc,cAEzB,SAAA11C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAKhB,OALqCK,EAAdgkB,QAKnBrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACK/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACJvF,EAAKg4C,wBAAwBj9C,MAAMsc,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,EAAKrE,GAAN,OAClGhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAI9b,UACjBvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI9b,UAGPvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIsgC,aAGP3nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIugC,WAC7B5nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI7Z,QAC7BxN,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAiC,IAAzBI,EAAI2/B,iBAAyB,OAAS,cAE/DhnD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAkB4M,EAAIyqB,kBAnGnE5d,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAmGyC/zB,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtDD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAnI9CyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAmI4B/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OApI3B+rC,EAoI6Cn/B,EAnI/Ds/B,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,IAEZI,UAAWN,EAAYM,UACvBE,iBAAkBR,EAAYQ,iBAC9BD,aAAcP,EAAYO,aAC1BzV,UAAW,IAAIhuB,aAWjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAjBvD,IAAoByyB,IAoImDxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,YAS9CD,EAAAC,EAAAC,cAAA,WAAM,qBAUvBF,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,IAAK,IAAK,KAEnCC,MAAOiK,EACPxL,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aArId,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAUzB,IAoIb0B,oBAjId,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,aCvUKxqB,YAAW,SAACC,GAAD,MAAY,MAC3B+rD,GAAc1tB,YAAW,SAACx7B,GACrC,IAAAqU,EAAoCJ,IAAMK,SAAS,GAAnDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACoCN,IAAMK,SAAS,IAAnD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACwClJ,IAAMK,SAAS,KAAvDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8rC,EAAP7rC,EAAA,GAAqB8rC,EAArB9rC,EAAA,GACAC,EAAwCtJ,IAAMK,SAAS,IAAvDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO4pC,EAAP3pC,EAAA,GAAqB6rC,EAArB7rC,EAAA,GACAG,EAAwC1J,IAAMK,SAAS,IAAvDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOgoC,EAAP/nC,EAAA,GAAqB0rC,EAArB1rC,EAAA,GACA4V,EAAoCvf,IAAMK,SAAS,IAAnDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOoyB,EAAPnyB,EAAA,GAAmB81B,EAAnB91B,EAAA,GACAC,EAA0Bzf,IAAMK,UAAS,GAAzCqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAEgBq1B,KA4BhB,OAvBA7qC,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,M5Eq+BT,iW4Er+BgCga,UAAW,MAG3DzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLgkC,EAAgBhkC,EAAWnU,KAAKlF,2BAA2BC,OAC3Dq9C,EAAgBjkC,EAAWnU,KAAK3E,sBAAsBN,OACtDs9C,EAAgBlkC,EAAWnU,KAAKvE,mBAAmBV,OACnDu9C,EAAcnkC,EAAWnU,KAAKxC,wBAAwBzC,SAMvDyS,MAAM7L,QAAQzB,QAChB,IAGDjQ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GAoCvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IACrBhlB,EAAAC,EAAAC,cAACooD,GAAD,CACE7sB,WAAYwsB,EACZhC,aAAcA,EACdxB,aAAcA,EACdC,WAAYA,EACZ6D,OAAQ,iBAmEHx2B,aAAWuI,YAAW0tB,aC1J/BjqD,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBmsD,GAAkBluB,YAAW,SAACx7B,GACzC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAAqsC,IAAA,OAAAA,EAAAppD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUnD,SAAAC,EAA+BuqB,GAA/B,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBlB,EACnB,0BACA,GACA4qB,GAJJ,OAAA5pB,EAAAgB,KAAA,wBAAAhB,EAAAmB,SAAA9B,OAVmDkC,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOtG,MAIhC6N,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL6lB,EAAe7lB,EAAWnU,KAAK24C,oBAAoB59C,OACnDm/B,EAAe/lB,EAAWnU,KAAK24C,oBAAoB59C,SAEpDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAnBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OACQ64B,EAAgBN,EAAYzsB,OAAO,SAACgtB,GAAD,OACvCA,EAAEzoC,KAAKyiC,cACHgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAa,MACxC,OAENgP,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDmD1R,MAAAC,KAAA1B,WAyDnD,OArBA8L,oBAAU,YApCyC,WAAA2oB,EAAAhzB,MAAAC,KAAA1B,WAqCjD40B,IACC,IAoBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAACoB,EAAD,MAQAtB,EAAAC,EAAAC,cAACoqC,GAAD,CACEh/B,MAAO,gBACPi5B,aAAa,UACbZ,SAvE2C,SAAAlxB,GAAA,OAAAg2C,EAAA71C,MAAAC,KAAA1B,YAwE3C4I,SAxE2C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyE3CkV,QAAStW,GAAKsW,QACdpO,OAAQ+xB,kBCnFZjsC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBssD,GAAmBruB,YAAW,SAACx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAEAuI,GAFAtI,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,mBAC8B0C,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARoD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUpD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE2wB,MAAM/vB,KAAKC,UAAU6oB,IADvB,wBAAA5pB,EAAAmB,SAAA9B,OAVoDkC,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmBpD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOlH,MAGhCyO,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL6lB,EAAe7lB,EAAWnU,KAAKlF,2BAA2BC,OAC1Dm/B,EAAe/lB,EAAWnU,KAAKlF,2BAA2BC,SAE3DyS,MAAM7L,QAAQzB,OAdnB,wBAAA+V,EAAAxT,SAAAuT,OAnBoDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDpD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OACQ64B,EAAgBN,EAAYzsB,OAAO,SAACgtB,GAAD,OACvCA,EAAEzoC,KAAKyiC,cACHgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAa,MACxC,OAENgP,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDoD1R,MAAAC,KAAA1B,WAyDpD,OAtBA8L,oBAAU,YAnC0C,WAAA2oB,EAAAhzB,MAAAC,KAAA1B,WAoClD40B,IACC,IAqBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAACoB,EAAD,MASAtB,EAAAC,EAAAC,cAACoqC,GAAD,CACE5F,OAAQ30B,GAAK20B,OACbp5B,MAAO,kBACPi5B,aAAa,UACbZ,SAzE4C,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YA0E5C4I,SA1E4C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YA2E5CkV,QAAStW,GAAKsW,QACdpO,OAAQ+xB,sBC/FAhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC8pD,IACAz1C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBwsD,GAAoBvuB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVmDkC,MAAAC,KAAA1B,WAAA,SAgBpC40B,IAhBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO3H,MAGhCkP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKpD,qBAAqB7B,OACpDm/B,EAAe/lB,EAAWnU,KAAKpD,qBAAqB7B,SAErDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDmD1R,MAAAC,KAAA1B,WAwDnD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAENtL,EAAAC,EAAAC,cAACoB,EAAD,MAUItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,cAAei5B,aAAa,UAAUZ,SAxEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwEqC4I,SAxErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC5FzHhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCgqD,IACA31C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB0sD,GAAgBzuB,YAAW,SAAAx7B,GACtC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR+C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAW/C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,iBAAkB,GAAI4qB,GAHjE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAX+CkC,MAAAC,KAAA1B,WAAA,SAiBhC40B,IAjBgC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiB/C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO5H,MAGhCmP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKi5C,iBAAiBl+C,OAChDm/B,EAAe/lB,EAAWnU,KAAKi5C,iBAAiBl+C,SAEjDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjB+CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkD/C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAlD+C1R,MAAAC,KAAA1B,WAyD/C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,UAAWi5B,aAAa,UAAUZ,SAxEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwEqC4I,SAxErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFjIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB4sD,GAAiB3uB,YAAW,SAAAx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARgD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWhD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,sBAAuB,GAAI4qB,GAHtE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXgDkC,MAAAC,KAAA1B,WAAA,SAiBjC40B,IAjBiC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBhD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOvH,MAGhC8O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKrB,sBAAsB5D,OACrDm/B,EAAe/lB,EAAWnU,KAAKrB,sBAAsB5D,SAEtDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjBgDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDhD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAE17B,cAAiB07B,EAAE17B,aAAa01B,cAAc4B,MAAMhL,EAAY,OAClEoP,EAAEz7B,gBAAkBy7B,EAAEz7B,eAAey1B,cAAc4B,MAAMhL,EAAY,QAEvEgP,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDgD1R,MAAAC,KAAA1B,WA0DhD,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,kBAAmBi5B,aAAa,UAAUZ,SAzEvB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyE4C4I,SAzE5C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyE8DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFzIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB6sD,GAAwB5uB,YAAW,SAAAx7B,GAC9C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARuD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUvD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,yBAA0B,GAAI4qB,GAHzE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVuDkC,MAAAC,KAAA1B,WAAA,SAgBxC40B,IAhBwC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBvD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOrH,MAGhC4O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKjE,0BAA0BhB,OACzDm/B,EAAe/lB,EAAWnU,KAAKjE,0BAA0BhB,SAE1DyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBuDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDvD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDuD1R,MAAAC,KAAA1B,WAwDvD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,mBAAoBi5B,aAAa,UAAUZ,SAvEjB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEsC4I,SAvEtC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuEwDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBChF1IjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB8sD,GAAsB7uB,YAAW,SAAAx7B,GAC5C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARqD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWrD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,uBAAwB,GAAI4qB,GAHvE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXqDkC,MAAAC,KAAA1B,WAAA,SAiBtC40B,IAjBsC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBrD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOpH,MAGhC2O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK/D,wBAAwBlB,OACvDm/B,EAAe/lB,EAAWnU,KAAK/D,wBAAwBlB,SAExDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjBqDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDrD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDqD1R,MAAAC,KAAA1B,WAyDrD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,iBAAkBi5B,aAAa,UAAUZ,SAxEjB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwEsC4I,SAxEtC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEwDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC3F5HhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCsqD,IACAj2C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBgtD,GAAoB/uB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVmDkC,MAAAC,KAAA1B,WAAA,SAgBpC40B,IAhBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOrG,MAGhC4N,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKzB,2BAA2BxD,OAC1Dm/B,EAAe/lB,EAAWnU,KAAKzB,2BAA2BxD,SAE3DyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDmD1R,MAAAC,KAAA1B,WAwDnD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,oBAAqBi5B,aAAa,UAAUZ,SAvEtB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuE2C4I,SAvE3C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuE6DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC3F/HhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCwqD,IACAn2C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBktD,GAAkBjvB,YAAW,SAAAx7B,GACxC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARiD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUjD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,mBAAoB,GAAI4qB,GAHnE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAViDkC,MAAAC,KAAA1B,WAAA,SAgBlC40B,IAhBkC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBjD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOpG,MAGhC2N,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK5B,yBAAyBrD,OACxDm/B,EAAe/lB,EAAWnU,KAAK5B,yBAAyBrD,SAEzDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBiDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmDjD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAnDiD1R,MAAAC,KAAA1B,WA0DjD,OAzBA8L,oBAAU,WACR8oB,KACC,IAaH9oB,oBAAU,aAEP,IASDjd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,kBAAmBi5B,aAAa,UAAUZ,SA1EtB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YA0E2C4I,SA1E3C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YA0E6DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC9F7HhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC0qD,IACAr2C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBotD,GAAiBnvB,YAAW,SAAAx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARgD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUhD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,kBAAmB,GAAI4qB,GAHlE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVgDkC,MAAAC,KAAA1B,WAAA,SAgBjC40B,IAhBiC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBhD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOnG,MAGhC0N,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK9B,wBAAwBnD,OACvDm/B,EAAe/lB,EAAWnU,KAAK9B,wBAAwBnD,SAExDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBgDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDhD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDgD1R,MAAAC,KAAA1B,WAwDhD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,iBAAkBi5B,aAAa,UAAUZ,SAvEtB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuE2C4I,SAvE3C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuE6DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC3F5HhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC4qD,IACAv2C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBstD,GAAgBrvB,YAAW,SAAAx7B,GACtC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR+C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAU/C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,iBAAkB,GAAI4qB,GAHjE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAV+CkC,MAAAC,KAAA1B,WAAA,SAgBhC40B,IAhBgC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgB/C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOlG,MAGhCyN,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKrE,iBAAiBZ,OAChDm/B,EAAe/lB,EAAWnU,KAAKrE,iBAAiBZ,SAEjDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhB+CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiD/C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjD+C1R,MAAAC,KAAA1B,WAwD/C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,UAAWi5B,aAAa,UAAUZ,SAvEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEqC4I,SAvErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBCjFjIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhButD,GAAoBtvB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEI2wB,MAAM/vB,KAAKC,UAAU6oB,IAFzB5pB,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXmDkC,MAAAC,KAAA1B,WAAA,SAiBpC40B,IAjBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO9H,MAGhCqP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK3C,sBAAsBtC,OACrDm/B,EAAe/lB,EAAWnU,KAAK3C,sBAAsBtC,SAEtDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDmD1R,MAAAC,KAAA1B,WAyDnD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,gBAAiBi5B,aAAa,UAAUZ,SAxElB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwEuC4I,SAxEvC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEyDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBCjFvIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBwtD,GAAmBvvB,YAAW,SAAAx7B,GACzC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARkD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUlD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,oBAAqB,GAAI4qB,GAHpE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVkDkC,MAAAC,KAAA1B,WAAA,SAgBnC40B,IAhBmC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBlD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO1H,MAGhCiP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKvD,mBAAmB1B,OAClDm/B,EAAe/lB,EAAWnU,KAAKvD,mBAAmB1B,SAEnDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBkDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDlD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDkD1R,MAAAC,KAAA1B,WAwDlD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,aAAci5B,aAAa,UAAUZ,SAvEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEqC4I,SAvErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBC/EpIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBytD,GAAoBxvB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXmDkC,MAAAC,KAAA1B,WAAA,SAiBpC40B,IAjBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOtH,MAGhC6O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKg6C,sBAAsBj/C,OACrDm/B,EAAe/lB,EAAWnU,KAAKg6C,sBAAsBj/C,SAEtDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAWoJ,cAAe,MAAQ,OAGtF4F,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDmD1R,MAAAC,KAAA1B,WA0DnD,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAENtL,EAAAC,EAAAC,cAACoB,EAAD,MASItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,iBAAkBi5B,aAAa,UAAUZ,SAzEnB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyEwC4I,SAzExC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyE0DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBCnFxIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB2tD,GAAsB1vB,YAAW,SAAAx7B,GAC5C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARqD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWrD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,uBAAwB,GAAI4qB,GAHvE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXqDkC,MAAAC,KAAA1B,WAAA,SAiBtC40B,IAjBsC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBrD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOtH,MAGhC6O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKk6C,wBAAwBn/C,OACvDm/B,EAAe/lB,EAAWnU,KAAKk6C,wBAAwBn/C,SAExDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjBqDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDrD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAWoJ,cAAe,MAAQ,OAGtF4F,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDqD1R,MAAAC,KAAA1B,WA0DrD,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,iBAAkBi5B,aAAa,UAAUZ,SAzEjB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyEsC4I,SAzEtC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyEwDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFxIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB6tD,GAAqB5vB,YAAW,SAAAx7B,GAC3C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARoD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUpD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,sBAAuB,GAAI4qB,GAHtE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVoDkC,MAAAC,KAAA1B,WAAA,SAgBrC40B,IAhBqC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBpD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOnH,MAGhC0O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK3E,sBAAsBN,OACrDm/B,EAAe/lB,EAAWnU,KAAK3E,sBAAsBN,SAEtDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBoDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkDpD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAlDoD1R,MAAAC,KAAA1B,WAyDpD,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MAQQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,qBAAsBi5B,aAAa,UAAUZ,SAvEtB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuE2C4I,SAvE3C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuE6DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC1FhIhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCqrD,IACAh3C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB+tD,GAAiB9vB,YAAW,SAAAx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARgD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUhD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,kBAAmB,GAAI4qB,GAHlE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVgDkC,MAAAC,KAAA1B,WAAA,SAgBjC40B,IAhBiC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBhD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO7H,MAGhCoP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKxC,wBAAwBzC,OACvDm/B,EAAe/lB,EAAWnU,KAAKxC,wBAAwBzC,SAExDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBgDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDhD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDgD1R,MAAAC,KAAA1B,WAwDhD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,eAAgBi5B,aAAa,UAAUZ,SAvEpB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEyC4I,SAvEzC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuE2DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,6BCnEtIjsC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCouD,KAAM,CACJpsD,QAAS,OACTgY,cAAe,SACf+C,OAAQ,OACR7c,MAAO,eAETmuD,YAAa,CACXhuD,UAAWL,EAAMI,QAAQ,GACzBqC,SAAU,KAEZ6rD,iBAAkB,CAChBjuD,UAAWL,EAAMI,QAAQ,OAkHd01B,gBAjGQ,SAACjzB,GACRkzB,cACEj0B,KADhB,IAEAoV,EAAkCJ,IAAMK,UAAS,GAAjDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO8F,EAAP5F,EAAA,GACA2I,GADA3I,EAAA,GACgCN,IAAMK,SAAS,OAA/C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO7F,EAAP8F,EAAA,GACAE,GADAF,EAAA,GACsClJ,IAAMK,SAAStU,EAAM0rD,cAA3DpuC,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOquC,EAAPpuC,EAAA,GAAoBquC,EAApBruC,EAAA,GAEMY,EAAc,WAClBle,EAAMyY,WAQFmzC,EAAa,SAACC,EAAc11C,GAAf,OAAuB,SAACR,GACzC,IAAIm2C,EAAe,GAEdJ,EAAYG,KAEbC,EAAeJ,EAAYG,IAG7BC,EAAa31C,GAAOR,EAAMiG,OAAOyD,QACnCssC,EAAeprD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAImrD,GAAL,GAAAnrD,OAAAM,EAAA,EAAAN,CAAA,GAAkBsrD,EAAgBC,OAIlD,OACE5qD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACAxE,UAAWA,EACX9C,SAAUA,EACVmB,KAAMxY,EAAM+rD,OACZtzC,QAASyF,EACTY,kBAAgB,0BAEhB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,0BAAhB,oBACAlL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAAC0nC,GAAA,EAAD,KACC9oC,EAAM23C,MAAM1rC,IAAI,SAAC+/C,EAAa9nC,GAAd,OACfhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAK,GAAIxc,QAAS,GACjC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACZ,WAAS,EAAC1a,WAAW,SAAUmpB,KAAG,EAACxO,GAAK,EAAGxc,QAAS,GAE7D2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAClCqpD,EAAYC,cAGd/qD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACZ,WAAS,EAAC1a,WAAW,SAAUmpB,KAAG,EAACxO,GAAK,EAAGxc,QAAS,GAE/D2D,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACEC,QACEje,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACG7sC,UAASqsC,EAAYM,EAAY5/C,KAAMs/C,EAAYM,EAAY5/C,IAAI+/C,OACnE5xC,SAAUqxC,EAAWI,EAAY5/C,GAAG,UACrCtJ,KAAK,WACLpE,MAAM,YAGVmE,MAAM,SAEP3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACCC,QACEje,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACA7sC,UAASqsC,EAAYM,EAAY5/C,KAAMs/C,EAAYM,EAAY5/C,IAAIggD,QAEnE7xC,SAAUqxC,EAAWI,EAAY5/C,GAAG,WAElCtJ,KAAK,WACLpE,MAAM,YAGVmE,MAAM,eAOZ3B,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MAEFv9B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,EAAaxf,MAAM,WAApC,SAGAwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QA5EG,WAEjBjX,EAAMqsD,OAAOX,EAAa1rD,EAAMssD,UA0EGnsD,QAAQ,YAAYzB,MAAM,WAAvD,eCjIJO,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBgvD,GAAc/wB,YAAW,SAACx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GACAE,EAAkDpJ,IAAMK,UAAS,GAAjEgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOmvC,EAAPlvC,EAAA,GAA0BmvC,EAA1BnvC,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOmvC,EAAPlvC,EAAA,GAAoBmvC,EAApBnvC,EAAA,GACAG,EAAoC1J,IAAMK,SAAS,IAAnDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOivC,EAAPhvC,EAAA,GAAmBivC,EAAnBjvC,EAAA,GACA4V,EAA6Cvf,IAAMK,SAAS,IAA5Dmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOs5B,EAAPr5B,EAAA,GAAuBs5B,EAAvBt5B,EAAA,GAEM/yB,EAAUzB,KAEhBy0B,EAAsCzf,IAAMK,SAAS,IAArDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOwX,EAAPvX,EAAA,GAAoBwX,EAApBxX,EAAA,GAZ+C,SAAAyX,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAc/C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBlB,EAAmB,eAAgB,GAAI4qB,GAD9D,OAAA5pB,EAAAgB,KAEE0zB,IAFF,wBAAA10B,EAAAmB,SAAA9B,OAd+CkC,MAAAC,KAAA1B,WAAA,SAkBhC40B,IAlBgC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkB/C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAAtZ,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOjH,MAGhCwO,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLunC,EAAevnC,EAAWnU,KAAK+7C,eAAehhD,SAE/CyS,MAAM7L,QAAQzB,OAbnB+V,EAAAzU,KAAA,EAeuBlB,EAAmB,kBAAmB,GAAI,IAfjE,OAeM1F,EAfNqb,EAAA3T,KAgBE03B,EAAep/B,EAASgtC,OACxB1N,EAAet/B,EAASgtC,OAjB1B,wBAAA3xB,EAAAxT,SAAAuT,OAlB+CnT,MAAAC,KAAA1B,WAAA,SAAA46C,IAAA,OAAAA,EAAA1sD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkD/C,SAAA6T,EAA+B0nC,GAA/B,IAAArhD,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EACuBlB,EACnB,sBACA,GACA,CAAE+6C,QAASY,EAAW9gD,KAJ1B,OACMP,EADN6Z,EAAAnS,KAMEw5C,EAAmBlhD,EAAS6/C,aAC5BmB,EAAcK,EAAW9gD,IACzBqgD,GAAqB,GARvB,wBAAA/mC,EAAAhS,SAAA8R,OAlD+C1R,MAAAC,KAAA1B,WAAA,SAAA86C,IAAA,OAAAA,EAAA5sD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA6D/C,SAAAoU,EAAiCmnC,GAAjC,IAAAj2B,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cACMwkB,EAAW,CACby0B,YAAawB,EACbZ,QAASM,GAEXh6C,QAAQyR,IAAIhR,KAAKC,UAAU2jB,IAC3Bw1B,GAAqB,GANvBxmC,EAAAxT,KAAA,EAOuBlB,EAAmB,qBAAsB,GAAI0lB,GAPpE,OAAAhR,EAAA1S,KAQE0zB,IARF,wBAAAhhB,EAAAvS,SAAAqS,OA7D+CjS,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2E/C,SAAA8sC,EAAsBtiB,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAosC,GAAA,cAAAA,EAAAlsC,KAAAksC,EAAAjsC,MAAA,OACQ64B,EAAgBN,EAAYzsB,OAAO,SAACgtB,GAAD,OACvCA,EAAEzoC,KAAKyiC,cACHgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAa,MACxC,OAENgP,EAAeG,GANjB,wBAAAoT,EAAAhrC,SAAA+qC,OA3E+C3qC,MAAAC,KAAA1B,WAmF/C,OA9CA8L,oBAAU,WACR8oB,KACC,IA6CD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAACoB,EAAD,CACEqP,IAAI,oBACJ/O,KAAK,uBAUN0pD,EACCtrD,EAAAC,EAAAC,cAACgsD,GAAD,CACEd,QAASM,EACTb,OAAQS,EACRd,YAAaoB,EACbnV,MAAO+U,EACPj0C,QAjCV,SAA2By0C,GACzBT,GAAqB,IAiCbJ,OAzGqC,SAAAx4C,GAAA,OAAAs5C,EAAAr5C,MAAAC,KAAA1B,cA2GrC,KACJnR,EAAAC,EAAAC,cAACoqC,GAAD,CACEh/B,MAAO,kBACPi5B,aAAa,UACbW,gBA/GuC,SAAAxyB,GAAA,OAAAq5C,EAAAn5C,MAAAC,KAAA1B,YAgHvCwyB,SAhHuC,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAiHvC4I,SAjHuC,SAAAmb,GAAA,OAAAiV,EAAAv3B,MAAAC,KAAA1B,YAkHvCkV,QAAStW,GAAKsW,QACdpO,OAAQ+xB,kBC7HZjsC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB8vD,GAAgB7xB,YAAW,SAACx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARiD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUjD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACuBlB,EAAmB,eAAgB,GAAI4qB,GAD9D,OAAA5pB,EAAAgB,KAEE0zB,IAFF,wBAAA10B,EAAAmB,SAAA9B,OAViDkC,MAAAC,KAAA1B,WAAA,SAclC40B,IAdkC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAcjD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOjH,MAGhCwO,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL6lB,EAAe7lB,EAAWnU,KAAK+7C,eAAehhD,OAC9Cm/B,EAAe/lB,EAAWnU,KAAK+7C,eAAehhD,SAE/CyS,MAAM7L,QAAQzB,OAdnB,wBAAA+V,EAAAxT,SAAAuT,OAdiDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4CjD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OACQ64B,EAAgBN,EAAYzsB,OAAO,SAACgtB,GAAD,IAAA+hB,EAAAC,EAAA,OACtC,OAADhiB,QAAC,IAADA,OAAA,UAAA+hB,EAAA/hB,EAAGzoC,YAAH,IAAAwqD,OAAA,EAAAA,EAAS/nB,eAAT,OACIgG,QADJ,IACIA,OADJ,UAAAgiB,EACIhiB,EAAGzoC,YADP,IAAAyqD,OAAA,EACIA,EAAShoB,cAAc4B,MAAMhL,EAAa,MAC1C,OAENgP,EAAeG,GANjB,wBAAA5lB,EAAAhS,SAAA8R,OA5CiD1R,MAAAC,KAAA1B,WAoDjD,OAtBA8L,oBAAU,WACR8oB,KACC,IAqBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAACoB,EAAD,CACEqP,IAAI,oBACJ/O,KAAK,uBAUP5B,EAAAC,EAAAC,cAACoqC,GAAD,CACEh/B,MAAO,iBACPi5B,aAAa,UACbZ,SAtEyC,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEzC4I,SAvEyC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEzCkV,QAAStW,GAAKsW,QACdpO,OAAQ+xB,kBClFZjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBiwD,GAAoBhyB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXmDkC,MAAAC,KAAA1B,WAAA,SAiBpC40B,IAjBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOzG,MAGhCgO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJ6lB,EAAe7lB,EAAWnU,KAAKjD,sBAAsBhC,OACrDm/B,EAAe/lB,EAAWnU,KAAKjD,sBAAsBhC,SAEtDyS,MAAM7L,QAAQzB,OAhBnB,wBAAA+V,EAAAxT,SAAAuT,OAjBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAnDmD1R,MAAAC,KAAA1B,WA0DnD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,gBAAiBi5B,aAAa,UAAUZ,SAzElB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyEuC4I,SAzEvC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyEyDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFvIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBkwD,GAAejyB,YAAW,SAAAx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR8C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAW9C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,gBAAiB,GAAI4qB,GAHhE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAX8CkC,MAAAC,KAAA1B,WAAA,SAiB/B40B,IAjB+B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiB9C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO9G,MAGhCqO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK9C,gBAAgBnC,OAC/Cm/B,EAAe/lB,EAAWnU,KAAK9C,gBAAgBnC,SAEhDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjB8CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkD9C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAlD8C1R,MAAAC,KAAA1B,WAyD9C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,SAAUi5B,aAAa,UAAUZ,SAzEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyEqC4I,SAzErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFhIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBmwD,GAAoBlyB,YAAW,SAAAx7B,GAC1C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARmD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAWnD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,qBAAsB,GAAI4qB,GAHrE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAXmDkC,MAAAC,KAAA1B,WAAA,SAiBpC40B,IAjBoC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiBnD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOvG,MAEhC8N,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK08C,sBAAsB3hD,OACrDm/B,EAAe/lB,EAAWnU,KAAK08C,sBAAsB3hD,SAEtDyS,MAAM7L,QAAQzB,OAdnB,wBAAA+V,EAAAxT,SAAAuT,OAjBmDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDnD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDmD1R,MAAAC,KAAA1B,WAwDnD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,eAAgBi5B,aAAa,UAAUZ,SAvEjB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEsC4I,SAvEtC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuEwDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC1F1HhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC4tD,IACAv5C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBswD,GAAeryB,YAAW,SAAAx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR8C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAU9C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,gBAAiB,GAAI4qB,GAHhE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAV8CkC,MAAAC,KAAA1B,WAAA,SAgB/B40B,IAhB+B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgB9C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOzH,MAGhCgP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK1D,gBAAgBvB,OAC/Cm/B,EAAe/lB,EAAWnU,KAAK1D,gBAAgBvB,SAEhDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhB8CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiD9C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjD8C1R,MAAAC,KAAA1B,WAwD9C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,SAAUi5B,aAAa,UAAUZ,SAvEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuEqC4I,SAvErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,sBC3FpHhuC,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC8tD,IACAz5C,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,OC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBwwD,GAAevyB,YAAW,SAAAx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR8C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAU9C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,gBAAiB,GAAI4qB,GAHhE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAV8CkC,MAAAC,KAAA1B,WAAA,SAgB/B40B,IAhB+B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgB9C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOxH,MAGhC+O,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK7D,gBAAgBpB,OAC/Cm/B,EAAe/lB,EAAWnU,KAAK7D,gBAAgBpB,SAEhDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhB8CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiD9C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjD8C1R,MAAAC,KAAA1B,WAwD9C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,SAAUi5B,aAAa,UAAUZ,SAxEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAwEqC4I,SAxErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAwEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFhIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBywD,GAAgBxyB,YAAW,SAAAx7B,GACtC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR+C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAW/C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,iBAAkB,GAAI4qB,GAHjE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAX+CkC,MAAAC,KAAA1B,WAAA,SAiBhC40B,IAjBgC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiB/C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOxG,MAGhC+N,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJ6lB,EAAe7lB,EAAWnU,KAAKg9C,iBAAiBjiD,OAChDm/B,EAAe/lB,EAAWnU,KAAKg9C,iBAAiBjiD,SAEjDyS,MAAM7L,QAAQzB,OAhBnB,wBAAA+V,EAAAxT,SAAAuT,OAjB+CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmD/C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAnD+C1R,MAAAC,KAAA1B,WA0D/C,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,UAAWi5B,aAAa,UAAUZ,SAzEhB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAyEqC4I,SAzErC,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAyEuDkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBClFjIjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB2wD,GAAiB1yB,YAAW,SAAAx7B,GACvC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GARgD,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAUhD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,mBAAoB,GAAI4qB,GAHnE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAVgDkC,MAAAC,KAAA1B,WAAA,SAgBjC40B,IAhBiC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgBhD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO/H,MAGhCsP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAKvE,mBAAmBV,OAClDm/B,EAAe/lB,EAAWnU,KAAKvE,mBAAmBV,SAEnDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAhBgDnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiDhD,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAA5lB,EAAAhS,SAAA8R,OAjDgD1R,MAAAC,KAAA1B,WAwDhD,OAvBA8L,oBAAU,WACR8oB,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,gBAAiBi5B,aAAa,UAAUZ,SAvErB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuE0C4I,SAvE1C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuE4DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,uCC3CzIijB,GAAiB,SAACl9C,GACpB,OAAKA,GACM,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAM4X,SAAU,WAAhB,OAA4B5X,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMm9C,UAAW,SAA7C,OAAuDn9C,QAAvD,IAAuDA,OAAvD,EAAuDA,EAAMo9C,QADlD,IAIhBC,GAAmB,SAACr9C,GACtB,GAA0B,SAAlB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMs9C,aACR,OAAOt9C,EAAKu9C,cAEd,KAAI,OAACv9C,QAAD,IAACA,OAAD,EAACA,EAAMw9C,iBAAiB,OAAOx9C,EAAKu9C,cACxC,IAAIE,EAAmBr7C,KAAKsP,MAAL,OAAW1R,QAAX,IAAWA,OAAX,EAAWA,EAAMw9C,iBACxC,OACEvtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGf,MAAO,CAAE6Z,OAAQ,EAAG5c,QAAS,IAAhC,OACGoxD,QADH,IACGA,OADH,EACGA,EAAkBC,iBAErBztD,EAAAC,EAAAC,cAAA,KAAGf,MAAO,CAAE6Z,OAAQ,EAAG5c,QAAS,KACb,OAAhBoxD,QAAgB,IAAhBA,OAAA,EAAAA,EAAkBE,WAAlB,OACCF,QADD,IACCA,OADD,EACCA,EAAkBG,6BAMxBC,GAAiB,CACnBC,WAAY,CACVC,WAAW,EACXC,YAAY,EACZC,WAAY,MAEdC,aAAc,CACZH,WAAW,EACXC,YAAY,EACZC,WAAY,cAEdE,gBAAiB,CACfJ,WAAW,EACXC,YAAY,EACZC,WAAY,iBAEdG,KAAM,CAAEL,WAAW,EAAOE,WAAY,QACtCI,MAAO,CAAEN,WAAW,EAAME,WAAY,SACtCK,eAAgB,CAAEP,WAAW,EAAME,WAAY,gBAC/CM,mBAAoB,CAAER,WAAW,EAAME,WAAY,oBACnDO,eAAgB,CAAET,WAAW,EAAOE,WAAY,gBAChDQ,eAAgB,CAAEV,WAAW,EAAOE,WAAY,gBAChDS,eAAgB,CAAEX,WAAW,EAAME,WAAY,gBAC/CU,iBAAkB,CAAEZ,WAAW,EAAME,WAAY,kBACjDW,aAAc,CAAEb,WAAW,EAAOE,WAAY,WAC9CY,SAAU,CAAEd,WAAW,EAAOE,WAAY,YAE1Ca,QAAS,CACPf,WAAW,EACXC,YAAY,IAIVvL,GAAa,SAAC1jD,GAClB,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAAS,WACPkJ,OAAO3H,KAAP,gBAAAvX,OAA4BjB,EAAMoM,OAGpClL,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,SAMJkhD,GAAa,GAEJ2N,GAAYx0B,YAAW,SAACx7B,GAAU,IAAAiwD,EAAAC,EAEzCrpB,EAAU7mC,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GAC7C6J,IACFwb,GAAa,CACX8N,cAAe,CACbnM,QAASnd,KAIf,IAAAxyB,EAAoCJ,IAAMK,SAASw6C,IAAnDv6C,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO+7C,EAAP77C,EAAA,GAAmB87C,EAAnB97C,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjC8hD,IADiC,IAEpCj2C,GAAI,CAAEu2C,QAAQ,MAFhBxlC,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOozC,EAAPnzC,EAAA,GAAoBozC,EAApBpzC,EAAA,GAIAE,EAA8BpJ,IAAMK,SAAS,CAAC,oBAA9CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOsU,EAAPrU,EAAA,GACAC,GADAD,EAAA,GACwBrJ,IAAMK,SAAS,IAAvCkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOkK,EAAPjK,EAAA,GAAakK,EAAblK,EAAA,GACAG,EAAsC1J,IAAMK,SAAS,IAArDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOgK,EAAP/J,EAAA,GAAoBgK,EAApBhK,EAAA,GACA4V,EAAoCvf,IAAMK,SAAS,CACjD2c,YAAa,GACbu/B,cAAe,CACb,CAAE1tD,KAAM,WACR,CAAEA,KAAM,QACR,CAAEA,KAAM,4BALZ2wB,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO/D,EAAPgE,EAAA,GAAmBg9B,EAAnBh9B,EAAA,GAQAC,EAA4Czf,IAAMK,SAAS,CACzDo8C,YAAa,GACblC,cAAe,KAFjB76B,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOovB,EAAPnvB,EAAA,GAAuBovB,EAAvBpvB,EAAA,GAIAE,EAAgC5f,IAAMK,SAAS,MAA/Cwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAO88B,EAAP78B,EAAA,GAAiB88B,EAAjB98B,EAAA,GACAE,EAA4B/f,IAAMK,SAAS,MAA3C2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAAO68B,EAAP58B,EAAA,GAAe68B,EAAf78B,EAAA,GACAC,EAAgCjgB,IAAMK,SAAS,MAA/C6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAO68B,EAAP58B,EAAA,GAAiB68B,EAAjB78B,EAAA,GACM3b,EAAOy6B,QAAQ8d,GAUf5Q,EAAmB,SAAC17B,EAAMtY,GAC9B,IAAImsB,EAAS,OAAGg4B,QAAH,IAAGA,OAAH,EAAGA,EAAah4B,UACf,SAAVnsB,IACFykD,EAAYnsC,GACZ8rC,EAAehwD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV+vD,GADS,IAEZh4B,UAAU/3B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACL+3B,GADI,IAEPkrB,qBAAsBngC,KAAOoB,GAAMnB,OAAO,oBAIlC,OAAVnX,IACEsY,EAAOksC,GACTG,EAAUrsC,GACV8rC,EAAehwD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV+vD,GADS,IAEZh4B,UAAU/3B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACL+3B,GADI,IAEPmrB,kBAAmBpgC,KAAOoB,GAAMnB,OAAO,oBAGtC8f,MAAM,2CAaXrlB,EAASC,eAEf/J,IAAMkK,UAAU,WACdJ,EACGpS,MAAM,CACLA,MAAOzI,aAAF+tD,QAAA1wD,OAAA6C,GAAA,EAAA7C,CAAA,gCACD8D,MAGLga,KAAK,SAAA7M,GAAkE,IAAAoS,EAAApS,EAA/DP,KAAQg6C,EAAuDrnC,EAAvDqnC,sBAAuBE,EAAgCvnC,EAAhCunC,wBACtCsF,EAAc,CACZx/B,aAAkC,OAArBg6B,QAAqB,IAArBA,OAAA,EAAAA,EAAuBj/C,QAAS,GAC7CwkD,cAAa,GAAAvvD,OAAAV,OAAA2wD,GAAA,EAAA3wD,CACRkvB,EAAW+gC,eADHjwD,OAAA2wD,GAAA,EAAA3wD,CAAA,OAER4qD,QAFQ,IAERA,OAFQ,EAERA,EAAyBn/C,YAIjCyS,MAAM7L,QAAQzB,QAChB,IAEH,IAAAsuB,EAAgDC,aAASz0B,GAAQ,CAC/D0a,UAAW,CACTu9B,MAAOv7B,EACPuP,OAAQzP,EAAOE,EACfwpC,aAAa5wD,OAAAQ,EAAA,EAAAR,CAAA,GAAM+vD,GACnBlN,SAAUzxB,KALNzgB,EAARuuB,EAAQvuB,QAASD,GAAjBwuB,EAAiBxuB,KAAME,GAAvBsuB,EAAuBtuB,MAAO8/B,GAA9BxR,EAA8BwR,cAS1BpvB,GAAO,OAAG5Q,SAAH,IAAGA,QAAH,UAAAg/C,EAAGh/C,GAAMmgD,iBAAT,IAAAnB,OAAA,EAAGA,EAAiBjkD,MAC3B6V,KACFA,GAAUA,GAAQ5V,IAAI,SAACyO,GAAS,IAAA22C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAtMlBxhD,EAuMZ,MAAO,CACL7E,GAAIsO,EAAKtO,GACTsmD,WAAYrvC,KAAM,OAAC3I,QAAD,IAACA,OAAD,EAACA,EAAM4d,WAAWhV,OAAO,wBAC3C+rC,KAAI,OAAE30C,QAAF,IAAEA,OAAF,UAAA22C,EAAE32C,EAAMi4C,4BAAR,IAAAtB,OAAA,UAAAC,EAAED,EAA4BuB,yCAA9B,IAAAtB,OAAA,EAAEA,EAA+DtlD,MAClEC,IAAI,SAACuS,GAAD,IAAAq0C,EAAA,cAAOr0C,QAAP,IAAOA,OAAP,UAAAq0C,EAAOr0C,EAAGs0C,gCAAV,IAAAD,OAAA,EAAOA,EAA6B7f,eACxCzV,KAAK,MACRw1B,cAAa,OACXr4C,QADW,IACXA,OADW,UAAA62C,EACX72C,EAAMi4C,4BADK,IAAApB,OAAA,UAAAC,EACXD,EAA4ByB,6BADjB,IAAAxB,OAAA,UAAAC,EACXD,EAAmDxlD,aADxC,IAAAylD,OAAA,UAAAC,EACXD,EAA2D,UADhD,IAAAC,OAAA,EACXA,EACIuB,UACN1yB,MAAK,OAAE7lB,QAAF,IAAEA,OAAF,UAAAi3C,EAAEj3C,EAAMi4C,4BAAR,IAAAhB,OAAA,UAAAC,EAAED,EAA4BuB,kCAA9B,IAAAtB,OAAA,EAAEA,EAAwDrxB,MAC/D4yB,aAAY,OACVz4C,QADU,IACVA,OADU,UAAAm3C,EACVn3C,EAAMi4C,4BADI,IAAAd,OAAA,UAAAC,EACVD,EAA4BmB,6BADlB,IAAAlB,OAAA,UAAAC,EACVD,EAAmD9lD,aADzC,IAAA+lD,OAAA,UAAAC,EACVD,EAA2D,UADjD,IAAAC,OAAA,EACVA,EACIoB,cACNC,kBApNUpiD,EAoNkB,OAC1ByJ,QAD0B,IAC1BA,OAD0B,UAAAu3C,EAC1Bv3C,EAAMi4C,4BADoB,IAAAV,OAAA,UAAAC,EAC1BD,EAA4Be,6BADF,IAAAd,OAAA,UAAAC,EAC1BD,EAAmDlmD,aADzB,IAAAmmD,OAAA,EAC1BA,EAA2D,GApN9DlhD,GAEC,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMqiD,cACN,KADA,OAEAriD,QAFA,IAEAA,OAFA,EAEAA,EAAMsiD,cACN,KAHA,OAIAtiD,QAJA,IAIAA,OAJA,EAIAA,EAAM+H,MACN,KALA,OAMA/H,QANA,IAMAA,OANA,EAMAA,EAAMuiD,OACN,KAPA,OAQAviD,QARA,IAQAA,OARA,EAQAA,EAAMunB,SAVU,IAsNZi7B,aAActF,GAAc,OAACzzC,QAAD,IAACA,OAAD,UAAA03C,EAAC13C,EAAMi4C,4BAAP,IAAAP,OAAA,UAAAC,EAACD,EAA4BpmD,aAA7B,IAAAqmD,OAAA,EAACA,EAAoC,IACjEqB,aAAY,OAAEh5C,QAAF,IAAEA,OAAF,EAAEA,EAAM6zC,YACpBoF,aAAY,OAAEj5C,QAAF,IAAEA,OAAF,EAAEA,EAAMg2C,YACpBkD,eAAgBtF,GAAiB,CAC/BC,YAAW,OAAE7zC,QAAF,IAAEA,OAAF,EAAEA,EAAM6zC,YACnBE,gBAAe,OACb/zC,QADa,IACbA,OADa,UAAA43C,EACb53C,EAAMm5C,+BADO,IAAAvB,OAAA,UAAAC,EACbD,EAA+BtmD,aADlB,IAAAumD,OAAA,UAAAC,EACbD,EAAuC,UAD1B,IAAAC,OAAA,EACbA,EAA2C/D,kBAE/CqF,eAAc,OAAEp5C,QAAF,IAAEA,OAAF,EAAEA,EAAMo5C,eACtBC,eAAc,OAAEr5C,QAAF,IAAEA,OAAF,UAAA+3C,EAAE/3C,EAAMq5C,sBAAR,IAAAtB,OAAA,EAAEA,EAAsBuB,QAAQ,eAAgB,IAC9DC,QAAO,OAAEv5C,QAAF,IAAEA,OAAF,EAAEA,EAAMw5C,UACfC,SAAQ,OAAEz5C,QAAF,IAAEA,OAAF,EAAEA,EAAMy5C,aAItB,IAAI9hB,GAAU9xC,OAAOwvB,KAAKqgC,GAAY7xC,OACpC,SAAC7D,GAAD,OAAU01C,EAAW11C,GAAMs0C,YAC3Bt8C,OACF,OACExR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACV1d,eAAe,aACfD,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,WAEFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACTuB,YAAY,+BACZi4B,WAAY,CACVuB,eACEh0C,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,SACvB5xB,EAAAC,EAAAC,cAACma,GAAApa,EAAD,QAINoZ,SAAU,SAAC5E,GACT46C,EAAe,CACboC,qBAAsB,CACpB9O,GAAI,CACF,CACEqP,2BAA4B,CAC1B3yB,MAAO,CAAE0U,oBAAqBt/B,EAAMiG,OAAOzP,SAG/C,CACE6mD,sBAAuB,CACrBoB,KAAM,CACJvQ,GAAI,CACF,CACEoP,UAAW,CACThe,oBAAqBt/B,EAAMiG,OAAOzP,QAGtC,CACEinD,cAAe,CACbne,oBAAqBt/B,EAAMiG,OAAOzP,oBAa1DjL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTha,QAAQ,WACRgM,MAAK,OAAE22C,QAAF,IAAEA,OAAF,EAAEA,EAAgB4N,YACvBn2C,SAAU,SAAC5E,GACTotC,EAAkBxiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACbuiD,GADY,IAEf4N,YAAa/6C,EAAMiG,OAAOzP,SAE5BokD,EAAehwD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV+vD,GADS,IAEZI,YAAa,CAAEzb,oBAAqBt/B,EAAMiG,OAAOzP,WAGrDg2C,QAAM,EACNt/C,MAAM,eACN8wC,WAAY,CACVC,aACE1yC,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,QAAQzyB,MAAO,CAAEqX,OAAQ,YACf,MAAlB,OAAdorC,QAAc,IAAdA,OAAA,EAAAA,EAAgB4N,cACfxvD,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,CACE8V,QAAS,SAACtB,GACRotC,EAAkBxiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACbuiD,GADY,IAEf4N,YAAa,aAERJ,EAAYI,YACnBH,EAAehwD,OAAAQ,EAAA,EAAAR,CAAA,GAAK+vD,UAQ/B7gC,EAAWwB,YAAYhlB,IAAI,SAACqO,EAAQ4J,GAAT,OAC1BhjB,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvlC,IAAK+N,EAAO/X,MAAOmO,EAAOxX,MACjCwX,EAAOxX,UAKhB5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTha,QAAQ,WACRgM,MAAK,OAAE22C,QAAF,IAAEA,OAAF,EAAEA,EAAgB0L,cACvBj0C,SAAU,SAAC5E,GACTotC,EAAkBxiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACbuiD,GADY,IAEf0L,cAAe74C,EAAMiG,OAAOzP,SAE9BokD,EAAehwD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV+vD,GADS,IAEZuD,wBAAyB,CACvBO,KAAM,CACJ3F,gBAAiB,CACfxZ,oBAAqBt/B,EAAMiG,OAAOzP,aAM5Cg2C,QAAM,EACNt/C,MAAM,iBACN8wC,WAAY,CACVC,aACE1yC,EAAAC,EAAAC,cAAC+zC,GAAA,EAAD,CAAgBriB,SAAS,QAAQzyB,MAAO,CAAEqX,OAAQ,YACb,MAApB,OAAdorC,QAAc,IAAdA,OAAA,EAAAA,EAAgB0L,gBACfttD,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,CACE8V,QAAS,SAACtB,GACRotC,EAAkBxiD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACbuiD,GADY,IAEf0L,cAAe,aAEV8B,EAAYuD,wBACnBtD,EAAehwD,OAAAQ,EAAA,EAAAR,CAAA,GAAK+vD,UAQ/B7gC,EAAW+gC,cAAcvkD,IAAI,SAACqO,EAAQ4J,GAAT,OAC5BhjB,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvlC,IAAK+N,EAAO/X,MAAOmO,EAAOxX,MACjCwX,EAAOxX,UAKhB5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACEuT,QAAM,EACN5jD,QAAQ,SACRswC,aAAa,WACbntB,OAAO,aACPpJ,OAAO,SACPrX,MAAM,OACNsJ,MAAOwkD,EACPtwD,MAAO,CAAE7C,UAAW,GACpB+c,SAAU,SAACkK,GAAD,OAAU07B,EAAiB17B,EAAM,aAIjDvjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAACovC,GAAA,EAAD,CACEuT,QAAM,EACN5jD,QAAQ,SACRswC,aAAa,WACbntB,OAAO,aACPpJ,OAAO,SACPrX,MAAM,KACNsJ,MAAO0kD,EACPwD,eAAe,EACfh0D,MAAO,CAAE7C,UAAW,GACpB+c,SAAU,SAACkK,GAAD,OAAU07B,EAAiB17B,EAAM,WAIjDvjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GACvB7Y,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QApSA,SAACtB,GACnBq7C,EAAYr7C,EAAM2+C,iBAoSVpzD,EAAAC,EAAAC,cAACmzD,GAAApzD,EAAD,OAEFD,EAAAC,EAAAC,cAACozD,GAAA,EAAD,CACEpoD,GAAG,YACH2kD,SAAUA,EACVlyC,aAAW,EACXrG,KAAMA,EACNC,QAxSU,WAClBu4C,EAAY,OAwSJyD,WAAY,CACVp0D,MAAO,CACLzC,OAEc,GADZ2C,OAAOwvB,KAAKqgC,GAAY7xC,OAAO,SAAC7D,GAAD,QAAU,OAACA,QAAD,IAACA,OAAD,EAACA,EAAMu0C,cAC7Cv8C,OACLrV,MAAO,UAIX6D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAE/C,QAAS,KAC/BiD,OAAOwvB,KAAKqgC,GAAYnkD,IACvB,SAACyO,GAAD,IAAAg6C,EAAA,QACE,QAAAA,EAACtE,EAAW11C,UAAZ,IAAAg6C,OAAA,EAACA,EAAkBzF,aACjB/tD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACEC,QACEje,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACEppD,KAAM4X,EACNhc,MAAM,UACN2gB,QAAS+wC,EAAW11C,GAAMs0C,UAC1B/3C,QAAS,SAAC/K,GACRkkD,EAAW11C,GAAMs0C,WACdoB,EAAW11C,GAAMs0C,UACpBqB,EAAc9vD,OAAAQ,EAAA,EAAAR,CAAA,GAAK6vD,OAIzBvtD,MAAO6X,WASzBxZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAOhN,KAAK,SACV3V,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACG/hB,OAAOwvB,KAAKqgC,GAAYnkD,IACvB,SAACyO,GAAD,OACE01C,EAAW11C,GAAMs0C,WACf9tD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWrM,IAAKuE,EAAMyN,MAAO,UAC1BzN,OAMbxZ,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,MACI/S,GAAWkhC,KAAc5c,UAAYyb,KACrC/vC,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAASA,GAASlqB,MAAO,SAAU7qB,QAAQ,QACpD4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,IACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAASA,GAASlqB,MAAO,UAClCjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAMLwgB,IACCA,GAAQnP,OAAS,GACjBmP,GAAQ5V,IAAI,SAACyO,GAAD,OACVxZ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IACjB7L,OAAOwvB,KAAKqgC,GAAYnkD,IACvB,SAAC+6C,GAAD,IAAA2N,EAAA,OACEvE,EAAWpJ,GAAQgI,WACjB9tD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWrM,IAAK6wC,EAAQ7+B,MAAO,UACjB,YAAX6+B,GACCtsC,EAAI,QAAAi6C,EAACvE,EAAWpJ,UAAZ,IAAA2N,OAAA,EAACA,EAAoBzF,YACf,YAAXlI,GACC9lD,EAAAC,EAAAC,cAACwzD,GAAD,CAAYxoD,GAAIsO,EAAKtO,WAOpCyV,IAA6B,GAAlBA,GAAQnP,QAClBxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAASA,GAASlqB,MAAO,UAClCjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,4BAKRH,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEqpB,QAASA,GACTlqB,MAAO,QACPc,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,MAAK,OAAEjY,SAAF,IAAEA,QAAF,UAAAi/C,EAAEj/C,GAAMmgD,iBAAR,IAAAlB,OAAA,EAAEA,EAAiBz4B,WACxB9P,YAAaA,EACbF,KAAMA,EACN0B,aAlXS,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAkXMC,oBA/WgB,SAAC1T,GAC/BiS,GAAgBjS,EAAMiG,OAAOzP,OAC7Bub,EAAQ,IA8WMo9B,aAAc,gDCjjB1B7lD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN21D,QAAS,CACPv8C,YAAa,CACX5a,WAAYP,EAAMI,QAAQ,KAG9Bu3D,aAAc,CACZp2D,MAAOvB,EAAMwB,QAAQsiC,MACrB1iC,gBAAiBiD,IAAOhD,IAAI,KAC5B8yB,UAAW,CACT/yB,gBAAiBiD,IAAOhD,IAAI,OAGhCu2D,WAAY,CACVp+C,YAAaxZ,EAAMI,QAAQ,OAsDhBugC,GAlDA,SAAA99B,GACb,IAAQyxB,EAA8BzxB,EAA9ByxB,MAAOvxB,EAAuBF,EAAvBE,UAAcI,EAA7BC,OAAAC,EAAA,EAAAD,CAAsCP,EAAtCg1D,IAEMt0D,EAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEza,WAAW,WACX0a,WAAS,EACTkkB,QAAQ,gBACRzgC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVkgC,cAAY,EACZ1iC,QAAQ,YAHV,UAOAe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,MAFV,UAIUsxB,EAAMrlB,KAGlBlL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,gCC1BZzb,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX+a,QAAS,CACPlB,cAAe,SACf/X,WAAY,WACZkZ,YAAa,CACX5a,WAAY,IAGhB4Z,WAAY,CACVX,YAAaxZ,EAAMI,QAAQ,OA4ZhB03D,GAxZG,SAACj1D,GACjB,IAAQyxB,EAA8BzxB,EAA9ByxB,MAAOvxB,EAAuBF,EAAvBE,UAAcI,EAA7BC,OAAAC,EAAA,EAAAD,CAAsCP,EAAtCk1D,IACMn3C,EAASC,eACTtd,EAAUzB,KACVgf,EAAQhK,IAAMwB,WAAW8G,IAE/B5H,EAA0CL,mBAAS,IAAnDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOwgD,EAAPvgD,EAAA,GAAsBwgD,EAAtBxgD,EAAA,GACAG,EAAsCT,mBAAS,IAA/CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOsgD,EAAPrgD,EAAA,GAAoBsgD,EAApBtgD,EAAA,GACAG,EAAgCb,mBAAS,IAAzCgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOogD,EAAPjgD,EAAA,GAAiBkgD,EAAjBlgD,EAAA,GACAykB,EAAsCzlB,mBAAS,CAC7CmhD,WAAY,KACZjH,cAAe,KACfkC,YAAa,KACbyD,SAAU,OAJZn6B,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAO27B,EAAP17B,EAAA,GAAoB27B,EAApB37B,EAAA,GAMAC,EAAkD3lB,mBAAS,IAA3D4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAA0B27B,GAA1B17B,EAAA,GAAAA,EAAA,IACM2P,EAAe,SAACl0B,GAAU,IAAAkgD,EAC9BF,EAAep1D,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKm1D,GAAN,GAAAn1D,OAAAM,EAAA,EAAAN,CAAA,GAAoBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UACpD,OAAXupD,QAAW,IAAXA,OAAA,UAAAG,EAAAH,EAAavB,gBAAb,IAAA0B,OAAA,EAAAA,EAAuBnjD,QAAS,GAClC8iD,EAAY,KAnBW,SAAA1uB,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsB3B,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOtH,MALlC6iB,EAAAzU,KAAA,EAOQS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GAAe,IAAA0wC,EAAAC,EAAAC,EAAAC,EACpBb,EAAiBhwC,EAAWnU,KAAKk6C,wBAAwBn/C,OACzDspD,EAAelwC,EAAWnU,KAAKg6C,sBAAsBj/C,OAErD2pD,EAAe,CACbF,WAAU,QAAAK,EAAA,OAAErkC,QAAF,IAAEA,OAAF,EAAEA,EAAOykC,kBAAT,IAAAJ,IAAuB,KACjCtH,cAAa,QAAAuH,EAAA,OAAEtkC,QAAF,IAAEA,OAAF,EAAEA,EAAOmiC,sBAAT,IAAAmC,IAA2B,KACxCrF,YAAW,QAAAsF,EAAA,OAAEvkC,QAAF,IAAEA,OAAF,EAAEA,EAAOkiC,oBAAT,IAAAqC,IAAyB,KACpC7B,SAAQ,QAAA8B,EAAA,OAAExkC,QAAF,IAAEA,OAAF,EAAEA,EAAO0iC,gBAAT,IAAA8B,IAAqB,SAGhCx3C,MAAM7L,QAAQzB,OApBnB,wBAAA+V,EAAAxT,SAAAuT,OAtB2BnT,MAAAC,KAAA1B,WA4C3B,IAAM8jD,EAAyB,eAAA3kD,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1BZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO1B,GAEP0b,UAAW,CACTvZ,GAAE,OAAEqlB,QAAF,IAAEA,OAAF,EAAEA,EAAOrlB,OATemG,EAAAE,KAAA,EAa1BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GAAe,IAAAgxC,EAAAC,EAAAC,EAAAC,EACpBX,EAAoB,QAAAQ,EAAA,OAClBhxC,QADkB,IAClBA,OADkB,UAAAixC,EAClBjxC,EAAYnU,YADM,IAAAolD,OAAA,UAAAC,EAClBD,EAAkBG,iBADA,IAAAF,OAAA,UAAAC,EAClBD,EAA6BG,kCADX,IAAAF,OAAA,EAClBA,EAAyDvqD,aADvC,IAAAoqD,IACgD,MAGrE33C,MAAM7L,QAAQzB,OApBe,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAsB/B4B,IAAMkK,UAAU,YAlEW,WAAA2oB,EAAAhzB,MAAAC,KAAA1B,WAmEzB40B,GACAkvB,KACC,IAEH,IAAMO,EAAY,SAACC,EAAUr9C,GAC3B,IAAMzH,EAAMnQ,EAAU,gBAChByjB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAEqjD,SAAUA,EAAUr9C,KAAMA,KAEnDpG,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnH,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,4BAEP5J,QAAQyR,IAAIe,KAEb3G,MAAM,SAACC,GACNT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,2BAuCb,OACEtb,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,eAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEnkB,OAAO,SACPjZ,UAAWs9B,IACXC,GAAE,oBAAAj/B,OAAsBwwB,EAAMmlC,aAAaxqD,KAE1CqlB,EAAMmlC,aAAav2B,WALtB,IAKmC5O,EAAMmlC,aAAat2B,WAEtDp/B,EAAAC,EAAAC,cAAA,WACGqwB,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAGxD,aAG1C,IAENpyD,EAAAC,EAAAC,cAAA,WACGqwB,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAGvD,aAG1C,IAENryD,EAAAC,EAAAC,cAAA,WACGqwB,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAG99C,KAG1C,IAEN9X,EAAAC,EAAAC,cAAA,WACGqwB,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAGtD,MAG1C,IAENtyD,EAAAC,EAAAC,cAAA,WACGqwB,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAGC,QAG1C,MAIV71D,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYiP,EAAMmlC,aAAar2B,QAEjCr/B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGiP,EAAMolC,eACHplC,EAAMolC,cAAcC,gBAClBrlC,EAAMolC,cAAcC,eAAepkD,OAAS,EAC1C+e,EAAMolC,cAAcC,eAAe,GAAGE,eAG1C,KAIR91D,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGa,KAAOoO,EAAMuN,YAAY1b,OAAO,yBAGrCpiB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,eACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGiP,EAAM2N,SACN3N,EAAMolC,cAAcI,mBAGzB/1D,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTD,OAAO,QACPpX,KAAK,aACL4Y,YAAY,iBACZnB,SAAUsvB,EACV19B,MAAOupD,EAAYD,WACnBt1D,QAAQ,eAIde,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGiP,EAAMolC,eACHplC,EAAMolC,cAAcK,WAClBzlC,EAAMolC,cAAcK,UAAUxkD,OAAS,EACrC+e,EAAMolC,cAAcK,UAAU,GAAGruC,QAGrC,KAGR3nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYiP,EAAMiiC,eAEpBxyD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,uBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTrX,KAAK,gBACLyX,SAAUsvB,EACVsY,QAAM,EACNjoC,OAAO,QACPue,YAAa,CAAEC,QAAQ,GACvBvsB,MAAOupD,EAAYlH,cACnBruD,QAAQ,YAEPg1D,EAAclpD,IAAI,SAACqO,GAAD,OACjBpZ,EAAAC,EAAAC,cAAA,UAAQ+U,IAAKmE,EAAOxX,KAAMqJ,MAAOmO,EAAOxX,MACrCwX,EAAOxX,WAMlB5B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTrX,KAAK,cACLyX,SAAUsvB,EACVsY,QAAM,EACNjoC,OAAO,QACPue,YAAa,CAAEC,QAAQ,GACvBvsB,MAAOupD,EAAYhF,YACnBvwD,QAAQ,YAEPk1D,EAAYppD,IAAI,SAACqO,GAAD,OACfpZ,EAAAC,EAAAC,cAAA,UAAQ+U,IAAKmE,EAAOlO,GAAID,MAAOmO,EAAOxX,MACnCwX,EAAOxX,WAMlB5B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEN,WAAS,EACTD,OAAO,QACPpX,KAAK,WACL4Y,YAAY,WACZnB,SAAUsvB,EACV19B,MAAOupD,EAAYvB,SACnBh0D,QAAQ,aAEVe,EAAAC,EAAAC,cAAA,QAAMf,MAAO,CAAE3B,MAAO,QAAU62D,QAO1Cr0D,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACiC,SAA9B67C,EAAYlH,cACXttD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QAAS,kBAAMy/C,EAAS,OAACjlC,QAAD,IAACA,OAAD,EAACA,EAAOrlB,GAAI,WAJtC,eAQAlL,EAAAC,EAAAC,cAAA,4BAAgC,KAGlC,GAE6B,SAA9Bs0D,EAAYlH,cACXttD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QAAS,kBAAMy/C,EAAS,OAACjlC,QAAD,IAACA,OAAD,EAACA,EAAOrlB,GAAI,aAJtC,8BAQAlL,EAAAC,EAAAC,cAAA,4BAAgC,KAGlC,GAE6B,SAA9Bs0D,EAAYlH,eACe,YAA5BkH,EAAYhF,YACVxvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QAAS,kBAAMy/C,EAAS,OAACjlC,QAAD,IAACA,OAAD,EAACA,EAAOrlB,GAAI,cAJtC,kBAQAlL,EAAAC,EAAAC,cAAA,4BAAgC,KAGlC,GAE6B,SAA9Bs0D,EAAYlH,eACe,cAA5BkH,EAAYhF,YACVxvD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QAAS,kBAAMy/C,EAAS,OAACjlC,QAAD,IAACA,OAAD,EAACA,EAAOrlB,GAAI,cAJtC,kBAQAlL,EAAAC,EAAAC,cAAA,4BAAgC,IAChCF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QAAS,kBAAMy/C,EAAS,OAACjlC,QAAD,IAACA,OAAD,EAACA,EAAOrlB,GAAI,UAJtC,cAQAlL,EAAAC,EAAAC,cAAA,4BAAgC,KAGlC,GAGFF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,WACjBjD,QA1SW,WAAM,IAAAkgD,EACcC,EAAAC,GAAxB,OAAX3B,QAAW,IAAXA,OAAA,UAAAyB,EAAAzB,EAAavB,gBAAb,IAAAgD,OAAA,EAAAA,EAAuBzkD,QAAS,EAClCqL,EACG0rB,OAAO,CACNC,SAAU0F,GACVzpB,UAAW,CACTvZ,GAAE,OAAEqlB,QAAF,IAAEA,OAAF,EAAEA,EAAOrlB,GACX8nD,UAAS,QAAAkD,EAAA,OAAE1B,QAAF,IAAEA,OAAF,EAAEA,EAAaD,kBAAf,IAAA2B,IAA6B,GACtCjD,SAAQ,QAAAkD,EAAA,OAAE3B,QAAF,IAAEA,OAAF,EAAEA,EAAavB,gBAAf,IAAAkD,IAA2B,GACnC3G,YAAW,OAAEgF,QAAF,IAAEA,OAAF,EAAEA,EAAahF,YAC1BlC,cAAa,OAAEkH,QAAF,IAAEA,OAAF,EAAEA,EAAalH,iBAG/BnwC,KAAK,SAACC,GACDA,GACFL,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,4BAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GAEZT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAIXg5C,EAAY,oBAuQR,0DCnaJv2D,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,QA0DC03D,GAtDI,SAAAt3D,GACjB,IAAQyxB,EAA8BzxB,EAA9ByxB,MAAOvxB,EAAuBF,EAAvBE,UAAcI,EAA7BC,OAAAC,EAAA,EAAAD,CAAsCP,EAAtCu3D,IAEM72D,EAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACo2D,GAAAr2D,EAAD,KACED,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,YACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGwN,EAAMolC,cAAcY,oBAAoBxrD,IAAI,SAAAyO,GAAI,OAC/CxZ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACE9H,EAAKg9C,aAERx2D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACAthB,EAAAC,EAAAC,cAACuiC,GAAA,EAAD,CAAQ5gB,IAAI,aAAaC,IAAI,iCAE7B9hB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACG9H,EAAKi9C,KAERz2D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAY9H,EAAKquC,0CCtD/B9pD,GAAY/B,YAAW,iBAAO,CAClC06D,WAAY,CACVt6D,QAAS,OACTya,aAAc,QAEhB8/C,gBAAiB,CACfv6D,QAAS,QAEXw6D,cAAe,CACbz6D,MAAO,OACPO,OAAQ,OACRm6D,UAAW,SAEbC,aAAc,CAEZ99C,OAAQ,WAEV+9C,aAAc,CACZ/9C,OAAQ,WAEVg+C,iBAAkB,CAChB98B,UAAW,QACXz7B,SAAU,OACVoC,WAAY,WAwIDo2D,GArIM,SAACn4D,GACpB,IAAQyxB,EAA8BzxB,EAA9ByxB,MAA8BzxB,EAAvBE,UAAfK,OAAAC,EAAA,EAAAD,CAAsCP,EAAtCo4D,IACAxlD,QAAQyR,IAAIoN,EAAO,SACnB,IAAM/wB,EAAUzB,KAChB,OACEiC,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE7C,UAAW,KACvB0D,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,kBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MAEAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACGjN,EAAMolC,cAAcY,oBAAoBxrD,IAAI,SAACyO,GAAD,OAC3CxZ,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzkB,IAAKuE,EAAKtO,GAAIlM,UAAWQ,EAAQk3D,YACrC12D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,IAElB7Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTC,GAAI,GACJs+C,GAAI,EACJn4D,UAAWQ,EAAQm3D,iBAEnB32D,EAAAC,EAAAC,cAAA,OACE4hB,IAAI,GACJD,IAAI,gBACJ7iB,UAAWQ,EAAQo3D,iBAGvB52D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIs+C,GAAI,GAC1Bn3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIs+C,GAAI,GAC1Bn3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,iBAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cACnB,IACAv9C,EAAKg9C,cAGVx2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,WAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,GAAAh3D,OACMyZ,EAAK49C,eAAe5pD,OAD1B,KAAAzN,OACoCyZ,EAAK49C,eAAevpC,eAElD,IACR7tB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,sBAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cACnB,IACAv9C,EAAK49C,eAAeC,aAEjB,IACRr3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,qBAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cACnB,IACAv9C,EAAK49C,eAAeE,aAAc,MAGvCt3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,wBAIF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,SAIJ/2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIs+C,GAAI,GAC1Bn3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,aAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,IAAsCv9C,EAAKi9C,IAA3C,MAEFz2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,WAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,SAAAh3D,OACOw3D,KAAKC,MAAMh+C,EAAK49C,eAAeK,iBAAmB,MAG3Dz3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,UAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,SAAAh3D,OACOw3D,KAAKC,MACRh+C,EAAK49C,eAAeK,eAClBj+C,EAAK49C,eAAeM,cAH1B,MAAA33D,OAKqC,OAAjCyZ,EAAK49C,eAAeO,SAChB,IACAn+C,EAAK49C,eAAeO,SAP5B,WAWF33D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,aAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,WAEF/2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQs3D,cAAtB,gBAEF92D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQu3D,cAAtB,SAAAh3D,OACOw3D,KAAKC,MAAMh+C,EAAK49C,eAAeM,uBAQlD13D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,KAAGlB,UAAWQ,EAAQw3D,kBAAtB,iBACiBO,KAAKC,MAAMjnC,EAAMolC,cAAciC,cADhD,aCxIN75D,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,IAEzBuc,UAAW,CACTtc,UAAWL,EAAMI,QAAQ,OAIhBw7D,GAAyBv9B,YAAW,SAACx7B,GAChD,IAAMU,EAAUzB,KAChB0V,EAA0BL,mBAAS,MAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO8c,EAAP7c,EAAA,GAAckhB,EAAdlhB,EAAA,GACAG,EAA4CT,mBAAS,IAArDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOikD,EAAPhkD,EAAA,GAAuBikD,EAAvBjkD,EAAA,GACAG,EAAkDb,mBAAS,IAA3DgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO+jD,EAAP5jD,EAAA,GAA0BsgD,EAA1BtgD,EAAA,GAEQ/D,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBANkD,SAAA4nD,IAAA,OAAAA,EAAA54D,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAQ1D,SAAAsV,EAAiC0vC,GAAjC,IAAA9qD,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EACuBlB,EACnB,mBACA,GACA,CAAEolD,aAJN,OACM9qD,EADNqb,EAAA3T,KAMEX,QAAQyR,IAAIxY,GACZiqB,EAASjqB,EAASqlB,QAClB+nC,EAAkBptD,EAASutD,gBAR7B,wBAAAlyC,EAAAxT,SAAAuT,OAR0DnT,MAAAC,KAAA1B,WAmB1D,IAAM8jD,EAAyB,eAAA3kD,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAO+kD,GAAP,IAAA9kD,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1BZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO1B,GAEP0b,UAAW,CACTvZ,GAAIuqD,MATsBpkD,EAAAE,KAAA,EAa1BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GAAe,IAAAgxC,EAAAC,EAAAC,EAAAC,EAEpBX,EAAoB,QAAAQ,EAAA,OAClBhxC,QADkB,IAClBA,OADkB,UAAAixC,EAClBjxC,EAAYnU,YADM,IAAAolD,OAAA,UAAAC,EAClBD,EAAkBG,iBADA,IAAAF,OAAA,UAAAC,EAClBD,EAA6BG,kCADX,IAAAF,OAAA,EAClBA,EAAyDvqD,aADvC,IAAAoqD,IACgD,MAGrE33C,MAAM7L,QAAQzB,OArBe,wBAAAoB,EAAAmB,SAAA9B,MAAH,gBAAAgC,GAAA,OAAApC,EAAAsC,MAAAC,KAAA1B,YAAA,GAmC/B,OAXA8L,oBAAU,WACR,IACIk7C,EAASr5D,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GAIhD,OAjDwD,SAAArpB,GAAAwlD,EAAArlD,MAAAC,KAAA1B,WA+CxDinD,CAAkBD,GAClBlD,EAA0BkD,GACnB,YACK,IAEX,IAEE5nC,EAKHvwB,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,4BACnCtL,EAAAC,EAAAC,cAACm4D,GAAD,CAAQ9nC,MAAOA,IACfvwB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM3Z,UAAWQ,EAAQoZ,UAAWA,WAAS,EAACvc,QAAS,GACrD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,IAC3B7Y,EAAAC,EAAAC,cAACq4D,GAAD,CAAWhoC,MAAOA,KAEpBvwB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,IAC3B7Y,EAAAC,EAAAC,cAACs4D,GAAD,CAAYjoC,MAAOA,EAAOunC,eAAgBA,IAC1C93D,EAAAC,EAAAC,cAACu4D,GAAD,CACEloC,MAAOA,EACPunC,eAAgBA,EAChB34D,MAAO,CAAE7C,UAAW,MAEtB0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,SAC1C0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SACjD4D,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,eAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGi1C,EAAkBjtD,IACjB,SAACsW,EAAK2B,GAAN,MACe,UAAb3B,EAAIjJ,MACFpY,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIq3C,kBAChB14D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIjJ,MAChBpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIs3C,aAAyB,IACzC34D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGa,KAAOd,EAAI+V,WAAWhV,OACrB,gCAWtBpiB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SACjD4D,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,iBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGi1C,EAAkBjtD,IACjB,SAACsW,EAAK2B,GAAN,MACe,QAAb3B,EAAIjJ,MACFpY,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIq3C,kBAChB14D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIjJ,MAChBpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIs3C,aAAyB,IACzC34D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGa,KAAOd,EAAI+V,WAAWhV,OACrB,oCA7EvB,2CC/DLrkB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNqY,QAAS,CACPja,QAAS,IAEX+a,QAAS,CACPlB,cAAe,SACf/X,WAAY,WACZkZ,YAAa,CACX5a,WAAY,IAGhB4Z,WAAY,CACVX,YAAaxZ,EAAMI,QAAQ,OA+EhBu8D,GA3ES,SAAC95D,GAAU,IAAA+5D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAC,GACzBrrC,GAA8BzxB,EAA9ByxB,MAAOvxB,GAAuBF,EAAvBE,UAAcI,GAA7BC,OAAAC,EAAA,EAAAD,CAAsCP,EAAtC+8D,IAEMr8D,IADSsd,eACC/e,MAGhB,OACEiC,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,GAAV,CAAgBJ,UAAWU,kBAAKF,GAAQxB,KAAMgB,MAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,qBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,GAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACtB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAAA,iBAAA24D,EAAA,OAAItoC,SAAJ,IAAIA,QAAJ,UAAAuoC,EAAIvoC,GAAO4xB,uBAAX,IAAA2W,OAAA,UAAAC,EAAID,EAAwBhuD,MAAM,UAAlC,IAAAiuD,OAAA,EAAIA,EAAkCtxC,oBAAtC,IAAAoxC,IAAsD,YAExD74D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBACAH,EAAAC,EAAAC,cAAA,iBAAA84D,EAAA,OAAIzoC,SAAJ,IAAIA,QAAJ,UAAA0oC,EAAI1oC,GAAO4xB,uBAAX,IAAA8W,OAAA,UAAAC,EAAID,EAAwBnuD,MAAM,UAAlC,IAAAouD,OAAA,EAAIA,EAAkC75B,aAAtC,IAAA25B,IAA+C,YAEjDh5D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBACAH,EAAAC,EAAAC,cAAA,iBAAAi5D,EAAA,OAAI5oC,SAAJ,IAAIA,QAAJ,UAAA6oC,EAAI7oC,GAAO4xB,uBAAX,IAAAiX,OAAA,UAAAC,EAAID,EAAwBtuD,MAAM,UAAlC,IAAAuuD,OAAA,EAAIA,EAAkCxhD,cAAtC,IAAAshD,IAAgD,YAElDn5D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,eACAH,EAAAC,EAAAC,cAAA,SAA6F,KAApF,OAALqwB,SAAK,IAALA,QAAA,UAAA+oC,EAAA/oC,GAAO4xB,uBAAP,IAAAmX,OAAA,UAAAC,EAAAD,EAAwBxuD,MAAM,UAA9B,IAAAyuD,OAAA,UAAAC,EAAAD,EAAkCnX,uCAAlC,IAAAoX,OAAA,EAAAA,EAAmEpwD,mBAA0B,QAAkE,KAAnD,OAALmnB,SAAK,IAALA,QAAA,UAAAkpC,EAAAlpC,GAAO4xB,uBAAP,IAAAsX,OAAA,UAAAC,EAAAD,EAAwB3uD,MAAM,UAA9B,IAAA4uD,OAAA,EAAAA,EAAkCtwD,mBAA0B,QAAiE,KAAnD,OAALmnB,SAAK,IAALA,QAAA,UAAAopC,EAAAppC,GAAO4xB,uBAAP,IAAAwX,OAAA,UAAAC,EAAAD,EAAwB7uD,MAAM,UAA9B,IAAA8uD,OAAA,EAAAA,EAAkCxwD,mBAA0B,WAAqE,KAAnD,OAALmnB,SAAK,IAALA,QAAA,UAAAspC,EAAAtpC,GAAO4xB,uBAAP,IAAA0X,OAAA,UAAAC,EAAAD,EAAwB/uD,MAAM,UAA9B,IAAAgvD,OAAA,EAAAA,EAAkC1wD,mBAA0B,SAAoG,KAApF,OAALmnB,SAAK,IAALA,QAAA,UAAAwpC,EAAAxpC,GAAO4xB,uBAAP,IAAA4X,OAAA,UAAAC,EAAAD,EAAwBjvD,MAAM,UAA9B,IAAAkvD,OAAA,UAAAC,EAAAD,EAAkC5X,uCAAlC,IAAA6X,OAAA,EAAAA,EAAmE7wD,mBAA0B,UAAW,YAE1apJ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBACAH,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC7C,UAAU,SAChB,OAALi0B,SAAK,IAALA,QAAA,UAAA2pC,EAAA3pC,GAAO4xB,uBAAP,IAAA+X,OAAA,UAAAC,EAAAD,EAAwBpvD,MAAM,UAA9B,IAAAqvD,OAAA,UAAAC,EAAAD,EAAkC3vD,uBAAlC,IAAA4vD,OAAA,EAAAA,EAAmD5oD,QAAS,EAA5D,OAAiE+e,SAAjE,IAAiEA,QAAjE,UAAA8pC,EAAiE9pC,GAAO4xB,uBAAxE,IAAAkY,OAAA,UAAAC,EAAiED,EAAwBvvD,MAAM,UAA/F,IAAAwvD,OAAA,UAAAC,EAAiED,EAAkC9vD,uBAAnG,IAAA+vD,OAAA,EAAiEA,EAAmDxvD,IAAI,SAACsW,GAAD,OACvHrhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMM,MAAO0f,EAAK7jB,MAAM,UAAU2B,MAAO,CAAC3C,WAAW,MAAMs/D,cAAc,kBACtE,YAGR97D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,qBACAH,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC7C,UAAU,SACjB,OAALi0B,SAAK,IAALA,QAAA,UAAAiqC,EAAAjqC,GAAO4xB,uBAAP,IAAAqY,OAAA,UAAAC,EAAAD,EAAwB1vD,MAAM,UAA9B,IAAA2vD,OAAA,UAAAC,EAAAD,EAAkCsB,iBAAlC,IAAArB,OAAA,EAAAA,EAA6ClpD,QAAS,EAAtD,OAA0D+e,SAA1D,IAA0DA,QAA1D,UAAAoqC,EAA0DpqC,GAAO4xB,uBAAjE,IAAAwY,OAAA,UAAAC,EAA0DD,EAAwB7vD,MAAM,UAAxF,IAAA8vD,OAAA,UAAAC,EAA0DD,EAAkCmB,iBAA5F,IAAAlB,OAAA,EAA0DA,EAA6C9vD,IAAI,SAACsW,GAAD,OACzGrhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAMM,MAAO0f,EAAK7jB,MAAM,UAAU2B,MAAO,CAAC3C,WAAW,MAAMs/D,cAAc,kBACtE,YAGR97D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBACAH,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC7C,UAAU,MAAME,WAAW,SACxCwD,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,WAAc,OAALoS,SAAK,IAALA,QAAA,UAAAuqC,EAAAvqC,GAAO4xB,uBAAP,IAAA2Y,OAAA,UAAAC,EAAAD,EAAwBhwD,MAAM,UAA9B,IAAAiwD,OAAA,EAAAA,EAAkCkB,WAAkB,OAASt6D,MAAM,QAC3I3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,UAAc,OAALoS,SAAK,IAALA,QAAA,UAAAyqC,EAAAzqC,GAAO4xB,uBAAP,IAAA6Y,OAAA,UAAAC,EAAAD,EAAwBlwD,MAAM,UAA9B,IAAAmwD,OAAA,EAAAA,EAAkCgB,WAAW,OAAgBt6D,MAAM,SAG7I3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,yBACAH,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC7C,UAAU,MAAME,WAAW,SACxCwD,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,WAAc,OAALoS,SAAK,IAALA,QAAA,UAAA2qC,EAAA3qC,GAAO4xB,uBAAP,IAAA+Y,OAAA,UAAAC,EAAAD,EAAwBpwD,MAAM,UAA9B,IAAAqwD,OAAA,EAAAA,EAAkCe,eAAsB,OAASv6D,MAAM,QAC/I3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,UAAc,OAALoS,SAAK,IAALA,QAAA,UAAA6qC,EAAA7qC,GAAO4xB,uBAAP,IAAAiZ,OAAA,UAAAC,EAAAD,EAAwBtwD,MAAM,UAA9B,IAAAuwD,OAAA,EAAAA,EAAkCa,eAAe,OAAgBv6D,MAAM,SAGjJ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,mCACAH,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC7C,UAAU,MAAME,WAAW,SACxCwD,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,WAAc,OAALoS,SAAK,IAALA,QAAA,UAAA+qC,EAAA/qC,GAAO4xB,uBAAP,IAAAmZ,OAAA,UAAAC,EAAAD,EAAwBxwD,MAAM,UAA9B,IAAAywD,OAAA,EAAAA,EAAkCY,wBAA+B,OAASx6D,MAAM,QACxJ3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAAkB/S,MAAM,MAAMgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,UAAW2gB,UAAc,OAALoS,SAAK,IAALA,QAAA,UAAAirC,EAAAjrC,GAAO4xB,uBAAP,IAAAqZ,OAAA,UAAAC,EAAAD,EAAwB1wD,MAAM,UAA9B,IAAA2wD,OAAA,EAAAA,EAAkCU,wBAAwB,OAAgBx6D,MAAM,SAG1J3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,2BACAH,EAAAC,EAAAC,cAAA,KAAGf,MAAO,CAAChD,MAAM,MAAMigE,aAAa,eAApC,QAAAV,EAAA,OAAoDnrC,SAApD,IAAoDA,QAApD,UAAAorC,GAAoDprC,GAAO4xB,uBAA3D,IAAAwZ,QAAA,UAAAC,GAAoDD,GAAwB7wD,MAAM,UAAlF,IAAA8wD,QAAA,EAAoDA,GAAkCS,uBAAtF,IAAAX,IAAyG,8CCnFhH39D,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNqY,QAAS,CACPja,QAAS,IAEX+a,QAAS,CACPlB,cAAe,SACf/X,WAAY,WACZkZ,YAAa,CACX5a,WAAY,IAGhB4Z,WAAY,CACVX,YAAaxZ,EAAMI,QAAQ,OA2HhBigE,GAvHS,SAACx9D,GAAU,IAAAm6D,EAAAC,EAAAC,EACzB5oC,EAAiCzxB,EAAjCyxB,MAAOvxB,EAA0BF,EAA1BE,UAAUkM,EAAgBpM,EAAhBoM,GAAO9L,EAAhCC,OAAAC,EAAA,EAAAD,CAAyCP,EAAzCy9D,IAEM/8D,GADSsd,eACC/e,MAChBoV,EAA+BJ,IAAMK,SAAS,IAA9CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOkQ,EAAPhQ,EAAA,GAAgBmpD,EAAhBnpD,EAAA,GACA2I,EAAqCjJ,IAAMK,SAAS,IAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOygD,EAAPxgD,EAAA,GAAmBygD,EAAnBzgD,EAAA,GACMc,EAAQhK,IAAMwB,WAAW8G,IAE/BtI,IAAMkK,UAAU,WAAI,IAAA47C,EAAAC,EAAAC,EAAAC,EACnBwD,EAAW,OAACjsC,QAAD,IAACA,OAAD,UAAAsoC,EAACtoC,EAAO4xB,uBAAR,IAAA0W,OAAA,UAAAC,EAACD,EAAwB/tD,MAAM,UAA/B,IAAAguD,OAAA,EAACA,EAAkCjpD,QAC9C6sD,EAAc,OAACnsC,QAAD,IAACA,OAAD,UAAAwoC,EAACxoC,EAAO4xB,uBAAR,IAAA4W,OAAA,UAAAC,EAACD,EAAwBjuD,MAAM,UAA/B,IAAAkuD,OAAA,EAACA,EAAkCyD,cAChD,CAAClsC,IAGH,IAAMosC,EAAa,eAAArsD,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjIwqEY,2NiIvqEZga,UAAW,CAAEvZ,GAAIusB,SAASvsB,GAAKuxD,YAAYA,MAP3BprD,EAAAE,KAAA,EAWdS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnH,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,sCAGRiC,MAAM7L,QAAQzB,OAnBG,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAsBbyrD,EAAY,eAAAv4C,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAsV,EAAO9a,GAAP,IAAA0F,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACnBirD,EAAYvxD,GACN0F,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO3B,GACP2b,UAAW,CAAEvZ,GAAIusB,SAASvsB,GAAK2E,OAAO5E,MARvB+a,EAAAzU,KAAA,EAYbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLplB,EAAMw1B,YAEP/W,MAAM7L,QAAQzB,OAjBE,wBAAA+V,EAAAxT,SAAAuT,MAAH,gBAAAtT,GAAA,OAAA4R,EAAAzR,MAAAC,KAAA1B,YAAA,GAgDlB,OACEnR,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,MACAt9B,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACtB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBACAH,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CAAWN,WAAS,EAACha,QAAQ,WAAWoa,SAAU,SAAC5E,GAAD,OApCrC4M,EAoC+D5M,EAAMiG,OAAOzP,WAnCjGyxD,EAAer7C,GADK,IAACA,GAoCoFpW,MAAOwxD,EAAajnD,SAAmG,KAApF,OAAL+a,QAAK,IAALA,OAAA,UAAA0oC,EAAA1oC,EAAO4xB,uBAAP,IAAA8W,OAAA,UAAAC,EAAAD,EAAwBnuD,MAAM,UAA9B,IAAAouD,OAAA,UAAAC,EAAAD,EAAkC9W,uCAAlC,IAAA+W,OAAA,EAAAA,EAAmE/vD,sBAEpMpJ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,iBACAH,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACLN,WAAS,EACTha,QAAQ,WACRgiD,QAAM,EACNh2C,MAAOoY,EACPhK,SAAU,SAAC5E,GAAD,OAASmoD,EAAanoD,EAAMiG,OAAOzP,SAE3BjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,eAAhB,eACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,YAAhB,YACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,aACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,aACAjL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUvvC,MAAM,aAAhB,iBAKpBjL,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,KACEz9B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QArDhC,WAChB,GAAmB,KAAhB0mD,EAAmB,CACpB,IAAM9rD,EAAMnQ,EAAU,gBAChByjB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAEyqD,eAAgBplC,SAASvsB,GAChD4xD,aAAcL,KAEhBzqD,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLy4C,MAEDp/C,MAAM,SAACC,GACNT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,6BAmCT,kBC9HFvd,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,IAEzBuc,UAAW,CACTtc,UAAWL,EAAMI,QAAQ,IAE3B28C,SAAU,CACRC,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9B1Y,MAAO,WAIEu/D,GAA+BziC,YAAW,SAACx7B,GACtD,IAAMU,EAAUzB,KAChB0V,EAA0BL,mBAAS,MAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO8c,EAAP7c,EAAA,GAAckhB,EAAdlhB,EAAA,GACAG,EAA4CT,mBAAS,IAArDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACkDV,mBAAS,KAA3DgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO+jD,EAAP5jD,EAAA,GAA0BsgD,EAA1BtgD,EAAA,GAIM6gD,GAFyBliD,IAAMwB,WAAWzB,IAAxCzC,mBAEuB,eAAAC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAO+kD,GAAP,IAAA9kD,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC1BZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MlIutE6B,oXkIttE7Bga,UAAW,CACTvZ,GAAIusB,SAASg+B,OARapkD,EAAAE,KAAA,EAY1BS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GAAe,IAAA84C,EAAA7H,EAAA8H,EAAAC,EACpBxI,EAAoB,QAAAsI,EAAA,OAClB94C,QADkB,IAClBA,OADkB,UAAAixC,EAClBjxC,EAAYnU,YADM,IAAAolD,OAAA,UAAA8H,EAClB9H,EAAkBgI,uBADA,IAAAF,OAAA,UAAAC,EAClBD,EAAmCG,mDADjB,IAAAF,OAAA,EAClBA,EAAgFpyD,aAD9D,IAAAkyD,IACuE,MAG5Fz/C,MAAM7L,QAAQzB,OAnBe,wBAAAoB,EAAAmB,SAAA9B,MAAH,gBAAA+B,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,IAsB/BotB,EAAwDC,aAAS70B,GAA4B,CAC3F8a,UAAW,CACTvZ,GAAIusB,SAASlH,IAEf8sC,6BAA4B,EAC5BroC,YAAY,iBALNhlB,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAaggC,GAA9BxR,EAAuBtuB,MAAvBsuB,EAA8BwR,eAAczb,EAA5CiK,EAA4CjK,QAc5C,GANArX,oBAAU,WACR,IAAIk7C,EAASr5D,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GAChDm5B,EAA0BkD,GAC1BvjC,EAASujC,IACR,KAEE5nC,EACH,OAAO,KAQT,OACEvwB,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,kCAElCtL,EAAAC,EAAAC,cAACi6C,GAAA,EAAD,CAAUn7C,UAAWQ,EAAQw5C,SAAU1hC,KAAMtH,GAAWkhC,KAAc5c,UAAYyb,GACvE/vC,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,aAEnCwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACCza,WAAW,WACX0a,WAAS,EACTkkB,QAAQ,gBACRzgC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVkgC,cAAY,EACZ1iC,QAAQ,YAHV,gBAOAe,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,MAFV,gBAIgBsxB,KAIpBvwB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM3Z,UAAWQ,EAAQoZ,UAAWA,WAAS,EAACvc,QAAS,GACnD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,SAC1C0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,GAAImB,GAAI,GAAIz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SAC9C4D,EAAAC,EAAAC,cAACo9D,GAAD,CAAiB/sC,MAAOxgB,KAE/B/P,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,GAAImB,GAAI,GAAIz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SAChD4D,EAAAC,EAAAC,cAACq9D,GAAD,CAAkBhtC,MAAOxgB,EAAM7E,GAAIqlB,EAAO+D,QAASA,KAExDt0B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SACjD4D,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,eAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGi1C,EAAkBjtD,IACjB,SAACsW,EAAK2B,GAAN,IAAAw6C,EAAAC,EAAAC,EAAA,MAC4B,UAA1Br8C,EAAIs8C,mBACF39D,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAk8C,EAAYn8C,EAAIq3C,wBAAhB,IAAA8E,IAAoC,KACpCx9D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAm8C,EAAYp8C,EAAIs8C,yBAAhB,IAAAF,IAAqC,KACrCz9D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAo8C,EAAYr8C,EAAIjJ,YAAhB,IAAAslD,IAAwB,KAAiB,IACzC19D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGa,KAAOd,EAAI+V,WAAWhV,OACrB,gCAWtBpiB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC29C,GAAI,EAAGmB,GAAI,EAAGz/C,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,SACjD4D,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,iBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,oBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGi1C,EAAkBjtD,IACjB,SAACsW,EAAK2B,GAAN,IAAA46C,EAAAC,EAAAC,EAAA,MAC4B,QAA1Bz8C,EAAIs8C,mBACF39D,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAK+N,GACbhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAs8C,EAAYv8C,EAAIq3C,wBAAhB,IAAAkF,IAAoC,KACpC59D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAu8C,EAAYx8C,EAAIs8C,yBAAhB,IAAAE,IAAqC,KACrC79D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAAAw8C,EAAYz8C,EAAIjJ,YAAhB,IAAA0lD,IAAwB,KAAiB,IACzC99D,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACGa,KAAOd,EAAI+V,WAAWhV,OACrB,yCCxLhBpmB,YAAW,iBAAO,CAClCgC,KAAM,mDCcFD,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACL7c,UAAW,QAEbjJ,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAACp+B,GACf,IAAQE,EAA+BF,EAA/BE,UAAsBI,GAASN,EAApBkxB,OAAnB3wB,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCi/D,KAEMv+D,EAAUzB,KACRsS,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAERoD,EAA4BL,mBAAS,IAArCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO5D,EAAP6D,EAAA,GAAesqD,EAAftqD,EAAA,GANyB,SAAAuqD,IAAA,OAAAA,EAAA5+D,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsBzB,SAAAC,EAA4B+J,GAA5B,IAAAsb,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMwkB,EAAW,CACbt0B,UAAWgZ,EAAE9Y,OAFjB0P,EAAAE,KAAA,EAIuBlB,EACnB,2BACA,GACA0lB,GACA,GARJ,OAIMprB,EAJN0G,EAAAgB,KAWE2rD,EAAU3+D,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKwQ,GAAN,GAAAxQ,OAAAM,EAAA,EAAAN,CAAA,GAAeob,EAAEvP,GAAKP,EAASgd,WAX1C,wBAAAtW,EAAAmB,SAAA9B,OAtByBkC,MAAAC,KAAA1B,WAoCzB,OACEnR,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC3CgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMv6B,MAAO,CAAE7C,UAAW,KACxB0D,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC9BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,mBAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,UAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,WAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,SAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMo/D,YAAYnzD,IAAI,SAACwlB,GAAD,OACrBvwB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYiP,EAAMrlB,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACR8W,QAAS,SAAC0E,GAAD,OArD/B,SAAmBA,GACjBujD,EAAU3+D,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKwQ,GAAN,GAAAxQ,OAAAM,EAAA,EAAAN,CAAA,GAAeob,EAAEvP,GAAK,YAAcpM,EAAMm3B,SAASzkB,UAE5D1S,EAAMq/D,OAAO1jD,GAkDuB2jD,CAAU7tC,IAC1B5a,KAAK,QACLnY,MAAM,UACNwB,UAAWQ,EAAQwZ,QALrB,eAWFhZ,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACdpX,EAAO0gB,EAAMrlB,IAAM2E,EAAO0gB,EAAMrlB,IAAM,GAEvClL,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,SACXuU,QAAS,SAAC0E,GAAD,OA3EN,SAAAhI,GAAA,OAAAwrD,EAAArrD,MAAAC,KAAA1B,WA2EaktD,CAAa9tC,IAC7B/yB,MAAM,WAENwC,EAAAC,EAAAC,cAACo+D,GAAAr+D,EAAD,QAGJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNuY,QAAS,SAAC0E,GAAD,OAvE/B,SAAsBA,GACpBujD,EAAU3+D,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKwQ,GAAN,GAAAxQ,OAAAM,EAAA,EAAAN,CAAA,GAAeob,EAAEvP,GAAK,YAAcpM,EAAMm3B,SAASzkB,UAE5D1S,EAAMy/D,aAAa9jD,GAoEiB+jD,CAAajuC,IAC7B5a,KAAK,SAHP,WAQF3V,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNuY,QAAS,SAAC0E,GAzE9B3b,EAAM2/D,eA0Ec9oD,KAAK,SAHP,oBAcd3V,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,aAWxC+lB,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,UC/JFwhC,GAAU,SAACltD,EAAQkzB,EAAOi6B,GACrC,IAAI32C,EAAQ,EACR42C,EAAQ,GACTD,IAED32C,EAAQ22C,GAEV,IAAIE,EAAartD,EAASkzB,EAAOlzB,OAC7BstD,EAAmB,GACnBC,EAAmB,uCACnBC,EAAmBD,EAAWvtD,OAgBlC,OAdA,SAASytD,EAAaC,GAEtB,IAAM,IAAI5hD,EAAI,EAAGA,EAAIuhD,EAAYvhD,IAC9BwhD,GAAUC,EAAWI,OAAO5H,KAAK6H,MAAM7H,KAAK8H,SAAWL,IAE1DF,EAASp6B,EAAO46B,cAAgBR,EAAOQ,cACvCV,EAAMvpD,KAAKypD,GACXA,EAAS,GACTI,GAAkC,EAC/Bl3C,EAAQk3C,GAETD,EAAaC,GAZfD,CAAa,GAeNL,oBCGH7gE,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GAEvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAG9BkjE,YAAa,CACXz/D,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAG9B27B,YAAa,CACX/5B,QAAS,OACTC,WAAY,eAEd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,QAAQ3zB,MAGzC4hE,sBAAuB,CACrBniE,gBAAiBpB,EAAMwB,QAAQgiE,OAAO1/B,OAGxC7H,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,IAE5BqjE,sBAAuB,CACrBpjE,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,GAC1BoZ,YAAaxZ,EAAMI,QAAQ,IAE7BsjE,aAAc,CACZniE,MAAOvB,EAAMwB,QAAQgiE,OAAO1/B,UAgPjB6/B,GA5OM,SAAC9gE,GACpB,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B+gE,IACAvnC,EAAsCvlB,IAAMwB,WAAWob,IAEvDlc,GAFA6kB,EAAQhJ,WAARgJ,EAAoB5I,cACW3c,IAAMwB,WAAWzB,IAAxCzC,mBAC4B+C,mBAAStU,EAAMyvB,WAAW5iB,aAA9D+H,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwCN,mBAAStU,EAAMyvB,WAAW3jB,WAAlEkJ,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC8CV,mBAC5CtU,EAAMyvB,WAAWpjB,eADnBiJ,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAGA4kB,GAHAzkB,EAAA,GAAAA,EAAA,GAGoChB,mBAAStU,EAAMghE,aAAnDhnC,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOinC,EAAPhnC,EAAA,GAEAC,GAFAD,EAAA,GAEwC1lB,mBAAS,KAAjD4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,GAEsC5lB,mBAAS,KAA/C8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACwC9lB,mBAAS,KAAjDgmB,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GACA4mC,GADA3mC,EAAA,GAAAA,EAAA,GAC4BhmB,mBAAS,SAArC4sD,EAAA3gE,OAAAiU,EAAA,EAAAjU,CAAA0gE,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACoC5sD,mBAAS,SAA7C8sD,EAAA7gE,OAAAiU,EAAA,EAAAjU,CAAA4gE,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACgC9sD,mBAAS,KAAzCgtD,EAAA/gE,OAAAiU,EAAA,EAAAjU,CAAA8gE,EAAA,GAAOE,EAAPD,EAAA,GAAiBE,EAAjBF,EAAA,GAEAG,EAA4BntD,oBAAS,GAArCotD,EAAAnhE,OAAAiU,EAAA,EAAAjU,CAAAkhE,EAAA,GAEM/gE,GAFNghE,EAAA,GAAAA,EAAA,GAEgBziE,MAEhB0iE,EAAgCrtD,mBAAS,GAAzCstD,EAAArhE,OAAAiU,EAAA,EAAAjU,CAAAohE,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyCttD,mBAAS,IAAIkQ,OAAtDs9C,EAAAvhE,OAAAiU,EAAA,EAAAjU,CAAAshE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GA0EA,OACE5gE,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,wBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,iBACHsK,SAAU1W,EAAM+hE,WAChB9nD,QAASja,EAAMgiE,YAAc,GAC7B3nD,eAAgB,SAACC,GAAD,OAAYA,EAAOnb,SACnCgb,WAAS,EACTI,SAjEwB,SAAC5E,EAAO2E,GAC1C,IAAI2nD,EAAe,GACnB3nD,EAAOmgB,QAAQ,SAACC,GACdunC,EAAa1rD,KAAKmkB,EAAQnuB,aAE5Bi1D,EAAYjhE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKghE,GAAN,IAAgBj0B,SAAU20B,KAErCjiE,EAAM8T,MAAMmuD,EAAcV,EAAS5kC,WAAY4kC,EAASpa,eA2D9C3sC,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACN1C,QAAQ,WACRga,WAAS,SAKjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,iBACHsK,SAAU1W,EAAM+hE,WAChB9nD,QAASja,EAAMmpD,cAAgB,GAC/B9uC,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCyX,SA5F2B,SAAC5E,EAAO2E,GAC7C,IAAI2nD,EAAe,GACnB3nD,EAAOmgB,QAAQ,SAACC,GACdunC,EAAa1rD,KAAKmkB,EAAQ53B,QAE5B0+D,EAAYjhE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKghE,GAAN,IAAgB5kC,WAAYslC,KAEvCjiE,EAAM8T,MAAMytD,EAASj0B,SAAU20B,EAAcV,EAASpa,eAsF5ChtC,WAAS,EACTK,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,0BACN1C,QAAQ,WACRga,WAAS,SAKjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,iBACHsK,SAAU1W,EAAM+hE,WAChB9nD,QAASja,EAAMkiE,iBAAmB,GAClC7nD,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCyX,SAvH8B,SAAC5E,EAAO2E,GAChD,IAAI2nD,EAAe,GACnB3nD,EAAOmgB,QAAQ,SAACC,GACdunC,EAAa1rD,KAAKmkB,EAAQ53B,QAE5B0+D,EAAYjhE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKghE,GAAN,IAAgBpa,aAAc8a,KACzCjiE,EAAM8T,MAAMytD,EAASj0B,SAAUi0B,EAAS5kC,WAAYslC,IAkH1C9nD,WAAS,EACTD,OAAO,QACPM,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,sBACN1C,QAAQ,WACRga,WAAS,SAKjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACRxkB,SAAU1W,EAAM+hE,WAChB7hE,UAAWQ,EAAQm6B,SACnB1uB,MAAOnM,EAAMghE,WACb/mD,QAAS+mD,EACThmC,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MACE7C,EAAMghE,WAAWtuD,OAAS,EACtB,aAAe1S,EAAMghE,WAAWtuD,OAAS,KACzC,WAENwH,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,sBCzQtDra,YCcY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACV8X,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9B27B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,SAEjC2G,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OD7CZL,YAAW,SAAAC,GAAK,MAAK,CACnC+B,KAAM,CACJ7B,MAAO,OACPib,YAAa,CACX9a,UAAWL,EAAMI,QAAQ,KAG7BsX,OAAQ,CACN1V,QAAS,OACT9B,MAAO,IACP+0B,YAAa,QA2BJ+vC,OAxBf,SAAoBniE,GAChB,IAAMU,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAEA,OAFAE,EAAA,GAAAA,EAAA,GAGErT,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACAnG,KAAMxY,EAAM+rD,OACZjtC,kBAAgB,qBAChBC,mBAAiB,4BAEjB7d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,sBAAsBpM,EAAMwM,OAC5CtL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACA/d,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQmU,QAExB3T,EAAAC,EAAAC,cAACwV,GAAA,EAAD,UExBAwgB,GAAO,CACX,CAAEhrB,GAAI,iCAAkCvJ,MAAO,mBAE3C5D,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNu+B,aAAc,CACZjgC,UAAWL,EAAMI,QAAQ,IAE3B+9B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAId,SAAS6kE,GAAmBpiE,GACzC,IAAMU,EAAUzB,KAEhB0V,EAA8BL,mBAAS,IAAvCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+D,EAAP9D,EAAA,GAAgBgnB,EAAhBhnB,EAAA,GACQrD,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACF0M,EAAQhK,IAAMwB,WAAW8G,IAC/BxH,EAAgCT,mBAAS,IAAzCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOoiB,EAAPniB,EAAA,GAAiBqtD,EAAjBrtD,EAAA,GACAG,EAA0Bb,mBAAS,IAA1BguD,EAAT/hE,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,MACA4kB,EAAuBzlB,mBAAS,IAAvBiuD,EAAThiE,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,MACAE,EAAgC3lB,oBAAS,GAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAOuoC,EAAPtoC,EAAA,GAAiBuoC,EAAjBvoC,EAAA,GACAC,EAAwB7lB,oBAAS,GAAjC8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GAAO3hB,EAAP4hB,EAAA,GAAand,EAAbmd,EAAA,GAVgD,SAAAsoC,IAAA,OAAAA,EAAAniE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAYhD,SAAAC,EAA4BjP,GAA5B,IAAAs0B,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACM0kB,EAASzkB,OADf,CAAAH,EAAAE,KAAA,gBAEIwK,GAAQ,GACO,GACfga,EAAW,CACTt0B,UAAWA,EAAUE,MACrB8/D,eAAgBxrC,GAElBsrC,GAAY,GARhBlwD,EAAAE,KAAA,EASyBlB,EACnB,iBACA,GACA0lB,GACA,GAbN,OAe+B,MANvBprB,EATR0G,EAAAgB,MAeiB8C,WACX4H,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK3Q,EAASgd,SAAW,0BAG3B5K,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CAGTS,GAAQ,GA3BZ1K,EAAAE,KAAA,iBA6BIwL,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,mCAhCX,yBAAAjK,EAAAmB,SAAA9B,OAZgDkC,MAAAC,KAAA1B,WAAA,SAAAuwD,IAAA,OAAAA,EAAAriE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAgDhD,SAAAsV,EAAqBtkB,GAArB,IAAAs0B,EAAAprB,EAAAg3D,EAAAC,EAAA,OAAApxD,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMwkB,EAAW,GACfA,EAAW,CACTt0B,UAAWA,EAAUE,OAHzBqkB,EAAAzU,KAAA,EAKuBlB,EACnB,yBACA,GACA0lB,GACA,GATJ,UAKMprB,EALNqb,EAAA3T,KAWMsvD,EAAah3D,EAASO,GACtB02D,EAAkBj3D,EAASsrB,WAC3BtrB,EAASsrB,UAAYtrB,EAASsrB,SAASzkB,OAAS,GAbtD,CAAAwU,EAAAzU,KAAA,gBAcIwK,GAAQ,GAEJga,EAAW,GACfA,EAAW,CACT8rC,iBAAkBpgE,EAAUE,MAC5B8/D,eAAgBG,EAChBD,WAAYA,GAEdJ,GAAY,GAtBhBv7C,EAAAzU,KAAA,GAuB0BlB,EACpB,sBACA,GACA0lB,GACA,GA3BN,QAAA/P,EAAA3T,KA6BI0J,GAAQ,GA7BZiK,EAAAzU,KAAA,iBA+BI2wB,MAAM,yCA/BV,yBAAAlc,EAAAxT,SAAAuT,OAhDgDnT,MAAAC,KAAA1B,WAAA,SAAA2wD,IAAA,OAAAA,EAAAziE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmFhD,SAAA6T,EAA6By9C,EAAYtmC,EAAYwqB,GAArD,IAAAlwB,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,aACiB,GAEfwkB,EAAW,CACTqW,SAAU21B,GAAcA,EAAWvwD,OAAS,EAAIuwD,EAAa,GAC7D7oD,iBAAkBuiB,GAAcA,EAAWjqB,OAAS,EAAIiqB,EAAa,GACrEtwB,aAAc86C,GAAgBA,EAAaz0C,OAAS,EAAIy0C,EAAe,IAN3EzhC,EAAAjT,KAAA,EASuBlB,EACnB,sBACA,GACA0lB,GACA,GAbJ,OASMprB,EATN6Z,EAAAnS,KAeE8uD,EAAYx2D,EAASsrB,UACrBmrC,EAAcz2D,EAASC,UACvBy2D,EAAW12D,EAASm2D,YAjBtB,wBAAAt8C,EAAAhS,SAAA8R,OAnFgD1R,MAAAC,KAAA1B,WAAA,SAAA6wD,IAAA,OAAAA,EAAA3iE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsGhD,SAAAoU,IAAA,OAAArU,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OACE0N,OAAOC,SAASxd,KAAO,6CADzB,wBAAAqjB,EAAAvS,SAAAqS,OAtGgDjS,MAAAC,KAAA1B,WAmHhD,OATA8L,oBAAU,WAIR,OADAyd,EAAWlwB,GAAgBE,OAAO5L,EAAMiR,OACjC,YACK,IAEX,IAGD/P,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACnCtL,EAAAC,EAAAC,cAAC+hE,GAAD,CAAY32D,MAAO,uBAAwBu/C,OAAQvzC,IACnDtX,EAAAC,EAAAC,cAACgiE,GAAD,CACErB,WAAYS,EACZtiE,UAAWQ,EAAQ+8B,aACnB3pB,MA1HwC,SAAAD,EAAAuiB,EAAAC,GAAA,OAAA2sC,EAAAlvD,MAAAC,KAAA1B,YA2HxC2uD,WAAY7pC,EAASzkB,OAAS,EAAIykB,EAAW,GAC7CgyB,aAAczwC,EAAQ5M,SACtBo2D,gBAAiBxpD,EAAQrM,aACzB21D,WAAYtpD,EAAQ7L,WACpB4iB,WAAY/W,EACZikB,WAAY,CAAC,eAAgB,aAAc,mBAE7Cz7B,EAAAC,EAAAC,cAACiiE,GAAD,CACElsC,SAAUA,EACVioC,YAAahoC,GACbuoC,YArIwC,kBAAAuD,EAAApvD,MAAAC,KAAA1B,YAsIxCgtD,OAtIwC,SAAA1rD,GAAA,OAAA+uD,EAAA5uD,MAAAC,KAAA1B,YAuIxCotD,aAvIwC,SAAA7rD,GAAA,OAAAgvD,EAAA9uD,MAAAC,KAAA1B,cAyI1CnR,EAAAC,EAAAC,cAAA,OACEf,MAAO,CACL/C,QAAS,WACT6B,QAAS,OACTE,eAAgB,WAGlB6B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMn9B,KAAK,eACT1B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUyB,QAAQ,aAAhC,0BChKZ,IAAMlB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACnCoiC,SAAU,CACRrlB,OAAQ/c,EAAMI,QAAQ,OAGf+lE,GAAc9nC,YAAW,SAAAx7B,GAClC,IAAMU,EAAUzB,KAEhBwgC,EAAiCC,aAASh0B,GAAgBC,OAAlDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAEvB,OAAGD,EAAgBhQ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAE1DpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAKjBF,EAAAC,EAAAC,cAACghE,GAAD7hE,OAAAe,OAAA,GAAetB,EAAf,CAAsBiR,KAAMA,OCG1BsW,GAAU,CACd,CAAEnb,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,mBAAoBvJ,MAAO,oBACjC,CAAEuJ,GAAI,WAAYvJ,MAAO,UACzB,CAAEuJ,GAAI,YAAavJ,MAAO,eAGT3F,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SA4E9B,SAAS4qD,GAAqBhnD,EAAGinD,EAAGz2B,GAClC,OAAIy2B,EAAEz2B,GAAWxwB,EAAEwwB,IACT,EAENy2B,EAAEz2B,GAAWxwB,EAAEwwB,GACV,EAEF,EAoBT,SAASH,GAAkBxxB,GACzB,IACEU,EAOEV,EAPFU,QAEA+wB,GAKEzxB,EANF0xB,iBAME1xB,EALFyxB,OACAE,EAIE3xB,EAJF2xB,QAGAC,GACE5xB,EAHF6xB,YAGE7xB,EAFF8xB,SAEE9xB,EADF4xB,eAMF,OACE1wB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KASGiF,GAAQtb,IAAI,SAACic,GAAD,OACXhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd+b,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,UAC5C0J,cAAeJ,IAAYzJ,EAAS9b,IAAKqlB,GAEzCvwB,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACEC,OAAQN,IAAYzJ,EAAS9b,GAC7B2Q,UAAW4U,IAAYzJ,EAAS9b,GAAKqlB,EAAQ,MAC7Cxa,SAzBeib,EAyBYhK,EAAS9b,GAzBR,SAACuJ,GACvCic,EAAcjc,EAAOuc,MA0BVhK,EAASrlB,MACT8uB,IAAYzJ,EAAS9b,GACpBlL,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQyxB,gBACH,IAEpB,OAhCU,IAACD,MAmDJh1B,YAAW,SAACC,GAAD,MAAY,CAC9C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA+CQz1B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAnFX,IAuFMqnB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WAwPA2R,gBApPI,SAACjzB,GAClB,IAAIy7B,EAAUvI,cACRxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAgCjJ,IAAMK,SAAS,IAA/C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC0BlJ,IAAMK,SAAS,SAAzCgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOoU,EAAPnU,EAAA,GAAcwY,EAAdxY,EAAA,GACAC,EAA8BtJ,IAAMK,SAAS,aAA7CkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOoU,EAAPnU,EAAA,GAAgByY,EAAhBzY,EAAA,GACAG,EAAsC1J,IAAMK,SAAS,IAArDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOgK,EAAP/J,EAAA,GAAoBgK,EAApBhK,EAAA,GACA4V,EAAkCvf,IAAMK,SAAS,GAAjDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAOL,EAAPM,EAAA,GAAkBL,EAAlBK,EAAA,GACAC,EAAsCzf,IAAMK,SAAS,GAArDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOL,EAAPM,EAAA,GAAoBL,EAApBK,EAAA,GACAE,EAAwC5f,IAAMK,SAAS,IAAvDwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAO0vC,EAAPzvC,EAAA,GAAqBP,EAArBO,EAAA,GACAE,EAA8C/f,IAAMK,SAAS,IAA7D2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACgDhgB,IAAMK,SAAS,KAA/D6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACoDlgB,IAAMK,SAAS,KAAnEigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GACQ/iB,GADRgjB,EAAA,GAAAA,EAAA,GAC+BtgB,IAAMwB,WAAWzB,IAAxCzC,oBACRijB,EAAoCvgB,IAAMK,SAAS,IAAnDmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAf4B,SA0Cb+uC,EA1Ca7vD,GAAA,OAAA8vD,EAAA3vD,MAAAC,KAAA1B,WAAA,SAAAoxD,IAAA,OAAAA,EAAAljE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA0C5B,SAAAC,EAAkCmrB,GAAlC,IAAA+kB,EAAAj2C,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMqvC,EAAc,CAChB4hB,UAAW3mC,GAFfxqB,EAAAE,KAAA,EAKuBlB,EAAmB,iBAAkB,GAAIuwC,GALhE,OAKMj2C,EALN0G,EAAAgB,KAMEX,QAAQyR,IAAIxY,GAEZsU,OAAO3H,KAAK3M,EAASgG,IAAK,UAR5B,wBAAAU,EAAAmB,SAAA9B,OA1C4BkC,MAAAC,KAAA1B,WAuB5B8L,oBAAU,WACRgY,EAAe,GAAI,GAAI,GAAI,GAAI,GAAI1E,EAAOE,IACzC,IACHxT,oBAAU,WACRgY,EACEn2B,EAAM2jE,aAAajtC,WACnB12B,EAAM2jE,aAAaC,aACnB5jE,EAAM2jE,aAAat3D,aACnB,GACA,GACAolB,EACAE,IAED,CAAC3xB,EAAM2jE,eApCkB,SAuEbxtC,EAvEaviB,EAAAC,EAAAuiB,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAC,EAAA3iB,MAAAC,KAAA1B,WAAA,SAAAokB,IAAA,OAAAA,EAAAl2B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuE5B,SAAAsV,EACEyP,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAPF,IAAAC,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cASMwkB,EAAW,CACbpgB,KAAMggB,GAAsBlP,EAC5BuP,OAAQ7D,EACRqD,WAAYA,EACZC,gBAAiBA,EACjBC,YAAaA,EACbnF,MAAOsF,GAActF,EACrBuF,QAASA,GAAoBrF,GAhBjCzK,EAAAzU,KAAA,EAkBuBlB,EAAmB,kBAAmB,GAAI0lB,GAlBjE,OAkBMprB,EAlBNqb,EAAA3T,KAoBEX,QAAQyR,IAAIxY,GACZ0nB,EAAgB1nB,EAASsrB,SAASC,MAClChE,EAAavnB,EAASsrB,SAASjO,OAtBjC,wBAAAhC,EAAAxT,SAAAuT,OAvE4BnT,MAAAC,KAAA1B,WAuH5B,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAeZ7iB,EAAAC,EAAAC,cAACyiE,GAAD,CACEnjE,QAASA,EACT+wB,MAAOA,EACPE,QAASA,EACTC,cA1FgB,SAACjc,EAAOuc,GAChC,IAAMoF,EAAQ3F,IAAYO,GAAsB,QAAVT,EACtCqE,EAASwB,EAAQ,OAAS,OAC1BrB,EAAW/D,GACXiE,EAAe,GAAI,GAAI,GAAI,GAAI,GAAImB,EAAQ,OAAS,MAAOpF,MAwFrDhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KAhUV,SAAoBqkC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMr8C,IAAI,SAACw8C,EAAIvkC,GAAL,MAAe,CAACukC,EAAIvkC,KAOrD,OANAskC,EAAezxB,KAAK,SAAC51B,EAAGinD,GACtB,IAAM32B,EAAQ82B,EAAWpnD,EAAE,GAAIinD,EAAE,IACjC,OAAc,IAAV32B,EAAoBA,EACjBtwB,EAAE,GAAKinD,EAAE,KAGXI,EAAev8C,IAAI,SAACw8C,GAAD,OAAQA,EAAG,KAyU1BC,CAAW6a,EAvVxB,SAAuB9xC,EAAOE,GAC5B,MAAiB,SAAVF,EACH,SAACtwB,EAAGinD,GAAJ,OAAUD,GAAqBhnD,EAAGinD,EAAGz2B,IACrC,SAACxwB,EAAGinD,GAAJ,OAAWD,GAAqBhnD,EAAGinD,EAAGz2B,IAoVNg3B,CAAcl3B,EAAOE,IAAU1lB,IACvD,SAACsc,EAAKrE,GAAN,IAAA4/C,EAAA,OACE5iE,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIia,YACjBthC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAAhC,OACG3P,QADH,IACGA,OADH,UAAAu7C,EACGv7C,EAAKw7C,uBADR,IAAAD,OAAA,EACGA,EAAuB,GAAGE,OAC3B9iE,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAtHdvP,EAsHiCmc,EAAIia,gBApHxD/G,EAAQllB,KAAR,sBAAAtV,OAAmCmL,IAFrC,IAAqBA,IAuHDlL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAO6nD,EAAmBj7C,EAAIia,cAC7CthC,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,QAGJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE7f,UAAU,KACVu1B,MAAM,MACNjhB,QAAS,kBAAMusD,EAAmBj7C,KAGjCA,EAAI07C,cAIP/iE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIlc,cAC7BnL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI27C,aAC7BhjE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAInO,kBAE7BlZ,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACd,IACDjnB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACErc,OAAO0lB,EAAI+C,SAAW,IACtBnM,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CAAQC,QAASkJ,EAAI+C,SAAUnf,MAAM,gBAK3CjL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAI+P,gBAmBjBp3B,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAI,GAAI,IAAK,IAAK,KACvCC,MAAOiK,EACPxL,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aAvNd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAUzB,GACzBwO,EAAe,GAAI,GAAI,GAAI,GAAI/M,IAqNnBC,oBArMd,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,GACRyO,EAAe,GAAI,GAAI,GAAIxgB,EAAMiG,OAAOzP,MAAO,iKCnT7ClN,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCgnE,OAAQ,CACNrxC,SAAU,YAEZtmB,MAAO,CACL9O,WAAYP,EAAMI,QAAQ,GAC1Bo1B,KAAM,GAERpb,QAAS,CACPla,MAAO,MACP6c,OAAQ/c,EAAMI,QAAQ,IAExB6mE,SAAU,CACRC,OAAQ,QAEVnqB,SAAU,CACRC,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9B1Y,MAAO,QAET4lE,WAAY,CACVpqD,OAAQ,IAEVhb,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B4qC,MAAO,CACLhpC,QAAS,QAEXsjB,YAAa,CACXpL,SAAU,QAIRsF,GAAa1I,IAAM2I,WAAW,SAAoB5c,EAAO6c,GAC7D,OAAO3b,EAAAC,EAAAC,cAAC0b,GAAA,EAADvc,OAAAe,OAAA,CAAOyb,UAAU,KAAKF,IAAKA,GAAS7c,MAG7C,SAASukE,GAAwBvkE,GAC/B,OACEkB,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CAAK7hD,QAAQ,OAAOC,WAAW,UAC7B8B,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CAAK3jD,MAAM,OAAOmnE,GAAI,GACpBtjE,EAAAC,EAAAC,cAACkxC,GAAA,EAAD/xC,OAAAe,OAAA,CAAgBnB,QAAQ,eAAkBH,KAE5CkB,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CAAKphD,SAAU,IACbsB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQzB,MAAM,iBAAlC,GAAAuC,OAAsDw3D,KAAKC,MACzD14D,EAAMmM,OADR,QAQR,IAAMs4D,GAAkB,SAACzkE,GAAU,IAAA0kE,EAAA7xB,EACjCpT,EAA0BC,aAAS/2B,IAA3BuI,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KACjB,OACE/P,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAI,eACJqnC,kBAAmB,SAACn5B,EAAQnO,GAAT,OAAmBmO,EAAOxX,OAASqJ,EAAMrJ,MAC5DuX,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAAO,QAAAyqD,EAAA,OAAEzzD,QAAF,IAAEA,OAAF,UAAA4hC,EAAE5hC,EAAMuiC,qBAAR,IAAAX,OAAA,EAAEA,EAAqB7mC,aAAvB,IAAA04D,IAAgC,GACvCv4D,MAAOnM,EAAM0zC,WAAa,KAC1Bn5B,SAAU,SAAC5E,EAAO4/B,GAChBv1C,EAAMu0C,aAAagB,IAErBrkC,QAASA,EACTsJ,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNsX,WAAS,EACT44B,UAAQ,EACR5yC,QAAQ,WACRwzC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERC,aACE1yC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACGtF,EACChQ,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,UAAUmY,KAAM,KACtC,KACH/E,EAAO6hC,WAAWC,uBA4dpB+wB,GAldK,SAAC3kE,GACnB,IAAMU,EAAUzB,KACV8e,EAASC,eACTC,EAAQhK,IAAMwB,WAAW8G,IACvBhL,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR8C,EAAsBJ,IAAMK,SAAS,CACnCswD,YAAa,aACbC,SAAU,GACVC,UAAW,KAHbvwD,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAKpD,EAALsD,EAAA,GAAWwwD,EAAXxwD,EAAA,GAKA2I,EAAgCjJ,IAAMK,SAAS,GAA/C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOqiB,EAAPpiB,EAAA,GAAiB6nD,EAAjB7nD,EAAA,GACAE,EAAkCpJ,IAAMK,SAAS,MAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOq2B,EAAPp2B,EAAA,GAAkBi3B,EAAlBj3B,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,IAAnDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO0nD,EAAPznD,EAAA,GAAmB0nD,EAAnB1nD,EAAA,GACAG,EAA4C1J,IAAMK,SAAS,CACzDvD,QAAQ,EACRmmC,OAAQ,KAFVt5B,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwnD,EAAPvnD,EAAA,GAAuBwnD,EAAvBxnD,EAAA,GAIA4V,EAAgCvf,IAAMK,UAAS,GAA/Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO6xC,EAAP5xC,EAAA,GAAiB6xC,EAAjB7xC,EAAA,GACIoW,EAAe,SAACl0B,GAClB,IAAA4vD,EAAsB5vD,EAAMiG,OAAtB9Y,EAANyiE,EAAMziE,KAAMqJ,EAAZo5D,EAAYp5D,MACZ44D,EAAQxkE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK0Q,GAAN,GAAA1Q,OAAAM,EAAA,EAAAN,CAAA,GAAauC,EAAOqJ,MA2BvBqM,EAAsBxY,EAAtBwY,KAAM0F,EAAgBle,EAAhBke,YAEZjK,IAAMkK,UAAU,WACd,IAAMqnD,EAASC,KAAe/jE,GAC9B8jE,EAAOE,GAAG,YAAa,SAACz0D,GACF,cAAhBA,EAAKF,OACPi0D,EAA8B,KAAd,OAAJ/zD,QAAI,IAAJA,OAAA,EAAAA,EAAM00D,aAElBZ,EAAQ,CACNH,YAAa,aACbC,SAAU,GACVC,UAAW,KAEb7mD,EAAMvB,SAAS,CACbL,SAAUR,GAAWQ,SAASxJ,KAC9B2J,IAAG,qBAAAvb,OAAuBgQ,EAAK20D,eAEjCJ,EAAOpqB,YAGV,IA6HH,OACEl6C,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQknD,YAAU,EAACrtD,KAAMA,EAAMoG,oBAAqBjC,IAClDzb,EAAAC,EAAAC,cAAC0kE,GAAA,EAAD,CAAQ5lE,UAAWQ,EAAQyjE,QACzBjjE,EAAAC,EAAAC,cAAC2kE,GAAA,EAAD,KACE7kE,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE81B,KAAK,QACLtnE,MAAM,UACNuY,QAASiH,EACTxb,aAAW,SAEXxB,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKzB,MAAM,UAAUwB,UAAWQ,EAAQ8L,OAA5D,gBAGsB,eAArByE,EAAK2zD,aACJ1jE,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRkmB,WAAS,EACT3nB,MAAM,UACNuY,QAvFY,WACA,KAAlBhG,EAAK4zD,SAQgB,gBAArB5zD,EAAK2zD,aAA2D,IAA1B3zD,EAAK6zD,UAAUpyD,QAQzD4yD,GAAY,GACZ/zD,EAAmB,qBAAsB,GAAvBhR,OAAAQ,EAAA,EAAAR,CAAA,GAAgC0Q,IAC/CoN,KAAK,SAACxS,GACL,IAAIo6D,GAAc,EAClBh1D,EAAK6zD,UAAUrqC,QAAQ,SAACyrC,GAClBr6D,EAASq6D,KAAWC,mBAAQt6D,EAASq6D,MACvCD,GAAc,KAGlBX,GAAY,GACZF,EAAkB,CAChBr0D,OAAQk1D,EACR/uB,OAAS+uB,EAAyB,GAAXp6D,MAG1B4S,MAAM,SAACtN,GACNyB,QAAQyR,IAAIlT,GACZm0D,GAAY,GACZrnD,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,6CA5BTyB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,gCAXPyB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,oCAmFC9F,UAAQ,EACR0vD,UAAWllE,EAAAC,EAAAC,cAACilE,GAAAllE,EAAD,OAEV,yBAGLD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE4P,WAAS,EACT3nB,MAAM,UACNyB,QAAQ,WACR8W,QA1JQ,WACS,gBAArBhG,EAAK2zD,aAA2D,IAA1B3zD,EAAK6zD,UAAUpyD,OAQnC,KAAlBzB,EAAK4zD,UAQL,OAACnxB,QAAD,IAACA,OAAD,EAACA,EAAWtnC,KAA2B,gBAArB6E,EAAK2zD,aAQ3BI,EAAY,GACQ/zD,EAAKq1D,qBAClBr1D,EAAKq1D,cACZhB,GAAY,GACZ/zD,EACE,gBACA,GAFgBhR,OAAAQ,EAAA,EAAAR,CAACA,OAAAQ,EAAA,EAAAR,CAAA,GAIZ0Q,GAJW,IAKdyiC,UAAS,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAWtnC,MAGvBiS,KAAK,SAACC,GACLgnD,GAAY,GACZrnD,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK8B,EAAIuK,YAGZpK,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZ4mD,GAAY,GACZrnD,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CAjCTyB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4BAXPyB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,mCAXPyB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,iCAsJD4pD,UAAWllE,EAAAC,EAAAC,cAACmlE,GAAAplE,EAAD,OAKW,eAArB8P,EAAK2zD,YACF,iBACA,sBAIV1jE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACE3Z,UAAWQ,EAAQ6W,QACnBuC,WAAS,EACTiD,UAAU,MACVihB,QAAQ,SACR5+B,WAAW,SACX7B,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAColE,GAAA,EAAD,CAAa7jE,UAAU,WAAWwX,WAAS,EAAC44B,UAAQ,GAClD7xC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,sBACAe,EAAAC,EAAAC,cAACqlE,GAAA,EAAD,CACE/jE,aAAW,cACXI,KAAK,cACLqJ,MAAO8E,EAAK2zD,YACZrqD,SAAUsvB,GAEV3oC,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAO,aACPgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,MACTr6D,MAAO,eAET3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAO,cACPgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,MACTr6D,MAAO,oBAKf3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE/C,QAAS,QACnC4D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEtO,MAAO8E,EAAK4zD,SACZtqD,SAAUsvB,EACVzS,KAAM,GACNjd,WAAS,EACTtX,MAAO,gBACPC,KAAK,WACL3C,QAAQ,WACR4yC,UAAQ,EACRzsB,WAAY,CAAEpmB,UAAWQ,EAAQ0jE,aAGf,gBAArBnzD,EAAK2zD,aACJ1jE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACslE,GAAD,CACEhzB,UAAWA,EACXa,aAAcA,KAGlBrzC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACulE,GAAAxlE,EAAD,CACEgL,MAAO8E,EAAK6zD,UACZ5mC,MA1QM,SAACz/B,GACnB,IAAIyN,EAAI+E,EACRxS,EAAKu+B,MAAM,KAAKvC,QAAQ,SAAC/f,GACvBxO,EAAE44D,UAAUvuD,KAAKmE,GACjBqqD,EAAQxkE,OAAAQ,EAAA,EAAAR,CAAA,GAAK2L,IACb6R,EACGpS,MAAM,CAAEA,MAAOxC,GAAawc,UAAW,CAAEugD,MAAOxrD,KAChD2D,KAAK,SAAA7M,GAAc,IAAAo1D,EAAAC,EAAX51D,EAAWO,EAAXP,MACC,OAAJA,QAAI,IAAJA,OAAA,UAAA21D,EAAA31D,EAAM61D,YAAN,IAAAF,OAAA,EAAAA,EAAY56D,SAAa,OAAJiF,QAAI,IAAJA,OAAA,UAAA41D,EAAA51D,EAAM61D,YAAN,IAAAD,OAAA,EAAAA,EAAY76D,MAAM0G,SAAU,GACnDwyD,EAAa,GAAAjkE,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAK0kE,GAAL,CAAiBvqD,OAGjC+D,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,QA8PNqoD,SAzPS,SAACtoE,EAAMylB,GAC5B,IAAIhY,EAAI+E,EACR/E,EAAE44D,UAAU7/B,OAAO/gB,EAAO,GAC1B6gD,EAAQxkE,OAAAQ,EAAA,EAAAR,CAAA,GAAK2L,KAuPDiO,WAAS,EACT6sD,gBAAiB,CAAC,GAAI,IACtBC,YAAa,CAAC,KACd9mE,QAAQ,WACR0C,MAAO,aACPsO,MAAO8zD,EAAWvyD,OAAS,EAC3BouB,WACEmkC,EAAWvyD,OAAS,EAApB,GAAAzR,OACOgkE,EAAW1nC,KACZ,KAFN,sIAUR4oC,mBAAO,OAAChB,QAAD,IAACA,OAAD,EAACA,EAAgBjuB,SACxBh2C,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI7Z,UAAWQ,EAAQ4jE,YACpCpjE,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,WAAWzB,MAAM,QAAQ2B,MAAO,CAAE/C,QAAS,IAE3D,mFAGJ4D,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,WACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,eACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,WAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGhT,EAAK6zD,UAAU74D,IACd,SAACyuB,EAASxW,GAAV,OACGiiD,mBAAQhB,EAAejuB,OAAOxc,KAC7Bx5B,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAK+N,GAClBtR,QAAQyR,IACP9jB,OAAOwvB,KAAKo1C,EAAejuB,OAAOxc,IAAUhoB,QAE9CxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE0kD,QACE3mE,OAAOwvB,KAAKo1C,EAAejuB,OAAOxc,IAAUhoB,OAE9CyV,MAAM,UAELuS,GAEFn6B,OAAOwvB,KAAKo1C,EAAejuB,OAAOxc,IAAUzuB,IAC3C,SAACyO,EAAM8D,GAAP,OACO,GAALA,GACEtd,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAKqI,GACnBtd,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAUzN,GAC3BxZ,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACdg9C,EAAejuB,OAAOxc,GAAShgB,QAM3Cna,OAAOwvB,KAAKo1C,EAAejuB,OAAOxc,IAAUzuB,IAC3C,SAACyO,EAAM8D,GAAP,OACEA,EAAI,GACFtd,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKqI,GACbtd,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAUzN,GAC3BxZ,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACdg9C,EAAejuB,OAAOxc,GAAShgB,aAYzD6kB,EAAW,GACVr+B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACmjE,GAAD,CAAyBp4D,MAAOozB,KAGpCr+B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACV1d,eAAe,SACfD,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,KACRwC,UAAU,KACVtC,MAAO,CACLhD,MAAO,OACP+9B,UAAW,SACX+rC,aAAc,iBACdznE,WAAY,QACZwa,OAAQ,gBAGVhZ,EAAAC,EAAAC,cAAA,QAAMf,MAAO,CAAEmmC,WAAY,OAAQlpC,QAAS,WAA5C,QAGJ4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACV1d,eAAe,SACfD,WAAW,UAEX8B,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAAA,SACElB,UAAWQ,EAAQynC,MACnBiJ,OAAO,8FACPhlC,GAAG,OACHkN,KAAK,OACLiB,SAAU,SAAC5E,GACT,IAAM07B,EAAQ17B,EAAMiG,OAAOy1B,MACvBA,GArPG,SAACzO,GACpB,IAAI0O,EAAe,IAAIC,SACvBD,EAAaE,IAAI,OAAQ5O,GAEzBF,KACG+O,KAAK/vC,EAAU,oBAAqB4vC,GACpCjzB,KAAK,SAACC,GACDA,GACFL,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,iCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAmOGk1B,CAAaL,EAAM,OAIzBnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,QACbzwC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CACEplC,MACEtL,EAAAC,EAAAC,cAAA,OACEf,MAAO,CACLR,WAAY,SACZu7B,UAAW,SAHf,oDAOEl6B,EAAAC,EAAAC,cAAA,WAPF,yJAWEF,EAAAC,EAAAC,cAAA,WAXF,+GAgBFV,QAAS,CAAE0mE,QAAS1mE,EAAQ+hB,aAC5B4kD,OAAK,GAELnmE,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUiE,UAAU,QAAtD,wBAMNzB,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAAS,WACP,IAAMsK,EAAOuwB,SAAS1wC,cAAc,KACpCmgB,EAAK+lD,SAAL,qBACA/lD,EAAK3e,KACH,qGACF2e,EAAKywB,UAGP9wC,EAAAC,EAAAC,cAACmmE,GAAApmE,EAAD,QAGJD,EAAAC,EAAAC,cAACi6C,GAAA,EAAD,CAAUn7C,UAAWQ,EAAQw5C,SAAU1hC,KAAM6sD,GAC3CnkE,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBlY,MAAM,gBCnkBrB8oE,GAAchsC,YACzBvI,aAAW,SAACjzB,GACV,IAAA2U,EAA8BL,mBAAS,IAAvCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+D,EAAP9D,EAAA,GAAgBgnB,EAAhBhnB,EAAA,GACAG,EAAwCT,mBAAS,IAAjDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO4uD,EAAP3uD,EAAA,GAAqByyD,EAArBzyD,EAAA,GAEAX,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GAyDA,OAtBA4J,oBAAU,YAERxS,EADc3L,EAAM+d,OAAOpS,OACrB,CACJA,MAAOtI,GACP6yB,YAAa,iBAEZ7X,KAAK,SAACpN,GACL,GAAIA,EAAM,CACR,IAAIX,EAAqBW,EAAKA,KAAKlF,2BAA2BC,MAC1DuE,EAAgBU,EAAKA,KAAK3E,sBAAsBN,MACpD4vB,EAAW,CACTtrB,qBACAC,qBAKLkO,MAAM,SAACtN,GACNyB,QAAQyR,IAAI,YAEf,IAGDnjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI9mB,WAAY,YAC/C8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,aAKFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,QACd9+B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUgY,UAAQ,GAApD,oBAIFxV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAtE5B,WACtBgG,GAAQ,IAqEoE5c,MAAO,CAAE3C,WAAY,IAA3F,kBAKJwD,EAAAC,EAAAC,cAACsmE,GAAD,CAAehvD,QAASA,EAASuC,SAlDrC,SAAkByb,GAEhB+wC,EAAgBlnE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXojE,GADU,IAEbjtC,iBA8CqD/d,SAnEzD,SAAkBgvD,GAChB,IAAIrmB,EAAgB,GAEhBqmB,EAAUvtD,mBACZknC,EAAa,aAAmBqmB,EAAUvtD,iBAAiBtX,MAGzD6kE,EAAUt7D,eACZi1C,EAAa,aAAmBqmB,EAAUt7D,aAAavJ,MAGzD2kE,EAAgBlnE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXojE,GACAriB,OAuDHpgD,EAAAC,EAAAC,cAACwmE,GAAD,CAASjE,aAAcA,IACvBziE,EAAAC,EAAAC,cAACymE,GAAD,CAAarvD,KAAMA,EAAM0F,YAzET,WAClBjB,GAAQ,uFCiBRhe,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC09B,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,IAGbwqE,eAAgB,CACdC,UAAW,CACTj1C,SAAU,wBAGd00B,YAAa,CACXwgB,4BAA6B,CAC3BtpE,MAAO,YAIXQ,KAAM,CACJ1B,UAAWL,EAAMI,QAAQ,IAE3B6lC,MAAO,CACLrrB,aAAc5a,EAAMI,QAAQ,IAE9Bqa,UAAW,CACTG,aAAc5a,EAAMI,QAAQ,IAE9Bsa,WAAY,CACV1Y,QAAS,OACTC,WAAY,UAEd6oE,UAAW,CACT/tD,OAAQ/c,EAAMI,QAAQ,EAAG,IAE3B0a,KAAM,CACJza,UAAWL,EAAMI,QAAQ,GACzB+a,YAAa,CACX5a,WAAYP,EAAMI,QAAQ,KAG9B+B,SAAU,CACRA,SAAU,GAEZ4oE,UAAW,CACTjvC,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,QAKjB,SAAS4qE,GAAYnoE,GAClC,IAAAw5B,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACpB/a,EAA0CL,mBAAS,IAAnDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOyzD,EAAPxzD,EAAA,GAAwByzD,EAAxBzzD,EAAA,GACMlU,EAAUzB,KACRiB,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BsoE,IAEAr0D,IAAMkK,UAAN5d,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAgB,SAAAC,IAAA,OAAAF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdS,MAAMtR,EAAoB,CACxBoQ,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOnD,OAE7B6V,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACC,GAAD,OAAS+pD,EAAe/pD,EAAIrN,KAAKs3D,oBAAoBv8D,SAP/C,wBAAAuG,EAAAmB,SAAA9B,MAQb,IAEHqC,IAAMkK,UAAU,aAAU,CAACgM,IAI3B,IAuRkB7Q,EAtMZkvD,EAAmB,SAAClvD,GAAD,OAAU,SAACqC,GAClC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAE5CouB,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAChB,IAAAs8D,EAAd,eAATnvD,EACFoW,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAAAs+C,EAAA,GAAAloE,OAAAM,EAAA,EAAAN,CAAAkoE,EAEVnvD,EAAOnN,GAFG5L,OAAAM,EAAA,EAAAN,CAAAkoE,EAAA,iBAGKt8D,EAAMksB,oBAHXowC,KAMb/4C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAkM3C,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GACjC2D,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,0BAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAClC2D,EAAAC,EAAAC,cAACmnC,GAAD,CACEroC,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWG,YAClBle,GAAG,cACH+E,MAAOgZ,EAAWoF,cAAcjF,YAEhCxnB,KAAK,cACLD,MAAM,eACN0X,UA9BFjB,EA8BqB,cA9BZ,SAACqC,IAEH,KAAnBA,EAAEC,OAAOzP,OADF,iBACqBu8D,KAAK/sD,EAAEC,OAAOzP,SAC5CujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,cA8BpCjL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACxa,UAAW,iBAAkB6Z,GAAI,GAAImM,GAAI,GAClDhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWC,gBACzB7P,SAAUggB,EAAmB,mBAC7BtgB,QAASkQ,EAAWsF,WAAW3jB,SAASG,IACtC,SAACqO,GAAD,OAAYA,EAAOzX,QAErBm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0C,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,0BACNqX,OAAO,QACP/I,MAAOgZ,EAAWoF,cAAcnF,gBAChCjqB,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKlDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GACjC2D,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,eACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC24C,aAAcrxB,EAAW9d,aACzB4N,QAASkQ,EAAWsF,WAAWpjB,aAC/BkO,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0C,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,sBACNqX,OAAO,QACP/Z,QAAQ,WACRgR,MAAOgZ,EAAWoF,cAAcljB,aAChC8N,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,sBAS1DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACpBiE,EAAW9d,aACVnL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,0BAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACtB4sB,EAAW9d,aACVnL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWw+C,eACzB1uD,QAASkQ,EAAWsF,WAAWhjB,SAASR,IACtC,SAACqO,GAAD,OAAYA,EAAOzX,QAErB0X,SAtOC,SAACjB,GAAD,OAAU,SAAC3D,EAAOxJ,GAAU,IAAAy8D,EACnDv+C,EAAQ,CAAC,QAAS,QAAS,SAC3Ble,IACEA,EAAMwuB,QAAQ,YAAc,GAAKxuB,EAAMwuB,QAAQ,aAAe,KAChC,IAA5BtQ,EAAMsQ,QAAQ,WAChBtQ,EAAQ,CAAC,QAAS,QAAS,QAAS,UAI1CqF,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IAAAy+C,EAAA,GAAAroE,OAAAM,EAAA,EAAAN,CAAAqoE,EAAmBtvD,EAAOnN,GAA1B5L,OAAAM,EAAA,EAAAN,CAAAqoE,EAAA,QAAiCv+C,GAAjCu+C,MA6NuBC,CAAqB,kBAC/B7tC,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,2BACNqX,OAAO,QACP/Z,QAAQ,WACRgR,MACEgZ,EAAWoF,cAAco5C,eAE3BxuD,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,mBAOhB,KACJpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWU,eACzB5Q,QAASkQ,EAAWsF,WAAW9iB,OAAOV,IACpC,SAACqO,GAAD,OAAYA,EAAOzX,QAErB0X,SA3UG,SAACjB,GAAD,OAAU,SAAC3D,EAAOxJ,GAAU,IAAA28D,EAGjD79C,EAAiB,GACjBD,EAAQ,GA0CZo9C,EAAgB3tC,QAAQ,SAAC9e,GACnBwO,EAAW9d,aAAaE,YAAcoP,EAAE7Y,MAAQqJ,IAAUwP,EAAEhP,SAC9Dse,EAAe1U,KAAK,GAAKoF,EAAEotD,WAC3B/9C,EAAMzU,KAAK,GAAKoF,EAAEotD,cAItBr5C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAAA2+C,EAAA,GAAAvoE,OAAAM,EAAA,EAAAN,CAAAuoE,EAEVxvD,EAAOnN,GAFG5L,OAAAM,EAAA,EAAAN,CAAAuoE,EAAA,QAGX99C,GAHWzqB,OAAAM,EAAA,EAAAN,CAAAuoE,EAAA,iBAIX79C,GAJW1qB,OAAAM,EAAA,EAAAN,CAAAuoE,EAAA,eAhDM,GAgDNA,MAsRmBE,CAAmB,kBAC7BhuC,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/I,MAAOgZ,EAAWoF,cAAc1E,eAChC1qB,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAOhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC24C,aAAcrxB,EAAW3b,YACzByL,QAASkQ,EAAWsF,WAAWjhB,YAC/B+L,SAAUggB,EAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAAOgZ,EAAWoF,cAAc/gB,YAChCmlC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAOhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC24C,aAAcrxB,EAAW9b,YACzB4L,QAASkQ,EAAWsF,WAAWphB,YAC/BkM,SAAUggB,EAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRgR,MAAOgZ,EAAWoF,cAAclhB,YAChC8L,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,sBAUtB,OAGRpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACpBiE,EAAW9d,aACVnL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,uBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWtd,WACzBwN,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCoX,QAASkQ,EAAWsF,WAAW5iB,WAC/B0N,SAAUggB,EAAmB,cAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0C,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRgR,MAAOgZ,EAAWoF,cAAc1iB,WAChCsN,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GACjC2D,EAAAC,EAAAC,cAACmnC,GAAD,CACEpoC,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,sBACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOge,EAAW8+C,kBAClB93D,MAAOgZ,EAAWoF,cAAc05C,kBAChC78D,GAAG,oBACHtJ,KAAK,oBACLyX,SAAUiuD,EAAiB,wBAG/BtnE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GACjC2D,EAAAC,EAAAC,cAACmnC,GAAD,CACEpoC,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,mBACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr2C,MAAOgZ,EAAWoF,cAAc25C,eAChC/8D,MAAOge,EAAW++C,eAClBC,gBAAiB,CACfC,OAAQj/C,EAAW++C,gBAErB98D,GAAG,iBACHtJ,KAAK,iBACLyX,SAAUiuD,EAAiB,qBAG/BtnE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GACjC2D,EAAAC,EAAAC,cAAColE,GAAA,EAAD,CAAa7jE,UAAU,YACrBzB,EAAAC,EAAAC,cAACioE,GAAA,EAAD,CAAW1mE,UAAU,UAArB,iBAGAzB,EAAAC,EAAAC,cAACqlE,GAAA,EAAD,CACE/jE,aAAW,WACXI,KAAK,WACLqJ,MAAOge,EAAWm/C,cAClB/uD,SA/gBA,SAAC5E,GACzB+Z,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB,gBAAkBoV,EAAMiG,OAAOzP,UA+gBvCoc,KAAG,GAEHrnB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAM,MACNgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,YACtBmE,MAAM,MACN0jB,eAAe,UAEjBrlB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE/S,MAAM,KACNgT,QAASje,EAAAC,EAAAC,cAAC87D,GAAA,EAAD,CAAOx+D,MAAM,YACtBmE,MAAM,KACN0jB,eAAe,gBAOrB,KAER,MAENrlB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACrBhlB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IACpBiE,EAAW9d,aACVnL,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,+BAGRtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAI3a,WAAW,SAAS7B,QAAS,GACnD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWo/C,qBACzBhvD,SAAUggB,EACR,wBAEFtgB,QAASkQ,EAAW9b,YAAYpC,IAC9B,SAACqO,GAAD,OAAYA,EAAOzX,QAErBm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MACEgZ,EAAWoF,cAAcg6C,qBAE3B51B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAMhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWq/C,qBACzBjvD,SAAUggB,EACR,wBAEFtgB,QAASkQ,EAAW3b,YAAYvC,IAC9B,SAACqO,GAAD,OAAYA,EAAOzX,QAErBm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/I,MACEgZ,EAAWoF,cAAci6C,qBAE3BrpE,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,qBASpB,OAGRpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IACpBiE,EAAW9d,eAC2B,MAAtC8d,EAAW9d,aAAaE,WACe,MAAtC4d,EAAW9d,aAAaE,WACc,OAAtC4d,EAAW9d,aAAaE,YAC1B4d,EAAWa,MAAMtY,OAAS,EACxBxR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,qBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACRuuC,UAAQ,EACRvpE,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWc,eACzBhR,QAASkQ,EAAWa,MACpBzQ,SAAUggB,EAAmB,kBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAAOgZ,EAAWoF,cAActE,eAChC0oB,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAOhBpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,eACHlM,UAAWQ,EAAQm6B,SACnB4uC,UAAQ,EACRjuB,aAAcrxB,EAAWu/C,aACzBzvD,QAASkQ,EAAWc,eACpB1Q,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,sBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAAOgZ,EAAWoF,cAAcm6C,aAChC/1B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,qBAQd,KAER,MAENpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IACpBiE,EAAW9d,cACsB,aAAlC8d,EAAW9d,aAAaiD,MACtBpO,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAW1a,eACzBwK,QAASkQ,EAAWsF,WAAWhgB,eAAexD,IAC5C,SAACqO,GAAD,OAAYA,EAAOzX,QAErB0X,SAAUggB,EAAmB,kBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0C,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAAOgZ,EAAWoF,cAAc9f,eAChCkkC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,qBAQd,KAER,QAIVpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,wCC59B3BosE,GAAkBC,aAAOC,QAAPD,CAAa,SAAAp4D,GAAA,IAAGs4D,EAAHt4D,EAAGs4D,cAAH,MAAuD,CAC1Fh3C,SAAU,WACV90B,WAAY,WACZ+rE,cAAe,OACfhuD,IAAK+tD,GAAiB,EAAI,GAC1B5tD,KAAM,EACNi+B,OANmC3oC,EAAkBw4D,kBAOrD53C,YAAa,EACbC,aAAc,EACd9zB,gBATmCiT,EAAqCy4D,WAS1C,cAAgB,UAC9CtqE,SAAUmqE,EAAgB,GAAK,GAC/BprE,MAAOorE,EAAgB,UAAY,aAG/BI,GAAkBN,aAAOO,QAAPP,CAAa,SAAArkD,GAAA,MAAuB,CAC1DuN,SAAU,WACV3zB,QAAS,OACTg7C,OAHmC50B,EAAG6kD,gBAMlCC,GAAa,SAAArqE,GACjB,IAAQ0b,EAA4E1b,EAA5E0b,YAAaouD,EAA+D9pE,EAA/D8pE,cAAeE,EAAgDhqE,EAAhDgqE,kBAAmBI,EAA6BpqE,EAA7BoqE,aAAcH,EAAejqE,EAAfiqE,WACrE,OACE/oE,EAAAC,EAAAC,cAAC8oE,GAAD,CAAiBE,aAAcA,GAC7BlpE,EAAAC,EAAAC,cAACkpE,GAAA,EAAD/pE,OAAAe,OAAA,CACE6Y,WAAS,EACTowD,aAAW,GACTvqE,EAHJ,CAGW0b,YAAY,MACvBxa,EAAAC,EAAAC,cAACuoE,GAAD,CAAiBG,cAAeA,EAAeG,WAAYA,EAAYD,kBAAmBA,GAAoBtuD,SAKpFzH,IAAMu0B,yBCZhCvpC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ1B,UAAWL,EAAMI,QAAQ,OAKd,SAASitE,GAAYxqE,GAClC,IAAMU,EAAUzB,KACRiB,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/ByqE,IAEAjxC,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACdiG,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAU5CouB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GAEvCujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAI3C,OACEjL,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACJtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GACtB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACrBhlB,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACAhB,EADA,CAEJJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC5Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACzB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACZ,WAAS,EAACC,GAAI,GAAImM,GAAI,IACjChlB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAGVhlB,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACR+Z,OAAO,QACPxD,UAAQ,EACRtK,GAAG,OACHmO,SAAUob,EAAkB,gBAC5B7yB,KAAK,OACLqJ,MAAO,IAAIge,EAAW9d,aAAaE,WAAW4d,EAAWsF,WAAW1gB,cAAc,GAAG5C,MAAM,OAK3G,CAAC,IAAI,KAAKu+D,SAASvgD,EAAW9d,aAAaE,WAAa,KACxDrL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACDtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEd7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAYob,EAAkB,gBAC9BxpB,MAAmC,IAA5Bge,EAAWgF,aAAqB,GAAKhF,EAAWgF,gBAK7DjuB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,QACNC,KAAK,OACLyX,SAAYob,EAAkB,eAC9BxpB,MAAkC,IAA3Bge,EAAWiF,YAAoB,GAAKjF,EAAWiF,YAEtD6O,aAAa,WAQU,cAA7B9T,EAAW9d,aAAgCnL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAExD7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAYob,EAAkB,gBAC9BxpB,MAAmC,IAA5Bge,EAAWkF,aAAqB,GAAKlF,EAAWkF,gBAGnD,QAKdnuB,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,2CAElBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GAEzB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,KAGdoQ,EAAW3b,YAAYvC,IAAI,SAAAsc,GAAG,OAEjCrnB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACZ,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAEpC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACFpoC,QAAQ,WACRuW,UAAQ,EACRwD,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb9xB,MAAOoc,EAAIzlB,QAGX5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEnB7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNC,KAAK,OACLqO,MAASgZ,EAAWoF,cAAX,GAAAtuB,OAA4BsnB,EAAIzlB,KAAhC,kBACTm7B,aAAa,OACb1jB,SAAYob,EAAiB,GAAA10B,OAAIsnB,EAAIzlB,KAAR,kBAC7BqJ,MAAoD,IAA7Cge,EAAU,GAAAlpB,OAAKsnB,EAAIzlB,KAAT,kBAAuC,GAAKqnB,EAAU,GAAAlpB,OAAKsnB,EAAIzlB,KAAT,4BAS3E5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GACvBhlB,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GACzC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAGfhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACW5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWhd,OACzBoN,SAAUggB,EAAmB,UAC7BtgB,QAASkQ,EAAWsF,WAAWtiB,OAAOlB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAASgZ,EAAWoF,cAAcpiB,OAClCwmC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAQ9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAIbhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWuE,YACzBnU,SAAUggB,EAAmB,eAC7BtgB,QAASkQ,EAAWsF,WAAWniB,OAAOrB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAE3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,QACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAASgZ,EAAWoF,cAAcb,YAElCilB,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAGjBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACY5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWwE,WACzBpU,SAAUggB,EAAmB,cAC7BtgB,QAASkQ,EAAWsF,WAAWhiB,UAAUxB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC9Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAI3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAASgZ,EAAWoF,cAAcZ,WAElCglB,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAIThlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWvc,YACzB2M,SAAUggB,EAAmB,eAC7BtgB,QAASkQ,EAAWsF,WAAW7hB,YAAY3B,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAChEm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACThJ,MAASgZ,EAAWoF,cAAc3hB,YAElC+lC,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKnD6Q,EAAWw+C,eAAehuC,QAAQ,aAAe,EAClDz5B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACCtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAEpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAW/b,WACzBmM,SAAUggB,EAAmB,cAC7BtgB,QAASkQ,EAAWsF,WAAWvhB,OAAOjC,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAI3BhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACsB5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWyE,YACzBrU,SAAUggB,EAAmB,eAC7BtgB,QAASkQ,EAAWsF,WAAW1hB,cAAc9B,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAClEm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,mBAKxD,MAIFpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,8BC5Vf9a,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC09B,SAAU,CACRv9B,QAAS,EACTw2C,2BAA2B,CACzBx2C,QAAS,IAGb4B,KAAK,CACH1B,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAM,CACJ5jB,UAAWL,EAAMI,QAAQ,IAE3B8zB,OAAQ,CACNnX,OAAQ/c,EAAMI,QAAQ,IAExBkc,MAAO,CACLnc,QAASH,EAAMI,QAAQ,GACvBF,MAAO,QAETstE,UAAW,CACTrtE,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,QAETutE,SAAU,CACRj0D,YAAaxZ,EAAMI,QAAQ,IAE7BstE,UAAW,CACTntE,WAAYP,EAAMI,QAAQ,IAE5ButE,UAAW,CACTnrE,SAAU,OAID,SAASorE,GAAO/qE,GAC7B,IAAMU,EAAUzB,KAGRiB,GAFM8qE,eACK/2D,IAAMg3D,OAAO,MACDjrE,EAAvBE,WAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BkrE,IACA1xC,EAAqCvlB,IAAMwB,WAAWka,IAA9CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACdiG,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAKlD,SAASg/D,EAAaroE,GA6CtB,IAAqBsoE,EAAUC,EA5C7BC,IA4CmBF,EA3CPjhD,EAAWla,OAAOnN,GA2CDuoE,EA3CQvoE,EA6CX,YAAvBsoE,EAASG,UAEZ77C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IACXpd,gBAAiBq+D,EAASI,SAC1Bz9C,aAAaq9C,EAAS1sE,MACtBovB,eAAes9C,EAASK,QACxBz9C,aAAao9C,EAAS3rE,MACtBwuB,aAAam9C,EAASliD,MACtBgF,cAAck9C,EAASM,OACzBj9C,WAAY48C,KAGV37C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IACX5a,iBAAkB67D,EAASI,SAC3B5+C,cAAcw+C,EAAS1sE,MACvBiuB,aAAay+C,EAASK,QACtB5+C,aAAau+C,EAAS3rE,MACtBqtB,cAAcs+C,EAASliD,MACvB6D,eAAeq+C,EAASM,OAC1Bj9C,WAAY48C,KAtDhB,IAAM9wC,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GAEvCujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAG3C,SAASm/D,IASP57C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAI4pB,GAAL,IACXpd,gBAAiB,GACjBghB,aAAa,GACbD,eAAe,GACfE,aAAa,GACbC,aAAa,GACbC,cAAc,GACdvB,aAAa,GACbC,cAAc,GACdrd,iBAAiB,GACjBsd,aAAa,GACbC,cAAc,GACdC,eAAe,MAgCnB,SAAS4+C,EAAYhwD,GACnB,IAAIiwD,EAAazhD,EAAWla,OACxB47D,EAAe,GACnBA,EAAY,UAAgB1hD,EAAWiB,MAAMvoB,MAC7C,IAAIipE,GAAU,EACX3hD,EAAW2D,eAEX3D,EAAWpd,iBAAmBod,EAAW4D,cAAgB5D,EAAW2D,gBAAkB3D,EAAW6D,cAAgB7D,EAAW8D,cAC7H9D,EAAW+D,eACJ29C,EAAY,UAAgB,UACrCA,EAAY,SAAe1hD,EAAWpd,gBACtC8+D,EAAY,MAAY1hD,EAAW4D,aACnC89C,EAAY,QAAc1hD,EAAW2D,eACrC+9C,EAAY,MAAY1hD,EAAW6D,aACnC69C,EAAY,MAAY1hD,EAAW8D,aACnC49C,EAAY,OAAa1hD,EAAW+D,gBAGhC49C,GAAU,EACV1oC,MAAM,oBAILjZ,EAAWwC,cACZxC,EAAWyC,eACXzC,EAAW5a,kBACX4a,EAAW0C,cAAgB1C,EAAW2C,eACtC3C,EAAW4C,gBAEb8+C,EAAY,UAAgB,WAC5BA,EAAY,QAAc1hD,EAAWwC,aACrCk/C,EAAY,MAAY1hD,EAAWyC,cACnCi/C,EAAY,SAAe1hD,EAAW5a,iBACtCs8D,EAAY,MAAY1hD,EAAW0C,aACnCg/C,EAAY,MAAY1hD,EAAW2C,cACnC++C,EAAY,OAAa1hD,EAAW4C,iBAGpC++C,GAAU,EACV1oC,MAAM,oBAIL0oC,KAE2B,IAA3B3hD,EAAWsE,YAEZo9C,EAAY,GAASD,EAAUl5D,OAE/Bk5D,EAAUr1D,KAAKs1D,KAIfA,EAAY,GAAS1hD,EAAWsE,WAEhCm9C,EAAUzhD,EAAWsE,YAAco9C,GAErCn8C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IAAkBla,OAAQ27D,KACvCN,KAIF,OACEpqE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACC2T,EAAWw+C,eAAe+B,SAAS,WAElCxpE,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACIhB,EADJ,CAEAJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,GAC9Bia,WAAS,IAETjZ,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,wBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAChCh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAE/B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAEjC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGP7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAW2D,eAClB7T,QAASkQ,EAAWsF,WAAW5gB,iBAC/B0L,SAAUggB,EAAmB,kBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,uBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAOtDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAIX7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAW4D,aAClB9T,QAASkQ,EAAWsF,WAAW9gB,cAC/B4L,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,iBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAOtDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAIX7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAWpd,gBAClBkN,QAASkQ,EAAWsF,WAAW1iB,gBAC/BwN,SAAUggB,EAAmB,mBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKtDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGD7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACF5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAW6D,aAClB/T,QAASkQ,EAAWsF,WAAWxiB,cAC/BsN,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMtDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACNC,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,gBAC5BxpB,MAAOge,EAAW8D,gBAGxB/sB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,iBAC5BxpB,MAAOge,EAAW+D,iBAGxBhtB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAIikB,QAAQ,YACrC98B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAAS00D,EAAc90D,KAAK,QAAQnY,MAAM,UAAUwB,UAAWQ,EAAQ2wB,QAAnG,oBA/J6C,KA2KlDlH,EAAWw+C,eAAe+B,SAAS,YAG/BxpE,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACGhB,EADH,CAEDJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,wBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAE5Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAEtC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGE7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CAEH5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAWwC,aAClB1S,QAASkQ,EAAWsF,WAAWvgB,aAC/BqL,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAOxDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAIrB7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACoB5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAWyC,cAClB3S,QAASkQ,EAAWsF,WAAWrgB,cAC/BmL,SAAUggB,EAAmB,iBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,iBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMxDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGD7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACA5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOzX,OACjCsJ,MAAOge,EAAW5a,iBAClB0K,QAASkQ,EAAWsF,WAAWlgB,iBAC/BgL,SAAUggB,EAAmB,oBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAG7E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKxDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEf7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACMpoC,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,gBACNC,KAAK,OACLyX,SAAUob,EAAkB,gBAC5BsI,aAAa,OACb9xB,MAAOge,EAAW0C,gBAKxB3rB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,iBAC5BxpB,MAAOge,EAAW2C,iBAGxB5rB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAACmnC,GAAD,CACIpoC,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,kBAC5BxpB,MAAOge,EAAW4C,kBAGxB7rB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAIikB,QAAQ,YACrC98B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAAS00D,EAAc90D,KAAK,QAAQnY,MAAM,WAAtE,oBAhJ8C,KAyJxCwC,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACFhB,EADE,CAENJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,wBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAClCh4B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,OACtBlgB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,cACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,gBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,WACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,SACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,aACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAjB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,QACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,YAIJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGkG,EAAWla,OAAOhE,IAAI,SAAAsc,GAAG,OACxBrnB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIgjD,WACjBrqE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIgjD,WAEPrqE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIkjD,QAAQ5oE,OACtC3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAI7pB,MAAMmE,OACpC3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIijD,SAAS3oE,OACvC3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAA2B,WAAlBI,EAAIgjD,UAAyBhjD,EAAI9oB,MAAMoD,MAAQ0lB,EAAI9oB,OAC7EyB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIW,OAC9BhoB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAImjD,QAC9BxqE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAASjnB,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,CAAUiL,GAAImc,EAAIgjD,UAAWt0D,QAAS,kBAAIk0D,EAAa5iD,EAAInc,OAArF,KACAlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAASjnB,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,CAAYiL,GAAImc,EAAIgjD,UAAWt0D,QAAS,kBAze9E,SAAwBnU,GACtBwoE,IACA,IAAIM,EAAazhD,EAAWla,OAC5B27D,EAAU3mC,OAAOniC,EAAK,GACtB4sB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IAAkBla,OAAQ27D,KAqeyCG,CAAexjD,EAAInc,sCChjBrFlP,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJI,SAAU,GAEZ6oC,MAAO,CACLhpC,QAAS,OACT7B,QAAS,EACTM,OAAQ,QAEVouE,eAAgB,CACd7sE,QAAS,OACTugB,SAAU,OACViT,KAAM,EACNvzB,WAAY,SACZyzB,SAAU,UAEZp0B,KAAM,CACJyb,OAAQ/c,EAAMI,QAAQ,GAAK,MAE7B0uE,YAAa,CACX1tE,gBAAiB+D,YACQ,UAAvBnF,EAAMwB,QAAQ2a,KAAmBnc,EAAMwB,QAAQ8C,KAAK,KAAOtE,EAAMwB,QAAQ8C,KAAK,KAC9E,MAGJyqE,iBAAkB,CAChB5uE,QAASH,EAAMI,QAAQ,EAAG,IAE5B4uE,YAAa,CACXxsE,SAAU,IAEZ+b,YAAa,CACXoX,SAAU,WACV5W,KAAM,EACNF,OAAQ,EACRrc,SAAU,IAEZ8Z,MAAO,CACLqZ,SAAU,WACVqnB,OAAQ,EACR38C,UAAWL,EAAMI,QAAQ,GACzB2e,KAAM,EACNC,MAAO,GAGT2H,YAAY,CACVqjD,aAAa,2BCtDCjqE,YAAW,SAAAC,GAAK,MAAK,CACnC+B,KAAM,CACFC,QAAS,QAEbqsD,YAAa,CACTtxC,OAAQ/c,EAAMI,QAAQ,GACtBqC,SAAU,KAEdwsE,YAAa,2BCgBTntE,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ1B,UAAWL,EAAMI,QAAQ,IAE3Bs9B,SAAU,CACRv9B,QAAS,EACTw2C,2BAA2B,CACzBx2C,QAAS,IAGb+zB,OAAQ,CACNnX,OAAQ/c,EAAMI,QAAQ,IAExBqtE,SAAU,CACRj0D,YAAaxZ,EAAMI,QAAQ,IAE7BstE,UAAW,CACTntE,WAAYP,EAAMI,QAAQ,IAE5ButE,UAAW,CACTnrE,SAAU,OAGd,SAAS0sE,GAAWvpE,EAAMwpE,EAAUC,EAAKC,EAAOC,GAC9C,MAAO,CAAE3pE,OAAMwpE,WAAUC,MAAKC,QAAOC,WAIrCJ,GAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,GAAW,qBAAsB,IAAK,EAAK,GAAI,KAC/CA,GAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,GAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,GAAW,cAAe,IAAK,GAAM,GAAI,KAE9B,SAAStB,GAAO/qE,GAC7B,IAAMU,EAAUzB,KACRiB,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B0sE,IAMAlzC,GAJcwxC,eACK/2D,IAAMg3D,OAAO,MAGkBh3D,IAAMwB,WAAWka,KAA3DxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cAIdma,GAJNrQ,EAAmC/J,WAId,SAAAnW,GAAI,OAAI,SAAA6f,GAC3BzJ,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAO6f,QAoBzC,OACEj4B,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACJtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gCAElBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAI3a,WAAW,SAAS7B,QAAS,GAKrD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAKD7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWo/C,qBACzBhvD,SAAUsvB,EAAa,wBACvB5vB,QAASkQ,EAAW9b,YACpB2sB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGH7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACM5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWq/C,qBACzBjvD,SAAUsvB,EAAa,wBACvB5vB,QAASkQ,EAAW3b,YACpBwsB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAM7D,CAAC,KAAK,IAAI,MAAMoxD,SAASvgD,EAAWO,wBACrCxpB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAGD7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH8uB,UAAQ,EACR+uC,YAAU,EACV/pE,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWwiD,mBACzBpyD,SAAUsvB,EAAa,sBACvB5vB,QAASkQ,EAAWc,eACpB+P,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKpD,MAwBNpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,4BClNjB9a,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ1B,UAAWL,EAAMI,QAAQ,IAE3Bs9B,SAAU,CACRv9B,QAAS,EACTw2C,2BAA2B,CACzBx2C,QAAS,OAKA,SAASytE,GAAO/qE,GAC7B,IAAMU,EAAUzB,KAEhBu6B,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACZxvB,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B4sE,IACM/iC,EAAe,SAAAvwB,GAAI,OAAI,SAAC3D,EAAOxJ,GACnCujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAKzC,OACEjL,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACKtV,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACHhB,EADG,CAEPJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,gBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAC9Bh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GACzC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAGfhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACW5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWhd,OACzBoN,SAAUsvB,EAAa,UACvB5vB,QAASkQ,EAAWsF,WAAWtiB,OAAOlB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAQ9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAIbhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACQ5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWuE,YACzBnU,SAAUsvB,EAAa,eACvB5vB,QAASkQ,EAAWsF,WAAWniB,OAAOrB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,QACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAGjBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACY5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWwE,WACzBpU,SAAUsvB,EAAa,cACvB5vB,QAASkQ,EAAWsF,WAAWhiB,UAAUxB,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC9Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAIThlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWvc,YACzB2M,SAAUsvB,EAAa,eACvB5vB,QAASkQ,EAAWsF,WAAW7hB,YAAY3B,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAChEm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAEThlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAW/b,WACzBmM,SAAUsvB,EAAa,cACvB5vB,QAASkQ,EAAWsF,WAAWvhB,OAAOjC,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAC3Dm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAI3BhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACsB5N,GAAG,mBACH8uB,UAAQ,EACRh7B,UAAWQ,EAAQm6B,SACnB2gB,aAAcrxB,EAAWyE,YACzBrU,SAAUsvB,EAAa,eACvB5vB,QAASkQ,EAAWsF,WAAW1hB,cAAc9B,IAAI,SAAAqO,GAAM,OAAIA,EAAOzX,QAClEm4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAG3E1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,mBAS1DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,qDC3MvB4mB,0BAAeC,KAAoCC,KAA4BgsC,KAAiCC,MAGhH,IAAM7tE,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJI,SAAU,GAEZma,MAAO,CACL7b,OAAQ,KAEVmvE,IAAK,CACHnvE,OAAQ,OACRP,MAAO,OACP06D,UAAW,WAEb54C,QAAS,CACP7hB,QAASH,EAAMI,QAAQ,IAEzB4qC,MAAO,CACLhpC,QAAS,WAOE,SAAS4rE,KACtB,IACMrqE,EAAUzB,KAChBu6B,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACZne,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR8C,EAAsCJ,IAAMK,SAAS,IAArDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOhG,EAAPkG,EAAA,GAAoBy4D,EAApBz4D,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS,IAAzC6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC4BlJ,IAAMK,SAAS,KAA3CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAP+B,SAAAmkB,IAAA,OAAAA,EAAAlhC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA6B/B,SAAAC,EAAmC8vB,EAAWurC,EAAeC,EAAYtrC,GAAzE,IAAAurC,EAAAC,EAAAC,EAAAC,EAAAzrC,EAAAC,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAhoB,EAAAszD,EAAAC,EAAA,OAAA97D,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAIM06D,EAAahjD,EAAW0E,gBAJ9B,CAAAtc,EAAAE,KAAA,gBAMQ26D,EAAS,IAAMjjD,EAAW9d,aAAaE,WAAa4d,EAAWsF,WAAW1gB,cAAc,GAAG5C,MAAQ,GACnGkhE,EAAiBljD,EAAW0E,eAAeq+C,GAC3CI,EAAa,EACbD,IACFC,EAAaD,EAAe36D,OAAS,GAGnCmvB,EAAaurC,EAAS,IAAOE,EAAcJ,EAAW7M,OAAO,GAbrE9tD,EAAAE,KAAA,EAc6BlB,EAAmB,eAAgB,GAAI,CAAE8wB,MAAOX,EAAUY,cAAetrB,SAAU6qB,EAAWW,WAAY4qC,IAAU,GAdjJ,OAcQtrC,EAdRvvB,EAAAgB,KAeQwuB,EAAaD,EAAa7wB,KAAK8wB,WAC/BC,EAAgBD,EAAWC,cAC3BnwB,EAAMkwB,EAAWlwB,IACrBe,QAAQyR,IAAI,cAAgBxS,GAE5BowB,GADIA,EAAeF,EAAWU,UACFuxB,QAAQ,cAAe,WAAaoZ,GAC5DnzD,EAAU,CACZhI,QAAS,CACPa,eAAgB4uB,EAAUY,cAC1BvvB,8BAA+B,MAI/Bs6D,GACIE,EAAW,CACfzqE,KAASsqE,EAAS,KAAOC,EAAe36D,OAAS,GAAKw6D,EAAW7M,OAAO,GACxEvtC,SAAau6C,EAAe36D,OAAS,EACrChU,MAASwuE,EACTO,UAAaxrC,EACbpwB,IAAO,yDAA2DowB,GAEjD,SAAfL,EACFyrC,EAAeJ,GAAiBM,EAGhCF,EAAe92D,KAAKg3D,GAGtBJ,EAAWD,GAAcG,IAGnBE,EAAW,CACfzqE,KAASsqE,EAAS,KAAOF,EAAW7M,OAAO,GAC3CvtC,SAAYm6C,EACZvuE,MAASwuE,EACTO,UAAaxrC,EACbpwB,IAAO,yDAA2DowB,IAEpEorC,EAAiB,IACF92D,KAAKg3D,IAEtBJ,EAAWD,GAAcG,EAEzB39C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IAAkB0E,eAAgBs+C,KA1DnD,eAAA56D,EAAAE,KAAA,GA6DQiwB,KAAMC,IAAIX,EAAeN,EAAUkB,KAAM3oB,GA7DjD,yBAAA1H,EAAAmB,SAAA9B,OA7B+BkC,MAAAC,KAAA1B,WAQ/B4B,IAAMkK,UAAU,WACd,IAAI9P,EAAc,GACdwgB,EAAiB,GAErB1E,EAAW9b,YAAYosB,QAAQ,SAAAC,GACzBA,EAAQ53B,OAASqnB,EAAWo/C,sBAC9B16C,EAAe6L,EAAQ53B,MAAQ,GAC3BuL,EAAYqE,OAAS,EACvBrE,EAAYq/D,QAAQhzC,GAEpBrsB,EAAYkI,KAAKmkB,KAInBrsB,EAAYkI,KAAKmkB,GACjB7L,EAAe6L,EAAQ53B,MAAQ,MAGnCkqE,EAAe3+D,IAEd,IA8FH,OACEnN,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACEtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAC5Z,UAAWQ,EAAQxB,KAAM3B,QAAS,GAEhD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACqC,UAAU,MAAMhD,GAAI,IAC7B7Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACkkB,QAAQ,OAAOzgC,QAAS,QAErBoV,IAAhBtE,EAA4B,KAAOA,EAAYpC,IAAI,SAACE,EAAO+X,GAAR,OAClDhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAID,WAAS,EAACvc,QAAS,EAAGmd,MAAI,GACtCxZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAIW,MAAI,GAEhBxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,KAAKgoB,MAAM,QAC3Chc,EAAMrJ,OAuDX5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAImM,GAAI,GAAImyC,GAAI,GAAI39C,MAAI,GAChCxZ,EAAAC,EAAAC,cAACyiC,GAAA,SAAD,CACE8pC,wBAAsB,EACtBC,0BAA0B,OAC1BC,2BAA2B,OAC3BC,yBAA0B,SAAClrC,GAAD,OAAU,IAAImrC,QAAQ,SAACC,EAASC,GACxDr7D,QAAQyR,IAAIue,GACZhwB,QAAQyR,IAAI,wBAGd0f,UAAU,eACVmqC,eAAe,EAEfC,cAAe,SAAAlqC,KAIfD,UAAW,SAAC7yB,EAAO8yB,IA9MN,SAAAtwB,EAAAC,EAAAC,EAAAuiB,GAAAqL,EAAA3tB,MAAAC,KAAA1B,WA+MX6xB,CAAoBD,EAAU/f,EAAO/X,EAAMrJ,KAAM,QAEnDsrE,aAAc,SAACj9D,EAAO8yB,KAGtBoqC,mBACE,SAACzrC,GAAD,OAAU,IAAImrC,QAAQ,SAAAC,GACpB,IAAIZ,EAAS,IAAMjjD,EAAW9d,aAAaE,WAAa4d,EAAWsF,WAAW1gB,cAAc,GAAG5C,MAAQ,GACnGkhE,EAAiBljD,EAAW0E,eAAe1iB,EAAMrJ,MACjDwqE,EAAa,EACbD,IACFC,EAAaD,EAAe36D,OAAS,GAGvCs7D,EADiBZ,EAAS,IAAOE,EAAcnhE,EAAMrJ,KAAKu9D,OAAO,GAAMz9B,EAAK0rC,wBCjQrF,SAASvD,KAEtB,OACE7pE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACAtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GACjC2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACf7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,KAAKgoB,MAAM,QAA9C,wFCJEomD,GAAOC,KAAsBruD,OAAOsuD,QAGlBC,KAAsBH,ICkB9C,IAAMtvE,GAAY/B,YAAW,SAACC,GAAD,IAAAwxE,EAAA,MAAY,CACvCxK,OAAQ,CACNrxC,SAAU,YAEZ87C,OAAOruE,OAAAM,EAAA,EAAAN,CAAA,CACLlD,MAAO,OACPK,WAAYP,EAAMI,QAAQ,GAC1BoZ,YAAaxZ,EAAMI,QAAQ,IAC1BJ,EAAMo5C,YAAYs4B,GAAG,IAAyB,EAAnB1xE,EAAMI,QAAQ,IAAU,CAClDF,MAAO,IACPK,WAAY,OACZiZ,YAAa,SAGjB8C,OAAKk1D,EAAA,CACHnxE,UAAWL,EAAMI,QAAQ,GACzBwa,aAAc5a,EAAMI,QAAQ,GAC5BD,QAASH,EAAMI,QAAQ,IAHpBgD,OAAAM,EAAA,EAAAN,CAAAouE,EAIFxxE,EAAMo5C,YAAYs4B,GAAG,IAAyB,EAAnB1xE,EAAMI,QAAQ,IAAU,CAClDC,UAAWL,EAAMI,QAAQ,GACzBwa,aAAc5a,EAAMI,QAAQ,GAC5BD,QAASH,EAAMI,QAAQ,KAPtBgD,OAAAM,EAAA,EAAAN,CAAAouE,EAAA,aASS,QATTA,GAWLG,QAAS,CACPxxE,QAASH,EAAMI,QAAQ,EAAG,EAAG,GAC7BipC,WAAY,QAEduoC,QAAS,CACP5vE,QAAS,OACTE,eAAgB,YAElB2vE,OAAQ,CACN58C,YAAaj1B,EAAMI,QAAQ,IAE7B8zB,OAAQ,CACN7zB,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OA0Bf,SAAS0xE,KACtB,IAAMvuE,EAAUzB,KAChBoV,EAAoCJ,IAAMK,SAAS,GAAnDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO66D,EAAP36D,EAAA,GAAmB46D,EAAnB56D,EAAA,GACAilB,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACZne,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR2L,EAA8BjJ,IAAMK,UAAS,GAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOkyD,EAAPjyD,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,UAAS,IAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOze,EAAP0e,EAAA,GAAgB+xD,EAAhB/xD,EAAA,GACAC,EAA8BtJ,IAAMK,UAAS,GAA7CkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOrM,EAAPsM,EAAA,GAAgBg/B,EAAhBh/B,EAAA,GAMMU,EAAc,SAACvI,EAAOkL,GACX,cAAXA,GAIJwuD,GAAW,IAEPC,EAAU,eAAA99D,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAk6D,EAAAyD,EAAAxgE,EAAAygE,EAAA,OAAA99D,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACbq5D,GAAU,EACVyD,EAAgB,GAOD,IAAfL,IACG/kD,EAAW9d,eACdy/D,GAAU,EACVyD,EAAa,aAAmB,kBAE7BplD,EAAWG,cACdwhD,GAAU,EACVyD,EAAa,YAAkB,kBAE5BplD,EAAWC,kBACd0hD,GAAU,EACVyD,EAAa,gBAAsB,kBAGhCplD,EAAW9b,cACdy9D,GAAU,EACVyD,EAAa,YAAkB,kBAE5BplD,EAAWw+C,iBACdmD,GAAU,EACVyD,EAAa,eAAqB,kBAE/BplD,EAAW3b,aAAiD,IAAlC2b,EAAW3b,YAAYkE,SACpDo5D,GAAU,EAEVyD,EAAa,YAAkB,kBAE5BplD,EAAW9b,aAAiD,IAAlC8b,EAAW9b,YAAYqE,SACpDo5D,GAAU,EAEVyD,EAAa,YAAkB,kBAG5BplD,EAAWtd,aACdi/D,GAAU,EACVyD,EAAa,WAAiB,kBAE3BplD,EAAW++C,iBACd4C,GAAU,EACVyD,EAAa,eAAqB,kBAG/BplD,EAAWo/C,uBACduC,GAAU,EACVyD,EAAa,qBAA2B,kBAErCplD,EAAWq/C,uBACdsC,GAAU,EACVyD,EAAa,qBAA2B,kBAErCplD,EAAW8+C,oBACd6C,GAAU,EACVyD,EAAa,kBAAwB,kBAGpCplD,EAAW1a,gBACsB,aAAlC0a,EAAW9d,aAAaiD,QAExBw8D,GAAU,EACVyD,EAAa,eAAqB,kBAE/BplD,EAAWU,iBACdihD,GAAU,EACVyD,EAAa,eAAqB,kBAGhCplD,EAAWc,gBAC0B,IAArCd,EAAWc,eAAevY,QACA,UAA5ByX,EAAW9d,eAEXy/D,GAAU,EACVyD,EAAa,eAAqB,kBAIhCplD,EAAWu/C,cAAmD,IAAnCv/C,EAAWu/C,aAAah3D,QACzB,UAA5ByX,EAAW9d,eAEXy/D,GAAU,EACVyD,EAAa,aAAmB,mBAKjB,IAAfL,IACF/kD,EAAW3b,YAAYisB,QAAQ,SAACC,GAC9B,IAAMiH,EAAWjH,EAAQ53B,KAAO,gBAE3BqnB,EAAWwX,IAA6C,IAAhCxX,EAAWwX,GAAUjvB,SAChDo5D,GAAU,EAEVyD,EAAc5tC,GAAY,oBAGzBxX,EAAWhd,QAAuC,IAA7Bgd,EAAWhd,OAAOuF,SAC1Co5D,GAAU,EACVyD,EAAa,OAAa,kBAEc,MAAtCplD,EAAWO,yBACRP,EAAWgF,eACd28C,GAAU,EACVyD,EAAa,aAAmB,kBAE7BplD,EAAWiF,cACd08C,GAAU,EACVyD,EAAa,YAAkB,mBAI9BplD,EAAWhd,QAAuC,IAA7Bgd,EAAWhd,OAAOuF,SAC1Co5D,GAAU,EACVyD,EAAa,OAAa,kBAEvBplD,EAAWuE,aAAiD,IAAlCvE,EAAWuE,YAAYhc,SACpDo5D,GAAU,EACVyD,EAAa,YAAkB,kBAE5BplD,EAAWwE,YAA+C,IAAjCxE,EAAWwE,WAAWjc,SAClDo5D,GAAU,EACVyD,EAAa,WAAiB,mBAWlC7/C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,IAAkBoF,cAAeggD,KAC1CL,IAAe/kD,EAAWE,MAAM3X,OAAS,EA5I5B,CAAAH,EAAAE,KAAA,gBA6IfG,QAAQC,KAAK,SAAUtB,GACjBxC,EACJob,EAAWsF,WAAW1gB,cAAc,GAAGE,qBAElCkb,EAAU,YAEbqlD,EAAWrlD,GACP,cAAoBpb,EAE5BytC,GAAW,GAtJIjqC,EAAAE,KAAA,GAuJTlB,EAAmB,iBAAkB,GAAIi+D,GAvJhC,eAwJfhzB,GAAW,GACX6yB,GAAW,GAzJI98D,EAAAE,KAAA,GA0JTg9D,EAAM,KA1JG,QA2JftvD,OAAOC,SAAS4zC,QAAQ,gBA3JTzhD,EAAAE,KAAA,iBA6JXq5D,GACFqD,EAAcD,EAAa,GA9Jd,yBAAA38D,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GApBsB,SA8LvBo9D,EA9LuB97D,GAAA,OAAA+7D,EAAA57D,MAAAC,KAAA1B,WAAA,SAAAq9D,IAAA,OAAAA,EAAAnvE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8LtC,SAAAsV,EAAqB0oD,GAArB,OAAAj+D,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzT,OAAA,SACS,IAAIs6D,QAAQ,SAACC,GAAD,OAAa4B,WAAW5B,EAAS2B,MADtD,wBAAAzoD,EAAAxT,SAAAuT,OA9LsCnT,MAAAC,KAAA1B,WAkMtC,OADAO,QAAQyR,IAAI8F,EAAY,mBAEtBjpB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IACrBhlB,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAM5Z,EAASoiB,iBAAkB,IAAMvI,QAASyF,GACxDhd,EAAAC,EAAAC,cAACuf,GAAA,EAAD,CAAOlI,QAASyF,GAAhB,iCAGFhd,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMtH,EAAS8P,iBAAkB,IAAMvI,QAASyF,GACxDhd,EAAAC,EAAAC,cAACuf,GAAA,EAAD,CAAOlI,QAASyF,EAAa7B,SAAS,QAAtC,oBAKFnb,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAM42D,EAASpuD,iBAAkB,IAAMvI,QAASyF,GACxDhd,EAAAC,EAAAC,cAACuf,GAAA,EAAD,CAAOlI,QAASyF,EAAa7B,SAAS,SAAtC,qBAIFnb,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQ+Y,OACxBvY,EAAAC,EAAAC,cAACyuE,GAAA,EAAD,CAASX,WAAYA,EAAYhvE,UAAWQ,EAAQouE,SACjD3kD,EAAWE,MAAMpe,IAAI,SAACpJ,EAAOqhB,GAAR,OACpBhjB,EAAAC,EAAAC,cAAC0uE,GAAA,EAAD,CAAM35D,IAAKtT,GACT3B,EAAAC,EAAAC,cAAC2uE,GAAA,EAAD,WAMR7uE,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACG04D,IAAe/kD,EAAWE,MAAM3X,OAC/BxR,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACEtV,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAK0iC,cAAY,GAArC,8BAGA3hC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,eAGtBe,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KA5PV,SAAwBw5D,GACtB,OAAQA,GACN,IAAK,QACH,OAAO9uE,EAAAC,EAAAC,cAAC+mE,GAAD,MACT,IAAK,QACH,OAAOjnE,EAAAC,EAAAC,cAACopE,GAAD,MACT,IAAK,QACH,OAAOtpE,EAAAC,EAAAC,cAAC6uE,GAAD,MACT,IAAK,QACH,OAAO/uE,EAAAC,EAAAC,cAAC8uE,GAAD,MACT,IAAK,QACH,OAAOhvE,EAAAC,EAAAC,cAAC+uE,GAAD,MACT,IAAK,QACH,OAAOjvE,EAAAC,EAAAC,cAACgvE,GAAD,MAET,IAAK,QACH,OAAOlvE,EAAAC,EAAAC,cAACivE,GAAD,MACT,QACE,MAAM,IAAIC,MAAM,iBA2OTC,CAAepmD,EAAWE,MAAM6kD,IACjChuE,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQquE,SACN,IAAfG,GACChuE,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QA/CH,WACjBk4D,EAAcD,EAAa,IA8CchvE,UAAWQ,EAAQ2wB,QAAhD,QAIFnwB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAASq4D,EACTpvE,UAAWQ,EAAQ2wB,QAElB69C,IAAe/kD,EAAWE,MAAM3X,OAAS,EACtC,iBACA,YC7UpB,IAAMzT,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCoiC,SAAU,CACRrlB,OAAQ,WAIC+0D,GAAgBzzC,YAAW,SAACx7B,GACvC,IAAMU,EAAUzB,KAEhBwgC,EAAiCC,aAASh0B,GAAgBC,OAAlDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAEvB,OAAID,EAEAhQ,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,aACbgB,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAGvCpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAEhBF,EAAAC,EAAAC,cAACovE,GAAD,CACErkE,MAAO,CAAE8E,OAAMrF,OAAQF,GAAgBE,OAAQkkB,WAAY,eAE3D5uB,EAAAC,EAAAC,cAACqvE,GAAczwE,gBC9BfihC,GAAQ,UAGCtiC,GAAA,CACb+xE,MAHY,UAIZzvC,SAEAxO,QAAS,CACP5zB,aAAcoiC,GACdvO,KAAMlxB,IAAOs0C,OAAO,KACpBh3C,KAAM0C,IAAOs0C,OAAO,KACpBtjB,MAAOhxB,IAAOs0C,OAAO,MAEvB92C,UAAW,CACTH,aAAcoiC,GACdvO,KAAMlxB,IAAOq0C,KAAK,KAClB/2C,KAAM0C,IAAOq0C,KAAP,KACNrjB,MAAOhxB,IAAOq0C,KAAP,MAETj3C,QAAS,CACPC,aAAcoiC,GACdvO,KAAMlxB,IAAO+8B,MAAM,KACnBz/B,KAAM0C,IAAO+8B,MAAM,KACnB/L,MAAOhxB,IAAO+8B,MAAM,MAEtB1rB,KAAM,CACJhU,aAAcoiC,GACdvO,KAAMlxB,IAAOq0C,KAAK,KAClB/2C,KAAM0C,IAAOq0C,KAAK,KAClBrjB,MAAOhxB,IAAOq0C,KAAK,MAErBv5B,QAAS,CACPzd,aAAcoiC,GACdvO,KAAMlxB,IAAO88B,OAAO,KACpBx/B,KAAM0C,IAAO88B,OAAO,KACpB9L,MAAOhxB,IAAO88B,OAAO,MAEvBntB,MAAO,CACLtS,aAAcoiC,GACdvO,KAAMlxB,IAAOhD,IAAI,KACjBM,KAAM0C,IAAOhD,IAAI,KACjBg0B,MAAOhxB,IAAOhD,IAAI,MAEpB+yB,KAAM,CACJkB,QAASjxB,IAAOmvE,SAAS,KACzB3xE,UAAWwC,IAAOmvE,SAAS,KAC3BpvD,KAAM/f,IAAOq0C,KAAK,MAEpBrP,WAAY,CACVoqC,QAAS,UACTn3D,MAAOwnB,IAETl+B,KAAMvB,IAAOmvE,SAAS,KACtB33C,QAASx3B,IAAOC,KAAK,MCrDRO,GAAA,CACb6uE,GAAI,CACFnyE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEdqxE,GAAI,CACFryE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEdsxE,GAAI,CACFtyE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEduxE,GAAI,CACFvyE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEdwxE,GAAI,CACFxyE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEdyxE,GAAI,CACFzyE,MAAOC,GAAQ4yB,KAAKkB,QACpB1wB,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEd0xE,UAAW,CACT1yE,MAAOC,GAAQ4yB,KAAKkB,QACpB9yB,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEd2xE,UAAW,CACT3yE,MAAOC,GAAQ4yB,KAAKvyB,UACpB+C,WAAY,IACZpC,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEd4xE,MAAO,CACL5yE,MAAOC,GAAQ4yB,KAAKkB,QACpB9yB,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEd6xE,MAAO,CACL7yE,MAAOC,GAAQ4yB,KAAKvyB,UACpBW,SAAU,OACVmxE,cAAe,UACfpxE,WAAY,QAEd2xB,OAAQ,CACN3yB,MAAOC,GAAQ4yB,KAAKkB,QACpB9yB,SAAU,QAEZ6xE,QAAS,CACP9yE,MAAOC,GAAQ4yB,KAAKvyB,UACpBW,SAAU,OACVmxE,cAAe,SACfpxE,WAAY,QAEd+xE,SAAU,CACR/yE,MAAOC,GAAQ4yB,KAAKvyB,UACpBW,SAAU,OACVoC,WAAY,IACZ+uE,cAAe,SACfpxE,WAAY,OACZs9D,cAAe,cC/EJ0U,GAAA,CACbC,UCRa,CACbC,UAAW,CACTxvE,UACE,8FACF7D,gBAAiB,YDKnBszE,cEPa,CACb3yE,KAAM,CACJR,MAAOC,GAAQoE,KACfuuB,UAAW,CACT/yB,gBAAiB,yBFIrBuzE,SGVa,CACbC,WAAY,CACV3vE,UAAW,mEHSb4vE,aIRa,CACb9yE,KAAKqB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACAyB,GAAWsvE,OADZ,IAEFnK,aAAY,aAAAlmE,OAAetC,GAAQq6B,YJMrCi5C,aKVa,CACb/yE,KAAM,CACJX,gBAAiBiD,IAAOC,KAAK,MLS/BywE,cMba,CACbrvC,aAAc,CACZ9qB,aAAc,KCcH5a,GAVDg1E,aAAe,CAC3BxzE,WACAqD,cACA0vE,aACAv3B,OAAQ,CACNgqB,OAAQ,KACR/sD,OAAQ,YCLMla,YAAW,iBAAO,CAClCgC,KAAM,kDCqBFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCoyE,IAEM1xE,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GAuCY9T,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAU9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,eACNyoB,OACE/zB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACA/X,MAAM,UACNyB,QAAQ,aAFR,yBASJe,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGiN,EAAO5I,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAAAwlB,GAAK,OAC3EvwB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAOEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAaiP,EAAM3uB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAUsJ,EAAMniB,OAEjCpO,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACjBjnB,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,oBACrBxB,EAAAC,EAAAC,cAACixE,GAAAlxE,EAAD,OAEAD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,oBACvBxB,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,eAUhBD,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAvFe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAuFA4B,oBApFsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QAoFpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,yCC/JTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GAEvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9BkjE,YAAa,CACXz/D,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9B27B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,QAAQ3zB,MAIzC4hE,sBAAuB,CACrBniE,gBAAiBpB,EAAMwB,QAAQgiE,OAAO1/B,OAIxC7H,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,IAG5BqjE,sBAAuB,CACrBpjE,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,GAC1BoZ,YAAaxZ,EAAMI,QAAQ,IAG7BsjE,aAAc,CACZniE,MAAOvB,EAAMwB,QAAQgiE,OAAO1/B,UAuNjB6/B,GAnNM,SAAA9gE,GACnB,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BsyE,IACA94C,EAAsCvlB,IAAMwB,WAAWob,IAA/CL,EAARgJ,EAAQhJ,WACR7b,GADA6kB,EAAoB5I,cACkBtc,mBAAS,KAA/CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO49D,EAAP39D,EAAA,GAAoB49D,EAApB59D,EAAA,GACAG,EAAsCT,mBAAS,IAA/CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwCV,mBAAS,KAAjDgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GACA4kB,GADAzkB,EAAA,GAAAA,EAAA,GAC0ChB,mBAAS,KAAnD0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,GAEwC1lB,mBAAS,IAAjD4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC4B5lB,mBAAS,SAArC8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACoC9lB,mBAAS,SAA7CgmB,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAEA4mC,GAFA3mC,EAAA,GAAAA,EAAA,GAE4BhmB,oBAAS,IAArC4sD,EAAA3gE,OAAAiU,EAAA,EAAAjU,CAAA0gE,EAAA,GAEMvgE,GAFNwgE,EAAA,GAAAA,EAAA,GAEgBjiE,MAElBgV,IAAMkK,UAAU,aAQd,IACA,IAAAgjD,EAAgC7sD,mBAAS,GAAzC8sD,EAAA7gE,OAAAiU,EAAA,EAAAjU,CAAA4gE,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyC9sD,mBAAS,IAAIkQ,OAAtD88C,EAAA/gE,OAAAiU,EAAA,EAAAjU,CAAA8gE,EAAA,GAgBM1rC,GAhBN2rC,EAAA,GAAAA,EAAA,GAgB0B,SAAAhoD,GAAI,OAAI,SAAAqC,GAChC3b,EAAMq7B,QAAQ/hB,EAAKqC,EAAEC,OAAOzP,UAY9B,IAA2BmN,EAsB3B,OAEEpY,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAI9BgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAChCh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAI3oB,QAAS,GAGpD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GAEjC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOomE,EAAYE,aACnBl4D,SAAUob,EAAkB,gBAC5BvpB,GAAG,eACHtJ,KAAK,eACLD,MAAM,UAGR3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GAEjC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOomE,EAAYG,cACnBn4D,SAAUob,EAAkB,iBAC5BvpB,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,WAGZ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAIvBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACe5N,GAAG,mBACH8uB,UAAQ,EACRsgB,aAAc+2B,EAAYI,YAC1BxmE,MAAOomE,EAAYI,YACnBzyE,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASuW,EAAWG,cAAcngB,mBAClC+J,UA1EYjB,EA0EiB,cA1ET,SAAC3D,EAAOxJ,GACvCqmE,EAAejyE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVgyE,GADS,GAAAhyE,OAAAM,EAAA,EAAAN,CAAA,GAEX+Y,EAAOnN,KAGVnM,EAAMq7B,QAAQ/hB,EAAKnN,KAqER6uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAmBxBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC9C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GAEtC2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhC,cAAY,EACZ1iC,QAAQ,MAFV,kBAOAe,EAAAC,EAAAC,cAACwxE,GAAA,EAAD,CAAaz4D,WAAS,EAACzb,MAAM,UAAUgE,aAAW,iCAE/C1C,EAAM28B,WAAW1wB,IAAI,SAAAqO,GAAM,OAE5BpZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAhIU47D,EAgIav4D,EA9HtCk4D,EAAejyE,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVgyE,GADS,IAEZO,aAAgBD,UAElB7yE,EAAMq7B,QAAQ,eAAew3C,GAN/B,IAA2BA,GAgIsB1yE,QAASoyE,EAAYO,cAAgBx4D,EAAS,YAAc,YAAcA,OAM3HpZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAG3oB,QAAS,GAEnC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOomE,EAAYQ,cACnBx4D,SAAUob,EAAkB,iBAC5BvpB,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,oBAIR3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,KAK1C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,EAAI3oB,QAAS,yBCvQ9C0B,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACVq5B,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAG9By7B,QAAS,CACPz6B,gBAAiBiD,IAAOC,KAAK,MAE/By3B,YAAa,CACX/5B,QAAS,OACTC,WAAY,eAEd+5B,eAAgB,CACd56B,gBAAiBiD,IAAOC,KAAK,MAE/B23B,YAAa,CACXlf,QAAS,IAEX3C,QAAS,CACP/Z,UAAWL,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAEzB87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OAwZfy1E,GApZU,SAAChzE,GAAU,IAAAwhD,EAC1BthD,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BizE,IAEMvyE,EAAUzB,KAChBu6B,EACEvlB,IAAMwB,WAAWob,IADXL,EAARgJ,EAAQhJ,WAER7b,GAFA6kB,EAAoB5I,cAApB4I,EAAmC7I,cAELrc,mBAAS,KAAvCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+b,EAAP9b,EAAA,GAAgB8kB,EAAhB9kB,EAAA,GACAG,EAA4BT,oBAAS,GAArCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO4kB,EAAP3kB,EAAA,GAAe4kB,EAAf5kB,EAAA,GACAG,EAAkCb,oBAAS,GAA3CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO0kB,EAAPvkB,EAAA,GAAkBwkB,EAAlBxkB,EAAA,GAEAykB,EAAgCzlB,mBAAS,CACvC,WACA,cACA,WACA,cACA,YACA,SACA,WAPF0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAUAE,GAVAD,EAAA,GAAAA,EAAA,GAUgC1lB,mBAAS,IAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsC5lB,mBAAS,aAA/C8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyC9lB,mBAAS,IAAIkQ,OAAtD8V,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAOME,GAPND,EAAA,GAAAA,EAAA,GAO2B,SAAChhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3C,GAAa,cAATmN,EAAsB,CACxB,IAAIkhB,EAAe,GACnBruB,EAAMsuB,QAAQ,SAACC,GACbF,EAAajkB,KAAKmkB,EAAQ53B,QAExB03B,EAAaG,QAAQ,SAAW,EAClCf,GAAU,GAEVA,GAAU,GAGRY,EAAaG,QAAQ,YAAc,EACrCb,GAAa,GAEbA,GAAa,GAGjBJ,EAAWn5B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNmwB,GADK,GAAAnwB,OAAAM,EAAA,EAAAN,CAAA,GAEP+Y,EAAOnN,QAgBZ,OADAgS,oBAAU,aAAU,IAElBjd,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GAAUhB,EAAV,CAAgBJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC5CgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACtBrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAQ5kB,SACf5L,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCmX,QAASuW,EAAWG,cAAcrgB,mBAClCiK,SAAUggB,EAAmB,YAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAMjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,GAADwnC,EAAA,CACEp1C,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOukB,EAAQngB,cACfrQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcpgB,cAClCgK,SAAUggB,EAAmB,iBAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,OARrCvC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QASS9wB,EAAQngB,eATjBhQ,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,aAUc,SAACr1C,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,gBAhB1B3jB,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,cAoBe,SAAC1vC,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,OA1BfqnC,KAkCFtgD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcvgB,UAClCmK,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQtgB,UACf4qB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQhBwf,EACCz4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcjgB,SAClC6J,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQhgB,SACfsqB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQf,KACH0f,EACC34B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAACC,GAAD,OAAYA,EAAO1J,aACnCqJ,QAASuW,EAAWG,cAAchhB,aAClC4K,SAAUggB,EAAmB,eAC7BpuB,MAAOukB,EAAQ9f,YACfoqB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO1J,aACVqqB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQf,KACJjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAc/iB,YAClC2M,SAAUggB,EAAmB,eAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQ9iB,YACfotB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAchgB,UAClC4J,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQ/f,UACfqqB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcrjB,OAClCiN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQpjB,OACf0tB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcxjB,OAClCoN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOukB,EAAQvjB,OACf6tB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQjBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,GAAI49B,UAAW,WACpDl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMjX,EAAMq7B,QAAQ3K,IAC7BhyB,MAAM,UACNyB,QAAQ,aAHV,sCC7aMjD,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACV8X,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9B27B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,SAEjC2G,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,yCC3BxByhB,GAAcld,YAbL,SAAA3E,GAAK,MAAK,CACvB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAA9B,GACrC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDkzE,IACA,OACEhyE,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,QAAQxC,UAAWQ,EAAQovC,YAAa74B,QAASwB,GACtEvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MACEjmD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNu+B,aAAc,CACZjgC,UAAWL,EAAMI,QAAQ,IAE3B+9B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,IAE3B41E,eAAgB,CACdh0E,QAAS,OACTE,eAAgB,SAChBqgB,SAAU,OACVpiB,QAASH,EAAMI,QAAQ,IACvBC,UAAWL,EAAMI,QAAQ,IAE3B61E,UAAW,CACTl5D,OAAQ/c,EAAMI,QAAQ,IACtBgB,gBAAiBpB,EAAMwB,QAAQwS,MAAMuhB,KACrC2gD,UAAYl2E,EAAMwB,QAAQsiC,OAE5BxiC,KAAM,CACJyb,OAAQ/c,EAAMI,QAAQ,QAKX,SAAS+1E,GAAQtzE,GAC9B,IAAMU,EAAUzB,KAEhBoV,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GAC4BN,IAAMK,SAAS,KAA3C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAoBMgB,GApBNf,EAAA,GAAAA,EAAA,GAoBoB,WAClBnd,EAAMulD,gBAGR,OACErkD,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQlG,QAASyF,EAAaY,kBAAgB,0BAA0BtG,KAAMA,GAC5EtX,EAAAC,EAAAC,cAACmyE,GAAD,CAAannE,GAAG,0BAA0BqM,QAASyF,GAAnD,QAGAhd,EAAAC,EAAAC,cAACoyE,GAAD,CAAe3qC,UAAQ,GACvB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACxByC,EAAMm3B,SAASlrB,IAAI,SAAAgF,GAAI,OACxB/P,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACA4T,IAAKlF,EAAKwiE,cACV5wE,MAAOoO,EAAKwiE,cACZtzE,QAAQ,WAEP4mE,UAAuB91D,EAAKwiE,cAzBA,cA0B7BvzE,UAAWQ,EAAQjC,WAUnByC,EAAAC,EAAAC,cAACsyE,GAAD,KACAxyE,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,2CCzGFjf,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ1B,UAAWL,EAAMI,QAAQ,IAE3BqiB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAIds0E,GAAW,SAAC3zE,GAChB,IAAQE,EAA+BF,EAA/BE,UAAsBI,GAASN,EAApBkxB,OAAnB3wB,OAAAC,EAAA,EAAAD,CAAuCP,EAAvC4zE,KAEMlzE,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACAykB,EAAwBzlB,oBAAS,GAAjC0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOvhB,EAAPwhB,EAAA,GAAa/c,EAAb+c,EAAA,GACAC,EAAoC3lB,mBAAS,IAA7C4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAO45C,EAAP35C,EAAA,GAAAA,EAAA,GA6CY14B,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAEvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC1CsY,EACCtX,EAAAC,EAAAC,cAACkyE,GAAD,CACE5+C,MAAOlc,EACP2e,SAAU08C,EACVtuB,YAnBR,WACEtoC,GAAQ,MAoBF,KAUJ/b,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAOxM,EAAMwM,QACzBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE9BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBAOJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMm3B,SACJ7O,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1b,IAAI,SAACwlB,GAAD,OACHvwB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAIEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYiP,UAoB1BvwB,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOlpB,EAAMm3B,SAASzkB,OACtByW,aAtFe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAsFA4B,oBAnFsB,SAAC1T,GAC/BiS,EAAejS,EAAMiG,OAAOzP,QAmFpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxC0qD,GAASpyE,aAAe,CACtB2vB,OAAQ,IAGKyiD,UC3KT10E,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,GAGNu+B,aAAc,CACZjgC,UAAWL,EAAMI,QAAQ,IAE3B+9B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,IAE3B41E,eAAgB,CACdh0E,QAAS,OACTE,eAAgB,SAChBqgB,SAAU,OACVpiB,QAASH,EAAMI,QAAQ,IACvBC,UAAWL,EAAMI,QAAQ,IAE3B61E,UAAW,CACTl5D,OAAQ/c,EAAMI,QAAQ,IACtBgB,gBAAiBpB,EAAMwB,QAAQwS,MAAMuhB,KACrC2gD,UAAWl2E,EAAMwB,QAAQsiC,OAE3BxiC,KAAM,CACJyb,OAAQ/c,EAAMI,QAAQ,QAG1B,SAASmjB,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAGvC,SAAS8zE,GAAoB9zE,GAC1C,IAAMU,EAAUzB,KAChB0V,EAAgCL,mBAAS,IAAzCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOwiB,EAAPviB,EAAA,GAAiBytD,EAAjBztD,EAAA,GACAG,EAAoCT,mBAAS,IAA7CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAEwBV,mBAAS,KAAjCgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO4+D,EAAPz+D,EAAA,GAAa0+D,EAAb1+D,EAAA,GACAykB,EAAkCzlB,oBAAS,GAA3C0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOk6C,EAAPj6C,EAAA,GAAkBk6C,EAAlBl6C,EAAA,GACA3lB,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA0lB,EAAsC3lB,mBAAS,IAA/C4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAOk6C,EAAPj6C,EAAA,GAAoBk6C,EAApBl6C,EAAA,GACAC,EAA8C7lB,mBAAS,IAAvD8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GAAOk6C,EAAPj6C,EAAA,GAAwBk6C,EAAxBl6C,EAAA,GACAC,EAAkC/lB,mBAAS,IAA3CgmB,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAAOk6C,EAAPj6C,EAAA,GAAkBk6C,EAAlBl6C,EAAA,GACA2mC,EAAgC3sD,oBAAS,GAAzC4sD,EAAA3gE,OAAAiU,EAAA,EAAAjU,CAAA0gE,EAAA,GAAOjlC,EAAPklC,EAAA,GAAiBjlC,EAAjBilC,EAAA,GACAC,EAAkD7sD,oBAAS,GAA3D8sD,EAAA7gE,OAAAiU,EAAA,EAAAjU,CAAA4gE,EAAA,GAAOsT,EAAPrT,EAAA,GAA0BsT,EAA1BtT,EAAA,GACAC,EAA0C/sD,mBAAS,IAAnDgtD,EAAA/gE,OAAAiU,EAAA,EAAAjU,CAAA8gE,EAAA,GAAOsT,EAAPrT,EAAA,GAAsBsT,EAAtBtT,EAAA,GACAG,EAAwCntD,mBAAS,IAAjDotD,EAAAnhE,OAAAiU,EAAA,EAAAjU,CAAAkhE,EAAA,GAAOoT,GAAPnT,EAAA,GAAqBoT,GAArBpT,EAAA,GACAC,GAAsCrtD,mBAAS,IAA/CstD,GAAArhE,OAAAiU,EAAA,EAAAjU,CAAAohE,GAAA,GAAOoT,GAAPnT,GAAA,GAAoBoT,GAApBpT,GAAA,GACAC,GAAwCvtD,mBAAS,IAAjDwtD,GAAAvhE,OAAAiU,EAAA,EAAAjU,CAAAshE,GAAA,GAAOoT,GAAPnT,GAAA,GAAqBoT,GAArBpT,GAAA,GAEAqT,GAAwC7gE,mBAAS,IAAjD8gE,GAAA70E,OAAAiU,EAAA,EAAAjU,CAAA40E,GAAA,GAAOE,GAAPD,GAAA,GAAqBE,GAArBF,GAAA,GACQ7jE,GAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR2L,GAAwCjJ,IAAMK,SAAS,CACrDuU,QAAS,uBACTxM,SAAU,YAFZc,GAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,GAAA,GAAOq4D,GAAPp4D,GAAA,GAKA45B,IALA55B,GAAA,GAMElJ,IAAMwB,WAAWob,KACb3S,IAFN64B,GAAQvmB,WAARumB,GAAoBnmB,cAApBmmB,GAAmC5mC,eAEf,SAACwF,EAAOkL,GACX,cAAXA,GAGJ5D,GAAQ,KA/BuC,SAAAu4D,KAAA,OAAAA,GAAAj1E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkCjD,SAAAC,EAAgCmjE,GAAhC,IAAA99C,EAAAprB,EAAA4pE,EAAA,OAAA/jE,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMwkB,EAAW,CACby+C,WAAYX,GAFhBxiE,EAAAE,KAAA,EAIuBlB,GACnB,eACA,GACA0lB,GACA,GARJ,OAIMprB,EAJN0G,EAAAgB,KAUMkiE,EAAU,GACE,GAChB5pE,EAAS8pE,QAAQx6C,WAAWV,QAAQ,SAACm7C,GACnCH,EAAQl/D,KAAK,CACXzT,KAAM8yE,MAOVvT,EAAYx2D,EAAS8pE,QAAQE,aAC7BP,GAAgB/0E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACX+0E,IADU,IAEb7C,aAAc5mE,EAAS8pE,QAAQG,cAC/B/C,cAAelnE,EAAS8pE,QAAQI,eAChCjD,aAAcjnE,EAAS8pE,QAAQK,cAC/BtD,cAAe7mE,EAAS8pE,QAAQM,eAChCtD,YAAa8C,EACbS,SAAUrqE,EAAS8pE,QAAQE,YAAYnjE,OACvCyjE,YAAatqE,EAAS8pE,QAAQx6C,WAC9B1B,WAAY5tB,EAAS8pE,QAAQS,mBAC7BC,QAAS91E,OAAOwvB,KAAKlkB,EAAS8pE,QAAQS,uBAExCn6C,GAAY,GAlCd,yBAAA1pB,EAAAmB,SAAA9B,OAlCiDkC,MAAAC,KAAA1B,WAAA,SAAAikE,KAAA,OAAAA,GAAA/1E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsEjD,SAAA6T,EAA8B+wD,GAA9B,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAjlE,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEE,IADI+jE,EAAW,GACRzC,EAAKrhE,OAAS,GACf+jE,EAAc1C,EAAK9uC,OAAO,EAAG,MACjCuxC,EAASjgE,KAAKkgE,GAEZlC,EAAU7hE,OAAS,EACrB0wB,MAAM,8BAKSszC,EAJV,eAAAllE,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAIL,SAAAsV,IAAA,IAAAgQ,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMwkB,EAAW,CACb87C,cAAellC,WAAWwnC,GAAatC,eACvCD,aAAcuC,GAAavC,aAC3BH,YAAa0C,GAAa1C,YAC1BF,aAAc4C,GAAa5C,aAC3BC,cAAe2C,GAAa3C,cAC5B0D,mBAAoBjC,EACpByC,wBAAyBvC,EACzBN,KAAMyC,EAASG,IAEjB/jE,QAAQyR,IAAIhR,KAAKC,UAAU6gE,IAX7BjtD,EAAAzU,KAAA,EAYuBlB,GACnB,kBACA,GACA0lB,GACA,GAhBJ,OAAA/P,EAAA3T,KAmBEojE,GAAkC,EAC9BH,EAAS9jE,OAASikE,GACpBzB,GAAgBnB,EAAKrhE,OAAS,SAC9BgkE,EAAeC,KAEfzC,GAAa,GACbj3D,GAAQ,GACRy3D,GAAqB,GAErBv0D,OAAOC,SAAW,qBA5BtB,wBAAA8G,EAAAxT,SAAAuT,MAJK,yBAAAzV,EAAAsC,MAAAC,KAAA1B,YAAA,GACDskE,EAAiB,EACrBzC,GAAa,GACbwC,EAAeC,IAXnB,wBAAAjxD,EAAAhS,SAAA8R,OAtEiD1R,MAAAC,KAAA1B,WAAA,SAAA2wD,KAAA,OAAAA,GAAAziE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAyIjD,SAAAoU,EAA6B5Z,GAA7B,IAAAN,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,aACiB,GAEG,GAHpBwT,EAAAxT,KAAA,EAIuBlB,GACnB,mBACA,GACApF,GACA,GARJ,OAIMN,EAJNoa,EAAA1S,KAUE8uD,EAAYx2D,EAASsrB,UACrB68C,EAAQnoE,EAASkoE,MACjBS,EAAa3oE,EAASgrE,WACtB3C,GAAa,GACbY,GAAgBjpE,EAASW,OAd3B,yBAAAyZ,EAAAvS,SAAAqS,OAzIiDjS,MAAAC,KAAA1B,WAAA,SAAA8sD,KAAA,OAAAA,GAAA5+D,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAyKjD,SAAAktC,EAA4BljC,GAA5B,IAAAsb,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAwsC,GAAA,cAAAA,EAAAtsC,KAAAssC,EAAArsC,MAAA,cACMwkB,EAAW,CACbt0B,UAAW,kBAFfm8C,EAAArsC,KAAA,EAIuBlB,GACnB,2BACA,GACA0lB,GACA,GARJ,OAIMprB,EAJNizC,EAAAvrC,KAWEqhE,EAAiB/oE,EAASgd,SAX5B,wBAAAi2B,EAAAprC,SAAAmrC,OAzKiD/qC,MAAAC,KAAA1B,WA0OjD,OAnBA8L,oBAAU,WAIR,GACEne,EAAMogB,SAASC,UACfrgB,EAAMogB,SAASC,SAAS2c,MAAM,KAAKtqB,OAAS,EAC5C,CACA,IAAIqiE,EAAc/0E,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GACrDg4C,GAAeD,GAhO8B,SAAAphE,GAAA6hE,GAAA1hE,MAAAC,KAAA1B,WAiO7CykE,CAAiB/B,QAEjB94C,GAAY,GAEd,OAAO,YACK,IAEX,IAGD/6B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC+hE,GAAD,CAAY32D,MAAOyoE,GAAclpB,OAAQkoB,IACzC/yE,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IAAMvI,QAASyF,IACrDhd,EAAAC,EAAAC,cAAC21E,GAAD,CAAOt+D,QAASyF,GAAa7B,SAAUk5D,GAAal5D,UACjDk5D,GAAa1sD,UAGlB3nB,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAC9BrvC,EAAAC,EAAAC,cAAC03B,GAAD,CAAM54B,UAAWQ,EAAQxB,KAAMsN,MAAM,0BACjCuoE,GAqEA7zE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIxc,QAAS,GAC/B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE7C,UAAW,KACpC0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,KACrC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SAAtC,iBAGAzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAChC0yE,GAAa5C,eAGlBvxE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,KACrC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SAAtC,kBAGAzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAChC0yE,GAAa3C,gBAGlBxxE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE7C,UAAW,KACpC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SAAtC,kBAGAzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MACH,GAA7B0yE,GAAavC,aACVuC,GAAatC,cAAgB,IAC7BsC,GAAatC,gBAGrB7xE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE7C,UAAW,KACpC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SAAtC,sBAGAzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAChC0yE,GAAac,eAKnBd,GAAagB,QACZn1E,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE7C,UAAW,KACnC63E,GAAagB,QAAQpqE,IAAI,SAACsc,EAAKrE,GAAN,OACxBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,KACrC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SACnC4lB,GAEHrnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAChC0yE,GAAa57C,WAAWlR,GAAKpP,WAIpCjY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,KACrC0D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,QAAQwC,UAAU,SAAtC,aAGAzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAChC0yE,GAAaa,YAIlB,KACJh1E,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE7C,UAAW,GAAI49B,UAAW,WAClDq5C,EAKAvzE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG,IACAm+D,EACDzzE,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,SACXuU,QAAS,SAAC0E,GAAD,OAhYoB,SAAAya,GAAA,OAAA+oC,GAAArrD,MAAAC,KAAA1B,WAgYbktD,IAChB7gE,MAAM,WAENwC,EAAAC,EAAAC,cAACo+D,GAAAr+D,EAAD,QAZJD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,QAlINtV,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC41E,GAAD,CACE37C,QAjEd,SAAwBlvB,GACtB,IAAI8qE,EAAmB,GACnB95C,EAAQ,GACRC,EAAc,GACP78B,OAAOwvB,KAAK5jB,GAClBsuB,QAAQ,SAACtkB,GACZ,IAAIgD,EAAS,GACTkkB,EAAY,GAChBlxB,EAAMgK,GAAKskB,QAAQ,SAAC6C,GAClBnkB,EAAO5C,KAAK+mB,EAASx6B,MACrBu6B,EAAU9mB,KAAK+mB,EAAShuB,OACxB6tB,EAAM5mB,KAAK+mB,EAASx6B,QAEtBm0E,EAAiB9gE,GAAO,CACtBgD,OAAQA,EACR7J,MAAO+tB,GAET,IAAIjB,EAAcjmB,EAAM,MAAQgnB,EAAMI,KAAK,OAC3CH,EAAY7mB,KAAK6lB,KAEnBg4C,EAAe6C,GACf3C,EAAmBl3C,EAAYG,KAAK,QAEpC22C,GAAa,GA7MkC,SAAArgE,GAAAmvD,GAAAlvD,MAAAC,KAAA1B,WA+M/C6kE,CAAc/qE,IAyCFjM,UAAWQ,EAAQ+8B,eAEpBtG,EAASzkB,OAAS,EACjBxR,EAAAC,EAAAC,cAAC+1E,GAAD,CAAU3qE,MAAOqoE,GAAc19C,SAAUo9C,IACvC,KAoBHv4C,IAAa+4C,GACZ7zE,EAAAC,EAAAC,cAACg2E,GAAD,CACEC,gBAAiBhC,GACjBn1E,UAAWQ,EAAQ+8B,aACnBpC,QAnEhB,SAAqB/hB,EAAMnN,GACzBmpE,GAAgB/0E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACX80E,IADU,GAAA90E,OAAAM,EAAA,EAAAN,CAAA,GAEZ+Y,EAAOnN,MAiEIwwB,WAAY,CAAC,eAAgB,gBAE7B,KAIJz7B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTC,GAAI,GACJxc,QAAS,EACT8C,MAAO,CAAE+6B,UAAW,WAEpBl6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE7C,UAAW,GAAI49B,UAAW,UACnC79B,QAAS,GAEPk3E,EAaE,KAZFvzE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBA1SkB,SAAArD,GAAA,OAAA0iE,GAAAxiE,MAAAC,KAAA1B,WA0SZilE,EAAe,IAC9B54E,MAAM,UACN2B,MAAO,CAAE6Z,OAAQ,IACjB/Z,QAAQ,aAJV,iBCxVtB,IAAMlB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCoiC,SAAU,CACRrlB,OAAQ/c,EAAMI,QAAQ,OAGbg6E,GAAe/7C,YAAW,SAACx7B,GACtC,IAAMU,EAAUzB,KAEhBwgC,EAAiCC,aAASvvB,GAAexE,OAAjDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MACvB,OAAID,EAEAhQ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAGvCpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAEhBF,EAAAC,EAAAC,cAACo2E,GAAD,CACErrE,MAAO,CACL8E,OACArF,OAAQuE,GAAevE,OACvBkkB,WAAY,kBAGd5uB,EAAAC,EAAAC,cAAC0yE,GAAc9zE,oBC3BH9C,YAAW,iBAAO,CAClCgC,KAAM,8BC2BFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCy3E,IACApjE,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAiB+e,GAAjB7e,EAAA,GAAAA,EAAA,IACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACAE,GADAF,EAAA,GAC8BlJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAIAC,EAAqCtJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAmB6W,EAAnB7W,EAAA,GAEM9c,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GACMqgB,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAhB7B,SA4BRmpB,EA5BQ3hB,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WAAA,SAAAkjB,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4BvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,wBAAAF,EAAAmB,SAAA9B,OA5BuBkC,MAAAC,KAAA1B,WA8CX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,aAERtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOxF,GACPqxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKvE,mBAAmB+qB,aAC3D9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAENvF,EAAKvE,mBAAmBV,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OAClChjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACU,GAAT0N,GAAclkB,EAAM00B,MACrBxzB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAGT3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACGta,QAAQ,WACR+Z,OAAO,QACP0d,iBAAiB,EACjBxrB,GAAG,qBACHtJ,KAAK,qBACLqJ,MAAOnM,EAAM80B,cACbva,SAAUob,EAAkB,aAE5B9yB,MAAM,iBAIR3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvFjDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,UACxCj1B,EAAM01B,aAsFkEx0B,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,SAIxC,KACHD,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MAIpBqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACbjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,eACHtJ,KAAK,eACLqJ,MAAOioB,EAAYtxB,KACnByX,SAAUob,EAAkB,QAC5B9yB,MAAM,SATZ,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIzlB,MAGhDqyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACxDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACjBjnB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,QACHtJ,KAAK,QACLqJ,MAAOioB,EAAY9kB,MACnBiL,SAAUob,EAAkB,SACN9yB,MAAM,UATlC,KAUyB3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAIjZ,OAEzD6lB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIhc,YAAcvM,EAAM00B,MACvDxzB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAYniB,MAAS,CAAChD,MAAO,IAAK8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OAAO2Z,EAAWE,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE9CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAzIpDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OAyImC/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OAzJjD4c,EAyJmEhQ,EAxJrF8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GADS,IAEZ9kB,MAAQipB,EAAWjpB,MACnBxM,KAAOy1B,EAAWz1B,KAClB2yB,QAAQ,UAEVL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWhsB,UAAW0oB,QAAQ,KAP5D,IAAoBsD,GAyJyEl4B,MAAS,CAAChD,MAAO,KAC1E6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAlKe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAkKA4B,oBA/JsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QA+JpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,IC3PTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBm6E,GAAcl8C,YAAW,SAAAx7B,GACpC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GAEMzc,EAAUzB,KAEhBoe,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6tB,EAAP5tB,EAAA,GAAoB6tB,EAApB7tB,EAAA,GAR6C,SAAA8tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAW7C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAGwBlB,EAAmB,uBAAwB,GAAI4qB,GAHvE,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAX6CkC,MAAAC,KAAA1B,WAAA,SAiB9B40B,IAjB8B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiB7C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOjG,MAGhCwN,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK0mE,oBAAoB3rE,OACnDm/B,EAAe/lB,EAAWnU,KAAK0mE,oBAAoB3rE,SAEpDyS,MAAM7L,QAAQzB,OAfnB,wBAAA+V,EAAAxT,SAAAuT,OAjB6CnT,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkD7C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEqsC,eAAiBrsC,EAAEqsC,cAAcryC,cAAc4B,MAAMhL,EAAWoJ,cAAe,OACjFgG,EAAEssC,gBAAkBtsC,EAAEssC,eAAetyC,cAAc4B,MAAMhL,EAAWoJ,cAAe,OACnFgG,EAAEusC,UAAYvsC,EAAEusC,UAAY37C,GAC5BoP,EAAEwsC,QAAUxsC,EAAEwsC,OAAO5wC,MAAMhL,EAAY,OACvCoP,EAAEysC,SAAWzsC,EAAEysC,QAAQzyC,cAAc4B,MAAMhL,EAAWoJ,cAAe,QAKvE4F,EAAeG,GAZjB,wBAAA5lB,EAAAhS,SAAA8R,OAlD6C1R,MAAAC,KAAA1B,WAoE7C,OAlCA8L,oBAAU,WACR8oB,KACC,IAiCD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEVtL,EAAAC,EAAAC,cAACoB,EAAD,MASQtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,qBAAsBi5B,aAAa,UAAUZ,SAnF7B,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAmFkD4I,SAnFlD,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAmFoEkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBC7F5IjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhB06E,GAAmBz8C,YAAW,SAAAx7B,GACzC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAA8BjJ,IAAMK,SAAS,IAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOxE,EAAPyE,EAAA,GAAgBye,EAAhBze,EAAA,GACAE,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GAGM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GAVkD,SAAA4tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAalD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEwBlB,EAAmB,0BAA2B,GAAI4qB,GAF1E,OAAA5pB,EAAAgB,KAIE0zB,IAJF,wBAAA10B,EAAAmB,SAAA9B,OAbkDkC,MAAAC,KAAA1B,WAAA,SAAAkqB,IAAA,OAAAA,EAAAh8B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmBlD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO3G,MAGhCkO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJwW,EAAW,CACTs8C,MAAQ9yD,EAAWnU,KAAKknE,iBAAiBnsE,MACzCosE,OAAS,CAAC,CACRhsE,GAAK,EACLtJ,KAAO,aACP,CACAsJ,GAAK,EACLtJ,KAAO,iBAKZ2b,MAAM7L,QAAQzB,OAzBnB,wBAAA+V,EAAAxT,SAAAuT,OAnBkDnT,MAAAC,KAAA1B,WAAA,SA+CnC40B,IA/CmC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA+ClD,SAAA6T,IAAA,IAAA3T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO5G,MAGhCmO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IAAIizD,EAAkB,GAEnBjzD,EAAWnU,KAAKwrB,mBAAmBzwB,OAGpCoZ,EAAWnU,KAAKwrB,mBAAmBzwB,MAAMyuB,QAAQ,SAAAC,GAC/C,IAAI49C,EAAU,GAUV,GATJA,EAAO,GAAS59C,EAAQtuB,GAExBksE,EAAO,KAAW59C,EAAQ53B,KAC1Bw1E,EAAO,UAAgB59C,EAAQ69C,UAC/BD,EAAO,QAAc59C,EAAQ89C,QAC7BF,EAAO,eAAqB59C,EAAQ+9C,eACpCH,EAAO,SAAe59C,EAAQ3V,SAC9BuzD,EAAO,OAAa59C,EAAQg+C,OAErBh+C,EAAQi+C,qBACX,CACkB,GACNpiE,KAAKmkB,EAAQi+C,sBACvBL,EAAO,cAAoB59C,EAAQi+C,qBACnCL,EAAO,KAAW59C,EAAQi+C,qBAAqB71E,KAIxB,GAAtB43B,EAAQk+C,YAETN,EAAO,UAAgB,CACrBlsE,GAAK,EACLtJ,KAAO,aAETw1E,EAAO,MAAY,cAEnBA,EAAO,UAAgB,CACrBlsE,GAAK,EACLtJ,KAAO,YAETw1E,EAAO,MAAY,YAErBD,EAAgB9hE,KAAK+hE,KAG7BrtC,EAAeotC,GACfltC,EAAektC,KAEhB55D,MAAM7L,QAAQzB,OAzDnB,wBAAAuU,EAAAhS,SAAA8R,OA/CkD1R,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2HlD,SAAAoU,EAAsBoW,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAArlB,EAAAvS,SAAAqS,OA3HkDjS,MAAAC,KAAA1B,WAkIlD,OAxBA8L,oBAAU,YA1GwC,WAAAoe,EAAAzoB,MAAAC,KAAA1B,WA2GhD4qB,GACAgK,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,oBACvBkM,QAASA,EACT+sB,aAAa,UAAUZ,SApJqB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAoJA4I,SApJA,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAoJkBkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,QCvHlFhuC,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAsGLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MA3FX,IAmGMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,OAgQGq1B,gBA5PA,SAACjzB,GACd,IAAIy7B,EAAUvI,cACRxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAiCpJ,IAAMK,SAAS,GAAhDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACqCrJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAmB+V,GAAnB9V,EAAA,GAAAA,EAAA,IACAG,EAAmC1J,IAAMK,SAAStU,EAAMmZ,QAAxDyE,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwmB,EAAPvmB,EAAA,GAAkBwmB,EAAlBxmB,EAAA,GAEA4V,EAAuCvf,IAAMK,SAAS,IAAtDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC6Cxf,IAAMK,SAAS,KAA5Dqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC+C1f,IAAMK,SAAS,KAA9Dwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACmD7f,IAAMK,SAAS,KAAlE2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,GAC+BhgB,IAAMwB,WAAWzB,IAAxCzC,mBAC2B0C,IAAMK,SAAS,KAAlD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACqClgB,IAAMK,SAAS,KAApDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOF,EAAPG,EAAA,GAAmBF,EAAnBE,EAAA,GACAC,EAAyBvgB,IAAMK,UAAS,GAAxCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC2BxgB,IAAMK,UAAS,IAA1CugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE8B5gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFN8oB,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAkBA4P,MAAMC,UAAUC,OAAS,SAAW9gB,EAAOxJ,GACzC3G,KAAKkxB,OAAQ/gB,EAAO,EAAGxJ,IA+CzB,IAeAkb,EAA0B3hB,IAAMK,SAAS,OAAzCuhB,EAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,EAAA,GAAOnE,EAAPoE,EAAA,GAAcC,EAAdD,EAAA,GACAE,EAA8B9hB,IAAMK,SAAS,aAA7C0hB,EAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,EAAA,GAAOpE,GAAPqE,EAAA,GAAgBC,GAAhBD,EAAA,GAOA7X,oBAAW,WACTimB,EAAcpkC,EAAMmZ,SACnB,CAACnZ,EAAMmZ,SAcV,IAvC0BG,GAiD1B,OACEpY,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAEvBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC/C,QAAS,QAAS4oB,GAAI,GAAI9mB,WAAY,YAC1E8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE5BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAClCH,EAAMwM,QAITtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACrM,WAAS,EAACC,GAAI,EAAGmM,GAAI,EAAG9mB,WAAW,UACnD8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC1BhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACYta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT8jB,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACJqJ,MAAOioB,EAAYjZ,cACpBZ,UAtEAjB,GAsE4B,gBAtEpB,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,GAAOqC,EAAEC,OAAOzP,WAsE1BtJ,MAAM,iBAGb3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE3ChlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAa8W,QAAS,WA7F5CjX,EAAMib,SAASmZ,EAAYjZ,gBA6FwCzc,MAAM,WAAnE,YAKAwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAC+lB,aAAa,YAQ5DllB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GAcvF7iB,EAAAC,EAAAC,cAACykC,GAAD,CACGte,QAASvnB,EAAMunB,QACf7mB,QAASA,EACT+wB,MAAOA,EACPE,QAASA,GACTC,cAtEc,SAACjc,EAAOuc,GAGhC4D,EAFcnE,KAAYO,GAAsB,QAAVT,EAErB,OAAS,OAC1BwE,GAAW/D,MAoELhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACCkgB,EAAWl4B,IAAI,SAACsc,EAAKrE,GAAN,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAGAtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC62B,EAAY5e,GAAb,OACjBhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACyB,WAAnBssB,EAAW3sB,IACPjV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAS,CAAChD,MAAO,KACzC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAtFtBvP,EAsFyCmc,EAAInc,QApFhEqvB,EAAQllB,KAAR,yBAAAtV,OAAsCmL,IAFxC,IAAqBA,IAuFalL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAEgBD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAE9BthB,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAcknB,EAAIua,EAAW3sB,eAkBzCjV,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAG,IAAI,IAAI,KAEhCC,MAAO,CAAClpB,EAAMmZ,OAAOzG,QACrBiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA3Id,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAQzB,IA0IX0B,oBAnId,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,uBC/WNzoB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBs7E,GAAqBr9C,YAAW,SAAAx7B,GAC3C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAA8BjJ,IAAMK,SAAS,IAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOxE,EAAPyE,EAAA,GAAgBye,EAAhBze,EAAA,GACAE,EAAsCpJ,IAAMK,SAAS,IAArDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GAGM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GAVoD,SAAA4tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAapD,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEEG,QAAQyR,IAAIhR,KAAKC,UAAU6oB,IAF7B5pB,EAAAE,KAAA,EAGwBlB,EAAmB,0BAA2B,GAAI4qB,GAH1E,OAAA5pB,EAAAgB,KAIG0zB,IAJH,wBAAA10B,EAAAmB,SAAA9B,OAboDkC,MAAAC,KAAA1B,WAAA,SAAAkqB,IAAA,OAAAA,EAAAh8B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmBpD,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO3G,MAGhCkO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJwW,EAAW,CACTs8C,MAAQ9yD,EAAWnU,KAAKknE,iBAAiBnsE,MACzCosE,OAAS,CAAC,CACRhsE,GAAK,EACLtJ,KAAO,aACP,CACAsJ,GAAK,EACLtJ,KAAO,iBAKZ2b,MAAM7L,QAAQzB,OAzBnB,wBAAA+V,EAAAxT,SAAAuT,OAnBoDnT,MAAAC,KAAA1B,WAAA,SA+CrC40B,IA/CqC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA+CpD,SAAA6T,IAAA,IAAA3T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO5G,MAGhCmO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IAAIizD,EAAkB,GAEnBjzD,EAAWnU,KAAKwrB,mBAAmBzwB,OAGpCoZ,EAAWnU,KAAKwrB,mBAAmBzwB,MAAMyuB,QAAQ,SAAAC,GAC/C,IAAI49C,EAAU,GAWV,GAVJA,EAAO,GAAS59C,EAAQtuB,GAExBksE,EAAO,KAAW59C,EAAQ53B,KAC1Bw1E,EAAO,UAAgB59C,EAAQ69C,UAC/BD,EAAO,QAAc59C,EAAQ89C,QAC7BF,EAAO,eAAqB59C,EAAQ+9C,eACpCH,EAAO,kBAAwB59C,EAAQo+C,kBAEvCR,EAAO,SAAe59C,EAAQ3V,SAEvB2V,EAAQi+C,qBACX,CACkB,GACNpiE,KAAKmkB,EAAQi+C,sBACvBL,EAAO,cAAoB59C,EAAQi+C,qBACnCL,EAAO,KAAW59C,EAAQi+C,qBAAqB71E,KAIxB,GAAtB43B,EAAQk+C,YAETN,EAAO,UAAgB,CACrBlsE,GAAK,EACLtJ,KAAO,aAETw1E,EAAO,MAAY,cAEnBA,EAAO,UAAgB,CACrBlsE,GAAK,EACLtJ,KAAO,YAETw1E,EAAO,MAAY,YAErBD,EAAgB9hE,KAAK+hE,KAG7BrtC,EAAeotC,GACfltC,EAAektC,KAEhB55D,MAAM7L,QAAQzB,OA1DnB,wBAAAuU,EAAAhS,SAAA8R,OA/CoD1R,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4HpD,SAAAoU,EAAsBoW,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAY,MAAQ,OAExEgP,EAAeG,GALjB,wBAAArlB,EAAAvS,SAAAqS,OA5HoDjS,MAAAC,KAAA1B,WAmIpD,OAxBA8L,oBAAU,YA3G0C,WAAAoe,EAAAzoB,MAAAC,KAAA1B,WA4GlD4qB,GACAgK,KACC,IAsBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAAC23E,GAAD,CAAmBvsE,MAAQ,uBAC3BkM,QAASA,EACT+sB,aAAa,UAAUZ,SArJuB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAqJF4I,SArJE,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAqJgBkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,kBC9J/FjsC,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBy7E,GAAgBx9C,YAAW,SAAAx7B,GACtC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8tB,EAAP7tB,EAAA,GAAoB8tB,EAApB9tB,EAAA,GACAE,EAA8CpJ,IAAMK,SAAS,IAA7DgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO47D,EAAP37D,EAAA,GAAwB47D,EAAxB57D,EAAA,GAEM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2tB,EAAP1tB,EAAA,GAAoB2tB,EAApB3tB,EAAA,GAT+C,SAAA4tB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAY/C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEuBlB,EAAmB,sBAAuB,GAAI4qB,GAFrE,OAAA5pB,EAAAgB,KAGE0zB,IAHF,wBAAA10B,EAAAmB,SAAA9B,OAZ+CkC,MAAAC,KAAA1B,WAAA,SAAA8mE,IAAA,OAAAA,EAAA54E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiB/C,SAAAsV,IAAA,IAAApV,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO7G,MAGhCoO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ8zD,EAAmB9zD,EAAWnU,KAAKmoE,mBAAmBptE,SAEvDyS,MAAM7L,QAAQzB,OAdnB,wBAAA+V,EAAAxT,SAAAuT,OAjB+CnT,MAAAC,KAAA1B,WAiC/C,SAAS40B,IAEP,IAAMp1B,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAO1G,MAGhCiO,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ,IAAI8yD,EAAQ,GACT9yD,EAAWnU,KAAKknE,iBAAiBnsE,OAElCoZ,EAAWnU,KAAKknE,iBAAiBnsE,MAAMyuB,QAAQ,SAAAC,GAC7C,IAAI2+C,EAAY,GACZC,EAAiB,GACjBC,EAAkB,GAEnB7+C,EAAQ8+C,+BAGN9+C,EAAQ8+C,8BAA8BxtE,OAEvC0uB,EAAQ8+C,8BAA8BxtE,MAAMyuB,QAAQ,SAAAg/C,GAClDJ,EAAU9iE,KAAKkjE,EAAWC,yBAAyB52E,MACnDw2E,EAAe/iE,KAAKkjE,EAAWC,4BAIlCh/C,EAAQi/C,yBAGNj/C,EAAQi/C,wBAAwB3tE,OAEjC0uB,EAAQi/C,wBAAwB3tE,MAAMyuB,QAAQ,SAAAg/C,GAC5CF,EAAgBhjE,KAAKkjE,EAAW32E,QAItC,IAAI82E,EAAU,CACZxtE,GAAKsuB,EAAQtuB,GACb2Y,SAAW2V,EAAQ3V,SACnBjiB,KAAO43B,EAAQ53B,KACfi0D,QAAWsiB,EAAU97C,KAAK,OAC1Bs8C,QAAUN,EAAgBh8C,KAAK,OAC/Bu8C,YAAcR,GAEhBpB,EAAM3hE,KAAKqjE,KAIf3uC,EAAeitC,GACf/sC,EAAe+sC,KAEhBz5D,MAAM7L,QAAQzB,OAzF4B,SAAAk6B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4G/C,SAAA6T,EAAsB2W,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzoC,KAAKyiC,cAAgBgG,EAAEzoC,KAAKyiC,cAAc4B,MAAMhL,EAAWoJ,cAAe,MAC5EgG,EAAEwrB,QAAQxxB,cAAgBgG,EAAEwrB,QAAQxxB,cAAc4B,MAAMhL,EAAWoJ,cAAe,MAAQ,OAG5F4F,EAAeG,GAPjB,wBAAA5lB,EAAAhS,SAAA8R,OA5G+C1R,MAAAC,KAAA1B,WAqH/C,OA1BA8L,oBAAU,YA3FqC,WAAAg7D,EAAArlE,MAAAC,KAAA1B,WA4F7C0nE,GACA9yC,KACC,IAwBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAUNtL,EAAAC,EAAAC,cAACoB,EAAD,MAEItB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAQ,iBAAkBi5B,aAAa,UACtD/sB,QAASugE,EACTp0C,SAvIyC,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAuIpB4I,SAvIoB,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAuIFkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,QC1G3DhuC,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAsGLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MA3FX,IAmGMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,OAgQGq1B,gBA5PA,SAACjzB,GACd,IAAIy7B,EAAUvI,cACRxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAE,EAAiCpJ,IAAMK,SAAS,GAAhDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACqCrJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAmB+V,GAAnB9V,EAAA,GAAAA,EAAA,IACAG,EAAmC1J,IAAMK,SAAStU,EAAMmZ,QAAxDyE,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwmB,EAAPvmB,EAAA,GAAkBwmB,EAAlBxmB,EAAA,GAEA4V,EAAuCvf,IAAMK,SAAS,IAAtDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC6Cxf,IAAMK,SAAS,KAA5Dqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC+C1f,IAAMK,SAAS,KAA9Dwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACmD7f,IAAMK,SAAS,KAAlE2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAEAE,GAFAD,EAAA,GAAAA,EAAA,GAC+BhgB,IAAMwB,WAAWzB,IAAxCzC,mBAC2B0C,IAAMK,SAAS,KAAlD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACqClgB,IAAMK,SAAS,KAApDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOF,EAAPG,EAAA,GAAmBF,EAAnBE,EAAA,GACAC,EAAyBvgB,IAAMK,UAAS,GAAxCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GAC2BxgB,IAAMK,UAAS,IAA1CugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE8B5gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFN8oB,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAkBA4P,MAAMC,UAAUC,OAAS,SAAW9gB,EAAOxJ,GACzC3G,KAAKkxB,OAAQ/gB,EAAO,EAAGxJ,IA+CzB,IAeAkb,EAA0B3hB,IAAMK,SAAS,OAAzCuhB,EAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,EAAA,GAAOnE,EAAPoE,EAAA,GAAcC,EAAdD,EAAA,GACAE,EAA8B9hB,IAAMK,SAAS,aAA7C0hB,EAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,EAAA,GAAOpE,GAAPqE,EAAA,GAAgBC,GAAhBD,EAAA,GAOA7X,oBAAW,WACTimB,EAAcpkC,EAAMmZ,SACnB,CAACnZ,EAAMmZ,SAcV,IAvC0BG,GAiD1B,OACEpY,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAEvBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC/C,QAAS,QAAS4oB,GAAI,GAAI9mB,WAAY,YAC1E8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE5BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAClCH,EAAMwM,QAITtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACrM,WAAS,EAACC,GAAI,EAAGmM,GAAI,EAAG9mB,WAAW,UACnD8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC1BhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACYta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT8jB,aAAa,MACb7xB,GAAG,qBACHtJ,KAAK,qBACJqJ,MAAOioB,EAAYjZ,cACpBZ,UAtEAjB,GAsE4B,gBAtEpB,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,GAAOqC,EAAEC,OAAOzP,WAsE1BtJ,MAAM,iBAGb3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAE3ChlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAa8W,QAAS,WA7F5CjX,EAAMib,SAASmZ,EAAYjZ,gBA6FwCzc,MAAM,WAAnE,YAKAwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAC+lB,aAAa,YAQ5DllB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GAcvF7iB,EAAAC,EAAAC,cAACykC,GAAD,CACGte,QAASvnB,EAAMunB,QACf7mB,QAASA,EACT+wB,MAAOA,EACPE,QAASA,GACTC,cAtEc,SAACjc,EAAOuc,GAGhC4D,EAFcnE,KAAYO,GAAsB,QAAVT,EAErB,OAAS,OAC1BwE,GAAW/D,MAoELhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACCkgB,EAAWl4B,IAAI,SAACsc,EAAKrE,GAAN,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAGAtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC62B,EAAY5e,GAAb,OACjBhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACyB,WAAnBssB,EAAW3sB,IACPjV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAS,CAAChD,MAAO,KACzC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAtFtBvP,EAsFyCmc,EAAInc,QApFhEqvB,EAAQllB,KAAR,oBAAAtV,OAAiCmL,IAFnC,IAAqBA,IAuFalL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAEgBD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAE9BthB,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAcknB,EAAIua,EAAW3sB,eAkBzCjV,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,GAAG,IAAI,IAAI,KAEhCC,MAAO,CAAClpB,EAAMmZ,OAAOzG,QACrBiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA3Id,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,GACRkK,EAAelK,EAAQzB,IA0IX0B,oBAnId,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,uBC5WCsyD,GAAcx+C,YAAW,SAAAx7B,GACpC,IAAAqU,EAAsCJ,IAAMK,SAAS,IAArDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO22B,EAAPz2B,EAAA,GAAoB02B,EAApB12B,EAAA,GACQhD,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOguB,EAAP/tB,EAAA,GAAoBguB,EAApBhuB,EAAA,GAH6C,SAAAiuB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAK7C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEwBlB,EAAmB,mBAAoB,GAAI4qB,GAFnE,OAAA5pB,EAAAgB,KAIE0zB,IAJF,wBAAA10B,EAAAmB,SAAA9B,OAL6CkC,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8B7C,SAAAsV,EAAsBkV,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzT,UAAYyT,EAAEzT,UAAUqP,MAAMhL,EAAY,MAC5CoP,EAAE0uC,QAAW1uC,EAAE0uC,QAAQ9yC,MAAMhL,EAAY,MAAQ,OAEnDgP,EAAeG,GANjB,wBAAApkB,EAAAxT,SAAAuT,OA9B6CnT,MAAAC,KAAA1B,WAAA,SAsC9B40B,IAtC8B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsC7C,SAAA6T,IAAA,IAAA3T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOjI,MAGhCwP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK2sB,qBAAqB5xB,OACpDm/B,EAAe/lB,EAAWnU,KAAK2sB,qBAAqB5xB,SAErDyS,MAAM7L,QAAQzB,OAfnB,wBAAAuU,EAAAhS,SAAA8R,OAtC6C1R,MAAAC,KAAA1B,WA0D7C,OAHA8L,oBAAU,WACR8oB,KACC,IAED/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACoB,EAAD,MAICtB,EAAAC,EAAAC,cAAC84E,GAAD,CAAmB1tE,MAAQ,uBACxBkM,QAAS,GACT+sB,aAAa,UAAUZ,SAnEgB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAmEK4I,SAnEL,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAmEuBkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,YAMtFjY,aAAW+mD,YC1EbG,GAAW3+C,YAAW,SAAAx7B,GACjC,IAAAqU,EAAsCJ,IAAMK,SAAS,IAArDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO22B,EAAPz2B,EAAA,GAAoB02B,EAApB12B,EAAA,GACQhD,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOguB,EAAP/tB,EAAA,GAAoBguB,EAApBhuB,EAAA,GAH0C,SAAAiuB,IAAA,OAAAA,EAAA7qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAK1C,SAAAC,EAAyBuqB,GAAzB,OAAAzqB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEwBlB,EAAmB,kBAAmB,GAAI4qB,GAFlE,OAAA5pB,EAAAgB,KAIE0zB,IAJF,wBAAA10B,EAAAmB,SAAA9B,OAL0CkC,MAAAC,KAAA1B,WAAA,SAAAg5B,IAAA,OAAAA,EAAA9qC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8B1C,SAAAsV,EAAsBkV,GAAtB,IAAAmP,EAAA,OAAA55B,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,OAEQ64B,EAAgBN,EAAYzsB,OAAQ,SAAAgtB,GAAC,OACzCA,EAAEzT,UAAYyT,EAAEzT,UAAUqP,MAAMhL,EAAY,MAC5CoP,EAAE0uC,QAAW1uC,EAAE0uC,QAAQ9yC,MAAMhL,EAAY,MAAQ,OAEnDgP,EAAeG,GANjB,wBAAApkB,EAAAxT,SAAAuT,OA9B0CnT,MAAAC,KAAA1B,WAAA,SAsC3B40B,IAtC2B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsC1C,SAAA6T,IAAA,IAAA3T,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,OAEQZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOjI,MAGhCwP,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GACJ6lB,EAAe7lB,EAAWnU,KAAK2sB,qBAAqB5xB,OACpDm/B,EAAe/lB,EAAWnU,KAAK2sB,qBAAqB5xB,SAErDyS,MAAM7L,QAAQzB,OAfnB,wBAAAuU,EAAAhS,SAAA8R,OAtC0C1R,MAAAC,KAAA1B,WA0D1C,OAHA8L,oBAAU,WACR8oB,KACC,IAED/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACoB,EAAD,MAGCtB,EAAAC,EAAAC,cAACoqC,GAAD,CAAeh/B,MAAO,YAAai5B,aAAc,UAAWZ,SAhErB,SAAAlxB,GAAA,OAAAy3B,EAAAt3B,MAAAC,KAAA1B,YAgE0C4I,SAhE1C,SAAArH,GAAA,OAAAy3B,EAAAv3B,MAAAC,KAAA1B,YAgE4DkV,QAAStW,GAAKsW,QAASpO,OAAQ+xB,YAOxHjY,aAAWknD,sCClEpBl7E,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX6gC,MAAO,GAGP9c,aAAc,MA8ID+4D,GAtIE,SAAAp6E,GACf,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/Bq6E,IAEM35E,EAAUzB,KAChB0V,EAAgCL,mBAAS,IAAzCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAiB2lE,GAAjB1lE,EAAA,GAAAA,EAAA,IAEAuJ,oBAAU,WAkCR,OA5BOm8D,EAAY,CACX,CAEEhhE,KAAM,OACNnN,MAAO,IAET,CAEEmN,KAAM,OACNnN,MAAO,IAET,CAEEmN,KAAM,MACNnN,MAAO,GAET,CAEEmN,KAAM,SACNnN,MAAO,MASV,cAGN,IAGQ3K,IAAO88B,OAAO,KACjB98B,IAAO+8B,MAAM,KACT/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAEEhyB,MAAOxM,EAAMwM,QAEftL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACCtiB,EAAMunB,QAAQtb,IAAI,SAAA+6C,GAAM,OACvB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYwkC,EAAOnkD,WAKvB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAM0Y,QAAQzM,IAAI,SAAAsuE,GAAO,OACxBr5E,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKokE,EAAQnuE,IA8BvBpM,EAAMunB,QAAQtb,IAAI,SAAA+6C,GAAM,OACvB9lD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACiB,IAAhBwwC,EAAO1tC,KAAcpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACpBa,KAAOk3D,EAAQ91D,MAAMnB,OAAO,yBAE9BpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACC+3D,EAAQvzB,EAAO7wC,mBCrI/BlX,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBi9E,GAAgBh/C,YAAW,SAAAx7B,GACtC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8BlJ,IAAMK,SAAS,KAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO3E,EAAP4E,EAAA,GAAgBse,EAAhBte,EAAA,GAEM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACIspB,GADJrpB,EAAA,GAAAA,EAAA,GACcxd,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,IAVF,SAkBhCiK,IAlBgC,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkB/C,SAAAsV,IAAA,IAAApb,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EAGwBlB,EAAmB,eAAgB,GAAI,CAACs1B,QAAUA,IAH1E,OAGMh7B,EAHNqb,EAAA3T,KAIEqoB,EAAW/vB,EAASk7B,UAJtB,wBAAA7f,EAAAxT,SAAAuT,OAlB+CnT,MAAAC,KAAA1B,WAiD/C,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEJtL,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAK,oBAAoBg1B,EAAS/jC,KAAK,aAUlD4V,EAAQ+hE,WAAav5E,EAAAC,EAAAC,cAACs5E,GAAD,CAASluE,MAAO,UAAWkM,QAASA,EAAQ+hE,WAAYlzD,QAAStW,GAAK0pE,cAAiB,mBC7E9G17E,WAAY/B,YAAW,iBAAO,CAClCgC,KAAM,GACN6zB,YAAa,CACX5zB,QAAS,OACTgY,cAAe,SACf9X,eAAgB,cAGPu7E,GAAoBp/C,YAAW,SAACx7B,GAC3C,IAmEAqU,EAA4BJ,IAAMK,UAAS,GAA3CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACkCN,IAAMK,UAAU,IAAlD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAAC,EAAA,GAAAA,EAAA,GACgBle,KAUhB,OACEiC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GAEvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,8BAKD8Q,GAAKgJ,QAAQhO,IAAI,SAAC4uE,EAAM32D,GAAP,OAChBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAI26C,EAAKhpE,KACrD3Q,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAEP06E,EAAKruE,oDClGlBvN,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,GACNqY,QAAS,CACPja,QAAS,GAEX6gC,MAAO,GAGP9c,aAAc,MA8ID+4D,GAtIE,SAAAp6E,GACf,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/B86E,IAEMp6E,EAAUzB,KAChB0V,EAAgCL,mBAAS,IAAzCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAiB2lE,GAAjB1lE,EAAA,GAAAA,EAAA,IAEAuJ,oBAAU,WAkCR,OA5BOm8D,EAAY,CACX,CAEEhhE,KAAM,OACNnN,MAAO,IAET,CAEEmN,KAAM,OACNnN,MAAO,IAET,CAEEmN,KAAM,MACNnN,MAAO,GAET,CAEEmN,KAAM,SACNnN,MAAO,MASV,cAGN,IAGQ3K,IAAO88B,OAAO,KACjB98B,IAAO+8B,MAAM,KACT/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAEEhyB,MAAOxM,EAAMwM,QAEftL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAC5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACCtiB,EAAMunB,QAAQtb,IAAI,SAAA+6C,GAAM,OACvB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYwkC,EAAOnkD,WAKvB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAM0Y,QAAQzM,IAAI,SAAAsuE,GAAO,OACxBr5E,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKokE,EAAQnuE,IA8BvBpM,EAAMunB,QAAQtb,IAAI,SAAA+6C,GAAM,OACvB9lD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACiB,IAAhBwwC,EAAO1tC,KAAcpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACpBa,KAAOk3D,EAAQ91D,MAAMnB,OAAO,yBAE9BpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACC+3D,EAAQvzB,EAAO7wC,mBCrI/BlX,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAIhBw9E,GAAev/C,YAAW,SAAAx7B,GACrC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACAM,GADAJ,EAAA,GAAAA,EAAA,GACoCD,mBAAS,KAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACQpD,GADRqD,EAAA,GAAAA,EAAA,GAC+BX,IAAMwB,WAAWzB,IAAxCzC,oBACR2L,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8BlJ,IAAMK,SAAS,KAA7CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO3E,EAAP4E,EAAA,GAAgBse,EAAhBte,EAAA,GAEM5c,EAAUzB,KAEhBse,EAAsCtJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACIspB,GADJrpB,EAAA,GAAAA,EAAA,GACcxd,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,IAVH,SAkB/BiK,IAlB+B,OAAAH,EAAAhzB,MAAAC,KAAA1B,WAAA,SAAAy0B,IAAA,OAAAA,EAAAvmC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkB9C,SAAAsV,IAAA,IAAApb,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EAGwBlB,EAAmB,eAAgB,GAAI,CAACs1B,QAAUA,IAH1E,OAGMh7B,EAHNqb,EAAA3T,KAIEqoB,EAAW/vB,EAASk7B,UAJtB,wBAAA7f,EAAAxT,SAAAuT,OAlB8CnT,MAAAC,KAAA1B,WAiD9C,OAxBA8L,oBAAU,WACR8oB,KACC,IAuBD/lC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAEJtL,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAK,oBAAoBg1B,EAAS/jC,KAAK,aAWlD4V,EAAQsiE,UAAY95E,EAAAC,EAAAC,cAAC65E,GAAD,CAASzuE,MAAO,WAAYkM,QAASA,EAAQsiE,UAAWzzD,QAAStW,GAAK+pE,YAAe,SC/E/F99E,YAAW,SAAAC,GAAK,MAAK,CACnC+B,KAAM,CACJ7B,MAAO,OACPib,YAAa,CACX9a,UAAWL,EAAMI,QAAQ,KAG7BsX,OAAQ,CACN1V,QAAS,OACT9B,MAAO,IACP+0B,YAAa,OAsHJ8oD,IChIFC,GAAa3/C,YAAW,SAAAx7B,GACnC,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAcsgB,GAAdpgB,EAAA,GAAAA,EAAA,IAC+BN,IAAMwB,WAAWzB,IAAxCzC,mBAUR,OACErQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAEAtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAG1B2D,EAAAC,EAAAC,cAACg6E,GAAD,CAAS1lD,SAZX,WAEEf,GAAS,8CCKP3V,GAAcld,YAbL,SAAA3E,GAAK,MAAK,CACvB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAA9B,GACrC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDq7E,IACA,OACEn6E,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,QAAQxC,UAAWQ,EAAQovC,YAAa74B,QAASwB,GACtEvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MAEW,SAASo2B,GAAct7E,GACpC,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GACkCN,IAAMK,SAAS,KAAjD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOq+D,EAAPp+D,EAAA,GAAkBq+D,EAAlBr+D,EAAA,GAKMe,EAAc,WAClBle,EAAMulD,eAMJhrB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACvCqvE,EAAaj7E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKg7E,GAAN,GAAAh7E,OAAAM,EAAA,EAAAN,CAAA,GAAkB+Y,EAAOnN,OAEnCm5C,EAAmB,SAAAhsC,GAAI,OAAI,SAAAqC,GAC/B6/D,EAAaj7E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRg7E,GADO,GAAAh7E,OAAAM,EAAA,EAAAN,CAAA,GAET+Y,EAAOqC,EAAEC,OAAOzP,WAGnB,OACEjL,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQlG,QAASyF,EAAaY,kBAAgB,0BAA0BtG,KAAMA,GAC5EtX,EAAAC,EAAAC,cAACq6E,GAAD,CAAarvE,GAAG,0BAA0BqM,QAASyF,GAAnD,kBAGAhd,EAAAC,EAAAC,cAACs6E,GAAD,CAAe7yC,UAAQ,GACvB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAMiQ,OACfsK,SAAUggB,EAAmB,SAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAM0Q,SACf6J,SAAUggB,EAAmB,UAE7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCyX,SAAUggB,EAAmB,aAC7BtgB,QAAS,CAAC,CAACpX,MAAO,EAAEC,KAAK,QAAQ,CAACD,MAAM,EAAEC,KAAK,eAC/Ck4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTI,SAAU+qC,EAAkB,aAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAIT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,gBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,eACHtJ,KAAK,qBAOX5B,EAAAC,EAAAC,cAACu6E,GAAD,KACAz6E,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,UAGEhd,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAjIjB,WACjBjX,EAAM47E,KAAKL,EAAUv7E,EAAMw1B,UAgI6B92B,MAAM,WAAxD,WChKV,IAAM6oB,GAAU,CACd,CAAEnb,GAAI,QAASvJ,MAAO,SACtB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAIrCjrB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiJLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,QAET0oD,SAAU,CACRzmD,SAAU,GAEZ45B,YAAa,CACX57B,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WA+aA2R,gBA3aI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAkB+V,GAAlB9V,EAAA,GAAAA,EAAA,IACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACsCvJ,IAAMK,SAAS,KAArDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOiqC,EAAPhqC,EAAA,GAAoBiqC,EAApBjqC,EAAA,GACA4V,EAA0Cvf,IAAMK,SAAS,IAAzDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAsB0yB,GAAtBzyB,EAAA,GAAAA,EAAA,IACQliB,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACRmiB,EAAsCzf,IAAMK,SAAS,IAArDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOmoD,EAAPloD,EAAA,GAAoBmoD,EAApBnoD,EAAA,GACAE,EAAwC5f,IAAMK,SAAS,IAAvDwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOkoD,EAAPjoD,EAAA,GAAqBkoD,EAArBloD,EAAA,GAGAE,EAA0B/f,IAAMK,SAAS,OAAzC2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC8BhgB,IAAMK,SAAS,eAA7C6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACgClgB,IAAMK,SAAS,KAA/CigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAO8U,EAAP7U,EAAA,GAAiB4xB,EAAjB5xB,EAAA,GAEAC,EAA8BvgB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNqoB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOW,EAAPV,EAAA,GAAgBW,EAAhBX,EAAA,GAIAG,EAA4C3gB,IAAMK,UAAS,GAA3DugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAOsU,EAAPrU,EAAA,GAAuBsU,GAAvBtU,EAAA,GAKM8U,GAAyB,WAC7BR,IAAkB,IA5BQ,SA8BbE,GA9Ba11B,EAAAC,GAAA,OAAA01B,GAAAx1B,MAAAC,KAAA1B,WAAA,SAAAi3B,KAAA,OAAAA,GAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA8B5B,SAAAC,EAA4B23B,EAAa/T,GAAzC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEMkT,EAAY,CACd6jB,UAAWJ,GAHf72B,EAAAE,KAAA,EAKQzS,EAAM+d,OAAO0rB,OAAO,CAAEC,SAAUjiC,GAAiBke,cAAatH,KAAK,SAAAC,GAE3D,OAARA,GACFkX,MAGD/W,MAAM,SAAAC,MAXX,OAcEyqB,IAAkB,GAdpB,wBAAA52B,EAAAmB,SAAA9B,OA9B4BkC,MAAAC,KAAA1B,WAAA,SA+CbitD,GA/CazrD,EAAAuiB,GAAA,OAAA6lD,GAAAnoE,MAAAC,KAAA1B,WAAA,SAAA4pE,KAAA,OAAAA,GAAA17E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA+C5B,SAAAsV,EAAyBi1D,EAAc1mD,GAAvC,IAAAyB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAEEwkB,EAAW,CACTxqB,SAAUyvE,EAAa9wD,MAAMtoB,KAC7B4L,OAAQwtE,EAAaxtE,OAAOnC,UAC5B4vE,UAAWD,EAAal0B,UACxBpa,aAAcsuC,EAAaj0B,aAC3Bzb,UAAW0vC,EAAa1vC,UAAU3pC,MAClC4mD,OAAQzpD,EAAMypD,OACd/0B,OAAO,GAET9hB,QAAQyR,IAAI,YAEZzR,QAAQyR,IAAIhR,KAAKC,UAAU2jB,IAb7B/P,EAAAzU,KAAA,EAcQlB,EAAmB,oBAAqB,GAAI0lB,GAdpD,OAgBEha,IAAQ,GACRuY,IAjBF,wBAAAtO,EAAAxT,SAAAuT,OA/C4BnT,MAAAC,KAAA1B,WAwE5B,IAAA2iB,GAAwB/gB,IAAMK,UAAS,GAAvC4gB,GAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,GAAA,GAAOxc,GAAP0c,GAAA,GAAajY,GAAbiY,GAAA,GAKMhX,GAAc,WAClBjB,IAAQ,IA9EkB,SAAA8pC,KAAA,OAAAA,GAAAxmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuH5B,SAAA6T,EAA0BpZ,EAAIopB,GAA9B,IAAAyB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAEEwkB,EAAW,CACTmlD,QAASx0B,EAAYw0B,QACrBD,UAAWv0B,EAAYI,UACvBpa,aAAcga,EAAYK,aAC1Bzb,UAAWob,EAAYM,iBAAiBrlD,OAN5C6iB,EAAAjT,KAAA,EAQQlB,EAAmB,oBAAqB,GAAI0lB,GARpD,OAUE7B,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzCO,IAXF,wBAAA9P,EAAAhS,SAAA8R,OAvH4B1R,MAAAC,KAAA1B,WAqI5B,IAGMizC,GAAoB,SAAAhsC,GAAI,OAAI,SAAAqC,GAChCksC,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,GAAArnD,OAAAM,EAAA,EAAAN,CAAA,GAEX+Y,EAAOqC,EAAEC,OAAOzP,WAyErB,OAtCAgS,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOhF,GAAagf,UAAW,MAGxDzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJ02D,EAAe12D,EAAWnU,KAAKvE,mBAAmBV,OAClDgwE,EAAgB52D,EAAWnU,KAAKxC,wBAAwBzC,SAGzDyS,MAAM7L,QAAQzB,QAChB,IAsBDjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAEEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQw4B,aACvBh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACkkB,QAAQ,OAAO5+B,WAAW,SAASc,UAAWQ,EAAQqlD,SAAUxoD,QAAS,GACvF2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MACjB,qBAcLe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE+6B,UAAW,UACpCl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUyB,QAAQ,YAAY0W,KAAK,QAAQxW,MAAO,CAAEgyB,aAAc,GAAID,YAAa,IAAMnb,QAhKzF,WACtBgG,IAAQ,KA+JA,cAON/b,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAExBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOhG,GACP6xB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAKorE,qBAAqB5kD,aAC5D9R,UAAW,CAAEuhC,WAAclnD,EAAMypD,SAE/B,SAAAj4C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAKvB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,GACFi1C,EAAiBj1C,GACV/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACLtV,EAAAC,EAAAC,cAACunC,GAAD,CACEn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT5X,KAAMm4B,EACN5T,QAASA,EACTuT,UAAWM,GACX3T,SAAUiU,GACVf,OAAQM,IACT1wB,GAAOtX,EAAAC,EAAAC,cAACk6E,GAAD,CAAe5mD,MAAOlc,GAAMgd,QAASA,EAASvlB,OAAQ4rE,EAAanrE,SAAUqrE,EAAcH,KAAMtc,GAAW/Z,YAAarnC,KAAkB,KAElJjN,EAAKorE,qBAAqBrwE,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OACnChjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAI9b,UACjBvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI9b,UAGPvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI7Z,QAGPxN,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYI,UACnBztC,SAAU+qC,GAAkB,aAC5Bl5C,GAAG,oBAEHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIy/B,UADP,MAGN9mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYK,aACnB1tC,SAAU+qC,GAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI0/B,aADP,MAIN/mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACvC5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnB1uB,MAAOy7C,EAAY00B,yBACnB/hE,UAhNLjB,EAgNkC,mBAhN1B,SAAC3D,EAAOxJ,GACzC07C,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKqnD,GAAN,GAAArnD,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAgNXkO,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAAEpX,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eACxDk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,iBAG3DpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACN,IAAzB7+B,EAAI2/B,iBAAyB,OAAS,aADtC,MAQThnD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZ6R,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKw7C,EAAYpV,UAAYjqB,EAAIiqB,YAIxErd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,KAAO8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvXrB,SAAA0a,EAAAC,GAAA,OAAAywB,GAAAjzC,MAAAC,KAAA1B,WAuX4Bq+B,CAAWnoB,EAAIyqB,aAAcxd,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE/DD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GApShDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAoS8B/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,MACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OApSjD,SAAoB+rC,GAClB,IACI40B,EAA2B,GADd,CAAC,CAAEz5E,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eAErD23B,QAAQ,SAAAC,GAEbA,EAAQ73B,OAAS6kD,EAAYQ,mBAC/Bo0B,EAA2B5hD,KAG/BmtB,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,IAEZw0B,QAAS10B,EAAYt7C,GACrB47C,UAAWN,EAAYM,UACvBE,iBAAkBR,EAAYQ,iBAC9Bo0B,yBAA0BA,EAC1Br0B,aAAcP,EAAYO,aAC1BzV,UAAW,IAAIhuB,QAWjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAyQC5S,CAAWkG,KAAMrnB,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEzCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA3T/CwqC,EA2TmE59B,EA3T3Cnc,SACxB+8B,IAAkB,KA0TgEjoC,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,SA1PzD,IAAAmY,MAmQApY,EAAAC,EAAAC,cAAA,WAAM,+DC1pB7B4d,GAAcld,YAbL,SAAA3E,GAAK,MAAK,CACvB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAA9B,GACrC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDu8E,IACA,OACEr7E,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,QAAQxC,UAAWQ,EAAQovC,YAAa74B,QAASwB,GACtEvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MAEW,SAASo2B,GAAct7E,GACpC,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs/D,EAAPr/D,EAAA,GAAoBs/D,EAApBt/D,EAAA,GAKMe,EAAc,WAClBle,EAAMulD,eAKFhrB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCswE,EAAel8E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKi8E,GAAN,GAAAj8E,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAEvCm5C,EAAmB,SAAAhsC,GAAI,OAAI,SAAAqC,GAC/B8gE,EAAel8E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVi8E,GADS,GAAAj8E,OAAAM,EAAA,EAAAN,CAAA,GAEX+Y,EAAOqC,EAAEC,OAAOzP,WAGnB,OACEjL,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQlG,QAASyF,EAAaY,kBAAgB,0BAA0BtG,KAAMA,GAC5EtX,EAAAC,EAAAC,cAACs7E,GAAD,CAAatwE,GAAG,0BAA0BqM,QAASyF,GAAnD,qBAGAhd,EAAAC,EAAAC,cAACu7E,GAAD,CAAe9zC,UAAQ,GACvB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAKA,EAAOzK,aAAeyK,EAAOxK,gBACxDmK,QAASja,EAAM48E,SACfriE,SAAUggB,EAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,sBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTI,SAAU+qC,EAAkB,aAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAACpX,MAAO,EAAEC,KAAK,QAAQ,CAACD,MAAM,EAAEC,KAAK,eAC/Ck4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAO9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,gBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,kBAOX5B,EAAAC,EAAAC,cAACy7E,GAAD,KACA37E,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,UAGEhd,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAvGjB,WACjBjX,EAAM8lD,WAAW02B,EAAax8E,EAAMw1B,UAsGoB92B,MAAM,WAAxD,WCrIV,IAAM6oB,GAAU,CACd,CAAEnb,GAAI,iBAAkBvJ,MAAO,kBAC/B,CAAEuJ,GAAI,kBAAmBvJ,MAAO,mBAChC,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAIrCjrB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiJLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,QAGT0oD,SAAU,CACRzmD,SAAU,GAEZ45B,YAAa,CACX57B,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WAoYA2R,gBAhYI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAkB+V,GAAlB9V,EAAA,GAAAA,EAAA,IACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACsCvJ,IAAMK,SAAS,KAArDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOiqC,EAAPhqC,EAAA,GAAoBiqC,EAApBjqC,EAAA,GACQrM,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACRiiB,EAAgCvf,IAAMK,SAAS,IAA/Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO4V,EAAP3V,EAAA,GAAiB0yB,EAAjB1yB,EAAA,GACAC,EAA0Czf,IAAMK,SAAS,IAAzDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOopD,EAAPnpD,EAAA,GAAsBopD,EAAtBppD,EAAA,GAGAE,EAA0B5f,IAAMK,SAAS,OAAzCwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8B7f,IAAMK,SAAS,eAA7C2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC8BhgB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFN+nB,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAOiB,EAAPhB,EAAA,GAAgBiB,EAAhBjB,EAAA,GAKAG,EAA4CrgB,IAAMK,UAAS,GAA3DigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAO4U,EAAP3U,EAAA,GAAuB4U,EAAvB5U,EAAA,GAKMoV,EAAyB,WAC7BR,GAAkB,IA1BQ,SA4BbE,EA5Ba11B,EAAAC,GAAA,OAAA01B,EAAAx1B,MAAAC,KAAA1B,WAAA,SAAAi3B,IAAA,OAAAA,EAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA4B5B,SAAAC,EAA4B23B,EAAa/T,GAAzC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMkT,EAAY,CACd6jB,UAAWJ,GAFf72B,EAAAE,KAAA,EAIQzS,EAAM+d,OAAO0rB,OAAO,CAAEC,SAAUvhC,GAAqBwd,cAAatH,KAAK,SAAAC,GAE/D,OAARA,GACFkX,MAGD/W,MAAM,SAAAC,MAVX,OAaEyqB,GAAkB,GAbpB,wBAAA52B,EAAAmB,SAAA9B,OA5B4BkC,MAAAC,KAAA1B,WAAA,SAiDbitD,EAjDazrD,EAAAuiB,GAAA,OAAA6lD,EAAAnoE,MAAAC,KAAA1B,WAAA,SAAA4pE,IAAA,OAAAA,EAAA17E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiD5B,SAAAsV,EAAyBi1D,EAAc1mD,GAAvC,IAAAyB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACE2wB,MAAM,cACFnM,EAAW,IACP,aAAmBilD,EAAatrE,YAAYf,aACpDonB,EAAQ,eAAqBilD,EAAatrE,YAAYd,eACtDmnB,EAAQ,UAAgBilD,EAAal0B,UACrC/wB,EAAQ,UAAgBilD,EAAa1vC,UAAU3pC,MAC/Co0B,EAAQ,aAAmBilD,EAAatuC,aACxC3W,EAAQ,YAAkBj3B,EAAMypD,OAChCxyB,EAAQ,OAAY,EATtB/P,EAAAzU,KAAA,GAaQlB,EAAmB,sBAAuB,GAAI0lB,GAbtD,QAcEha,IAAQ,GACRmY,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzCO,IAhBF,yBAAAtO,EAAAxT,SAAAuT,OAjD4BnT,MAAAC,KAAA1B,WAmE5B,IAAAmiB,EAAwBvgB,IAAMK,UAAS,GAAvCmgB,GAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOhc,GAAPic,GAAA,GAAaxX,GAAbwX,GAAA,GAKMvW,GAAc,WAClBjB,IAAQ,IAzEkB,SAAA8pC,KAAA,OAAAA,GAAAxmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuH5B,SAAA6T,EAA0BpZ,EAAIopB,GAA9B,IAAAyB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAEEwkB,EAAW,CACTmlD,QAASx0B,EAAYw0B,QACrBD,UAAWv0B,EAAYI,UACvBpa,aAAcga,EAAYK,aAC1Bzb,UAAWob,EAAYM,iBAAiBrlD,OAN5C6iB,EAAAjT,KAAA,EAQQlB,EAAmB,sBAAuB,GAAI0lB,GARtD,OAUE7B,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzCO,IAXF,wBAAA9P,EAAAhS,SAAA8R,OAvH4B1R,MAAAC,KAAA1B,WAuI5B,IAGMizC,GAAoB,SAAAhsC,GAAI,OAAI,SAAAqC,GAChCksC,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,GAAArnD,OAAAM,EAAA,EAAAN,CAAA,GAEX+Y,EAAOqC,EAAEC,OAAOzP,WA4CrB,OAxCAgS,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOtD,GAAqBsd,UAAW,MAGhEzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJ23D,EAAiB33D,EAAWnU,KAAKrB,sBAAsB5D,SAIxDyS,MAAM7L,QAAQzB,QAChB,IAwBDjQ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAEEtV,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQw4B,aACvBh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACkkB,QAAQ,OAAO5+B,WAAW,SAASc,UAAWQ,EAAQqlD,SAAUxoD,QAAS,GACvF2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MACjB,wBAILe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE+6B,UAAW,UACpCl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUyB,QAAQ,YAAY0W,KAAK,QAAQxW,MAAO,CAAEgyB,aAAc,GAAID,YAAa,IAAMnb,QAhIzF,WACtBgG,IAAQ,KA+HA,cAQN/b,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAExBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO5F,GACPyxB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAK62C,wBAAwBrwB,aAC/D9R,UAAW,CAAEuhC,WAAclnD,EAAMypD,SAE/B,SAAAj4C,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAKvB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACK/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACLtV,EAAAC,EAAAC,cAACunC,GAAD,CACEn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT2M,QAASA,EACTvkB,KAAMm4B,EACNL,UAAWM,EACX3T,SAAUiU,EACVf,OAAQM,IACT1wB,GAAOtX,EAAAC,EAAAC,cAAC47E,GAAD,CAAiBJ,SAAUE,EAAepoD,MAAOlc,GAAMgd,QAASA,EAASswB,WAAYwZ,EAAW/Z,YAAarnC,KAAkB,KAEtIjN,EAAK62C,wBAAwB97C,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OACtChjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzY,gBACjB5O,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIzY,gBAGP5O,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIw/B,eAGP7mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYI,UACnBztC,SAAU+qC,GAAkB,aAC5Bl5C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIy/B,UADP,MAGN9mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOy7C,EAAYK,aACnB1tC,SAAU+qC,GAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI0/B,aADP,MAGN/mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACvC5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAAEpX,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eACxDyX,UAxKLjB,EAwKkC,mBAxK1B,SAAC3D,EAAOxJ,GACzC07C,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKqnD,GAAN,GAAArnD,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAwKX6uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,iBAG3DpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACN,IAAzB7+B,EAAI2/B,iBAAyB,OAAS,aADtC,MAKThnD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,KAAO8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA5UrB,SAAA0a,EAAAC,GAAA,OAAAywB,GAAAjzC,MAAAC,KAAA1B,WA4U4Bq+B,CAAWnoB,EAAIyqB,aAAcxd,KAAUt0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE/DD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GA9OhDyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OA8O8B/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,MACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA/O7B+rC,EA+O+Cn/B,EA9OjEs/B,EAAetnD,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACVqnD,GADS,IAEZw0B,QAAS10B,EAAYt7C,GACrB47C,UAAWN,EAAYM,UACvBE,iBAAkBR,EAAYQ,iBAC9BD,aAAcP,EAAYO,aAC1BzV,UAAW,IAAIhuB,aAUjB4Q,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAjBvD,IAAoByyB,IA+OqDxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEzCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvS/CwqC,EAuSmE59B,EAvS3Cnc,SACxB+8B,GAAkB,KAsSuDjoC,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,SA7MhD,IAAAmY,KAsNApY,EAAAC,EAAAC,cAAA,WAAM,+DCjnB7B4d,GAAcld,YAbL,SAAA3E,GAAK,MAAK,CACvB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAA9B,GACrC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDi9E,IACA,OACE/7E,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,QAAQxC,UAAWQ,EAAQovC,YAAa74B,QAASwB,GACtEvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MAEW,SAASg4B,GAAiBl9E,GACvC,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GACwCN,IAAMK,SAAS,KAAvD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOigE,EAAPhgE,EAAA,GAAqBigE,EAArBjgE,EAAA,GAKMe,EAAc,WAClBle,EAAMulD,eAMFhrB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCixE,EAAgB78E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK48E,GAAN,GAAA58E,OAAAM,EAAA,EAAAN,CAAA,GAAqB+Y,EAAOnN,OAEzCm5C,EAAmB,SAAAhsC,GAAI,OAAI,SAAAqC,GAC/ByhE,EAAgB78E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACX48E,GADU,GAAA58E,OAAAM,EAAA,EAAAN,CAAA,GAEZ+Y,EAAOqC,EAAEC,OAAOzP,WAInB,OACEjL,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQlG,QAASyF,EAAaY,kBAAgB,0BAA0BtG,KAAMA,GAC5EtX,EAAAC,EAAAC,cAACi8E,GAAD,CAAajxE,GAAG,0BAA0BqM,QAASyF,GACjDle,EAAMwM,OAERtL,EAAAC,EAAAC,cAACk8E,GAAD,CAAez0C,UAAQ,GACvB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAMu9E,KACfviD,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK3C,GAAlBtZ,EAAMw9E,SACPt8E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,eACNsX,WAAS,EACTI,SAAU+qC,EAAkB,eAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACN0X,SAAU+qC,EAAkB,aAC5BnrC,WAAS,EACT/N,GAAG,oBACHtJ,KAAK,iBAGH,KACN5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACT/N,GAAG,oBACHmO,SAAU+qC,EAAkB,aAC5BxiD,KAAK,gBAIT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAACpX,MAAO,EAAEC,KAAK,QAAQ,CAACD,MAAM,EAAEC,KAAK,eAC/Ck4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAO9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,gBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,kBAOX5B,EAAAC,EAAAC,cAACq8E,GAAD,KACAv8E,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,UAGEhd,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAlIjB,WACjBjX,EAAM8lD,WAAWq3B,IAiIuCz+E,MAAM,WAAxD,WCjKV,IAAM6oB,GAAU,CACd,CAAEnb,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAGlDu1D,GAAoB,CACxB,CAAEtxE,GAAI,gBAAiBvJ,MAAO,iBAE9B,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,qBAAsBvJ,MAAO,sBACnC,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAIrCjrB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiE9B,SAAS4qD,GAAqBhnD,EAAGinD,EAAGz2B,GAClC,OAAIy2B,EAAEz2B,GAAWxwB,EAAEwwB,IACT,EAENy2B,EAAEz2B,GAAWxwB,EAAEwwB,GACV,EAEF,EAyEgBz0B,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,QAGT0oD,SAAU,CACRzmD,SAAU,GAEZ45B,YAAa,CACX57B,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WAkeA2R,gBA9dI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsCrJ,IAAMK,SAAS,IAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAEQhM,GAFRiM,EAAA,GAAAA,EAAA,GAE+BvJ,IAAMwB,WAAWzB,IAAxCzC,oBACRoM,EAAgC1J,IAAMK,SAAStU,EAAMypD,QAArD7rC,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO2vB,EAAP1vB,EAAA,GACA4V,GADA5V,EAAA,GACgC3J,IAAMK,SAAS,KAA/Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO4V,EAAP3V,EAAA,GAAiB0yB,EAAjB1yB,EAAA,GACAC,EAAkCzf,IAAMK,SAAS,IAAjDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOiqD,EAAPhqD,EAAA,GAAkBiqD,EAAlBjqD,EAAA,GAEAE,EAA0B5f,IAAMK,SAAS,OAAzCwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAOpC,EAAPqC,EAAA,GACAE,GADAF,EAAA,GAC8B7f,IAAMK,SAAS,eAA7C2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAAOrC,EAAPsC,EAAA,GACAC,GADAD,EAAA,GAC8BhgB,IAAMK,SAAS,KAA7C6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAO2pD,EAAP1pD,EAAA,GAAgB2pD,EAAhB3pD,EAAA,GACAG,EAA8BrgB,IAAMK,SAAS,IAA7CigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOypD,EAAPxpD,EAAA,GAAgBypD,EAAhBzpD,EAAA,GACAC,EAAwBvgB,IAAMK,UAAS,GAAvCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOhc,EAAPic,EAAA,GAAaxX,EAAbwX,EAAA,GASAG,EAA4C3gB,IAAMK,UAAS,GAA3DugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAOsU,GAAPrU,EAAA,GAAuBsU,GAAvBtU,EAAA,GA1B4B,SAAAyU,KAAA,OAAAA,GAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkC5B,SAAAC,EAA4BqsE,GAA5B,IAAAt4D,EAAAu4D,EAAA,OAAAxsE,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACM22B,EAAS12B,OAAS,GADxB,CAAAH,EAAAE,KAAA,eAEQkT,EAAY,CACd6jB,UAAWJ,EAAS,IAH1B72B,EAAAE,KAAA,EAKUzS,EAAM+d,OAAO0rB,OAAO,CAAEC,SAAUzhC,GAAiB0d,cAL3D,YAOMyjB,EAAS12B,OAAS,GAPxB,CAAAH,EAAAE,KAAA,eAQQkT,EAAY,CACd6jB,UAAWJ,EAAS,IAT1B72B,EAAAE,KAAA,EAWUzS,EAAM+d,OAAO0rB,OAAO,CAAEC,SAAUzhC,GAAiB0d,cAX3D,OAuBEq4D,EAAW,IAEX73B,EAAY,IACZg4B,KACAh1C,IAAkB,GA3BpB,yBAAA52B,EAAAmB,SAAA9B,OAlC4BkC,MAAAC,KAAA1B,WAAA,SAAA4pE,KAAA,OAAAA,GAAA17E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA0E5B,SAAAsV,EAAyBk2D,GAAzB,IAAAlmD,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMwkB,EAAW,IACP,cAAoBkmD,EAAar6E,KACzCm0B,EAAQ,aAAmBkmD,EAAaiB,YACxCnnD,EAAQ,WAAiBkmD,EAAakB,UACtCpnD,EAAQ,WAAiBkmD,EAAahB,UACtCllD,EAAQ,YAAkBj3B,EAAMypD,OAChCxyB,EAAQ,mBAAyBkmD,EAAa3wC,UAAU3pC,MACxDo0B,EAAQ,cAAoBkmD,EAAavvC,aACzC3W,EAAQ,OAAY,EATtB/P,EAAAzU,KAAA,GAaQlB,EAAmB,uBAAwB,GAAI0lB,GAbvD,QAcEha,GAAQ,GACRkhE,KACA/oD,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KAhB3C,yBAAA/N,EAAAxT,SAAAuT,OA1E4BnT,MAAAC,KAAA1B,WA+F5B,IAAA2iB,GAA8B/gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFN8oB,GAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,GAAA,GAAOG,GAAPD,GAAA,GAAgBE,GAAhBF,GAAA,GA/F4B,SAAA6xB,KAAA,OAAAA,GAAAxmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkJ5B,SAAA6T,EAA0BpZ,GAA1B,OAAAsF,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EAGQlB,EAAmB,uBAAwB,GAAIssE,GAHvD,OAKEM,KACA/oD,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KAN3C,wBAAAvP,EAAAhS,SAAA8R,OAlJ4B1R,MAAAC,KAAA1B,WAAA,SA2Jb8rE,KA3Ja,OAAAG,GAAAxqE,MAAAC,KAAA1B,WAAA,SAAAisE,KAAA,OAAAA,GAAA/9E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2J5B,SAAAoU,IAAA,IAAAkR,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cACMwkB,EAAW,CACbqW,SAAUttC,EAAMypD,OAChB80B,SAAUv+E,EAAMw9E,UAHpBv3D,EAAAxT,KAAA,EAKuBlB,EAAmB,qBAAsB,GAAI0lB,GALpE,OAKMprB,EALNoa,EAAA1S,KAOEyqE,EAAWnyE,EAAS0xE,MAPtB,wBAAAt3D,EAAAvS,SAAAqS,OA3J4BjS,MAAAC,KAAA1B,WAqK5B8L,oBAAU,WACRggE,MACC,CAAC7wC,IACJnvB,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MpMskBT,qHoMtkBgCga,UAAW,MAG3DzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJw4D,EAAax4D,EAAWnU,KAAK9B,wBAAwBnD,SAItDyS,MAAM7L,QAAQzB,QAChB,IAEH,IAAMm0C,GAAoB,SAAAhsC,GAAI,OAAI,SAAAqC,GAChCmiE,EAAWv9E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNs9E,GADK,GAAAt9E,OAAAM,EAAA,EAAAN,CAAA,GAEP+Y,EAAOqC,EAAEC,OAAOzP,WAyBrB,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACunC,GAAD,CACEn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACTkgB,UA9NsB,SAAAp1B,GAAA,OAAA21B,GAAAx1B,MAAAC,KAAA1B,YA+NtBpB,KAAMm4B,EACN1T,SAjMyB,WAC7ByT,IAAkB,IAiMdP,OAAQM,KACVhoC,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQw4B,aACvBh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACkkB,QAAQ,OAAO5+B,WAAW,SAASc,UAAWQ,EAAQqlD,SAAUxoD,QAAS,GACvF2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MACjBH,EAAMwM,QAcXtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE+6B,UAAW,UACpCl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUyB,QAAQ,YAAY0W,KAAK,QAAQxW,MAAO,CAAEgyB,aAAc,GAAID,YAAa,IAAMnb,QAlOzF,WACtBgG,GAAQ,KAiOA,cAON/b,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAKxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACqB,GAAlBhkB,EAAMw9E,SACLt8E,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OAEjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,UAGA3B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEXo7D,GAAkBzxE,IAAI,SAAA+6C,GAAM,OAE3B9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOnkD,WAKlB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KA7cZ,SAAoBqkC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMr8C,IAAI,SAACw8C,EAAIvkC,GAAL,MAAe,CAACukC,EAAIvkC,KAMrD,OALAskC,EAAezxB,KAAK,SAAC51B,EAAGinD,GACtB,IAAM32B,EAAQ82B,EAAWpnD,EAAE,GAAIinD,EAAE,IACjC,OAAc,IAAV32B,EAAoBA,EACjBtwB,EAAE,GAAKinD,EAAE,KAEXI,EAAev8C,IAAI,SAAAw8C,GAAE,OAAIA,EAAG,KAudtBC,CAAWq1B,EApe1B,SAAuBtsD,EAAOE,GAC5B,MAAiB,SAAVF,EACH,SAACtwB,EAAGinD,GAAJ,OAAUD,GAAqBhnD,EAAGinD,EAAGz2B,IACrC,SAACxwB,EAAGinD,GAAJ,OAAWD,GAAqBhnD,EAAGinD,EAAGz2B,IAieTg3B,CAAcl3B,EAAOE,IAAU1lB,IAAI,SAACsc,EAAKrE,GAAN,OACtDhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIqgC,cACjB1nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI4zD,UAAUqC,eAGE,GAAlBx+E,EAAMw9E,SACLt8E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI4zD,UAAUsC,eAkBnBv9E,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI4zD,UAAUuC,cAkBf,KACRx9E,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAI4zD,UAAU/vE,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACjDrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAO0xE,EAAQjyC,WACfrxB,SAAU+qC,GAAkB,cAC5Bl5C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI4zD,UAAUpzB,QAGvB7nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAI4zD,UAAU/vE,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACjDrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAO0xE,EAAQhyC,cACftxB,SAAU+qC,GAAkB,iBAC5Bl5C,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIo2D,UAAU51B,QAIvB7nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAI4zD,UAAU/vE,GAAKlL,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACjD5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAAEpX,MAAO,EAAGC,KAAM,QAAU,CAAED,MAAO,EAAGC,KAAM,eACxDk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAA1I,GAAM,OACjB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,iBAG3DpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SACM,IAArC7+B,EAAIo2D,UAAUC,mBAA2B,OAAS,aADlD,MAKT19E,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,GAAQF,QAAUE,GAAQ/oB,IAAMmc,EAAI4zD,UAAU/vE,GAC5ClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,KAAO8qB,MAAM,UACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA1aX,SAAA9H,GAAA,OAAAkzC,GAAAjzC,MAAAC,KAAA1B,WA0akBq+B,CAAWnoB,EAAIyqB,gBAAe9xC,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtDD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAtTtCyZ,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAsToB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,MACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAvTnB+rC,EAuTqCn/B,EAtTvDu1D,EAAWv9E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNs9E,GADK,IAERgB,cAAen3B,EAAYy0B,UAAU/vE,GACrCqyE,aAAc/2B,EAAYy0B,UAAUsC,aACpCC,WAAYh3B,EAAYy0B,UAAUuC,WAClC9yC,WAAY8b,EAAYy0B,UAAUpzB,MAClCld,cAAe6b,EAAYi3B,UAAU51B,MACrC+1B,iBAAkBp3B,EAAYi3B,UAAUvyE,GAExComC,UAAW,IAAIhuB,aAWjB4Q,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,IAAN,IAAe/oB,GAAIs7C,EAAYy0B,UAAU/vE,GAAI6oB,QAAQ,KArBjE,IAAoByyB,IAuT2CxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEzCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAlXvC,SAAsB+rC,GAEpB,IAAIq3B,EAAY,GAChBA,EAAUxoE,KAAKmxC,EAAYy0B,UAAU/vE,IACrC2yE,EAAUxoE,KAAKmxC,EAAYi3B,UAAUvyE,IAErC+5C,EAAY44B,GACZ51C,IAAkB,GA2W0BhnB,CAAaoG,KAAMrnB,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,cAsC1DqX,EAAOtX,EAAAC,EAAAC,cAAC87E,GAAD,CAAkBK,KAAMI,EAAWH,SAAUx9E,EAAMw9E,SAAU9oD,MAAOlc,EAAMhM,MAAOxM,EAAMwM,MAAOs5C,WAxdhF,SAAAlyC,GAAA,OAAAqoE,GAAAnoE,MAAAC,KAAA1B,YAwduGkzC,YAlc/G,WAClBtoC,GAAQ,MAicwJ,6CCvvB9J+B,GAAcld,YAbL,SAAA3E,GAAK,MAAK,CACvB+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,QAIVK,CAAmB,SAAA9B,GACrC,IAAQI,EAAyCJ,EAAzCI,SAAUM,EAA+BV,EAA/BU,QAAS+X,EAAsBzY,EAAtByY,QAAYssC,EAAvCxkD,OAAAC,EAAA,EAAAD,CAAiDP,EAAjDg/E,IACA,OACE99E,EAAAC,EAAAC,cAAC4d,GAAA,EAADze,OAAAe,OAAA,CAAgB2uC,mBAAiB,EAAC/vC,UAAWQ,EAAQxB,MAAU6lD,GAC7D7jD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAAMC,GACzBqY,EACCvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,QAAQxC,UAAWQ,EAAQovC,YAAa74B,QAASwB,GACtEvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,QAKJ8d,GAAgBnd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJ5B,QAASH,EAAMI,QAAQ,MAFLuE,CAIlBmjD,MAEE3lC,GAAgBxd,YAAW,SAAA3E,GAAK,MAAK,CACzC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,MAHLuE,CAKlBojD,MAEW,SAAS+5B,GAAqBj/E,GAC3C,IAAAqU,EAAwBJ,IAAMK,SAAStU,EAAM00B,OAA7CngB,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GACA2I,GADA3I,EAAA,GACwCN,IAAMK,SAAS,KAAvD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOgiE,EAAP/hE,EAAA,GAAqBgiE,EAArBhiE,EAAA,GAKMe,EAAc,WAClBle,EAAMulD,eAKFhrB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCgzE,EAAgB5+E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK2+E,GAAN,GAAA3+E,OAAAM,EAAA,EAAAN,CAAA,GAAqB+Y,EAAOnN,OAEzCm5C,EAAmB,SAAAhsC,GAAI,OAAI,SAAAqC,GAC/BwjE,EAAgB5+E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACX2+E,GADU,GAAA3+E,OAAAM,EAAA,EAAAN,CAAA,GAEZ+Y,EAAOqC,EAAEC,OAAOzP,WAInB,OACEjL,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQlG,QAASyF,EAAaY,kBAAgB,0BAA0BtG,KAAMA,GAC5EtX,EAAAC,EAAAC,cAACg+E,GAAD,CAAahzE,GAAG,0BAA0BqM,QAASyF,GACjDle,EAAMwM,OAERtL,EAAAC,EAAAC,cAACi+E,GAAD,CAAex2C,UAAQ,GACvB3nC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAMiQ,OACfsK,SAAUggB,EAAmB,SAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,eACNsX,WAAS,EACTI,SAAU+qC,EAAkB,eAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTI,SAAU+qC,EAAkB,aAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBpzB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASja,EAAM0Q,SACf6J,SAAUggB,EAAmB,UAE7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAK9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACf7Y,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACI5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBlzB,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAAS,CAAC,CAACpX,MAAO,EAAEC,KAAK,QAAQ,CAACD,MAAM,EAAEC,KAAK,eAC/Ck4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,qBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAM9DpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTI,SAAU+qC,EAAkB,aAC5Bl5C,GAAG,oBACHtJ,KAAK,gBAMT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,gBACNsX,WAAS,EACTI,SAAU+qC,EAAkB,gBAC5Bl5C,GAAG,oBACHtJ,KAAK,kBAOX5B,EAAAC,EAAAC,cAACk+E,GAAD,KACAp+E,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ4P,WAAS,EAACpP,QAASiH,GAA3B,UAGEhd,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QA1JjB,WACjBjX,EAAM8lD,WAAWo5B,IAyJuCxgF,MAAM,WAAxD,WCzLV,IAAM6oB,GAAU,CACd,CAAEnb,GAAI,QAASvJ,MAAO,SACtB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,YAAavJ,MAAO,aAC1B,CAAEuJ,GAAI,aAAcvJ,MAAO,cAE3B,CAAEuJ,GAAI,aAAcvJ,MAAO,cAC3B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,gBAAiBslB,MAAO,WAIrCjrB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAiJLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACA5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAExD,CACA9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAE/ClmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAjFX,IAyFMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,QAET0oD,SAAU,CACRzmD,SAAU,GAEZ45B,YAAa,CACX57B,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,WAyaA2R,gBAraI,SAACjzB,GACJkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACkClJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAkB+V,GAAlB9V,EAAA,GAAAA,EAAA,IACAC,EAAsCtJ,IAAMK,SAAS,GAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACQhM,GADRiM,EAAA,GAAAA,EAAA,GAC+BvJ,IAAMwB,WAAWzB,IAAxCzC,oBACRoM,EAAgC1J,IAAMK,SAAStU,EAAMypD,QAArD7rC,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO2vB,EAAP1vB,EAAA,GACA4V,GADA5V,EAAA,GAC4B3J,IAAMK,SAAS,KAA3Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO+rD,EAAP9rD,EAAA,GAAe+rD,EAAf/rD,EAAA,GACAC,EAAwCzf,IAAMK,SAAS,IAAvDqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOqoD,EAAPpoD,EAAA,GAAqBqoD,EAArBroD,EAAA,GAGAE,EAA0B5f,IAAMK,SAAS,OAAzCwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC8B7f,IAAMK,SAAS,eAA7C2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsChgB,IAAMK,SAAS,KAArD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACsClgB,IAAMK,SAAS,KAArDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAoBmrD,GAApBlrD,EAAA,GAAAA,EAAA,IACAC,EAAgCvgB,IAAMK,SAAS,IAA/CmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAO4U,EAAP3U,EAAA,GAAiB0xB,EAAjB1xB,EAAA,GACAG,EAAsC3gB,IAAMK,SAAS,IAArDugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAAOinD,EAAPhnD,EAAA,GAAoBinD,EAApBjnD,EAAA,GAEAG,EAA8B/gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,GACJszE,KAAK,IAHPxqD,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAOG,EAAPD,EAAA,GAAgBE,GAAhBF,EAAA,GAKAU,GAAwB3hB,IAAMK,UAAS,GAAvCuhB,GAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,GAAA,GAAOpd,GAAPqd,GAAA,GAAa5Y,GAAb4Y,GAAA,GAUAE,GAA4C9hB,IAAMK,UAAS,GAA3D0hB,GAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,GAAA,GAAOmT,GAAPlT,GAAA,GAAuBmT,GAAvBnT,GAAA,GAnC4B,SAAAsT,KAAA,OAAAA,GAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2C5B,SAAAC,EAA4B23B,GAA5B,IAAA5jB,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACMkT,EAAY,CACd6jB,UAAWJ,GAFf72B,EAAAE,KAAA,EAIQzS,EAAM+d,OAAO0rB,OAAO,CAAEC,SAAU3hC,GAAoB4d,cAAatH,KAAK,SAAAC,MAMzEG,MAAM,SAAAC,MAVX,OAaEyqB,IAAkB,GAbpB,wBAAA52B,EAAAmB,SAAA9B,OA3C4BkC,MAAAC,KAAA1B,WAAA,SAAA4pE,KAAA,OAAAA,GAAA17E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmE5B,SAAAsV,EAAyB04D,GAAzB,IAAA1oD,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACMwkB,EAAW,IACP,SAAe0oD,EAAcv0D,MAAMtoB,KAC3Cm0B,EAAQ,aAAmB0oD,EAAcvB,YACzCnnD,EAAQ,WAAiB0oD,EAActB,UACvCpnD,EAAQ,WAAiB0oD,EAAcnzC,UAAU3pC,MACjDo0B,EAAQ,YAAkBj3B,EAAMypD,OAChCxyB,EAAQ,OAAa0oD,EAAcjxE,OAAOnC,UAC1C0qB,EAAQ,WAAiB0oD,EAAc33B,UACvC/wB,EAAQ,cAAoB0oD,EAAc/xC,aAC1C3W,EAAQ,OAAY,EAVtB/P,EAAAzU,KAAA,GAYQlB,EAAmB,sBAAuB,GAAI0lB,GAZtD,QAcE7B,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzChY,IAAQ,GACR2iE,KAhBF,yBAAA14D,EAAAxT,SAAAuT,OAnE4BnT,MAAAC,KAAA1B,WAAA,SAwGbutE,KAxGa,OAAAC,GAAA/rE,MAAAC,KAAA1B,WAAA,SAAAwtE,KAAA,OAAAA,GAAAt/E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAwG5B,SAAA6T,IAAA,IAAAyR,EAAAprB,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cACMwkB,EAAW,CACbqW,SAAUttC,EAAMypD,QAFpB/jC,EAAAjT,KAAA,EAKuBlB,EAAmB,wBAAyB,GAAI0lB,GALvE,OAKMprB,EALN6Z,EAAAnS,KAMEksE,EAAe5zE,EAAS0xE,MAN1B,wBAAA73D,EAAAhS,SAAA8R,OAxG4B1R,MAAAC,KAAA1B,WAAA,SAAA00C,KAAA,OAAAA,GAAAxmD,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuI5B,SAAAoU,EAA0B3Z,GAA1B,OAAAsF,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cAAAwT,EAAAxT,KAAA,EAIQlB,EAAmB,sBAAuB,GAAIguE,GAJtD,OAMEnqD,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KACzC2qD,KAPF,wBAAA35D,EAAAvS,SAAAqS,OAvI4BjS,MAAAC,KAAA1B,WAiH5B8L,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MAAOhF,GAAagf,UAAW,MAGxDzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAEJ02D,EAAe12D,EAAWnU,KAAKvE,mBAAmBV,OAClDgwE,EAAgB52D,EAAWnU,KAAKxC,wBAAwBzC,SAGzDyS,MAAM7L,QAAQzB,QAChB,IAEHgN,oBAAU,WACRyhE,MACC,CAACtyC,IAwDJ,OACEpsC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACunC,GAAD,CACEn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT5X,KAAMm4B,EACNL,UAtMsB,SAAAp1B,GAAA,OAAA21B,GAAAx1B,MAAAC,KAAA1B,YAuMtBqjB,SA/JyB,WAC7ByT,IAAkB,IA+JdP,OAAQM,KACVhoC,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQw4B,aACvBh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACkkB,QAAQ,OAAO5+B,WAAW,SAASc,UAAWQ,EAAQqlD,SAAUxoD,QAAS,GACvF2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MACjBH,EAAMwM,QAcXtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAG1Z,MAAO,CAAE+6B,UAAW,UACpCl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUyB,QAAQ,YAAY0W,KAAK,QAAQxW,MAAO,CAAEgyB,aAAc,GAAID,YAAa,IAAMnb,QAjMzF,WACtBgG,IAAQ,KAgMA,cAON/b,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAKxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAEtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAA+6C,GAAM,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAER,eAAjBonD,EAAOnkD,MAA2C,GAAlB7C,EAAMu+E,SAAgB,aAAe,gBAAkBv3B,EAAOnkD,WAKvG3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAO9E,GACP2wB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAaniB,EAAKg4C,wBAAwBxxB,aAC/D9R,UAAW,CAAEuhC,WAAclnD,EAAMypD,OAAQ80B,SAAYv+E,EAAMu+E,WAEzD,SAAA/sE,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAKhB,OALqCK,EAAdgkB,QAKnBrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACK/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACJvF,EAAKg4C,wBAAwBj9C,MAAMC,IAAI,SAACsc,EAAKrE,GAAN,OACtChjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAI9b,UACjBvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAI9b,UAGPvL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAQI,EAAI7Z,QAE7BxN,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAafjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIsgC,cAIT3nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAafjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIugC,YAOT5nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAEbgN,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAKlL,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACvCrb,QAAQ,WACR+Z,OAAO,QACPrX,MAAM,aACNsX,WAAS,EACTja,UAAWQ,EAAQ8mD,YACnBr7C,MAAOozE,EAAOx2B,MACdxuC,UA/JNjB,EA+JkC,gBA/J1B,SAAAqC,GAChC6jE,EAAUj/E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLg/E,GADI,GAAAh/E,OAAAM,EAAA,EAAAN,CAAA,GAEN+Y,EAAOqC,EAAEC,OAAOzP,WA6JWC,GAAG,oBACHtJ,KAAK,eAEL5B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIwgC,QAkCb7nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACfjnB,EAAAC,EAAAC,cAAC22B,GAAA52B,EAAD,CAAQmiB,OAAO,uBACZiF,EAAIiqB,YAIPrd,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAClClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,KAAO8qB,MAAM,QACtCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAhXrB,SAAA9H,GAAA,OAAAkzC,GAAAjzC,MAAAC,KAAA1B,WAgX4Bq+B,CAAWnoB,EAAInc,MAAKlL,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAE5CD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAlThDyZ,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,EAAOyqD,KAAK,OAkTkBx+E,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAG3CD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,OAAO9nB,MAAO,CAAEhD,MAAO,MACtC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAhS7B+rC,EAgS+Cn/B,EA/RjEi3D,EAAUj/E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLg/E,GADI,IAEPx2B,MAAOrB,EAAYqB,MACnBvW,UAAW,IAAIhuB,aAWjB4Q,GAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAYt7C,GAAI6oB,QAAQ,KAfvD,IAAoByyB,IAgSqDxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,OAEzCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OA5T/CwqC,EA4TmE59B,EA5T3Cnc,SACxB+8B,IAAkB,KA2TuDjoC,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,SAtNjD,IAAAmY,KA+NCpY,EAAAC,EAAAC,cAAA,WAAM,uBA8B1BoX,GAAOtX,EAAAC,EAAAC,cAAC69E,GAAD,CAAsBhvE,OAAQ4rE,EAAanrE,SAAUqrE,EAAcrnD,MAAOlc,GAAMhM,MAAO,0BAA2Bs5C,WA/ZpG,SAAAlyC,GAAA,OAAAqoE,GAAAnoE,MAAAC,KAAA1B,YA+Z2HkzC,YAjYnI,WAClBtoC,IAAQ,MAgY4K,SCtrBlL+rC,GAAW9rD,YAAW,SAAAC,GAAK,MAAK,KAEzB2iF,GAActkD,YAAW,SAAAx7B,GACpC,IAAAqU,EAAoCJ,IAAMK,SAAS,GAAnDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOxH,EAAP0H,EAAA,GAAmBwrE,EAAnBxrE,EAAA,GACA2I,EAAoCjJ,IAAMK,SAAS,GAAnD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO8kD,EAAP7kD,EAAA,GAAmB6iE,EAAnB7iE,EAAA,GAGMzc,EAAUsoD,KA6BhB,OAvBA7qC,oBAAU,WACR,IAAMtM,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAE3H,MvMm8Bb,uQuMn8BgCga,UAAW,MAGvDzS,MAAMrB,EAAKsT,GACR9G,KAAK,SAAAC,GAAG,OAAIA,EAAI9K,SAChB6K,KAAK,SAAA+G,GAGJ46D,EAAcz/E,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTyhE,GADQ,IAEX3xD,QAAU+U,EAAWnU,KAAKnE,iBAAiBd,WAI9CyS,MAAM7L,QAAQzB,QAChB,IAIIjQ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GACzB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAEvBhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,4BAKAe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACH+N,WAAS,EACTszB,kBAAgB,EAChBvtC,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAAAC,GAAM,OAAKA,EAAOxX,KAAM,OAAQwX,EAAO/N,UAAU,MACjE0N,QAAS+nD,EAAW3xD,QACpBkK,SA7Ce,SAAC5E,EAAOxJ,GACzC4zE,EAAc5zE,EAAMI,YA6CFyuB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0B+R,UAAU,EAAMpsC,KAAM,kBAMtEzM,EAAa3L,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAObtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAEvBhlB,EAAAC,EAAAC,cAAC6+E,GAAD,CAASx2B,OAAQ58C,KAOjB3L,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAE7BhlB,EAAAC,EAAAC,cAAC8+E,GAAD,CAAUz2B,OAAQ58C,KAQZ3L,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAE/BhlB,EAAAC,EAAAC,cAAC++E,GAAD,CAAW3zE,MAAO,iCAAkCi9C,OAAQ58C,EAAY2wE,SAAU,KAQ1Et8E,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAE/BhlB,EAAAC,EAAAC,cAAC++E,GAAD,CAAW3zE,MAAO,uCAAwCi9C,OAAQ58C,EAAY2wE,SAAU,KAShFt8E,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAE7BhlB,EAAAC,EAAAC,cAACg/E,GAAD,CAAc5zE,MAAO,gCAAiC+xE,SAAU,EAAG90B,OAAQ58C,KAQrE3L,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAE7BhlB,EAAAC,EAAAC,cAACg/E,GAAD,CAAc5zE,MAAO,mCAAoC+xE,SAAU,EAAG90B,OAAQ58C,MAElE,YAOD2uB,YAAWskD,IC7JR5iF,YAAW,iBAAO,CAClCgC,KAAM,8BCqBFD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CACLv+B,SAAU,MAEZyY,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAWgxB,EAAoBlxB,EAApBkxB,OAAW5wB,EAA9BC,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCqgF,IAEM3/E,EAAUzB,KAEhB0V,EAA4CL,mBAAS,IAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GAuCY9T,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAU9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAM,eACNyoB,OACE/zB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACA/X,MAAM,UACNyB,QAAQ,aAFR,yBASJe,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAEEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,SAEAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAjB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGiN,EAAO5I,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAAAwlB,GAAK,OAC3EvwB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KAOEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAaiP,EAAM3uB,MACnB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAUsJ,EAAMniB,OAEjCpO,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACjBjnB,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,oBACrBxB,EAAAC,EAAAC,cAACixE,GAAAlxE,EAAD,OAEAD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,oBACvBxB,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,eAUhBD,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOgI,EAAOxe,OACdyW,aAvFe,SAACxT,EAAO8R,GAC/BC,EAAQD,IAuFA4B,oBApFsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QAoFpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGKkN,gCClKTn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GAEvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9BkjE,YAAa,CACXz/D,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvBma,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9B27B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,QAAQ3zB,MAIzC4hE,sBAAuB,CACrBniE,gBAAiBpB,EAAMwB,QAAQgiE,OAAO1/B,OAIxC7H,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,IAG5BqjE,sBAAuB,CACrBpjE,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,GAC1BoZ,YAAaxZ,EAAMI,QAAQ,IAG7BsjE,aAAc,CACZniE,MAAOvB,EAAMwB,QAAQgiE,OAAO1/B,UA6iBjB6/B,GAziBM,SAAA9gE,GACnB,IAqE0BsZ,EArElBpZ,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BsgF,IACA9mD,EAAsCvlB,IAAMwB,WAAWob,IAA/CL,EAARgJ,EAAQhJ,WAAYI,EAApB4I,EAAoB5I,cACpBjc,EAAsCL,mBAAS,IAA/CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO4rE,EAAP3rE,EAAA,GAAoB4rE,EAApB5rE,EAAA,GACAG,EAAsCT,mBAAS,IAA/CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwCV,mBAAS,KAAjDgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOsrE,EAAPnrE,EAAA,GAAqBorE,EAArBprE,EAAA,GACAykB,EAA0CzlB,mBAAS,IAAnD0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAO4mD,EAAP3mD,EAAA,GAAsB4mD,EAAtB5mD,EAAA,GAEAC,EAAwC3lB,mBAAS,IAAjD4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC4B5lB,mBAAS,SAArC8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACoC9lB,mBAAS,SAA7CgmB,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAEA4mC,GAFA3mC,EAAA,GAAAA,EAAA,GAE4BhmB,oBAAS,IAArC4sD,EAAA3gE,OAAAiU,EAAA,EAAAjU,CAAA0gE,EAAA,GAEMvgE,GAFNwgE,EAAA,GAAAA,EAAA,GAEgBjiE,MAEhBkiE,EAAgC7sD,mBAAS,GAAzC8sD,EAAA7gE,OAAAiU,EAAA,EAAAjU,CAAA4gE,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACwC9sD,mBAAS,IAAIkQ,OAArD88C,EAAA/gE,OAAAiU,EAAA,EAAAjU,CAAA8gE,EAAA,GAAOwf,EAAPvf,EAAA,GAAqBwf,EAArBxf,EAAA,GACAG,EAA8CntD,mBAASusE,GAAvDnf,EAAAnhE,OAAAiU,EAAA,EAAAjU,CAAAkhE,EAAA,GAAOsf,EAAPrf,EAAA,GAAwBsf,EAAxBtf,EAAA,GA0DMuf,EAAoB,SAAA3nE,GAAI,OAAI,SAAAqC,GAChCiV,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,GAAAjwB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOqC,EAAEC,OAAOzP,WAmCrB,OACEjL,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAM,wBAClBtL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQw4B,aAChCh4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC9C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACxBhlB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC7C2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTI,UA5DgBjB,EA4DY,cA5DJ,SAAAqC,GAChCiV,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,GAAAjwB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOqC,EAAEC,OAAOzP,WA0DXC,GAAG,cACHtJ,KAAK,cACLqJ,MAAOqkB,EAAW0wD,YAClBr+E,MAAM,iBAEZ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACxBhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTI,SAlDyB,SAAAoB,GACjCilE,EAAiBjlE,EAAEC,OAAOzP,MAAMq0D,gBAkDxBp0D,GAAG,cACHtJ,KAAK,cACJqJ,MAAOw0E,EACR99E,MAAM,oBAGZ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEtBhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTI,SAlEwB,SAAAoB,GAChC+kE,EAAgB/kE,EAAEC,OAAOzP,MAAMq0D,gBAkEvBp0D,GAAG,cACHtJ,KAAK,cAELD,MAAM,oBAGZ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,GAAImM,GAAI,IAcbhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACH8uB,UAAQ,EACRuuC,UAAQ,EACRjuB,aAAchrB,EAAW+vD,YACzBp0E,MAAOnM,EAAMy1B,OAASjF,EAAW+vD,YAAcA,EAC/CrgF,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAAS,GACRM,SA/HY,SAAC5E,EAAOxJ,GACxCykB,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEX2wD,aAAeh1E,KAEjBq0E,EAAer0E,IA2HI6uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,GAAY2gB,EAAY,CAAE/W,eAGvE1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,WAU1BjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACxBhlB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTinE,WAAS,EACThqD,KAAK,IACL7c,SAAU0mE,EAAkB,sBAC5B70E,GAAG,cACHtJ,KAAK,cACNqJ,MAAOqkB,EAAW6wD,mBACjBx+E,MAAM,yBAMZ3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACtBhlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQI,KAAK,QAAQ1W,QAAQ,YAC7B8W,QAAS,SAAAtB,GAAK,OAvHnBib,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEX2wD,aAAevhB,GAAO,GAAG+gB,EAAcF,WAEzCD,EAAe5gB,GAAO,GAAG+gB,EAAcF,KAoHlCvgF,UAAWQ,EAAQwZ,QAFnB,sBAcAhZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC9C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GACrC2D,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACAC,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACGC,QAASmR,EAAW8wD,WACpB/mE,SAlKc,SAAAjB,GAAI,OAAI,SAAAqC,GAC/BiV,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,GAAAjwB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOqC,EAAEC,OAAOyD,YA+JAkiE,CAAiB,cAC5Bz+E,KAAK,WACLpE,MAAM,YAGV6nB,eAAe,QAEf1jB,MAAM,kCAGN3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAEvC2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEwhC,cAAY,EACZ1iC,QAAQ,MAFV,kBASMe,EAAAC,EAAAC,cAACwxE,GAAA,EAAD,CAAal0E,MAAM,UAAUgE,aAAW,iCAEvC1C,EAAM28B,WAAW1wB,IAAI,SAAAqO,GAAM,OAE5BpZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAACtB,GAAD,OAtOP,SAACA,EAAO2E,GAE3BsW,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEXsiD,aAAgBx4D,KAkOkBqxD,CAAYh2D,EAAM2E,IAASna,QAASqwB,EAAWsiD,cAAgBx4D,EAAS,YAAc,YAAcA,OAKrG,kBAA5BkW,EAAWsiD,cAAgE,KAA5BtiD,EAAWsiD,aAAuB5xE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GACjI2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GAC9B2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACFta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,WACHtJ,KAAK,WACLD,MAAM,yBACN0X,SAAU0mE,EAAkB,cAC5B90E,MAAOqkB,EAAWgxD,cAV+D,KAanFtgF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC9C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GAElC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,iBACN0X,SAAU0mE,EAAkB,mBAC5B90E,MAAOqkB,EAAWixD,mBAGW,eAA5BjxD,EAAWsiD,aAAiC5xE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GAChF2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACAta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,yBACN0X,SAAU0mE,EAAkB,sBAC5B90E,MAAOqkB,EAAWkxD,sBAER,MAKZxgF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GACnC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACT/N,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,gBACN24C,aAAa,IACb1a,WAAW,kCACXvmB,SAAU0mE,EAAkB,UAC5B90E,MAAOqkB,EAAWmxD,UAyClBzgF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GACpC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPK,SAAU0mE,EAAkB,cAC5B9mE,WAAS,EACThO,MAAOqkB,EAAWoxD,WAClBx1E,GAAG,gBACHtJ,KAAK,gBACLD,MAAM,gBACNi+B,WAAW,oCAgCb5/B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAEpC2D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACR+Z,OAAO,QACPK,SAAU0mE,EAAkB,YAC5B9mE,WAAS,EACT/N,GAAG,gBACHtJ,KAAK,gBACLqJ,MAAOqkB,EAAWqxD,SAClBh/E,MAAO,yBAIT3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,IA6F5C2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAEhD2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GAEnC2D,EAAAC,EAAAC,cAAC0gF,GAAA,EAAD,CACEj/E,MAAM,aACNsX,WAAS,EACTs2B,aAAa,WACbtkC,MAAOnM,EAAMy1B,OAASjF,EAAWuxD,UAAYlB,EAC7ClnC,QAAS,IAAIn1B,KACbjK,SAjfiB,SAAAgI,GACvBu+D,EAAgBv+D,GAEhBqO,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEXuxD,UAAax/D,SA+ePrhB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG3oB,QAAS,GACnC2D,EAAAC,EAAAC,cAAC0gF,GAAA,EAAD,CACNj/E,MAAM,WACNsX,WAAS,EACTs2B,aAAa,WACbtkC,MAAOnM,EAAMy1B,OAASjF,EAAWwxD,QAAUjB,EAC3CpnC,QAASknC,EACToB,oBAAoB,EACpB1nE,SAngBwB,SAAAgI,GACxBy+D,EAAmBz+D,GACnBqO,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEXwxD,QAAWz/D,+BCxFbtjB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACVq5B,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9By7B,QAAS,CACPz6B,gBAAiBiD,IAAOC,KAAK,MAE/By3B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBiD,IAAOC,KAAK,MAE/B23B,YAAa,CACXlf,QAAS,IAEX3C,QAAS,CACP/Z,UAAWL,EAAMI,QAAQ,GACzBD,QAASH,EAAMI,QAAQ,IAGzB87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,OAqYfy1E,GAhYU,SAAAhzE,GAAS,IAAAwhD,EACxBthD,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BkiF,IAEMxhF,EAAUzB,KAChBu6B,EAAoDvlB,IAAMwB,WAAWob,IAA7DL,EAARgJ,EAAQhJ,WACR7b,GADA6kB,EAAoB5I,cAApB4I,EAAmC7I,cACLrc,mBAAS,KAAvCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+b,EAAP9b,EAAA,GAAgB8kB,EAAhB9kB,EAAA,GACAG,EAA4BT,oBAAS,GAArCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO4kB,EAAP3kB,EAAA,GAAe4kB,EAAf5kB,EAAA,GACAG,EAAkCb,oBAAS,GAA3CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO0kB,EAAPvkB,EAAA,GAAkBwkB,EAAlBxkB,EAAA,GACAykB,EAAgCzlB,mBAAS,CACvC,WACA,cACA,WACA,cACA,YACA,SACA,WAPF0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAWAE,GAXAD,EAAA,GAAAA,EAAA,GAWgC1lB,mBAAS,IAAzC4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACsC5lB,mBAAS,aAA/C8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACyC9lB,mBAAS,IAAIkQ,OAAtD8V,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAQME,GARND,EAAA,GAAAA,EAAA,GAQ2B,SAAAhhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzC,GAAY,cAATmN,EACH,CACE,IAAIkhB,EAAe,GACnBruB,EAAMsuB,QAAQ,SAAAC,GACZF,EAAajkB,KAAKmkB,EAAQ53B,QAGzB03B,EAAaG,QAAQ,SAAW,EAEjCf,GAAU,GAGVA,GAAU,GAGTY,EAAaG,QAAQ,YAAc,EAEpCb,GAAa,GAGbA,GAAa,GAGfJ,EAAWn5B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNmwB,GADK,GAAAnwB,OAAAM,EAAA,EAAAN,CAAA,GAEP+Y,EAAOnN,QAsBd,OAFAgS,oBAAU,aACP,IAEDjd,EAAAC,EAAAC,cAACw5B,EAAA,EAADr6B,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAI9BgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACxBrW,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAEvc,QAAS,GAC1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACK5N,GAAG,mBACH8uB,UAAQ,EACR/uB,MAAOnM,EAAMy1B,OAASjF,EAAW1kB,SAAW4kB,EAAQ5kB,SACpD5L,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCmX,QAASuW,EAAWG,cAAcrgB,mBAClCiK,SAAUggB,EAAmB,YAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAMxBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GACrBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,GAADwnC,EAAA,CACAp1C,GAAG,mBACH8uB,UAAQ,EAEP/uB,MAAOukB,EAAQngB,cAChBrQ,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcpgB,cAClCgK,SAAUggB,EAAmB,iBAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,OATjCvC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAUOxhD,EAAMy1B,OAASjF,EAAWjgB,cAAgBmgB,EAAQngB,eAVzDhQ,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,aAYY,SAACr1C,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,gBAd5E3jB,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,cAiBa,SAAA1vC,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,OAvBTqnC,KA+BHtgD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEpBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACThO,MAAOnM,EAAMy1B,OAASjF,EAAWpgB,UAAYsgB,EAAQtgB,UACrD6J,QAASuW,EAAWG,cAAcvgB,UAClCmK,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQnBwf,EACCz4B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAExBhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcjgB,SAClC6J,SAAUggB,EAAmB,YAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCqJ,MAAOukB,EAAQhgB,SACfsqB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOC,KAEV0f,EACD34B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAchhB,aAAa1D,IAAI,SAAAqO,GAAM,OAAIA,EAAO1J,cACpE2J,SAAUggB,EAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAO1J,aAAiBqqB,EAAY,CAAE/W,eAGnF1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAOT,KACXjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAc/iB,YAClC2M,SAAUggB,EAAmB,eAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCqJ,MAAOnM,EAAMy1B,OAASjF,EAAW5iB,YAAc8iB,EAAQ9iB,YAE/CotB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACpB9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAchgB,UAClC4J,SAAUggB,EAAmB,aAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCqJ,MAAOnM,EAAMy1B,OAASjF,EAAW7f,UAAY+f,EAAQ/f,UAErDqqB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,aACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcrjB,OAClCiN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCqJ,MAAOnM,EAAMy1B,OAASjF,EAAWljB,OAASojB,EAAQpjB,OAElD0tB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQpBjZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAQa,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAEZhlB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACD5N,GAAG,mBACH8uB,UAAQ,EAERh7B,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTF,QAASuW,EAAWG,cAAcxjB,OAClCoN,SAAUggB,EAAmB,UAC7BlgB,eAAgB,SAAAC,GAAM,OAAIA,EAAOxX,MACjCqJ,MAAOnM,EAAMy1B,OAASjF,EAAWrjB,OAASujB,EAAQvjB,OAElD6tB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACZ9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACVhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAG5E1J,YAAa,SAAA1I,GAAM,OACnB5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACIwQ,EADJ,CAEAjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,SAQXna,EAAMy1B,OAAS,KAAOv0B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC7C,UAAU,GAAI49B,UAAU,WAExEl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMq7B,QAAQ3K,IAAUhyB,MAAM,UAAUyB,QAAQ,aAAvE,kCCxaJlB,ICOY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACNob,OAAQ,CACNtZ,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQq6B,SACnC75B,QAAS,OACTC,WAAY,cACZ9B,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,OACVzX,SAAU,OACV8X,OAAQ,UACRuhB,QAAS,CACPv7B,WAAYP,EAAMI,QAAQ,KAI9B27B,YAAY,CACV/5B,QAAS,OACTC,WAAY,eAGd+5B,eAAgB,CACd56B,gBAAiBpB,EAAMwB,QAAQ8zB,SAEjC2G,YAAa,CACXlf,QAAS,IAEXA,OAAQ,CACN1c,UAAWL,EAAMI,QAAQ,IAE3B87B,cAAe,CACb77B,UAAWL,EAAMI,QAAQ,GACzBG,WAAYP,EAAMI,QAAQ,ODtCZL,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNu+B,aAAc,CACZjgC,UAAWL,EAAMI,QAAQ,IAE3B+9B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,QAG7B,SAASmjB,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAIvC,SAASmiF,GAAuBniF,GAC7C,IAAMU,EAAUzB,KAChB0V,EAA4BL,mBAAS,IAArCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACoCN,mBAAS,KAA7CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0kB,EAAPzkB,EAAA,GAAmBotE,EAAnBptE,EAAA,GACAG,EAAgCb,mBAAS,IAAzCgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOgiB,EAAP7hB,EAAA,GAAiB+sD,EAAjB/sD,EAAA,GACAykB,EAAwBzlB,mBAAS,IAAjC0lB,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOg6C,EAAP/5C,EAAA,GAAag6C,EAAbh6C,EAAA,GACAC,EAAkC3lB,oBAAS,GAA3C4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAOg6C,EAAP/5C,EAAA,GAAkBg6C,EAAlBh6C,EAAA,GACO3oB,EAAsB0C,IAAMwB,WAAWzB,IAAvCzC,mBACP8C,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAoCjJ,IAAMK,SAAS,IAAnD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOw4D,EAAPv4D,EAAA,GAAmBklE,EAAnBllE,EAAA,GACAgd,EAAgC7lB,oBAAS,GAAzC8lB,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GAAO6B,EAAP5B,EAAA,GAAiB6B,EAAjB7B,EAAA,GAEA/c,EAAuCpJ,IAAMK,SAAS,CACpDuU,QAAQ,uBACRxM,SAAS,YAFXiB,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOk4D,EAAPj4D,EAAA,GAIMY,GAJNZ,EAAA,GAIoB,SAAC3H,EAAOkL,GACX,cAAXA,GAGJ5D,GAAQ,KAEV85B,EAAqD9iC,IAAMwB,WAAWob,IAA9DL,EAARumB,EAAQvmB,WAAYI,EAApBmmB,EAAoBnmB,cAApBmmB,EAAmC5mC,eACnC,SAASmyE,EAAgBC,GAEvBH,EAAcG,GACdrO,GAAa,GA1BqC,SAAAvgE,GAAAqvD,EAAAlvD,MAAAC,KAAA1B,WA4BlD6kE,CAAcqL,GA5BoC,SAAAjM,IAAA,OAAAA,EAAA/1E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA+BpD,SAAAC,IAAA,IAAAkhE,EAAA77C,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEEyhE,GAAa,GACTpB,EAAe,EAGjBA,EAF6B,kBAA5BtiD,EAAWsiD,aAEG,EAEiB,eAA5BtiD,EAAWsiD,aAED,EAGC,GAEb77C,EAAW,IACP,YAAkBzG,EAAW0wD,YACrCjqD,EAAQ,aAAmBzG,EAAW2wD,aACtClqD,EAAQ,YAAkBzG,EAAW6wD,mBACrCpqD,EAAQ,WAAiBzG,EAAW8wD,WACpCrqD,EAAQ,aAAmB67C,EAC3B77C,EAAQ,SAAezG,EAAWixD,gBAClCxqD,EAAQ,YAAkBzG,EAAWkxD,mBACrCzqD,EAAQ,YAAkBzG,EAAWgxD,WACrCvqD,EAAQ,OAAazG,EAAWmxD,OAChC1qD,EAAQ,WAAiBzG,EAAWoxD,WACpC3qD,EAAQ,SAAezG,EAAWqxD,SAClC5qD,EAAQ,WAAiBwC,EACzBxC,EAAQ,UAAgBzG,EAAWuxD,UACnC9qD,EAAQ,QAAczG,EAAWwxD,QAEjCpvE,QAAQyR,IAAIhR,KAAKC,UAAU2jB,IA/B7B1kB,EAAAE,KAAA,GAgCuBlB,EAAmB,iBAAkB,GAAI0lB,GAAU,GAhC1E,QAAA1kB,EAAAgB,KAiCE2gE,GAAa,GACbj3D,GAAQ,GAERkD,OAAOC,SAAS,uBApClB,yBAAA7N,EAAAmB,SAAA9B,OA/BoDkC,MAAAC,KAAA1B,WAAA,SAAA2wD,IAAA,OAAAA,EAAAziE,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAuEpD,SAAAsV,EAA6B9a,GAA7B,IAAAN,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,aAEkB,GAEE,GAJpByU,EAAAzU,KAAA,EAMuBlB,EAAmB,mBAAoB,GAAIpF,GAAO,GANzE,OAMMN,EANNqb,EAAA3T,KAOC8uD,EAAYx2D,EAASsrB,UACrB68C,EAAQnoE,EAASkoE,MACjBG,GAAa,GATd,wBAAAhtD,EAAAxT,SAAAuT,OAvEoDnT,MAAAC,KAAA1B,WAAA,SAAAmjE,IAAA,OAAAA,EAAAj1E,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAoFpD,SAAA6T,EAAgCuvD,GAAhC,IAAA99C,EAAAprB,EAAA22E,EAAA1P,EAAA2P,EAAA9lD,EAAA+lD,EAAAtyE,EAAAuyE,EAAAx7B,EAAAy7B,EAAAh1E,EAAAi1E,EAAAl0D,EAAAm0D,EAAA31E,EAAA41E,EAAAz1E,EAAA01E,EAAA,OAAAtxE,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAEMwkB,EAAW,CACb7qB,GAAK2oE,GAHTrvD,EAAAjT,KAAA,EAKuBlB,EAAmB,cAAe,GAAI0lB,GAAU,GALvE,OAKMprB,EALN6Z,EAAAnS,KAMMivE,EAAa32E,EAASA,SACtBinE,EAAe0P,EAAW1P,aAC1B2P,EAAkB,aACF,IAAjB3P,EAED2P,EAAkB,QACM,IAAjB3P,IAEP2P,EAAkB,iBAGhB9lD,EAAa6lD,EAAWpM,mBAAmBtqE,SAC3C42E,EAAqB,GACtB/lD,GAEHnM,EAAWG,cAAcrgB,mBAAmBmqB,QAAQ,SAAAqC,GAC/CH,EAAWhC,QAAQmC,EAAOxtB,QAAU,GAErCozE,EAAmBnsE,KAAKumB,KAIxB1sB,EAAYoyE,EAAWpM,mBAAmBhmE,UAC1CuyE,EAAoB,GACrBvyE,GAEHogB,EAAWG,cAAcvgB,UAAUqqB,QAAQ,SAAAwoD,GACtC7yE,EAAUuqB,QAAQsoD,EAAO3zE,QAAU,GAEpCqzE,EAAkBpsE,KAAK0sE,KAKvB97B,EAAeq7B,EAAWpM,mBAAmB7lE,cAC7CqyE,EAAwB,GACzBz7B,GAEH32B,EAAWG,cAAcpgB,cAAckqB,QAAQ,SAAAyoD,GACzC/7B,EAAaxsB,QAAQuoD,EAAW5zE,QAAU,GAE5CszE,EAAsBrsE,KAAK2sE,KAK7Bt1E,EAAc40E,EAAWpM,mBAAmBxoE,YAC1Ci1E,EAAsB,GACvBj1E,GAEH4iB,EAAWG,cAAc/iB,YAAY6sB,QAAQ,SAAA0oD,GACvCv1E,EAAY+sB,QAAQwoD,EAAc7zE,QAAU,GAE9CuzE,EAAoBtsE,KAAK4sE,KAK3Bx0D,EAAa6zD,EAAWpM,mBAAmBzlE,UACzCmyE,EAAqB,GACtBn0D,GAEH6B,EAAWG,cAAchgB,UAAU8pB,QAAQ,SAAA2oD,GACrCz0D,EAAWgM,QAAQyoD,EAAa9zE,QAAU,GAE5CwzE,EAAmBvsE,KAAK6sE,KAK1Bj2E,EAASq1E,EAAWpM,mBAAmBjpE,OACvC41E,EAAiB,GAClB51E,GAEHqjB,EAAWG,cAAcxjB,OAAOstB,QAAQ,SAAA4oD,GAClCl2E,EAAOwtB,QAAQ0oD,EAAS/zE,QAAU,GAEpCyzE,EAAexsE,KAAK8sE,KAKpB/1E,EAASk1E,EAAWpM,mBAAmB9oE,OACrC01E,EAAiB,GAClB11E,GAEHkjB,EAAWG,cAAcrjB,OAAOmtB,QAAQ,SAAA6oD,GAClCh2E,EAAOqtB,QAAQ2oD,EAASh0E,QAAU,GAEpC0zE,EAAezsE,KAAK+sE,KAIxB1yD,EAAcrwB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTiwB,GADQ,IAEX0wD,YAAasB,EAAW1/E,KACxBy9E,YAAaiC,EAAWe,cACxBlC,mBAAqBmB,EAAWj4D,YAChC+2D,WAAYkB,EAAWgB,cACvB1Q,aAAc2P,EACdjB,WAAW,EACXE,mBAAmBc,EAAWiB,aAC9B9B,OAAQa,EAAWkB,cACnB9B,WAAWY,EAAWmB,SACtBlC,gBAAgBe,EAAWoB,gBAC3B/B,SAAUW,EAAWqB,eACrB9B,UAAWS,EAAWsB,UACtB9B,QAASQ,EAAWuB,WACpBj4E,SAAU42E,EACVtyE,UAAWuyE,EACXpyE,cAAgBqyE,EAChBh1E,YAAci1E,EACdv1E,OAAQ01E,EACR71E,OAAQ41E,KAEV9mD,GAAY,GAzHd,yBAAAvW,EAAAhS,SAAA8R,OApFoD1R,MAAAC,KAAA1B,WAmOpD,OApBA8L,oBAAU,WAeR,OARGne,EAAMogB,SAASC,UAAYrgB,EAAMogB,SAASC,SAAS2c,MAAM,KAAKtqB,OAAS,GAEvE2vE,EAAeriF,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,IAxNH,SAAAppB,GAAA4hE,EAAA1hE,MAAAC,KAAA1B,WAyNhDykE,CAAiB92E,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,KAGpDf,GAAY,GAEP,YACK,IAEX,IAGD/6B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACStV,EAAAC,EAAAC,cAAC+hE,GAAD,CAAY32D,MAAM,GAAGu/C,OAAQkoB,IAC7B/yE,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IAAMvI,QAASyF,GAC5Dhd,EAAAC,EAAAC,cAAC4iF,GAAD,CAAOvrE,QAASyF,EAAa7B,SAAUk5D,EAAal5D,UACjDk5D,EAAa1sD,UAGpB3nB,EAAAC,EAAAC,cAACivC,GAAA,EAAD,CAAyBC,MAAOC,MAEhCrvC,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAENwvB,EAAW96B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACXtV,EAAAC,EAAAC,cAAC6iF,GAAD,CAAcxuD,SAAQigD,EAA2Bx1E,UAAWQ,EAAQ+8B,aAAcd,WAAY,CAAC,eAAe,aAAa,mBACQz7B,EAAAC,EAAAC,cAAC8iF,GAAD,CAAkBzuD,SAAQigD,EAA2Bx1E,UAAWQ,EAAQ+8B,aAAcpC,QAASinD,IACjOnrD,EAASzkB,OAAS,EAAIxR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,SAAGtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC7C,UAAU,GAAI49B,UAAU,WAE7El6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAClCw0B,EAASzkB,OADV,iBACgCqhE,EAAKrhE,OADrC,UAKQgjE,EAGM,KAHQx0E,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAC7C,UAAU,GAAI49B,UAAU,WAEnEl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBA7P2B,kBAAAq/D,EAAAxiE,MAAAC,KAAA1B,WA6PtBilE,IAAkB54E,MAAM,UAAUyB,QAAQ,aAAhE,mBATiB,KAWf,MACE,QEtRd,IAAMlB,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACnCoiC,SAAU,CACRrlB,OAAQ/c,EAAMI,QAAQ,OAGf4mF,GAAkB3oD,YAAW,SAAAx7B,GACtC,IAAMU,EAAUzB,KAEhBwgC,EAAiCC,aAASvvB,GAAexE,OAAjDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAEvB,OAAGD,EAAgBhQ,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAE1DpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAGjBF,EAAAC,EAAAC,cAACo2E,GAAD,CAAiBrrE,MAAO,CAAE8E,OAAMrF,OAAQuE,GAAevE,OAAQkkB,WAAa,kBAE5E5uB,EAAAC,EAAAC,cAAC+gF,GAAcniF,gCCnBbf,GAAY/B,YAAW,iBAAO,CAClCgC,KAAM,MA0FO4+B,GAvFA,SAAA99B,GACb,IAAQE,EAAuBF,EAAvBE,UAAcI,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BokF,IACAzvE,EAA8CL,oBAAS,GAAvDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE0CN,mBAAS,KAAnDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAiBMrU,GAjBNsU,EAAA,GAAAA,EAAA,GAiBgB/V,MAEhB,OACEiC,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEza,WAAW,WACX0a,WAAS,EACTkkB,QAAQ,gBACRzgC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EACP1a,WAAW,aAChBsb,MAAI,EAAGX,GAAI,EAAGxc,QAAS,IA0B1B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACVxZ,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAI,oBAEhDh/B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,kBAAIjX,EAAMk+B,UAHrB,0CCtCJj/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GACN0gB,aAAc,CACZjJ,YAAaxZ,EAAMI,QAAQ,IAE7Bga,QAAS,CACPja,QAAS,GAEX6gC,MAAO,CAEL7c,UAAW,QAEbjJ,QAAS,CACP/a,QAASH,EAAMI,QAAQ,EAAG,GAC1B8B,eAAgB,eAId++B,GAAU,SAAAp+B,GACd,IAAQE,EAA+BF,EAA/BE,UAAsBI,GAASN,EAApBkxB,OAAnB3wB,OAAAC,EAAA,EAAAD,CAAuCP,EAAvCqkF,KACAhwE,EAAiCJ,IAAMK,SAAS,GAAhDC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO8e,EAAP5e,EAAA,GAAiB6e,EAAjB7e,EAAA,GACA2I,EAAqCjJ,IAAMK,SAAS,GAApD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOmW,EAAPlW,EAAA,GACIse,GADJte,EAAA,GACc+V,eAEd7V,EAA8BpJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAIAE,GAJAD,EAAA,GAAAA,EAAA,GAI2CrJ,IAAMK,UAAS,IAA1DkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO2rB,EAAP1rB,EAAA,GAAsB2rB,EAAtB3rB,EAAA,GAGAG,EAAqC1J,IAAMK,SAAS,IAApDsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAEMjd,GAFNkd,EAAA,GAAAA,EAAA,GAEgB3e,MAChBu0B,EAAgCvf,IAAMK,SAAS,IAA/Cmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO4V,EAAP3V,EAAA,GAEA9e,GAFA8e,EAAA,GAE4Cnf,mBAAS,KAArDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACwBN,mBAAS,IAAjCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0S,EAAPzS,EAAA,GAAa0S,EAAb1S,EAAA,GACAG,EAAsCb,mBAAS,GAA/CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwS,EAAPrS,EAAA,GAAoBsS,EAApBtS,EAAA,GApBuB,SAiCT+zB,EAjCS11B,EAAAC,GAAA,OAAA01B,EAAAx1B,MAAAC,KAAA1B,WAAA,SAAAi3B,IAAA,OAAAA,EAAA/oC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiCxB,SAAAC,EAA4B23B,EAAY/T,GAAxC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEOkT,EAAW,CACb6jB,UAAUJ,GAHf72B,EAAAE,KAAA,EAKSzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAAS7hC,GAAsB8d,cAAYtH,KAAK,SAAAC,GAEhE,OAANA,GACDkX,MAGD/W,MAAM,SAAAC,MAXZ,OAcGyqB,GAAkB,GAdrB,wBAAA52B,EAAAmB,SAAA9B,OAjCwBkC,MAAAC,KAAA1B,WAiEvB,IAGMs3B,EAAyB,WAC7BR,GAAkB,IArEG,SA+ERE,EA/EQjT,EAAAC,GAAA,OAAAuT,EAAA91B,MAAAC,KAAA1B,WAAA,SAAAu3B,IAAA,OAAAA,EAAArpC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA+EvB,SAAA6T,EAA4B+jB,EAAY/T,GAAxC,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAGMkT,EAAW,CACb6jB,UAAUJ,GAJd1jB,EAAAjT,KAAA,EAMQzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAAS7hC,GAAsB8d,cAAYtH,KAAK,SAAAC,GAEhE,OAANA,GACDkX,MAGD/W,MAAM,SAAAC,MAZX,OAeEyqB,GAAkB,GAfpB,wBAAAzjB,EAAAhS,SAAA8R,OA/EuB1R,MAAAC,KAAA1B,WAiGvB,SAASw3B,EAAal0B,EAAMm0B,EAAWtU,IAjGhB,SAAAc,EAAAC,EAAAC,GAAAuT,EAAAj2B,MAAAC,KAAA1B,WAmGrB23B,CAAmBF,EAAUn0B,EAAMiG,OAAOyD,QAASmW,GAnG9B,SAAAuU,IAAA,OAAAA,EAAAxpC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAsGvB,SAAAoU,EAAkC3Z,EAAGkf,EAASkK,GAA9C,IAAA7P,EAAA,OAAAjU,GAAAvQ,EAAAmR,KAAA,SAAA2T,GAAA,cAAAA,EAAAzT,KAAAyT,EAAAxT,MAAA,cACMkT,EAAW,CACb2+D,UAAUl4E,EACV2Y,SAASuG,GAHbrF,EAAAxT,KAAA,EAKQzS,EAAM+d,OAAO0rB,OAAO,CAACC,SAASziC,GAAkB0e,cAAYtH,KAAK,SAAAC,GAE5D,OAANA,GACDkX,MAED/W,MAAM7L,QAAQzB,OAVnB,wBAAA8U,EAAAvS,SAAAqS,OAtGuBjS,MAAAC,KAAA1B,WAoHX7Q,IAAOC,KAAK,KACbD,IAAO88B,OAAO,KACZ98B,IAAO+8B,MAAM,KACd/8B,IAAOhD,IAAI,KAGvB,OACE0C,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAG9BgB,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,KACE15B,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CACEhyB,MAAOxM,EAAMwM,QAEftL,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MACAv9B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,CAAax+B,UAAWQ,EAAQ6W,SAE5BrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy9B,OACtBj9B,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMkqC,aAAaj+B,IAAI,SAACsc,EAAKrE,GAAN,OAClBhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAY+F,OAKtBrnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACE/iB,EAAAC,EAAAC,cAACm2B,GAAA,EAAD,CACE5rB,MAAOlF,GACP+wB,YAAa,SAAAvmB,GAAI,OAAImiB,EAAcniB,EAAKszE,YAAY9sD,aACpD9R,UAAW,CAAE+R,KAAQ/P,EAAagQ,OAAUtE,IAExC,SAAA7hB,GAAuC,IAApCP,EAAoCO,EAApCP,KAAeE,GAAqBK,EAA9BN,QAA8BM,EAArBL,OAAOqkB,EAAchkB,EAAdgkB,QAIrB,OAAIrkB,EACKjQ,EAAAC,EAAAC,cAAA,WAAM+P,GAGXF,EACO/P,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACNtV,EAAAC,EAAAC,cAACunC,GAAD,CACGn8B,MAAO,0BACPw8B,YAAa,MACboB,YAAa,KACbvhB,QAAS,GACT5X,KAAMm4B,EACN5T,QAASA,EACTuT,UAAWM,EACX3T,SAAUiU,EACVf,OAAQM,IACXj4B,EAAKszE,YAAYv4E,MAAMsc,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,EAAKrE,GAAN,OACvFhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACCtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAIzlB,MACjB5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAChBI,EAAIzlB,MAEK5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAChBI,EAAIi8D,aAAej8D,EAAIi8D,aAAa9xE,OAAS6V,EAAIk8D,MAElDvjF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAChBI,EAAIgC,aAELrpB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAChBI,EAAIm8D,KADL,MACcn8D,EAAIo8D,SAElBzjF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QAAjB,IAAyBjnB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACnBrc,OAAO0lB,EAAIxD,SAAW,IAEtB5F,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CAAQC,QAASkJ,EAAIxD,SAAWjiB,KAAK,WACrCyX,SAAU,SAAC5E,GAAD,OAAWk0B,EAAal0B,EAAM4S,EAAInc,GAAGopB,SAIjEt0B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASlR,QAAS,SAAC0E,GAAD,OA3KnD+rC,EA2KqEn/B,OAzKzFkT,EAAQllB,KAAR,mBAAAtV,OAAgCymD,EAAYt7C,KAF5C,IAAoBs7C,GA2KmFrnD,MAAS,CAAChD,MAAO,KAClF6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,KAASvV,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,aAUlBD,EAAAC,EAAAC,cAAA,WAAM,wBAS3BF,EAAAC,EAAAC,cAACu9B,GAAA,EAAD,CAAaz+B,UAAWQ,EAAQ2X,SAC9BnX,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACErmB,UAAU,MACVumB,MAAOiK,EACPhK,aA1Je,SAACxT,EAAO8R,GAC/BC,EAAQD,IA0JA4B,oBArJsB,SAAA1T,GAC9BiS,EAAejS,EAAMiG,OAAOzP,QAqJpBsb,KAAMA,EACNE,YAAaA,EACbsB,mBAAoB,CAAC,EAAG,GAAI,UAcxCmV,GAAQ78B,aAAe,CACrB2vB,OAAQ,IAGK+B,oBAAWmL,IC9RpBn/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,GAGNo8B,QAAS,CACP99B,UAAWL,EAAMI,QAAQ,OAGzBmtC,GAAU,CACZ,OACA,OACA,cACA,iBACA,SACA,WAEWk6C,GAAyBppD,YAAW,SAAAx7B,GAC/C,IAAAqU,EAA0BJ,IAAMK,UAAS,GAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOqgB,EAAPngB,EAAA,GAAcogB,EAAdpgB,EAAA,GACAI,EAAoCL,mBAAS,IAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO+hB,EAAP9hB,EAAA,GAAmBkqB,EAAnBlqB,EAAA,GACMlU,EAAUzB,KAgBhB,OACEiC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACAtV,EAAAC,EAAAC,cAAC03B,GAAD,CACA54B,UAAWQ,EAAQxB,KACnBsN,MAAM,0BAGNtL,EAAAC,EAAAC,cAACyjF,GAAD,CAAS5pE,SApBX,SAAqBE,GAEnB2jB,EAAc3jB,IAkBkB+iB,MAhBlC,WAEEvJ,GAAS,MAeTzzB,EAAAC,EAAAC,cAAC0jF,GAAD,CACAt4E,MAAO,mBACJtM,UAAWQ,EAAQ46B,QACnB4O,aAAcQ,GACfhU,WAAYA,EACZhC,MAAOA,EACPgB,SAnBJ,WAEEf,GAAS,UC/BP11B,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,MAE5BsuC,WAAY,CACVh4B,aAAc5a,EAAMI,QAAQ,OAoEjBwnF,GAhEQ,SAAC/kF,GACtB,IAAMU,EAAUzB,KAEhB,OACEiC,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMxY,EAAMwY,KACZC,QAASzY,EAAMyY,QACfqG,kBAAiB,mBAEjB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CACE5S,GAAG,kBACH6jC,mBAAiB,EACjB/vC,UAAWQ,EAAQxB,MAEnBgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,GAAAc,OAA6BjB,EAAMsZ,KAAnC,eACCtZ,EAAMyY,QACLvX,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,QACXxC,UAAWQ,EAAQovC,YACnB74B,QAASjX,EAAMyY,SAEfvX,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,OAEA,MAEND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,CAAe/e,UAAWQ,EAAQxB,MAChB,WAAfc,EAAMsZ,MACLpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQqvC,WACnBltC,MAAO,OACPC,KAAK,OACLqX,WAAS,EACTha,QAAQ,WACRgM,MAAOnM,EAAM0a,KAAK5X,KAClByX,SAAUva,EAAMowC,WAElBlvC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,EAAQqvC,WACnBltC,MAAO,mBACPC,KAAK,iBACLqX,WAAS,EACTha,QAAQ,WACRgM,MAAOnM,EAAM0a,KAAKsqE,eAClBzqE,SAAUva,EAAMowC,YAIN,WAAfpwC,EAAMsZ,MACLpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,wDAKJH,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAepf,UAAWQ,EAAQxB,MAChCgC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAM0wC,WAAYhyC,MAAM,UAAUyB,QAAQ,aAA3D,GAAAc,OACqB,WAAfjB,EAAMsZ,KAAoB,OAAS,WAEzCpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASjX,EAAMyY,SAAvB,aC1DKwsE,GAAY,SAACjlF,GAAU,IAAA6yC,EAAAqyC,EAAAC,EAClC1lD,EAA0CC,aAAS/2B,IAA3CuI,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAME,EAAvBsuB,EAAuBtuB,MAAOqkB,EAA9BiK,EAA8BjK,QAC9BnhB,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAwBjJ,IAAMK,WAA9B6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO5D,EAAP6D,EAAA,GAAa+zB,EAAb/zB,EAAA,GACAE,EAAwBpJ,IAAMK,SAAS,CAAExR,KAAM,GAAIkiF,eAAgB,KAAnE1nE,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO3C,EAAP4C,EAAA,GAAa6zB,EAAb7zB,EAAA,GAOMS,EAASC,eAETC,EAAQhK,IAAMwB,WAAW8G,IAEzB9D,EAAU,WACdwE,GAAQ,GACRi0B,EAAQ,MACRC,EAAQ,CAAEruC,KAAM,GAAIkiF,eAAgB,MAkItC,OACE9jF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,aACAe,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE7vC,MAAO,CAAE3B,MAAO,QAChBuY,QAAS,WACPgG,GAAQ,GACRi0B,EAAQ,SAGVhwC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,iBACbtL,EAAAC,EAAAC,cAAC8wC,GAAA/wC,EAAD,SAIND,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,QACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,oBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,cACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,mBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACG/S,GACChQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,SAAU7qB,QAAQ,QAC9C4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,GACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAML4P,GAA8C,KAAlC,OAAJA,QAAI,IAAJA,OAAA,UAAA4hC,EAAA5hC,EAAMuiC,qBAAN,IAAAX,OAAA,EAAAA,EAAqB7mC,MAAM0G,SAClCxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+BAIL4P,IACK,OAAJA,QAAI,IAAJA,OAAA,UAAAi0E,EAAAj0E,EAAMuiC,qBAAN,IAAA0xC,OAAA,EAAAA,EAAqBl5E,MAAM0G,QAAS,IADrC,OAECzB,QAFD,IAECA,OAFD,UAAAk0E,EAECl0E,EAAMuiC,qBAFP,IAAA2xC,OAAA,EAECA,EAAqBn5E,MAAMC,IAAI,SAACyO,GAAD,OAC7BxZ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAK5X,MAER5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjCod,EAAKsqE,gBAER9jF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK4d,WAAWhV,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QACjC+lB,KAAO3I,EAAK83B,WAAWlvB,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QAClC4D,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS3E,EAAKqK,SACdxK,SAAU,kBA7GVnO,EA6G6BsO,EAAKtO,GA7G9B2Y,EA6GkCrK,EAAKqK,cA5G/DhH,EACG0rB,OAAO,CACNC,SAAUgF,GACV/oB,UAAW,CACTvZ,KACAsO,KAAM,CAAEqK,UAAWA,EAAUytB,UAAW,IAAIhuB,SAG/CnG,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAzBQ,IAACpQ,EAAI2Y,GA8GJjiB,KAAK,SACLpE,MAAM,aAGVwC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,QAClC4D,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,QACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,QACbtL,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,UACNuY,QAAS,WACPi6B,EAAQ,UACRj0B,GAAQ,GACRk0B,EAAQz2B,KAGVxZ,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,UACbtL,EAAAC,EAAAC,cAACqxC,GAAAtxC,EAAD,iBAUpBD,EAAAC,EAAAC,cAACgkF,GAAD,CACE5sE,KAAMA,EACNc,KAAMA,EACNoB,KAAMA,EACN01B,SAtQW,SAACz6B,GAChB,IAAA4vD,EAAsB5vD,EAAMiG,OAAtB9Y,EAANyiE,EAAMziE,KAAMqJ,EAAZo5D,EAAYp5D,MACZglC,EAAQ5wC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKma,GAAN,GAAAna,OAAAM,EAAA,EAAAN,CAAA,GAAauC,EAAOqJ,MAqQvBukC,WAxPa,WAEjB,GADAh2B,EAAI,eAAqBie,SAASje,EAAKsqE,gBAC1B,SAAT1rE,EAAiB,CACnB,IAAIlN,EAAKsO,EAAKtO,UACPsO,EAAKtO,UACLsO,EAAK4d,iBACL5d,EAAK83B,iBACL93B,EAAKi4B,WACZj4B,EAAI,UAAgB,IAAI8J,KACxBzG,EACG0rB,OAAO,CACNC,SAAUgF,GACV/oB,UAAW,CACTvZ,KACAsO,UAGH2D,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAIA,QAATlD,GACFyE,EACG0rB,OAAO,CACNC,SAAU8E,GACV7oB,UAAW,CACTjL,OACA4d,UAAW,IAAI9T,KACfguB,UAAW,IAAIhuB,QAGlBnG,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,wBAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZzB,GAAQ,GACRgB,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAIA,WAATlD,GACFyE,EACG0rB,OAAO,CACNC,SAAUkF,GACVjpB,UAAW,CACTvZ,GAAIsO,EAAKtO,MAGZiS,KAAK,SAACC,GACDA,IACF7F,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEPgZ,OAGH/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZjG,IACAwF,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,2BA8JT/D,QAASA,gNCxQXkE,GAAa1I,IAAM2I,WAAW,SAAoB5c,EAAO6c,GAC7D,OAAO3b,EAAAC,EAAAC,cAAC0b,GAAA,EAADvc,OAAAe,OAAA,CAAOyb,UAAU,KAAKF,IAAKA,GAAS7c,MAGvCf,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ,EACR5c,QAASH,EAAMI,QAAQ,IAEzBuyC,YAAa,CACXhd,SAAU,WACV3W,MAAOhf,EAAMI,QAAQ,GACrBwe,IAAK5e,EAAMI,QAAQ,GACnBmB,MAAOvB,EAAMwB,QAAQ8C,KAAK,MAE5B4jF,SAAU,CACRvhE,YAAa3mB,EAAMwB,QAAQ8zB,QAAQ3zB,KACnCU,aAAc,MACd8lF,UAAW,aACXC,SAAU,QACVloF,MAAO,WAETmoF,OAAQ,CACNC,KAAM,SAENnoF,QAAS,SAEXooF,UAAW,CACTloF,UAAWL,EAAMI,QAAQ,IAE3BooF,OAAQ,CACNzrE,OAAQ/c,EAAMI,QAAQ,IACtB4B,QAAS,UAEXV,KAAM,CACJC,MAAO6/B,KAAM,SAIF,SAASqnD,GAAY5lF,GAAO,IAAA6lF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnC9nF,EAAUzB,KACVuZ,EAAsBxY,EAAtBwY,KAAM0F,GAAgBle,EAAhBke,YACZ7J,GAA0BJ,IAAMK,SAAS,IAAzCC,GAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,GAAA,GAAOm/C,GAAPj/C,GAAA,GAAck0E,GAAdl0E,GAAA,GACMwJ,GAASC,eACTC,GAAQhK,IAAMwB,WAAW8G,IA8C/B,OAnBAtI,IAAMkK,UAAU,WAed,OAdIne,EAAMoM,IACR2R,GACGpS,MAAM,CACLA,MAAOhC,GACPgc,UAAW,CACTvZ,GAAIpM,EAAMoM,IAEZ8pB,YAAa,iBAEd7X,KAAK,SAACC,GACLmqE,GAASnqE,KAEVG,MAAM,SAACC,GAAD,OAAS9L,QAAQyR,IAAI3F,KAEzB,WACL+pE,GAAS,MAEV,CAACzoF,EAAMoM,KAERlL,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEnG,KAAMA,EACNoG,oBAAqBjC,GACrBkC,aAAW,EACXpG,QAASyF,GACTY,kBAAgB,2BAChBC,mBAAiB,iCACjB1H,SAAU,KACV8C,WAAS,GAETjZ,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CACE5S,GAAG,2BACH6jC,mBAAiB,EACjB/vC,UAAWQ,EAAQxB,MAEnBgC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,gBACC+d,IACChd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,QACXxC,UAAWQ,EAAQovC,YACnB74B,QAASiH,IAEThd,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,SAKRD,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,WACsBtM,IAAb,OAAL6gD,SAAK,IAALA,QAAA,EAAAA,GAAOtiD,WAAP,OAA+BsiD,SAA/B,IAA+BA,QAA/B,EAA+BA,GAAOtiD,WACtChQ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACiD,UAAU,MAAMihB,QAAQ,SAAS5+B,WAAW,UAC1D8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAAI1Z,MAAO,CAAE+6B,UAAW,WACrCl6B,EAAAC,EAAAC,cAACwV,GAAA,EAAD,SAIA,OAAL48C,SAAK,IAALA,QAAA,EAAAA,GAAOviD,OACN/P,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTkkB,QAAQ,aACR5+B,WAAW,aACX7B,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GAEb7Y,EAAAC,EAAAC,cAAA,YAAUlB,UAAWQ,EAAQ2kF,UAC3BnkF,EAAAC,EAAAC,cAAA,UAAQlB,UAAWQ,EAAQ8kF,QAA3B,gBACAtkF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5X,MAAM,aACN24C,aAAY,OAAEgY,SAAF,IAAEA,QAAF,UAAAqyB,EAAEryB,GAAOviD,YAAT,IAAA40E,OAAA,UAAAC,EAAED,EAAa6C,YAAf,IAAA5C,OAAA,UAAAC,EAAED,EAAmB6C,YAArB,IAAA5C,OAAA,EAAEA,EAAyB6C,UACvCzuE,WAAS,EACTha,QAAQ,WACRwzC,WAAY,CACV+R,UAAU,GAEZxlD,UAAWQ,EAAQglF,YAErBxkF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5X,MAAM,YACN24C,aAAY,OAAEgY,SAAF,IAAEA,QAAF,UAAAwyB,EAAExyB,GAAOviD,YAAT,IAAA+0E,OAAA,UAAAC,EAAED,EAAa0C,YAAf,IAAAzC,OAAA,UAAAC,EAAED,EAAmB0C,YAArB,IAAAzC,OAAA,EAAEA,EAAyB2C,SACvC1uE,WAAS,EACTha,QAAQ,WACRwzC,WAAY,CACV+R,UAAU,GAEZxlD,UAAWQ,EAAQglF,YAErBxkF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5X,MAAM,YACN24C,aAAY,OAAEgY,SAAF,IAAEA,QAAF,UAAA2yB,EAAE3yB,GAAOviD,YAAT,IAAAk1E,OAAA,UAAAC,EAAED,EAAauC,YAAf,IAAAtC,OAAA,UAAAC,EAAED,EAAmBuC,YAArB,IAAAtC,OAAA,EAAEA,EAAyBvtC,SACvC3+B,WAAS,EACTha,QAAQ,WACRwzC,WAAY,CACV+R,UAAU,GAEZxlD,UAAWQ,EAAQglF,YAErBxkF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5X,MAAM,QACN24C,aAAY,OAAEgY,SAAF,IAAEA,QAAF,UAAA8yB,EAAE9yB,GAAOviD,YAAT,IAAAq1E,OAAA,UAAAC,EAAED,EAAaoC,YAAf,IAAAnC,OAAA,UAAAC,EAAED,EAAmBoC,YAArB,IAAAnC,OAAA,EAAEA,EAAyBjmD,MACvCpmB,WAAS,EACTha,QAAQ,WACRwzC,WAAY,CACV+R,UAAU,GAEZxlD,UAAWQ,EAAQglF,YAErBxkF,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE5X,MAAM,aACN24C,aAAY,OAAEgY,SAAF,IAAEA,QAAF,UAAAizB,EAAEjzB,GAAOviD,YAAT,IAAAw1E,OAAA,UAAAC,EAAED,EAAaiC,YAAf,IAAAhC,OAAA,UAAAC,EAAED,EAAmBiC,YAArB,IAAAhC,OAAA,EAAEA,EAAyB5tE,OACvCoB,WAAS,EACTha,QAAQ,WACRwzC,WAAY,CACV+R,UAAU,GAEZxlD,UAAWQ,EAAQglF,YAErBxkF,EAAAC,EAAAC,cAAC0nF,GAAA,EAAD,CAAWvgE,KAAG,GACZrnB,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACEC,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAAunE,EAAA,OAAEpzB,SAAF,IAAEA,QAAF,UAAAqzB,EAAErzB,GAAOviD,YAAT,IAAA41E,OAAA,UAAAC,EAAED,EAAa8B,YAAf,IAAA7B,OAAA,EAAEA,EAAmBtmD,uBAArB,IAAAomD,KACPlwE,UAAQ,IAGZ6P,eAAe,QACf1jB,MAAM,mBAER3B,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACEC,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAO,QAAA0nE,EAAA,OAAEvzB,SAAF,IAAEA,QAAF,UAAAwzB,EAAExzB,GAAOviD,YAAT,IAAA+1E,OAAA,UAAAC,EAAED,EAAa2B,YAAf,IAAA1B,OAAA,EAAEA,EAAmBvmD,wBAArB,IAAAqmD,KACPrwE,UAAQ,IAGZ6P,eAAe,QACf1jB,MAAM,uBAGJ,OAAL2wD,SAAK,IAALA,QAAA,UAAA0zB,EAAA1zB,GAAOviD,YAAP,IAAAi2E,OAAA,UAAAC,EAAAD,EAAawB,YAAb,IAAAvB,OAAA,UAAAC,EAAAD,EAAmBhvD,eAAnB,IAAAivD,OAAA,EAAAA,EAA4Bp7E,MAAM0G,QAAS,EAC1CxR,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE/C,QAAS,IAAvB,OACGk2D,SADH,IACGA,QADH,UAAA6zB,EACG7zB,GAAOviD,YADV,IAAAo2E,OAAA,UAAAC,EACGD,EAAaqB,YADhB,IAAApB,OAAA,UAAAC,EACGD,EAAmBnvD,eADtB,IAAAovD,OAAA,EACGA,EAA4Bv7E,MAAMC,IAAI,SAACyO,EAAMwJ,GAAU,IAAA6kE,EACtD,OACE7nF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAG,OAAEuE,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,IACzBlL,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,iBACiB+jB,EAAQ,EADzB,KAC8B,KAE9BhjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SACjB,GAAAc,OAAA,QAAA8nF,EAAA,OAAGruE,QAAH,IAAGA,OAAH,EAAGA,EAAMsuE,kBAAT,IAAAD,IAAA,IAAA9nF,OAAA,OAA4ByZ,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMu4C,UAAlC,KAAAhyD,OAAA,OACCyZ,QADD,IACCA,OADD,EACCA,EAAMuuE,UACLzoB,eAELt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAM44C,aAAakN,eAEtBt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAM64C,aAAaiN,eAEtBt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAM1B,KAAKwnD,eAEdt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAM84C,MAAMgN,eAEft/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAMq8C,QAAQyJ,eAEjBt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,OACGua,QADH,IACGA,OADH,EACGA,EAAM8d,QAAQgoC,eAEjBt/D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,SAApB,cACc,IADd,GAAAc,OAAA,OAEMyZ,QAFN,IAEMA,OAFN,EAEMA,EAAMwuE,YAFZ,OAAAjoF,OAAA,OAE6ByZ,QAF7B,IAE6BA,OAF7B,EAE6BA,EAAM04C,oBAjC5C,KA4CLlyD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJX,GAAI,EACJD,WAAS,EACTkkB,QAAQ,aACR5+B,WAAW,aACX7B,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAA,YAAUlB,UAAWQ,EAAQ2kF,UAC3BnkF,EAAAC,EAAAC,cAAA,UAAQlB,UAAWQ,EAAQ8kF,QAA3B,UACAtkF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,WAIW,IACTzkF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACErC,UAAWQ,EAAQjC,KACnBoE,MAAK,OAAE2wD,SAAF,IAAEA,QAAF,UAAAg0B,EAAEh0B,GAAOviD,YAAT,IAAAu2E,OAAA,UAAAC,EAAED,EAAakB,YAAf,IAAAjB,OAAA,EAAEA,EAAmB12E,OAAOyvD,cACjC3pD,KAAK,QACL1W,QAAQ,eAIde,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,0BAAA1kF,OAAA,QAAAymF,EAAA,OAKMl0B,SALN,IAKMA,QALN,UAAAm0B,EAKMn0B,GAAOviD,YALb,IAAA02E,OAAA,UAAAC,EAKMD,EAAae,YALnB,IAAAd,OAAA,EAKMA,EAAmBuB,mBALzB,IAAAzB,IAKwC,KAG1CxmF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,+BAAA1kF,OAAA,QAAA4mF,EAAA,OAKMr0B,SALN,IAKMA,QALN,UAAAs0B,EAKMt0B,GAAOviD,YALb,IAAA62E,OAAA,UAAAC,EAKMD,EAAaY,YALnB,IAAAX,OAAA,EAKMA,EAAmBqB,uBALzB,IAAAvB,IAK4C,KAG9C3mF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,yBAAA1kF,OAAA,QAAA+mF,EAAA,OAKMx0B,SALN,IAKMA,QALN,UAAAy0B,EAKMz0B,GAAOviD,YALb,IAAAg3E,OAAA,UAAAC,EAKMD,EAAaS,YALnB,IAAAR,OAAA,EAKMA,EAAmBmB,iBALzB,IAAArB,IAKsC,QAM9C9mF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAA,YAAUlB,UAAWQ,EAAQ2kF,UAC3BnkF,EAAAC,EAAAC,cAAA,UAAQlB,UAAWQ,EAAQ8kF,QAA3B,SACAtkF,EAAAC,EAAAC,cAACkoF,GAAA,EAAD,CAAMppF,UAAWQ,EAAQxB,KAAMqqF,OAAO,GAAtC,OACG/1B,SADH,IACGA,QADH,UAAA20B,EACG30B,GAAOviD,YADV,IAAAk3E,OAAA,UAAAC,EACGD,EAAaO,YADhB,IAAAN,OAAA,UAAAC,EACGD,EAAmBoB,kBADtB,IAAAnB,OAAA,EACGA,EAA+Br8E,MAAMC,IAAI,SAACyO,GAAS,IAAA+uE,EAAAC,EAAAC,EAAAC,EAC9CC,EAAU,OAAGnvE,QAAH,IAAGA,OAAH,EAAGA,EAAMo4C,yBACnBg3B,EAAO,OACTpvE,QADS,IACTA,OADS,UAAA+uE,EACT/uE,EAAMo4C,gCADG,IAAA22B,OAAA,EACTA,EAAgC5iE,uBAC9Bwb,EAAK,OAAGynD,QAAH,IAAGA,OAAH,UAAAJ,EAAGI,EAAS/iE,gCAAZ,IAAA2iE,OAAA,EAAGA,EAAmC19E,MAAM,GACrD,OACE9K,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC2oF,GAAA,EAAD,CACE3qF,WAAW,aACX+W,IAAKuE,EAAKgO,WACVshE,gBAAc,EACdhxD,SAAO,GAEP93B,EAAAC,EAAAC,cAAC6oF,GAAA,EAAD,CACE5pF,MAAO,CACLhD,MAAO,MACPO,OAAQ,QAGVsD,EAAAC,EAAAC,cAAC8oF,GAAA/oF,EAAD,CAAO6hB,IAAG,GAAA/hB,OAAA,OAAKohC,QAAL,IAAKA,OAAL,EAAKA,EAAOrb,aAExB9lB,EAAAC,EAAAC,cAAC+oF,GAAA,EAAD,CACE13D,QACEvxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,OAEIua,QAFJ,IAEIA,OAFJ,UAAAivE,EAEIjvE,EAAMo4C,gCAFV,IAAA62B,OAAA,UAAAC,EAEID,EACI9iE,8BAHR,IAAA+iE,OAAA,EAEIA,EAC4B9iE,aAIlC9nB,UACEkC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,gBAISjrE,QAJT,IAISA,OAJT,EAISA,EAAMgO,YAEfxnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,qBAIcjrE,QAJd,IAIcA,OAJd,EAIcA,EAAMi9C,MAGtBz2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,QAFrB,wBAKGkE,QALH,IAKGA,OALH,EAKGA,EAAYO,aAEflpF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACElB,QAAQ,YACRD,UAAWQ,EAAQilF,OACnBtlF,MAAO,IAHT,sBAMGwpF,QANH,IAMGA,OANH,EAMGA,EAAYQ,2BAarCnpF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAA,YAAUlB,UAAWQ,EAAQ2kF,UAC3BnkF,EAAAC,EAAAC,cAAA,UAAQlB,UAAWQ,EAAQ8kF,QAA3B,cACAtkF,EAAAC,EAAAC,cAACkoF,GAAA,EAAD,CAAMppF,UAAWQ,EAAQxB,KAAMqqF,OAAO,GAAtC,OACG/1B,SADH,IACGA,QADH,UAAA80B,EACG90B,GAAOviD,YADV,IAAAq3E,OAAA,UAAAC,EACGD,EAAaI,YADhB,IAAAH,OAAA,UAAAC,EACGD,EAAmB+B,kBADtB,IAAA9B,OAAA,EACGA,EAA+Bx8E,MAAMC,IAAI,SAACyO,GACzC,OACExZ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC2oF,GAAA,EAAD,CACE3qF,WAAW,aACX+W,IAAKuE,EAAKk/C,iBACVowB,gBAAc,EACdhxD,SAAO,GAEP93B,EAAAC,EAAAC,cAACmpF,GAAA,EAAD,KACgB,SAAb7vE,EAAKpB,MAAmBpY,EAAAC,EAAAC,cAACopF,GAAArpF,EAAD,MACX,OAAbuZ,EAAKpB,MAAiBpY,EAAAC,EAAAC,cAACqpF,GAAAtpF,EAAD,MACT,SAAbuZ,EAAKpB,MAAmBpY,EAAAC,EAAAC,cAACspF,GAAAvpF,EAAD,OAE3BD,EAAAC,EAAAC,cAAC+oF,GAAA,EAAD,CACE13D,QAAO,OAAE/X,QAAF,IAAEA,OAAF,EAAEA,EAAMk/C,iBACf56D,UAAWqkB,KAAM,OAAC3I,QAAD,IAACA,OAAD,EAACA,EAAM4d,WAAWhV,OACjC,mCAc1BpiB,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAAS,YA5XC,SAAC0/C,EAAUr9C,GAC3B,IAAMzH,EAAMnQ,EAAU,gBAChByjB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CAAEqjD,SAAUA,EAAUr9C,KAAMA,KAEnDpG,MAAMrB,EAAKsT,GACR9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnH,GAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,4BAEP5J,QAAQyR,IAAIe,KAEb3G,MAAM,SAACC,GACNT,GAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,0BAyWHk6C,CAAS,OAAC12D,QAAD,IAACA,OAAD,EAACA,EAAOoM,GAAI,oBAJzB,wBASAlL,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAASiH,GAAaxf,MAAM,WAAxD,WClbR,IAAIisF,GAAU,CACZC,UAAW,GACXC,eAAgB,CACdC,IAAK,CACH,iDACA,gDAEFC,KAAM,CACJ,kDACA,kDAGJC,yBAA0B,CACxBF,IAAK,CAAC,qDACNC,KAAM,CAAC,uDAETE,QAAS,CACPH,IAAK,CACH,4CACA,8CAEFC,KAAM,CACJ,6CACA,gDAGJG,OAAQ,GACRC,aAAc,CACZL,IAAK,CAAC,kBACNC,KAAM,CAAC,oBAETK,kBAAmB,CACjBN,IAAK,CAAC,kBACNC,KAAM,CAAC,oBAETh7B,QAAS,IAGPs7B,GAAkB,CACpBza,QAAS,CACPryD,OAAQ,CACN+sE,qBAAqB,IAGzBC,eAAgB,CACdhtE,OAAQ,CACN+sE,qBAAqB,EACrBE,cAAe,CACb7oC,QAAQ,KAId8oC,YAAa,CACXltE,OAAQ,CACN+sE,qBAAqB,EACrBE,cAAe,CACb7oC,QAAQ,KAId+oC,UAAW,CACTntE,OAAQ,CACN+sE,qBAAqB,EACrB14B,kCAAmC,CACjC+4B,MAAO,CACLjjE,WAAY,CACVi6B,QAAQ,QAQd1jD,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,MAG1B8zB,OAAQ,CACNnX,OAAQ/c,EAAMI,QAAQ,IAExB40B,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,GAEToB,KAAM,CACJC,MAAO6/B,KAAM,SAIJqtD,GAAgB,SAAC5rF,GAAU,IAAA6rF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAChCzrF,EAAUzB,KAChBoV,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GAUAE,EAA4BpJ,IAAMK,SAAS,WAA3CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOkB,EAAPjB,EAAA,GAAe8uE,EAAf9uE,EAAA,GACAC,EAAwBtJ,IAAMK,SAAS,CACrC+3E,GAAI,aACJtvE,UAAW,SAFbS,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOwZ,EAAPvZ,EAAA,GAAa8uE,EAAb9uE,EAAA,GAIMO,EAASC,eACfyhB,EAAyDC,aACvDj2B,GACA,CACEkc,UAAW,CACTqrB,MAAOrpB,EACPuP,OAAQzP,EAAOE,EACfgK,QAAO,QAAAk6D,EAAElB,GAAQ5zD,EAAKs1D,IAAIt1D,EAAKha,kBAAxB,IAAA8uE,IAAsClB,GAAQ,cAAcI,KACnEwB,UAAW,CAAEx7E,OAAQ,WACrBwN,OAAM,QAAAutE,EAAA,QAAAC,EAAEV,GAAgB9sE,UAAlB,IAAAwtE,OAAA,EAAEA,EAAyBxtE,cAA3B,IAAAutE,IAAqC,QARzC56E,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAME,EAAvBsuB,EAAuBtuB,MAAOqkB,EAA9BiK,EAA8BjK,QAASyb,EAAvCxR,EAAuCwR,cAYjCu7C,EAAoB,SAACrgF,GAAU,IAAAsgF,EAAAC,EACnCN,EAAUjgF,GACVqpB,EAAQ,CACNwb,MAAOrpB,EACPuP,OAAQzP,EAAOE,EACfgK,QAAS,CAAC,kBACV46D,UAAW,CAAEx7E,OAAQ,WACrBwN,OAAM,QAAAkuE,EAAA,QAAAC,EAAErB,GAAgBl/E,UAAlB,IAAAugF,OAAA,EAAEA,EAAwBnuE,cAA1B,IAAAkuE,IAAoC,QAyB9C9uE,EAAwB1J,IAAMK,WAA9BsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOnF,EAAPoF,EAAA,GAAaX,EAAbW,EAAA,GA+DA,OACE1c,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,mBAEFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAiB,kBAAV6f,EAA6B,UAAY,UAChDre,UAAWQ,EAAQ2wB,OACnBpa,QAAS,kBAAMu1E,EAAkB,oBAJnC,mBAQAtrF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAiB,eAAV6f,EAA0B,UAAY,UAC7Cre,UAAWQ,EAAQ2wB,OACnBpa,QAAS,kBAAMu1E,EAAkB,iBAJnC,gBAQAtrF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAiB,aAAV6f,EAAwB,UAAY,UAC3Cre,UAAWQ,EAAQ2wB,OACnBpa,QAAS,kBAAMu1E,EAAkB,eAJnC,cAQAtrF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAiB,IAAV6f,EAAe,UAAY,UAClCre,UAAWQ,EAAQ2wB,OACnBpa,QAAS,kBAAMu1E,EAAkB,aAJnC,OAQAtrF,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,0BACXhE,MAAM,UACNwB,UAAWQ,EAAQ2wB,OACnB3a,SAAoB,eAAV6H,EACVtH,QAAS,kBAxGW,WAAM,IAAA01E,EAClC5uE,EACGpS,MAAM,CACLA,MAAOlC,GACPkc,UAAW,CACTgM,QAAS,CAAC,kBACV46D,UAAW,CAAEx7E,OAAQ,WACrBwN,OAAOhe,OAAAQ,EAAA,EAAAR,CAAA,GAAD,QAACosF,EAAMtB,GAAe,mBAAtB,IAAAsB,OAAA,EAAOA,EAAgCpuE,SAE/C2X,YAAa,iBAEd7X,KACC,SAAA7M,GAIM,IAFyBo7E,EAEzBp7E,EAHJP,KACE47E,iBAAoB7gF,MAGtBuT,aAAe,CACbtO,KAAM27E,EAAY3gF,IAAI,SAACyO,GAAS,IAAAoyE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC9B,MAAO,CACLC,QAASjzE,EAAKtO,GACd4yB,WAAY3b,KAAO3I,EAAK4d,WAAWhV,OAAO,sBAC1Cw1C,aAAcp+C,EAAKyuE,YACnBvF,gBAAiBlpE,EAAKkzE,eACtBvtD,WAAU,QAAAysD,EAAEpyE,EAAKiuE,YAAP,IAAAmE,OAAA,EAAEA,EAAWlE,UACvBtoD,UAAS,QAAAysD,EAAEryE,EAAKiuE,YAAP,IAAAoE,OAAA,EAAEA,EAAWlE,SACtBtoD,MAAK,QAAAysD,EAAEtyE,EAAKiuE,YAAP,IAAAqE,OAAA,EAAEA,EAAWzsD,MAClBstD,UAAS,QAAAZ,EAAEvyE,EAAKiuE,YAAP,IAAAsE,OAAA,EAAEA,EAAWl0E,OACtB+0E,QAAO,OAAEpzE,QAAF,IAAEA,OAAF,UAAAwyE,EAAExyE,EAAM8uE,kBAAR,IAAA0D,OAAA,UAAAC,EAAED,EAAkBlhF,aAApB,IAAAmhF,OAAA,UAAAC,EAAED,EACLlhF,IAAI,SAACuS,GAAD,IAAAq0C,EAAA,cAAOr0C,QAAP,IAAOA,OAAP,UAAAq0C,EAAOr0C,EAAGs0C,gCAAV,IAAAD,OAAA,EAAOA,EAA6Bk7B,eADrC,IAAAX,OAAA,EAAEA,EAEL7vD,KAAK,KACTywD,eAAc,OAAEtzE,QAAF,IAAEA,OAAF,UAAA2yE,EAAE3yE,EAAM8uE,kBAAR,IAAA6D,OAAA,UAAAC,EAAED,EAAkBrhF,aAApB,IAAAshF,OAAA,UAAAC,EAAED,EACZrhF,IAAI,SAACuS,GAAD,IAAAyvE,EAAA,cAAOzvE,QAAP,IAAOA,OAAP,UAAAyvE,EAAOzvE,EAAGs0C,gCAAV,IAAAm7B,OAAA,EAAOA,EAA6Bj7C,sBAD9B,IAAAu6C,OAAA,EAAEA,EAEZhwD,KAAK,KACT2wD,cAAa,OAAExzE,QAAF,IAAEA,OAAF,UAAA8yE,EAAE9yE,EAAM8uE,kBAAR,IAAAgE,OAAA,UAAAC,EAAED,EAAkBxhF,aAApB,IAAAyhF,OAAA,UAAAC,EAAED,EACXxhF,IACA,SAACuS,GAAD,IAAA2vE,EAAAC,EAAA,cACE5vE,QADF,IACEA,OADF,UAAA2vE,EACE3vE,EAAGs0C,gCADL,IAAAq7B,OAAA,UAAAC,EACED,EAA6BtnE,8BAD/B,IAAAunE,OAAA,EACEA,EACItnE,qBAJG,IAAA4mE,OAAA,EAAEA,EAMXnwD,KAAK,QAGb/d,SAAQ,kBAAAve,OAAoBoiB,OAASC,OAAO,eAC5C7D,WAAY,UAIjBhB,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAuDO2vE,KAEfntF,EAAAC,EAAAC,cAACktF,GAAAntF,EAAD,SAIND,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACG/hB,OAAOwvB,KAAK46D,IAAS1+E,IAAI,SAACyO,GAAS,IAAA6zE,EAClC,OACErtF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACNhS,IAAKuE,EACLqX,eACM,OAAJgF,QAAI,IAAJA,OAAA,EAAAA,EAAMs1D,MAAO3xE,IAAb,OAAoBqc,QAApB,IAAoBA,OAApB,EAAoBA,EAAMha,aAG3B,QAAAwxE,EAAA5D,GAAQjwE,UAAR,IAAA6zE,OAAA,EAAAA,EAAezD,KACd5pF,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACEC,QAAY,OAAJ8E,QAAI,IAAJA,OAAA,EAAAA,EAAMs1D,MAAO3xE,EACrBqC,WACM,OAAJga,QAAI,IAAJA,OAAA,EAAAA,EAAMs1D,MAAO3xE,EAAb,OAAoBqc,QAApB,IAAoBA,OAApB,EAAoBA,EAAMha,UAAY,MAExC9F,QAAS,kBAjKf,SAAC+vC,GAAW,IAAAwnC,EAAAC,EAAAC,EACtBrC,EAAkBt1D,EAAlBs1D,GAAItvE,EAAcga,EAAdha,UAUVuvE,EAAQ,CAAED,GAAIrlC,EAAQjqC,UAPlBA,EAFAsvE,GAAMrlC,GACJjqC,GAA0B,OAAbA,EACH,OAKF,QAGdyY,EAAQ,CACNwb,MAAOrpB,EACPuP,OAAQzP,EAAOE,EACfgK,QAAO,QAAA68D,EAAE7D,GAAQ0B,GAAItvE,UAAd,IAAAyxE,IAA4B7D,GAAQ,cAAcI,KACzDwB,UAAW,CAAEx7E,OAAQ,WACrBwN,OAAM,QAAAkwE,EAAA,QAAAC,EAAErD,GAAgB9sE,UAAlB,IAAAmwE,OAAA,EAAEA,EAAyBnwE,cAA3B,IAAAkwE,IAAqC,OAgJRE,CAAUj0E,KAExBA,GACI,OAAJqc,QAAI,IAAJA,OAAA,EAAAA,EAAMs1D,MAAO3xE,EACZxZ,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQyxB,gBACF,UAAhB,OAAJ4E,QAAI,IAAJA,OAAA,EAAAA,EAAMha,WACH,oBACA,oBAEJ,MAGNrC,OAOZxZ,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,MACI/S,GAAW+/B,IAAkBmB,KAAc5c,UAC3Ct0B,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE6vB,QAAS9xC,OAAOwvB,KAAK46D,IAASj4E,OAC9ByV,MAAO,SACP7qB,QAAQ,QAER4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,GACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE6vB,QAAS9xC,OAAOwvB,KAAK46D,IAASj4E,OAC9ByV,MAAO,UAEPjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAML4P,GAAgD,IAApC,OAAJA,QAAI,IAAJA,OAAA,UAAA+6E,EAAA/6E,EAAM47E,wBAAN,IAAAb,OAAA,EAAAA,EAAwBhgF,MAAM0G,SACrCxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE6vB,QAAS9xC,OAAOwvB,KAAK46D,IAASj4E,OAC9ByV,MAAO,UAEPjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BAIL4P,IACK,OAAJA,QAAI,IAAJA,OAAA,UAAAg7E,EAAAh7E,EAAM47E,wBAAN,IAAAZ,OAAA,EAAAA,EAAwBjgF,MAAM0G,QAAS,IADxC,OAECzB,QAFD,IAECA,OAFD,UAAAi7E,EAECj7E,EAAM47E,wBAFP,IAAAX,OAAA,EAECA,EAAwBlgF,MAAMC,IAAI,SAACyO,GAAD,IAAAk0E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAChCnuF,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UAAUzN,EAAKtO,IAChClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,WACV,OAAJzN,QAAI,IAAJA,OAAA,UAAAk0E,EAAAl0E,EAAMiuE,YAAN,IAAAiG,OAAA,EAAAA,EAAYhG,WAAZ,GAAA3nF,OACMyZ,EAAKiuE,KAAKC,WADhB3nF,QAEK,QAAA4tF,EAAAn0E,EAAKiuE,YAAL,IAAAkG,OAAA,EAAAA,EAAWhG,UAAX,IAAA5nF,OAA0ByZ,EAAKiuE,KAAKE,UAApC,IAFL,OAIGnuE,QAJH,IAIGA,OAJH,UAAAo0E,EAIGp0E,EAAMiuE,YAJT,IAAAmG,OAAA,EAIGA,EAAYQ,UAElBpuF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASjoB,UAAWQ,EAAQxB,MAC3CgC,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CACEy1B,OAAK,EACL76D,MAAK,OAAEkO,QAAF,IAAEA,OAAF,UAAAq0E,EAAEr0E,EAAM8uE,kBAAR,IAAAuF,OAAA,EAAEA,EAAkB/iF,MACtBC,IAAI,SAACuS,GAAD,OAAOA,EAAEkK,aACb6U,KAAK,MAERr8B,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACEM,MAAK,OAAE6X,QAAF,IAAEA,OAAF,UAAAs0E,EAAEt0E,EAAM8uE,kBAAR,IAAAwF,OAAA,EAAEA,EAAkBhjF,MAAM0G,OAC/BhU,MAAO,UACPmY,KAAK,YAIX3V,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS7qB,QAAQ,SAC3B,OAAJod,QAAI,IAAJA,OAAA,UAAAu0E,EAAAv0E,EAAMiuE,YAAN,IAAAsG,OAAA,EAAAA,EAAY1uD,QACXr/B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE2vD,UAAWllE,EAAAC,EAAAC,cAACmuF,GAAApuF,EAAD,MACXhB,QAAQ,WACRqvF,kBAAgB,EAChBC,oBAAkB,EAClBn7C,eAAa,EACb3xC,UAAU,IACVC,KAAI,UAAA3B,OAAA,OAAYyZ,QAAZ,IAAYA,OAAZ,UAAAw0E,EAAYx0E,EAAMiuE,YAAlB,IAAAuG,OAAA,EAAYA,EAAY3uD,OAC5BrgC,UAAWQ,EAAQ2wB,QARrB,OAUG3W,QAVH,IAUGA,OAVH,UAAAy0E,EAUGz0E,EAAMiuE,YAVT,IAAAwG,OAAA,EAUGA,EAAY5uD,QAGZ,OAAJ7lB,QAAI,IAAJA,OAAA,UAAA00E,EAAA10E,EAAMiuE,YAAN,IAAAyG,OAAA,EAAAA,EAAYr2E,SACX7X,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE2vD,UAAWllE,EAAAC,EAAAC,cAACspF,GAAAvpF,EAAD,MACXhB,QAAQ,WACRqvF,kBAAgB,EAChBC,oBAAkB,EAClBn7C,eAAa,EACb3xC,UAAU,IACVzC,UAAWQ,EAAQ2wB,QAPrB,OASG3W,QATH,IASGA,OATH,UAAA20E,EASG30E,EAAMiuE,YATT,IAAA0G,OAAA,EASGA,EAAYt2E,SAInB7X,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACErC,UAAWQ,EAAQjC,KACnBoE,MAAO6X,EAAK3J,OAAOyvD,cACnB3pD,KAAK,QACL1W,QAAQ,cAGZe,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UACf9E,KAAO3I,EAAK4d,WAAWhV,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UACf9E,KAAO3I,EAAK83B,WAAWlvB,OAAO,wBAEjCpiB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAIhBjnB,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEr5B,KAAK,QACLI,QAAS,kBA1QN7K,EA0Q4BsO,EAAKtO,QAzQxD6Q,EAAQ7Q,GADc,IAACA,IA4QHlL,EAAAC,EAAAC,cAACqpC,GAAAtpC,EAAD,aAMZD,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEqpB,QAAS9xC,OAAOwvB,KAAK46D,IAASj4E,OAC9ByV,MAAO,QACPc,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,MAAK,OAAEjY,QAAF,IAAEA,OAAF,UAAAk7E,EAAEl7E,EAAM47E,wBAAR,IAAAV,OAAA,EAAEA,EAAwB10D,WAC/B9P,YAAaA,EACbF,KAAMA,EACN0B,aAxVS,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAwVMC,oBArVgB,SAAC1T,GAC/BiS,GAAgBjS,EAAMiG,OAAOzP,OAC7Bub,EAAQ,WA0VNxmB,EAAAC,EAAAC,cAACwkF,GAAD,CAAaptE,KAAMy6B,QAAQz6B,GAAO0F,YA/RlB,WAClBjB,KA8R8D7Q,GAAIoM,2BC1dhEvZ,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B4qC,MAAO,CACLhpC,QAAS,WAIb,SAASuwF,GAA0B1vF,GACjC,OACEkB,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CAAKluB,SAAS,WAAW3zB,QAAQ,eAC/B+B,EAAAC,EAAAC,cAACwV,GAAA,EAADrW,OAAAe,OAAA,CAAkBnB,QAAQ,eAAkBH,IAC5CkB,EAAAC,EAAAC,cAAC4/C,GAAA,EAAD,CACEjlC,IAAK,EACLG,KAAM,EACNF,OAAQ,EACRG,MAAO,EACP2W,SAAS,WACT3zB,QAAQ,OACRC,WAAW,SACXC,eAAe,UAEf6B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKwC,UAAU,MAAMjE,MAAM,iBAA/C,GAAAuC,OACMw3D,KAAKC,MAAM14D,EAAMmM,OADvB,QAQD,sBAAMwjF,GAAc,SAAC3vF,GAC1B,IAAMU,EAAUzB,KAEVgf,EAAQhK,IAAMwB,WAAW8G,IAC/BlI,EAAgCJ,IAAMK,SAAS,GAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOkrB,EAAPhrB,EAAA,GAAiBywD,EAAjBzwD,EAAA,GAEAN,IAAMkK,UAAU,WACd,IAAMqnD,EAASC,KAAe/jE,GAC9B8jE,EAAOE,GAAG,aAAc,SAACz0D,GACH,cAAhBA,EAAKF,OACPi0D,EAA8B,KAAd,OAAJ/zD,QAAI,IAAJA,OAAA,EAAAA,EAAM00D,aAElBX,EAAY,KACZ/mD,EAAMvB,SAAS,CACbL,SAAUR,GAAWQ,SAASxJ,KAC9B2J,IAAG,qBAAAvb,OAAuBgQ,EAAK20D,eAEjCJ,EAAOpqB,YAGV,IA+BH,OACEl6C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTiD,UAAU,SACV1d,eAAe,SACfD,WAAW,SACX7B,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAAA,SACElB,UAAWQ,EAAQynC,MACnB/7B,GAAG,mBACHkN,KAAK,OACLiB,SA3CW,SAAC5E,GACpB,IAAI07B,EAAQ17B,EAAMiG,OAAOy1B,MACzB,GAAIA,EAAJ,CACEA,EAAQA,EAAM,GAIhB,IAAIC,EAAe,IAAIC,SACvBD,EAAaE,IAAI,OAAQH,GACzB3O,KACG+O,KAAK/vC,EAAU,0BAA2B4vC,GAC1CjzB,KAAK,SAACC,GACDA,GACFL,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,iCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,GACZT,EAAMvB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,8BAqBLtb,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,oBACbzwC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExxC,MAAM,QACNgE,aAAW,iBACXC,UAAU,QAEVzB,EAAAC,EAAAC,cAACwuF,GAAAzuF,EAAD,CAAoBd,MAAO,CAAEV,SAAU,UAI7CuB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,sBAEY,IAAbo/B,GACCr+B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,IACb7Y,EAAAC,EAAAC,cAACsuF,GAAD,CAA2B74E,KAAM,IAAK1K,MAAOozB,qDCtHrDswD,GAAuB3sF,aAAH4sF,QAAAvvF,OAAA6C,GAAA,EAAA7C,CAAA,kVAmBpBwvF,GAA2B7sF,aAAH8sF,QAAAzvF,OAAA6C,GAAA,EAAA7C,CAAA,8LAWxB0vF,GAA8B/sF,aAAHgtF,QAAA3vF,OAAA6C,GAAA,EAAA7C,CAAA,uPAYzBtB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ/c,EAAMI,QAAQ,OAIb4yF,GAAgB,SAACnwF,GAAU,IAAAowF,EAChC1vF,EAAUzB,KACV8e,EAASC,eACf3J,EAA4BJ,IAAMK,SAAS,MAA3CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOuG,EAAPrG,EAAA,GAAewgC,EAAfxgC,EAAA,GACQhD,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACF0M,EAAQhK,IAAMwB,WAAW8G,IAuD/BkjB,EAA0CC,aAASmwD,GAAsB,CACvElqE,UAAW,CACT7iB,KAAM8X,GAERsb,YAAa,iBAJPjlB,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAAOqkB,EAA9BiK,EAA8BjK,QAO9B,OACEt0B,EAAAC,EAAAC,cAAC03B,GAAD,CAAMtsB,MAAO,gBACXtL,EAAAC,EAAAC,cAACoB,EAAD,MACC0O,GAAWhQ,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,CAAgBpyC,UAAWQ,EAAQxB,QAC7CgS,GACAhQ,EAAAC,EAAAC,cAACoqC,GAAD,CACEh/B,MAAO,oBACPi5B,aAAa,UACbD,UA7BU,WAChBj0B,EAAmB,gBAAiB,KAAM,IACvC8M,KAAK,SAACC,GACLL,EAAMvB,SAAS,CAAElE,MAAM,EAAMgE,IAAK8B,EAAIuK,UACtC2M,MAED/W,MAAM,SAACC,GACNT,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,6CAqBLqoB,SArEiB,SAAC5zB,GACqBA,EAAvC3B,MAAN,IAAammB,EAAgCxkB,EAAhCwkB,OAAuBn1B,GAAS2Q,EAAxB0hC,WAArBpyC,OAAAC,EAAA,EAAAD,CAA6C0Q,EAA7Co/E,KACIC,EAAmB,IAAI9rE,KACvBrR,EAAO,GAcTA,EAbGsiB,EAaI,CACLiU,SAAUumD,GACVtqE,UAAW,CACTvZ,GAAI9L,EAAK8L,GACTmkF,mBAAmBhwF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACdD,GADa,IAEhBkwF,iBAAkBC,OAAOnwF,EAAKkwF,kBAC9Bh+C,UAAW89C,MAnBV,CACL5mD,SAAUqmD,GACVpqE,UAAW,CACTwiB,MAAM5nC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACDD,GADA,IAEHkwF,iBAAkBC,OAAOnwF,EAAKkwF,kBAC9Bl4D,UAAWg4D,EACX99C,UAAW89C,MAiBnBvyE,EACG0rB,OADHlpC,OAAAQ,EAAA,EAAAR,CAAA,GACe4S,IACZkL,KAAK,WACJmX,MAED/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAmCVzD,SAAU85B,EACVxtB,QAAS5F,GAAU4F,QACnBpO,OAAM,OAAElI,QAAF,IAAEA,OAAF,UAAAm/E,EAAEn/E,EAAMmoE,0BAAR,IAAAgX,OAAA,EAAEA,EAA0BpkF,QAGrCmF,GAASjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,2ECpIZqvF,GAAwBxtF,aAAHytF,QAAApwF,OAAA6C,GAAA,EAAA7C,CAAA,sNAgBrBwvF,GAA2B7sF,aAAH0tF,QAAArwF,OAAA6C,GAAA,EAAA7C,CAAA,sMAWxB0vF,GAA8B/sF,aAAH2tF,QAAAtwF,OAAA6C,GAAA,EAAA7C,CAAA,mQAYzBtB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJgb,OAAQ/c,EAAMI,QAAQ,OAIbuzF,GAAiB,SAAC9wF,GAAU,IAAA+wF,EACjCrwF,EAAUzB,KACV8e,EAASC,eA0CfyhB,EAA0CC,aAASgxD,IAA3Cz/E,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAAOqkB,EAA9BiK,EAA8BjK,QAE9B,OACEt0B,EAAAC,EAAAC,cAAC03B,GAAD,CAAMtsB,MAAO,mBACXtL,EAAAC,EAAAC,cAACoB,EAAD,MACC0O,GAAWhQ,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,CAAgBpyC,UAAWQ,EAAQxB,QAC7CgS,GACAhQ,EAAAC,EAAAC,cAACoqC,GAAD,CACE/F,aAAa,UACbZ,SAjDmB,SAAC5zB,GAC1B2B,QAAQyR,IAAIpT,GACiCA,EAAvC3B,MAAN,IAAammB,EAAgCxkB,EAAhCwkB,OAAuBn1B,GAAS2Q,EAAxB0hC,WAArBpyC,OAAAC,EAAA,EAAAD,CAA6C0Q,EAA7C+/E,KACIV,EAAmB,IAAI9rE,KACvBrR,EAAO,GAcTA,EAbGsiB,EAaI,CACLiU,SAAUumD,GACVtqE,UAAW,CACTvZ,GAAI9L,EAAK8L,GACT6kF,qBAAqB1wF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAChBD,GADe,IAElB4wF,aAAcT,OAAOnwF,EAAK4wF,cAC1B1+C,UAAW89C,MAnBV,CACL5mD,SAAUqmD,GACVpqE,UAAW,CACTwiB,MAAM5nC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACDD,GADA,IAEH4wF,aAAcT,OAAOnwF,EAAK4wF,cAC1B54D,UAAWg4D,EACX99C,UAAW89C,MAiBnBvyE,EACG0rB,OADHlpC,OAAAQ,EAAA,EAAAR,CAAA,GACe4S,IACZkL,KAAK,WACJmX,MAED/W,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAcV6I,QAAS5F,GAAU4F,QACnBpO,OAAM,OAAElI,QAAF,IAAEA,OAAF,UAAA8/E,EAAE9/E,EAAMkgF,2BAAR,IAAAJ,OAAA,EAAEA,EAA2B/kF,QAGtCmF,GAASjQ,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BCxFVpC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJiiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B4qC,MAAO,CACLhpC,QAAS,WAIAiyF,GAAY,SAACpxF,GACRf,KADkB,IAAAoyF,EAAAC,EAAAC,EAAAC,EAElCn9E,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,IAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GAUAsiB,EAAyDC,aACvD30B,GACA,CACE4a,UAAW,CAAEqrB,MAAOrpB,EAAauP,OAAQzP,EAAOE,KAH5CzW,EAARuuB,EAAQvuB,QAASD,EAAjBwuB,EAAiBxuB,KAAME,EAAvBsuB,EAAuBtuB,MAAgB8/B,GAAvCxR,EAA8BjK,QAA9BiK,EAAuCwR,eAOvC,OACE/vC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJgD,UAAU,MACVihB,QAAQ,aACR5+B,WAAW,UAEX8B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,4BAEFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,CAAgBxvC,UAAW0Y,MACzBna,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,KACE3iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,qBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,qBACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,cACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,WACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,UACAjnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,UAAlB,aAGJjnB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,MACI/S,GAAWkhC,KAAc5c,UAAYyb,IACrC/vC,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,SAAU7qB,QAAQ,QAC9C4D,EAAAC,EAAAC,cAACkxC,GAAA,EAAD,QAILnhC,GACCjQ,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,+CAML4P,GAAwD,IAA5C,OAAJA,QAAI,IAAJA,OAAA,UAAAogF,EAAApgF,EAAMwgF,gCAAN,IAAAJ,OAAA,EAAAA,EAAgCrlF,MAAM0G,SAC7CxR,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,EAAGlqB,MAAO,UAC5BjnB,EAAAC,EAAAC,cAACC,EAAA,EAAD,mCAIL4P,IACK,OAAJA,QAAI,IAAJA,OAAA,UAAAqgF,EAAArgF,EAAMwgF,gCAAN,IAAAH,OAAA,EAAAA,EAAgCtlF,MAAM0G,QAAS,IADhD,OAECzB,QAFD,IAECA,OAFD,UAAAsgF,EAECtgF,EAAMwgF,gCAFP,IAAAF,OAAA,EAECA,EAAgCvlF,MAAMC,IAAI,SAACyO,GAAD,IAAAg3E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OACxC9xF,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKuE,EAAKtO,IAClBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,OAApC,QAAAo0F,EAAA,OACGh3E,QADH,IACGA,OADH,EACGA,EAAMu4E,6BADT,IAAAvB,IACkC,WAElCxwF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,OACjC,IADH,QAAAq0F,EAAA,OAEGj3E,QAFH,IAEGA,OAFH,EAEGA,EAAMw4E,wBAFT,IAAAvB,IAE6B,WAE7BzwF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAO,SACP7qB,QAAQ,MACR+C,MAAO,CACLR,WAAY,SACZszF,SAAU,gBAGP,OAAJz4E,QAAI,IAAJA,OAAA,UAAAk3E,EAAAl3E,EAAM04E,YAAN,IAAAxB,OAAA,UAAAC,EAAAD,EAAY5lF,MAAM,UAAlB,IAAA6lF,OAAA,EAAAA,EAAsBwB,qBAAtB,OACD34E,QADC,IACDA,OADC,UAAAo3E,EACDp3E,EAAM04E,YADL,IAAAtB,OAAA,UAAAC,EACDD,EAAY9lF,MAAM,UADjB,IAAA+lF,OAAA,EACDA,EAAsBsB,kBAAkB3gF,QADvC,OAEGgI,QAFH,IAEGA,OAFH,UAAAs3E,EAEGt3E,EAAM04E,YAFT,IAAApB,OAAA,UAAAC,EAEGD,EAAYhmF,MAAM,UAFrB,IAAAimF,OAAA,UAAAC,EAEGD,EAAsBoB,yBAFzB,IAAAnB,OAAA,EAEGA,EAAyCjmF,IACvC,SAACqnF,GAAD,SAAAryF,OAAYqyF,EAAZ,OAEF,WAENpyF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAO,SACP7qB,QAAQ,MACR+C,MAAO,CACLR,WAAY,SACZszF,SAAU,gBAGP,OAAJz4E,QAAI,IAAJA,OAAA,UAAAy3E,EAAAz3E,EAAM04E,YAAN,IAAAjB,OAAA,UAAAC,EAAAD,EAAYnmF,MAAM,UAAlB,IAAAomF,OAAA,EAAAA,EAAsBmB,gCAAtB,OACD74E,QADC,IACDA,OADC,UAAA23E,EACD33E,EAAM04E,YADL,IAAAf,OAAA,UAAAC,EACDD,EAAYrmF,MAAM,UADjB,IAAAsmF,OAAA,EACDA,EAAsBiB,6BAA6B7gF,QADlD,OAEGgI,QAFH,IAEGA,OAFH,UAAA63E,EAEG73E,EAAM04E,YAFT,IAAAb,OAAA,UAAAC,EAEGD,EAAYvmF,MAAM,UAFrB,IAAAwmF,OAAA,UAAAC,EAEGD,EAAsBe,oCAFzB,IAAAd,OAAA,EAEGA,EAAoDxmF,IAClD,SAACqnF,GAAD,SAAAryF,OAAYqyF,EAAZ,OAEF,WAENpyF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAO,SACP7qB,QAAQ,MACR+C,MAAO,CACLR,WAAY,SACZszF,SAAU,gBAGP,OAAJz4E,QAAI,IAAJA,OAAA,UAAAg4E,EAAAh4E,EAAM04E,YAAN,IAAAV,OAAA,UAAAC,EAAAD,EAAY1mF,MAAM,UAAlB,IAAA2mF,OAAA,EAAAA,EAAsBa,kBAAtB,OACD94E,QADC,IACDA,OADC,UAAAk4E,EACDl4E,EAAM04E,YADL,IAAAR,OAAA,UAAAC,EACDD,EAAY5mF,MAAM,UADjB,IAAA6mF,OAAA,EACDA,EAAsBW,eAAe9gF,QADpC,OAEGgI,QAFH,IAEGA,OAFH,UAAAo4E,EAEGp4E,EAAM04E,YAFT,IAAAN,OAAA,UAAAC,EAEGD,EAAY9mF,MAAM,UAFrB,IAAA+mF,OAAA,UAAAC,EAEGD,EAAsBS,sBAFzB,IAAAR,OAAA,EAEGA,EAAsC/mF,IACpC,SAACqnF,GAAD,SAAAryF,OAAYqyF,EAAZ,OAEF,WAENpyF,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU7qB,QAAQ,OACjC+lB,KAAO3I,EAAK83B,WAAWlvB,OAAO,6BAKzCpiB,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEqpB,QAAS,EACTlqB,MAAO,QACPc,mBAAoB,CAAC,GAAI,GAAI,KAC7BC,MAAK,OAAEjY,QAAF,IAAEA,OAAF,UAAAugF,EAAEvgF,EAAMwgF,gCAAR,IAAAD,OAAA,EAAEA,EAAgC/5D,WACvC9P,YAAaA,EACbF,KAAMA,EACN0B,aAvIS,SAACxT,EAAOyT,GAC/B1B,EAAQ0B,IAuIMC,oBApIgB,SAAC1T,GAC/BiS,GAAgBjS,EAAMiG,OAAOzP,OAC7Bub,EAAQ,aC5CC+rE,GAAc,SAAC7wD,GAC1B,IAAI0O,EAAe,IAAIC,SAGvB,OAFAD,EAAaE,IAAI,UAAW5O,GAErB8wD,KAAMjiD,KAAK/vC,EAAU,uBAAwB4vC,EAAc,CAChEr/B,QAAS,CACPm/B,OAAQ,mBACRuiD,kBAAmB,iBACnB7gF,eAAA,iCAAA7R,OAAiDqwC,EAAasiD,eCE9D30F,GAAY/B,YAAW,CAC3B09B,KAAM,CACJh9B,OAAQ,QACRuB,QAAS,OACTE,eAAgB,SAChBD,WAAY,YAIHy0F,GAAc,WACzB,IAAMnzF,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IAEzB5H,EAA8BL,mBAAS,IAAvCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOm/E,EAAPl/E,EAAA,GAAgBm/E,EAAhBn/E,EAAA,GACAG,EAA0CT,oBAAS,GAAnDU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOi/E,EAAPh/E,EAAA,GAAsBi/E,EAAtBj/E,EAAA,GAsBA,OACE9T,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,iBAKFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAWQ,EAAQk6B,MACjC15B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAvCAinB,EAuCoBjnB,EAAEC,OAAOy1B,MAAM,QAtCvDoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EAAA+gD,EAAA/0C,GACb,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,MACb/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,gCAGTy3E,GAAiB,GACjBF,EAAU,QAAAG,EAAA,OAAC51E,QAAD,IAACA,OAAD,UAAA6gC,EAAC7gC,EAAKrN,YAAN,IAAAkuC,OAAA,EAACA,EAAWg1C,WAAZ,IAAAD,IAAmB,MAE9Bz1E,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAdG,IAACkkB,KAyCZ1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EACV5tB,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,oBAYRD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAWQ,EAAQk6B,MACjC15B,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAEP2zF,EACG,6BACA,iCAGLA,GACC5yF,EAAAC,EAAAC,cAAA,OACE6V,QAAS,WACPmsB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,+BAKTtb,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEqX,OAAQ,OAAQra,MAAO,OAAQO,OAAQ,QAChDolB,IAAK8wE,EACL/wE,IAAI,OACJ7R,QAAQ,OACR+F,QAAS,WACPm9E,UAAUC,UAAUC,UAAUR,MAGlC5yF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CACL+6B,UAAW,SACX59B,UAAW,EACXka,OAAQ,QAEV/U,UAAU,KACVxC,QAAQ,KACR8W,QAAS,WACPm9E,UAAUC,UAAUC,UAAUR,KAG/BA,OAQb5yF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJra,MAAO,CACL6Z,OAAQ,OACRrc,WAAY,QAGdqD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAW8W,QAjGf,WAChB88E,EAAW,IACXE,GAAiB,KA+Fb,YC5IKh1F,GAAY/B,YAAW,SAACC,GAAD,MAAY,CAC9C+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,OACX/iB,gBAAgB,QAElBgjB,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WC3BEO,GAAY/B,YAAW,SAACC,GAAD,IAAAo3F,EAAAC,EAAAC,EAAA,MAAY,CAC9Cv1F,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3Bm3F,YAAa,CACX90F,SAAU,UAEZ+0F,eAAgB,CACd/0F,SAAU,SAEZg1F,aAAc,CACZz1F,QAAS,OACTE,eAAgB,gBAChBD,WAAY,UAGdy1F,eAAgB,CACd98E,aAAc,OACd+8E,QAAS,CACPz3F,MAAO,QAIX2D,OAAQ,CACN3D,MAAO,OACP0a,aAAc,QAGhBg9E,UAAW,CACTh9E,aAAc,OACdi9E,OAAAT,EAAA,CACE50F,SAAU,OACVoC,WAAY,KAFdxB,OAAAM,EAAA,EAAAN,CAAAg0F,EAGGp3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SAJdY,OAAAM,EAAA,EAAAN,CAAAg0F,EAOGp3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SARd40F,IAaFU,UAAW,CACT53F,MAAO,OACPO,OAAQ,OACRma,aAAc,OACdi9E,OAAAR,EAAA,CACE70F,SAAU,OACVoC,WAAY,KAFdxB,OAAAM,EAAA,EAAAN,CAAAi0F,EAGGr3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SAJdY,OAAAM,EAAA,EAAAN,CAAAi0F,EAOGr3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SARd60F,IAaFU,YAAa,CACXn9E,aAAc,OACdi9E,OAAAP,EAAA,CACE90F,SAAU,QADZY,OAAAM,EAAA,EAAAN,CAAAk0F,EAEGt3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SAHdY,OAAAM,EAAA,EAAAN,CAAAk0F,EAKGt3F,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B72C,SAAU,SANd80F,IAWFU,WAAY,CACVC,8BAA+B,CAC7BC,uCAAwC,CACtCC,UAAW,CACTj4F,MAAO,kBACPC,QAAS,4BAMjBi4F,WAAY,CACVC,qBAAsB,CACpBh2F,aAAc,OAEhBi2F,kCAAmC,CACjCn4F,QAAS,aAIbo4F,aAAc,CACZl4F,UAAW,OACXw3F,MAAO,CACLr1F,SAAU,OACVoC,WAAY,MAGhB4zF,YAAa,CACXx2F,QAAS,OACTE,eAAgB,gBAChBD,WAAY,aCvFDw2F,OAff,SAAyB51F,GACrB,IAAMU,EAAUzB,KACT6D,EAAmD9C,EAAnD8C,KAAP+yF,EAA0D71F,EAA9C81F,oBAAZ,IAAAD,EAA2B,kBAAM,MAAjCA,EAAAE,EAA0D/1F,EAApBg2F,gBAAtC,IAAAD,KACF,OACE70F,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk0F,aAAcv0F,MAAO,CAAE/C,QAAS,QACtD4D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,KAAKE,MAAO,CAAE0B,WAAY,SAC1De,IAEDkzF,GAAY90F,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAAS6+E,GAArD,aCQd/+E,GAAS,CACb,WACA,gBACA,eACA,gBACA,UAEI4K,GAAY,CAChB,CAAErI,KAAM,OAAQxW,KAAM,YACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,YAAaxW,KAAM,UAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,SAAUxW,KAAM,KAkPXmzF,GA/OG,SAACj2F,GAAU,IAAAk2F,EAAAC,EAC3BvjF,QAAQyR,IAAI,iBAAkBrkB,GAC9B,IAAMU,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6hF,EAAe,CACnBtjE,SAAU,GACVujE,SAAU,KACVt9E,OAAQ,GACRo7E,IAAK,GACLtiF,IAAK,IAEDykF,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAEbt5E,EAA0BjJ,IAAMK,SAAS8hF,GAAzCj5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GACAE,EAAgCpJ,IAAMK,SAASgiF,GAA/Ch5E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOo5E,EAAPn5E,EAAA,GAAiBo5E,EAAjBp5E,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjD6/E,KAAK,EACLp7E,QAAQ,IAFVyE,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GASMU,GATNV,EAAA,GASoB,WAClBP,GAAQ,GACRwrE,EAAS2N,GACTM,EAAYJ,KAGRK,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC0Z,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAM1gC,UAAY0gC,EAAM3hD,KAAO2hD,EAAMz6C,QAAUy6C,EAAM2gC,KACnDsC,EAASF,SACLQ,EADa,OACA/2F,QADA,IACAA,OADA,UAAA42F,EACA52F,EAAOiR,YADP,IAAA2lF,OAAA,UAAAC,EACAD,EAAa52F,aADb,IAAA62F,OAAA,EACAA,EAAoBQ,SAC5BpyD,OAAOwxD,EAASD,UAAW,EAAGhjC,GAEzCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACLq3F,QAASN,IAGb95E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,kBAAmB,aAG/CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACLq3F,QAAO,GAAAp2F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoBE,SAA1B,CAAmC7jC,MAG9Cv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,kBAAmB,YAEjDN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAoCbw3B,EAAe,SAACjH,EAAM9/B,GAC1B2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAIrB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAuBlB,OACExd,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,mBACNgzF,aAlGkB,WACtB74E,GAAQ,MAmGN/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoBkB,QAC1Bl1E,aA7Be,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEK,EAAO,OAAGr3F,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBJ,QACpCA,EAAQpyD,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACLq3F,QAASA,IAGbr3F,EAAMw3C,aAAaw/C,EAAS,kBAAmB,YAoB3C30E,WAjBa,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAiBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,uBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAM1gC,SACbhwB,KAAK,WACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,uCACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAM3hD,IACb/O,KAAK,MACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,aAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,kBASJD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,UAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcG,IACxB/tB,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,qBAWJqyD,EAAMz6C,OAAOrG,OAAS,GAAK8gD,EAAM2gC,IAAIzhF,OAAS,IAC9CxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,aAEjBk2D,EAAMz6C,OAAOrG,OAAS,GACrBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMz6C,OACX1Y,MAAO,CAAEhD,MAAO,QAASO,OAAQ,WAItC41D,EAAM2gC,IAAIzhF,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAM2gC,IACX9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAO7CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cC/PGy5E,GAAW,qGCSlB5gF,GAAS,CAAC,OAAQ,OAAQ,eAAgB,cAAe,UACzD4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,QAC3B,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,eAAgBxW,KAAM,UAC9B,CAAEwW,KAAM,cAAexW,KAAM,SAAS2gB,WAAW,eACjD,CAAEnK,KAAM,SAAUxW,KAAM,KAGpB80F,GAAc,CAAC,OAAQ,QAAS,UAAU,WAAY,WAAY,QAAS,SAAS,UACpFC,GAAkB,CAAC,OAAQ,QAAS,UAAU,WAAY,WAAY,QAAS,UAE/EC,GAAiB,CACrB,CAAEx+E,KAAM,YAAaxW,KAAM,QAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,OAAQxW,KAAM,WAAYzF,MAAO,SACzC,CAAEic,KAAM,YAAaxW,KAAM,MAAOzF,MAAO,SACzC,CAAEic,KAAM,OAAQxW,KAAM,UACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAGpBi1F,GAAiB,CACrB,CAAEz+E,KAAM,YAAaxW,KAAM,QAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,OAAQxW,KAAM,WAAYzF,MAAO,SACzC,CAAEic,KAAM,YAAaxW,KAAM,MAAOzF,MAAO,SACzC,CAAEic,KAAM,OAAQxW,KAAM,WAGlBk1F,GAAsB,CAC1BxrF,MAAO,GACP6kB,OAAQ,GACR4mE,KAAM,GACN73E,SAAU,GACV2sD,IAAK,GACL52D,IAAK,GACLvT,KAAM,IAGF0zF,GAAc,CAClBC,QAAQ,EACRC,UAAW,MAiZE0B,OA9Yf,SAAyBl4F,GAAO,IAAAk2F,EAAAC,EACxBz1F,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IAEzB5H,EAAoCL,oBAAS,GAA7CM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAOwjF,EAAPvjF,EAAA,GAAmBwjF,EAAnBxjF,EAAA,GACAG,EAA4BT,mBAAS,IAArCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOsjF,EAAPrjF,EAAA,GAAesjF,EAAftjF,EAAA,GACAG,EAAuCb,oBAAS,GAAhDgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOojF,EAAPjjF,EAAA,GAAuBkjF,EAAvBljF,EAAA,GACAykB,EAA0BzlB,mBAAS,CACjC0E,KAAM,GACNq/E,OAAQ,KAFVr+D,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAAOy5B,EAAPx5B,EAAA,GAAcyuD,EAAdzuD,EAAA,GAIAC,EAA8C3lB,oBAAS,GAAvD4lB,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAOw+D,EAAPv+D,EAAA,GAAwBw+D,EAAxBx+D,EAAA,GACAC,EAAoC7lB,mBAAS0jF,IAA7C59D,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GAAOw+D,EAAPv+D,EAAA,GAAmBw+D,EAAnBx+D,EAAA,GACAC,EAAgC/lB,mBAASgiF,IAAzCh8D,EAAA/5B,OAAAiU,EAAA,EAAAjU,CAAA85B,EAAA,GAAOo8D,EAAPn8D,EAAA,GAAiBo8D,EAAjBp8D,EAAA,GACA2mC,EAAoC3sD,mBAASgiF,IAA7Cp1B,EAAA3gE,OAAAiU,EAAA,EAAAjU,CAAA0gE,EAAA,GAAO43B,EAAP33B,EAAA,GAAmB43B,EAAnB53B,EAAA,GAOM63B,EAAoB,WACxBX,GAAc,IAGVtC,EAAe,WACnB0C,GAAa,IAGTQ,EAA0B,WAC9BR,GAAa,GACb/P,EAAS,CACPzvE,KAAM,GACNq/E,OAAQ,KAEV3B,EAAYJ,KAUR2C,EAAoB,SAACtjF,GACzBijF,EAAcr4F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTo4F,GADQ,GAAAp4F,OAAAM,EAAA,EAAAN,CAAA,GAEVoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAQhC+sF,EAAiB,CAAC,QAAS,SAAU,OAAQ,WAAY,MAAO,OA8HtE,OACEh4F,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,0BACNgzF,aAAcA,IAGhB50F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoBgD,UAC1Bl3E,iBAjLmB,SAACtG,EAAG1K,EAAMiT,GACjCk0E,GAAc,GACdE,EAAUrnF,IAgLNkR,aA/Ce,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEmC,EAAS,OAAGn5F,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoB0B,UACtCA,EAAUl0D,OAAOljB,EAAU,GAC3Bi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACLm5F,UAAWA,IAGfn5F,EAAMw3C,aAAaw/C,EAAS,eAAgB,cAsCxC30E,WAnCa,SAAC1G,EAAGkG,EAASE,GAC9B+zE,IACAY,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAoCP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQg0F,aAC1Bv6E,WAAS,EACT3B,KAAM2/E,EACN1/E,QAASsgF,GAET73F,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACdlL,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk0F,cACtB1zF,EAAAC,EAAAC,cAAA,+BAAgBi3F,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQr/E,MACxB9X,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEqX,OAAQ,WAAaT,QAAS8hF,GAC1C73F,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,SAIND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQ8gF,GACRl2E,UAAWo2E,GACX9mF,KAAI,OAAEonF,QAAF,IAAEA,OAAF,EAAEA,EAAQA,WAMpBn3F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQg0F,aAC1Bv6E,WAAS,EACT3B,KAAM+/E,EACN9/E,QAASugF,GAET93F,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,oBAAoB/L,MAAO,CAAE+iB,cAAe,QAC1DliB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk0F,cACtB1zF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEqX,OAAQ,WACjBT,QAAS+hF,GAET93F,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,SAIND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAAA,OACElB,UAAWQ,EAAQk0F,aACnBv0F,MAAO,CACL8mE,aAAc,oBACdpvD,aAAc,MACdqL,cAAe,QAGjBliB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,gBACN1C,QAAQ,WACRoa,SAxNS,SAAC5E,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAsN1BA,MAAOqnD,EAAMx6C,KAAKwnD,cAClB19D,KAAK,OACLiwC,UAAQ,EACR1yC,MAAO,CAAEhD,MAAO,UAEhBo7F,GACAv3F,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAjNS,WAC3ByhF,GAAmB,KAgNT,kBAIHD,GACCv3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,MAApB,qBACAe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,QACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAOwsF,EAAWnsF,MAClB1J,KAAK,QACLiwC,UAAQ,KAGZ7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,GACb7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,SACHvJ,MAAM,SACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAOwsF,EAAWtnE,OAClBvuB,KAAK,SACLiwC,UAAQ,MAId7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAOwsF,EAAWxiF,IAClBrT,KAAK,QAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAOwsF,EAAWv4E,SAClBtd,KAAK,WACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAOwsF,EAAWV,KAClBn1F,KAAK,OACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAExC,WAAY,QACnCqD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAjPNinB,EAiP0BjnB,EAAEC,OAAOy1B,MAAM,GAjPnCvuC,EAiPuC,WAhPjE2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACbyE,EAAcr4F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTo4F,GADQ,GAAAp4F,OAAAM,EAAA,EAAAN,CAAA,GAEVuC,EAFU,OAEHwb,QAFG,IAEHA,OAFG,UAAA6gC,EAEH7gC,EAAKrN,YAFF,IAAAkuC,OAAA,EAEHA,EAAWg1C,OAErB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAhBG,IAACkkB,EAAM9/B,KAmPZ5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,eASHw3F,EAAW5rB,IAAIr6D,OAAS,GACvBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAK21E,EAAW5rB,IAChB1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAKzCsD,EAAAC,EAAAC,cAAA,OACElB,UAAWQ,EAAQk0F,aACnBv0F,MAAO,CAAEhB,eAAgB,UACzB4X,QAxSU,WAEtB,GAAwB,IAVG,WAC3B,IAAIyH,EAAM,GAIV,OAHAw6E,EAAejtF,IAAI,SAACsW,GACa,IAA3Bo2E,EAAWp2E,GAAK7P,QAAcgM,EAAInI,KAAKgM,KAEtC7D,EAIU06E,GACJ1mF,OACX,GAAImmF,EAAWtC,OAAQ,CACrB,IAAM8C,EAAa7lC,EAAM6kC,OACzBgB,EAAWp0D,OAAO4zD,EAAWrC,UAAW,EAAGmC,GAC3C,IAAMW,EAAW,CACftgF,KAAMw6C,EAAMx6C,KACZq/E,OAAQgB,GAEVX,GAAmB,GACnBjQ,EAAS6Q,OACJ,CACLZ,GAAmB,GACnB,IAAMa,EAAQ,GAAAt4F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAOizD,EAAM6kC,QAAb,CAAqBM,IACnClQ,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAEN6kC,OAAQkB,KAEVX,EAAcZ,SAGhB50D,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,wCAiRGtb,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,WAAlC,uBAMNwC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKE,MAAO,CAAE6Z,OAAQ,aAA1C,gBAGAhZ,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQ6gF,GACRj2E,UAAWm2E,GACX7mF,KAAI,OAAEuiD,QAAF,IAAEA,OAAF,EAAEA,EAAO6kC,OACbh2E,WAlNe,SAAC1G,EAAGkG,EAASE,GACpC22E,GAAmB,GACnBI,EAAcv4F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACtD62E,EAAc/2E,IAgNNM,aA7MgB,SAACxG,EAAGkG,EAASE,GACrC,IAAMy3E,EAAehmC,EAAM6kC,OAC3BmB,EAAav0D,OAAOljB,EAAU,GAC9B,IAAMu3E,EAAW,CACftgF,KAAMw6C,EAAMx6C,KACZq/E,OAAQmB,GAEV/Q,EAAS6Q,MAyMHp4F,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAejf,MAAO,CAAElB,QAAS,OAAQE,eAAgB,WACvD6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QA1QhC,WACpB,GAAIu8C,EAAMx6C,KAAKtG,OAAS,GAAK8gD,EAAM6kC,OAAO3lF,OAAS,EACjD,GAAI+jF,EAASF,OAAQ,KAAAK,EAAAC,EAAAC,EACb2C,EAAa,OAAGz5F,QAAH,IAAGA,OAAH,UAAA42F,EAAG52F,EAAOiR,YAAV,IAAA2lF,OAAA,UAAAC,EAAGD,EAAa52F,aAAhB,IAAA62F,OAAA,EAAGA,EAAoBsC,UAC1CM,EAAcx0D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAC5C,IAAMwjC,EAAU,CACdr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACLm5F,UAAWM,IAGfT,IACAh5F,EAAMw3C,aAAaw/C,EAAS,eAAgB,iBACvC,KAAAC,EAAAC,EAAAC,EACCH,EAAU,CACdr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACLm5F,UAAS,GAAAl4F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoBgC,WAA1B,CAAqC3lC,MAGlDwlC,IACAh5F,EAAMw3C,aAAaw/C,EAAS,eAAgB,kBAG9C5zD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,8CA+OD,UAGAtb,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAAS+hF,GAHX,6EChYGU,gEA7Db,SAAAA,EAAY15F,GAAO,IAAA25F,EAAA,OAAAp5F,OAAAg4C,GAAA,EAAAh4C,CAAAwT,KAAA2lF,IACjBC,EAAAthD,EAAAuhD,KAAA7lF,KAAM/T,IAqBR65F,oBAAsB,SAACC,GAErBH,EAAKlR,SAAS,CACZqR,gBAEF,IAAM7oF,EAAO8oF,KAAYC,wBAAaF,EAAYG,sBAClDrnF,QAAQyR,IAAI,UAAWpT,GACvB0oF,EAAK35F,MAAMk6F,kBAAkBjpF,IA3B7B0oF,EAAKnmC,MAAQ,CACXsmC,YAAaK,eAAYC,eAHVT,wDAOnB,WACE,IAAMU,EAActmF,KAAK/T,MAAMq6F,YAC/BznF,QAAQyR,IAAI,gBAAiBg2E,GAC7B,IAAMC,EAAeC,KAAYF,GACjC,GAAIC,EAAc,CAChB,IAAME,EAAeC,gBAAaC,qBAChCJ,EAAaK,eAETb,EAAcK,eAAYS,kBAAkBJ,GAClDzmF,KAAK00E,SAAS,CACZqR,uCAgBN,WACE,IAAQA,EAAgB/lF,KAAKy/C,MAArBsmC,YACR,OACE54F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACy5F,GAAA,OAAD,CACEf,YAAaA,EACbgB,iBAAiB,eACjBC,gBAAgB,cAChBC,iBAAiB,gBACjBnB,oBAAqB9lF,KAAK8lF,oBAC1BhlC,QAAS,CACPomC,WAAY,CACVhhF,QAAS,CAAC,QAAS,UAAW,SAAU,SAAU,kBAAmB,UAAU,oBAC/E/Z,eAAWyS,EACXhQ,eAAWgQ,EACXuoF,uBAAmBvoF,cAjDC61B,cCY5BzxB,GAAS,CAAC,OAAQ,QAAS,cAAe,UAC1C4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,WAAYxW,KAAM,cAC1B,CAAEwW,KAAM,OAAQxW,KAAM,KAoHTq4F,GAjHa,SAACn7F,GAC3B4S,QAAQyR,IAAI,OAAOrkB,GACnB,IAAMU,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS,CACvC9H,MAAO,GACP+d,YAAa,GACb6wE,WAAY,KAHdj+E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GAKAE,EAAkCpJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOg+E,EAAP/9E,EAAA,GAAkBg+E,EAAlBh+E,EAAA,GACArJ,IAAMkK,UAAU,WAAM,IAAAy4E,EAAAE,EACpBwE,EAAa,QAACt7F,QAAD,IAACA,OAAD,UAAA42F,EAAC52F,EAAOiR,YAAR,IAAA2lF,OAAA,EAACA,EAAa52F,QAC3ByoF,EAAQ,OAACzoF,QAAD,IAACA,OAAD,UAAA82F,EAAC92F,EAAOiR,YAAR,IAAA6lF,OAAA,EAACA,EAAa92F,QACrB,IAEH4S,QAAQyR,IAAI,kBAAkBmvC,GAC9B,IAAM+nC,EAAkB,WACtBt+E,GAAQ,IAGJiB,EAAc,WAClBjB,GAAQ,IAgBJ4I,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAqlF,EAAAD,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OANhB+gD,EAAMjpC,YAAY7X,OAAS,GAAK8gD,EAAMhnD,MAAMkG,OAAS,EAiBvD0wB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,6CAXPw6E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAOwzD,GAET8nC,EAAa,CAACtE,EAAQh3F,QACtBid,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,eAAgB,KAT1B,wBAAAzkF,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GA4BnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,kCACNkzF,UAAQ,EACRF,aAAcyF,IAEhBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMoqF,EACNh5E,WApBa,SAAC1G,EAAGkG,EAASE,GAC9Bw5E,OAsBEr6F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,sCAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAxEW,SAAC5E,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAsE5BA,MAAOqnD,EAAMhnD,MACb1J,KAAK,UAEP5B,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAACW,OAAO,oBAAoB1D,QAAQ,MAAOkC,aAAa,QAClE0B,EAAAC,EAAAC,cAACo6F,GAAD,CAAqBtB,kBAxCL,SAACjpF,GACzBw3E,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IACG4nC,WAAWnqF,MAsC6CopF,YAAa7mC,EAAM4nC,eAGlFl6F,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cClHJnH,GAAS,CAAC,OAAQ,QAAS,UAC3B4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,SAC3B,CAAEwW,KAAM,OAAQxW,KAAM,KAiHT24F,GA9GM,SAACz7F,GACpB,IAAMU,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS,CACvC+tB,MAAO,KADTllB,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GAGAE,EAA0BpJ,IAAMK,SAAS,IAAzCgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOglB,EAAP/kB,EAAA,GAAco+E,EAAdp+E,EAAA,GAEArJ,IAAMkK,UAAU,WAAM,IAAAy4E,EAAAE,EACpB4E,EAAS,QAAC17F,QAAD,IAACA,OAAD,UAAA42F,EAAC52F,EAAOiR,YAAR,IAAA2lF,OAAA,EAACA,EAAa52F,QACvByoF,EAAQ,OAACzoF,QAAD,IAACA,OAAD,UAAA82F,EAAC92F,EAAOiR,YAAR,IAAA6lF,OAAA,EAACA,EAAa92F,QACrB,IAEH,IAAMu7F,EAAkB,WACtBt+E,GAAQ,IAGJiB,EAAc,WAClBjB,GAAQ,IA8BJ4I,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAqlF,EAAAD,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEpBukF,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAOwzD,GAETkoC,EAAS,CAAC1E,EAAQh3F,QAClBid,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,YAAa,IARrB,wBAAAzkF,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAcnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,uBACNkzF,UAAQ,EACRF,aAAcyF,IAEhBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMoxB,EACNhgB,WAda,SAAC1G,EAAGkG,EAASE,GAC9Bw5E,OAgBEr6F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,mBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OA1DAinB,EA0DoBjnB,EAAEC,OAAOy1B,MAAM,GA1D7BvuC,EA0DiC,aAzD3D2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAErB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAhBG,IAACkkB,EAAM9/B,KA4DlB5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,kBAWND,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cC9GJnH,GAAS,CACb,OACA,QACA,QACA,SACA,QACA,cACA,UAEI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SAAUzF,MAAO,SACvC,CAAEic,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,cACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAGpBszF,GAAe,CACnBrtC,MAAO,KACP4yC,WAAY,KACZnvF,MAAO,KACPovE,KAAM,EACNv5C,MAAO,CACLu5D,WAAY,CACV7uB,IAAK,MAEP8uB,WAAY,CACV9uB,IAAK,OAGTjoD,UAAW,KACXg3E,YAAa,GACbptF,OAAQ,GACR+O,YAAa,GACbswE,MAAO,KACPgO,MAAO,KACPC,OAAQ,KACRzxE,YAAa,MAGT+rE,GAAc,CAClBC,QAAQ,EACRC,UAAW,MAiUEyF,GA9Ta,SAACj8F,GAC3B,IAAMU,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS8hF,IAAzCj5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GACAE,EAA8CpJ,IAAMK,SAAS,IAA7DgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO6+E,EAAP5+E,EAAA,GAAwB6+E,EAAxB7+E,EAAA,GACAC,EAAgCtJ,IAAMK,SAASgiF,IAA/C94E,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOk5E,EAAPj5E,EAAA,GAAiBk5E,EAAjBl5E,EAAA,GAEAvJ,IAAMkK,UAAU,WAAM,IAAAy4E,EAAAC,EAAAuF,EACdC,EAAa,OAAGr8F,QAAH,IAAGA,OAAH,UAAA42F,EAAG52F,EAAOiR,YAAV,IAAA2lF,OAAA,UAAAC,EAAGD,EAAa52F,aAAhB,IAAA62F,OAAA,UAAAuF,EAAGvF,EAAoByF,uBAAvB,IAAAF,OAAA,EAAGA,EAAqCnwF,IAAI,SAACsW,EAAK/D,GAAM,IAAA+9E,EAAAC,EACzE,OAAOj8F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFgiB,GADL,IAEEwqD,IAAG,OAAExqD,QAAF,IAAEA,OAAF,UAAAg6E,EAAEh6E,EAAK8f,aAAP,IAAAk6D,OAAA,UAAAC,EAAED,EAAYX,kBAAd,IAAAY,OAAA,EAAEA,EAAwBzvB,QAGjCovB,EAAmBE,IAClB,IAEH,IAAMd,EAAkB,WACtBt+E,GAAQ,IAGJiB,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,KAGRK,EAAe,SAAChhF,GACM,UAAtBA,EAAMiG,OAAO9Y,KACf2lF,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENuoC,MAAOpmF,EAAMiG,OAAOzP,MACpB4hF,MAAOp4E,EAAMiG,OAAOzP,SAGtBs8E,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAwBlC0Z,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAklF,EAAA2F,EAAAxF,EAAAyF,EAAAC,EAAAL,EAAAtF,EAAAqF,EAAAnF,EAAAM,EAAAC,EAAAmF,EAAAC,EAAAzF,EAAA0F,EAAA,OAAAprF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAjBlB+gD,EAAMhnD,OACNgnD,EAAMjpC,aACNipC,EAAMwoC,QACNxoC,EAAMnxB,MAAMw5D,WAAW9uB,KACvBvZ,EAAMnxB,MAAMu5D,WAAW7uB,KACvBvZ,EAAMzK,OACNyK,EAAMmoC,YACNnoC,EAAM1uC,WACN0uC,EAAMuoC,OACNvoC,EAAMu6B,MAUF0I,EAASF,SACL+F,EADa,OACKt8F,QADL,IACKA,OADL,UAAA82F,EACK92F,EAAOiR,YADZ,IAAA6lF,OAAA,UAAA2F,EACK3F,EAAa92F,aADlB,IAAAy8F,OAAA,EACKA,EAAoBH,iBAC5Br3D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE9CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACLs8F,gBAAiBA,IAGfD,EAVa,QAAAK,EAUG1F,EAAQh3F,aAVX,IAAA08F,OAAA,UAAAC,EAUGD,EAAeJ,uBAVlB,IAAAK,OAAA,EAUGA,EAAgC1wF,IAAI,SAACsW,EAAK/D,GAAM,IAAAu+E,EAAAC,EACpE,OAAOz8F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFgiB,GADL,IAEEwqD,IAAG,OAAExqD,QAAF,IAAEA,OAAF,UAAAw6E,EAAEx6E,EAAK8f,aAAP,IAAA06D,OAAA,UAAAC,EAAED,EAAYnB,kBAAd,IAAAoB,OAAA,EAAEA,EAAwBjwB,QAGjCovB,EAAmBE,GACnBp/E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,oBAAqB,qBAGjDA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAk3F,EAAEl3F,EAAOiR,YAAT,IAAAimF,OAAA,EAAEA,EAAav0F,UACxB3C,MAAO,CACLs8F,gBAAe,GAAAr7F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAw3F,EAAMx3F,EAAOiR,YAAb,IAAAumF,OAAA,UAAAC,EAAMD,EAAax3F,aAAnB,IAAAy3F,OAAA,EAAMA,EAAoB6E,iBAA1B,CAA2C9oC,MAGxD6oC,EARD,QAAAO,EAQiB5F,EAAQh3F,aARzB,IAAA48F,OAAA,UAAAC,EAQiBD,EAAeN,uBARhC,IAAAO,OAAA,EAQiBA,EAAgC5wF,IAAI,SAACsW,EAAK/D,GAAM,IAAAy+E,EAAAC,EACpE,OAAO38F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFgiB,GADL,IAEEwqD,IAAG,OAAExqD,QAAF,IAAEA,OAAF,UAAA06E,EAAE16E,EAAK8f,aAAP,IAAA46D,OAAA,UAAAC,EAAED,EAAYrB,kBAAd,IAAAsB,OAAA,EAAEA,EAAwBnwB,QAGjCovB,EAAmBE,GACnBp/E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,oBAAqB,oBAGnD5zD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CA3CW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAqGnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,0BACNgzF,aAAcyF,IAEhBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMirF,EACN75E,WA/Da,SAAC1G,EAAGkG,EAASE,GAC9Bw5E,IACA7E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,IA6DLM,aA/Be,SAACxG,EAAGkG,EAASE,GAAa,IAAA21E,EAAAyF,EAAAjH,EAAAkH,EAAAC,EACzCrG,EACEsF,EAAe,OAAGt8F,QAAH,IAAGA,OAAH,UAAA03F,EAAG13F,EAAOiR,YAAV,IAAAymF,OAAA,UAAAyF,EAAGzF,EAAa13F,aAAhB,IAAAm9F,OAAA,EAAGA,EAAoBb,gBAC5CA,EAAgBr3D,OAAOljB,EAAU,GAOjC,IAAMs6E,EAAa,QAAAe,GANnBpG,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,EAAEA,EAAavzF,UACxB3C,MAAO,CACLs8F,gBAAiBA,KAGSt8F,aAAX,IAAAo9F,OAAA,UAAAC,EAAGD,EAAed,uBAAlB,IAAAe,OAAA,EAAGA,EAAgCpxF,IAAI,SAACsW,EAAK/D,GAAM,IAAA8+E,EAAAC,EACpE,OAAOh9F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFgiB,GADL,IAEEwqD,IAAG,OAAExqD,QAAF,IAAEA,OAAF,UAAA+6E,EAAE/6E,EAAK8f,aAAP,IAAAi7D,OAAA,UAAAC,EAAED,EAAY1B,kBAAd,IAAA2B,OAAA,EAAEA,EAAwBxwB,QAGjCovB,EAAmBE,GACnBr8F,EAAMw3C,aAAaw/C,EAAS,oBAAqB,sBAiB/C91F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qCAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMhnD,MACb1J,KAAK,UAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAMjpC,YACbznB,KAAK,gBAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,SACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMwoC,OACbl5F,KAAK,WAEP5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,YAClBC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OArHFinB,EAqHsBjnB,EAAEC,OAAOy1B,MAAM,QApHzDoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,EAAAq+C,GAApB,OAAIl/E,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENnxB,MAAO,CACLu5D,WAAY,CACV7uB,IAAG,OAAEzuD,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,KAElB0H,WAAY,CACV9uB,IAAG,OAAEzuD,QAAF,IAAEA,OAAF,UAAAk/E,EAAEl/E,EAAKrN,YAAP,IAAAusF,OAAA,EAAEA,EAAWrJ,SAItB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAvBG,IAACkkB,KAuHV1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,kBAUHqyD,EAAMnxB,MAAMu5D,WAAW7uB,KAAO7rE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACvCxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMnxB,MAAMu5D,WAAW7uB,IAC5B1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,SACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMu6B,MACbjrF,KAAK,WAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,YACHvJ,MAAM,aACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAM1uC,UACbhiB,KAAK,eAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMzK,MACbjmD,KAAK,WAGT5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGs+C,GAAI,GACpBn3D,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,aACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMmoC,WACb74F,KAAK,kBAKb5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cCtWJnH,GAAS,CACb,OACA,QACA,UACA,eACA,YACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,YAAaxW,KAAM,UAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,KA0PT26F,GAvPe,SAACz9F,GAAU,IAAAk2F,EAAAC,EACjCz1F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACnB65E,EAAe,CACnB5pF,MAAO,GACP+K,QAAS,GACTwB,OAAQ,GACRo7E,IAAK,IAGDmC,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjD6/E,KAAK,EACLp7E,QAAQ,IAFVyE,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GASMU,GATNV,EAAA,GASoB,WAClBP,GAAQ,GACRwrE,EAAS2N,KAGLO,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC09B,EAAe,SAACjH,EAAM9/B,GAC1B2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAIrB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAIZmH,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMhnD,OAASgnD,EAAMj8C,SAAWi8C,EAAMz6C,QAAUy6C,EAAM2gC,KACpDsC,EAASF,SACLQ,EADa,OACA/2F,QADA,IACAA,OADA,UAAA42F,EACA52F,EAAOiR,YADP,IAAA2lF,OAAA,UAAAC,EACAD,EAAa52F,aADb,IAAA62F,OAAA,EACAA,EAAoBQ,SAC5BpyD,OAAOwxD,EAASD,UAAW,EAAGhjC,GAEzCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACLq3F,QAASN,IAGb95E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,eAAgB,aAG5CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACLq3F,QAAO,GAAAp2F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoBE,SAA1B,CAAmC7jC,MAG9Cv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,eAAgB,YAE9CN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAuDnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,0BACNgzF,aAlGgB,WACtB74E,GAAQ,IAkGF+4E,UAAQ,IAEV90F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoBkB,QAC1Bl1E,aA/Ba,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEK,EAAO,OAAGr3F,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBJ,QACpCA,EAAQpyD,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACLq3F,QAASA,IAGbr3F,EAAMw3C,aAAaw/C,EAAS,eAAgB,YAsBtC30E,WAnBW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAqBL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,uBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMhnD,MACb+N,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,UACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMj8C,QACbgD,SAAUo8E,EACV7zF,KAAK,UACLiwC,UAAQ,IAKV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,aAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,kBAUJ7X,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,UAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcG,IACxB/tB,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,qBAWJqyD,EAAMz6C,OAAOrG,OAAS,GAAK8gD,EAAM2gC,IAAIzhF,OAAS,IAC9CxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,aAEjBk2D,EAAMz6C,OAAOrG,OAAS,GACrBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMz6C,OACX1Y,MAAO,CAAEhD,MAAO,QAASO,OAAQ,WAItC41D,EAAM2gC,IAAIzhF,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAM2gC,IACX9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAO7CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eCpQNnH,GAAS,CACb,OACA,WACA,WACA,cACA,cACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,YACtB,CAAEwW,KAAM,OAAQxW,KAAM,YACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAkLX46F,GA/Ka,SAAC19F,GAAU,IAAAk2F,EAAAC,EACrCvjF,QAAQyR,IAAI,QAASrkB,GACrB,IAAMU,EAAUzB,KAEVmkC,EAAQ3tB,qBAAW8G,IAEzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6hF,EAAe,CACnBuH,SAAU,GACVv9E,SAAU,GACVmK,YAAa,GACbqzE,YAAa,IAGTtH,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAMMuI,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB+gD,EAAMmqC,UACNnqC,EAAMpzC,UACNozC,EAAMjpC,aACNipC,EAAMoqC,YAEFnH,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,UAAAC,EACCD,EAAa52F,aADd,IAAA62F,OAAA,EACCA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaD,IAGjB5gF,GAAQ,GACRwrE,EAAS2N,GACTM,EAAYJ,GACZt2F,EAAMw3C,aAAaw/C,EAAS,aAAc,iBAG1CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRwrE,EAAS2N,GACTp2F,EAAMw3C,aAAaw/C,EAAS,aAAc,gBAG5C5zD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BArCW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAuDb6L,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IAGLO,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAUtC,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,wBACNgzF,aAlFgB,WACtB74E,GAAQ,MAmFJ/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA1Ca,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACE8G,EAAW,OAAG99F,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACxCA,EAAY74D,OAAOljB,EAAU,GAC7Bi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAaA,IAGjB99F,EAAMw3C,aAAaw/C,EAAS,aAAc,gBAiCpC30E,WAlBW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAoBL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMmqC,SACbpjF,SAAUo8E,EACV7zF,KAAK,WACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMpzC,SACb7F,SAAUo8E,EACV7zF,KAAK,WACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMoqC,YACbrjF,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,KAGZ7xC,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eCxLNnH,GAAS,CAAC,OAAQ,QAAS,cAAe,UAE1C4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAqJTi7F,GAlJmB,SAAC/9F,GAAU,IAAAk2F,EAAAC,EAC3CvjF,QAAQyR,IAAI,UAAWrkB,GACvB,IAAMU,EAAUzB,KAEhBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACnB65E,EAAe,CACnB5pF,MAAO,GACP+d,YAAa,IAGT+rE,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAMMY,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IAGLO,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC0Z,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAAkH,EAAAhH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMhnD,OAASgnD,EAAMjpC,aACnBksE,EAASF,SACLyH,EADa,OACAh+F,QADA,IACAA,OADA,UAAA42F,EACA52F,EAAOiR,YADP,IAAA2lF,OAAA,UAAAC,EACAD,EAAa52F,aADb,IAAA62F,OAAA,EACAA,EAAoB9/E,QAC5BkuB,OAAOwxD,EAASD,UAAW,EAAGhjC,GAEzCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL+W,OAAQinF,IAGZ/gF,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,mBAAoB,YAGhDA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL+W,OAAM,GAAA9V,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoBpgF,QAA1B,CAAkCy8C,MAG5Cv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,mBAAoB,WAElDN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAuDnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,8BACNgzF,aA5EgB,WACtB74E,GAAQ,IA4EF+4E,UAAQ,IAEV90F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoBp/E,OAC1BoL,aA/Ba,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEjgF,EAAM,OAAG/W,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoB1gF,OACnCA,EAAOkuB,OAAOljB,EAAU,GACxBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL+W,OAAQA,IAGZ/W,EAAMw3C,aAAaw/C,EAAS,mBAAoB,WAsB1C30E,WAnBW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,OAsBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,uBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMhnD,MACb+N,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,KAGZ7xC,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cClJJnH,GAAS,CAAC,OAAQ,QAAS,UAAW,UAAW,UAEjD4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,eAAgBxW,KAAM,WAC9B,CAAEwW,KAAM,SAAUxW,KAAM,KAGpBm7F,GAAc,CAAC,OAAQ,UAAW,OAAQ,UAC1CC,GAAiB,CACrB,CAAE5kF,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAGpBq7F,GAAqB,CACzBr7F,KAAM,GACN+O,IAAK,IAGDukF,GAAe,CACnBrpB,IAAK,GACLx1D,QAAS,GACTw3D,QAAS,IAGLunB,GAAc,CAClBC,QAAQ,EACRC,UAAW,MA6RE4H,GA1RkB,SAACp+F,GAAU,IAAAk2F,EAAAC,EACpCz1F,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IAEzBlI,EAA0BJ,IAAMK,SAAS8hF,IAAzC7hF,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOm/C,EAAPj/C,EAAA,GAAck0E,EAAdl0E,EAAA,GACE3B,QAAQyR,IAAI,cAAcmvC,GAC5B,IAAAt2C,EAAwBjJ,IAAMK,UAAS,GAAvC6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO1E,EAAP2E,EAAA,GAAaF,EAAbE,EAAA,GACAE,EAAgCpJ,IAAMK,SAASgiF,IAA/Ch5E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOo5E,EAAPn5E,EAAA,GAAiBo5E,EAAjBp5E,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjDy4D,KAAK,IADPvvD,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GAGAG,GAHAH,EAAA,GAGsCvJ,IAAMK,SAAS6pF,KAArDvgF,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO0gF,EAAPzgF,EAAA,GAAoB0gF,EAApB1gF,EAAA,GACA4V,EAA8Cvf,IAAMK,SAASgiF,IAA7D7iE,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO+qE,EAAP9qE,EAAA,GAAwB+qE,EAAxB/qE,EAAA,GAMMvV,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IACTkI,EAAeH,KA8BXt4E,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA2H,EAAAzH,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMuZ,KAAOvZ,EAAMj8C,SACjBk/E,EAASF,SACLkI,EADa,OACFz+F,QADE,IACFA,OADE,UAAA42F,EACF52F,EAAOiR,YADL,IAAA2lF,OAAA,UAAAC,EACFD,EAAa52F,aADX,IAAA62F,OAAA,EACFA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAEvCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaW,IAGjBxhF,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,kBAAmB,iBAG/CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,kBAAmB,gBAEjDN,EAAYJ,IACZ7N,EAAS2N,KAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAyEbqsF,EAAqB,SAAC/oF,GAC1B2oF,EAAe/9F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV89F,GADS,GAAA99F,OAAAM,EAAA,EAAAN,CAAA,GAEXoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UA4BtC,OACEjL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,6BACNgzF,aAlJgB,WACtB74E,GAAQ,MAmJJ/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA/Ea,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,kBAAmB,gBAsEzC30E,WAnEW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAqEL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,UACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMj8C,QACbgD,SAnKS,SAAC5E,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAiK1BrJ,KAAK,UACLiwC,UAAQ,IAIV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAE/C,QAAS,aAChC4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OA3KJinB,EA2KwBjnB,EAAEC,OAAOy1B,MAAM,GA3KjCvuC,EA2KqC,WA1K/D2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAErB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAhBG,IAACkkB,EAAM9/B,KA6Kd5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcjnB,IACxB3G,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,mBAUHqyD,EAAMuZ,IAAIr6D,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACra,MAAO,CAAE/C,QAAS,YAC3B4D,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMuZ,IACX1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAMzCsD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAEq9C,UAAW,sBACxBx8C,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,SACHvJ,MAAM,SACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOkyF,EAAYv7F,KACnByX,SAAUmkF,EACV57F,KAAK,SAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,MACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOkyF,EAAYxsF,IACnB0I,SAAUmkF,EACV57F,KAAK,QAEP5B,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAE+6B,UAAW,WACvBl6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEpW,MAAO,CAAE6Z,OAAQ,gBACjB/Z,QAAQ,YACRzB,MAAM,UACNuY,QA3HW,WACzB,GAAIsnF,EAAgBhI,OAAQ,CAC1B,IAAMoI,EAAanrC,EAAMub,QACzB4vB,EAAW15D,OAAOs5D,EAAgB/H,UAAU,EAAE6H,GAC9C5V,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IACIub,QAAS4vB,UAGjBN,EAAYv7F,KAAK4P,OAAS,GAC5B+1E,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENub,QAAO,GAAA9tE,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAMizD,EAAMub,SAAZ,CAAqBsvB,OAE9BC,EAAeH,KAEf/6D,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4BAqGC,wBAUJtb,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQknF,GACRt8E,UAAWu8E,GACXjtF,KAAMuiD,EAAMub,QACZ5sD,aA9Jc,SAACxG,EAAGkG,EAASE,GACrC,IAAM+yC,EAAetB,EAAMub,QAC3Bja,EAAa7vB,OAAOljB,EAAS,GAC7B0mE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IACIub,QAASja,KAErBwpC,EAAeH,KAyJL97E,WAtJY,SAAC1G,EAAGkG,EAASE,GACnCu8E,EAAez8E,GACf28E,EAAmBj+F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACdg+F,GADa,IAEhBhI,QAAQ,EACRC,UAAWz0E,SAoJP7gB,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAAS4O,GAArD,OAGA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAASiH,GAArD,eClTNnH,GAAS,CAAC,OAAQ,QAAS,cAAe,cAAe,MAAO,UAEhE4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAoOX87F,GAjOO,SAAC5+F,GAAU,IAAAk2F,EAAAC,EACzBz1F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACnB65E,EAAe,CACnBrpB,IAAK,GACLxiD,YAAa,GACbs0E,YAAa,GACbhtF,IAAK,IAGDykF,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjDy4D,KAAK,IADPvvD,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GAIMm5E,GAJNn5E,EAAA,GAIqB,SAAC7H,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,WAQhC+R,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IAyBLvwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMuZ,KAAOvZ,EAAMjpC,aAAeipC,EAAMqrC,aAAerrC,EAAM3hD,KAC3D4kF,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,UAAAC,EACCD,EAAa52F,aADd,IAAA62F,OAAA,EACCA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaD,IAGjB5gF,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,aAAc,iBAG1CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,aAAc,gBAE5CN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAsDnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,sBACNgzF,aAzFkB,WACtB74E,GAAQ,MA0FN/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA5Be,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,aAAc,gBAmBtC30E,WAhBa,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAkBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,0BACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMqrC,YACbtkF,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,MACHvJ,MAAM,MACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM3hD,IACb0I,SAAUo8E,EACV7zF,KAAK,MACLiwC,UAAQ,IAKV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAlJFinB,EAkJsBjnB,EAAEC,OAAOy1B,MAAM,GAlJ/BvuC,EAkJmC,WAjJ7D2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAIrB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAlBG,IAACkkB,EAAM9/B,KAoJhB5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcjnB,IACxB3G,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,gBAWLqyD,EAAMuZ,IAAIr6D,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,aAEjBk2D,EAAMuZ,IAAIr6D,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMuZ,IACX1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAO7CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cCjPJnH,GAAS,CACX,OACA,QACA,cACA,UAEE4K,GAAY,CACd,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAGpBszF,GAAe,CACjB0I,MAAO,GACPC,YAAa,IAgIFC,GA9HQ,SAACh/F,GACpB,IAAQiR,EAASjR,EAATiR,KACFvQ,EAAUzB,KAEhBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA4CjJ,IAAMK,SAAS,IAA3D6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO+hF,EAAP9hF,EAAA,GAAuB+hF,EAAvB/hF,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,IAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAGArJ,IAAMkK,UAAU,WAAM,IAAAghF,EAAAC,EAClBF,EAAkB,QAACjuF,QAAD,IAACA,OAAD,UAAAkuF,EAACluF,EAAMjR,aAAP,IAAAm/F,OAAA,EAACA,EAAahG,YAChC1Q,EAAQ,OAACx3E,QAAD,IAACA,OAAD,UAAAmuF,EAACnuF,EAAMjR,aAAP,IAAAo/F,OAAA,EAACA,EAAajG,YACvB,IAGH,IAAMxC,EAAe,SAAChhF,GAClB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAEHoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAYpCovF,EAAkB,WACpBt+E,GAAQ,IAKNiB,EAAc,WAChBjB,GAAQ,IAUN4I,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAytF,EAAA3C,EAAA1F,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OANd+gD,EAAMurC,YAAYrsF,OAAS,GAAK8gD,EAAMsrC,MAAMpsF,OAAS,EAsBrD0wB,MAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,QACVG,IAAK,6CAlBK,OAEIvL,QAFJ,IAEIA,IAFJ,QAAAouF,EAEIpuF,EAAMjR,aAFV,IAAAq/F,GAEIA,EAAalG,WAC/BnC,EAAU,CAENr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAO,CACHm5F,UAAW3lC,IAGnB0rC,EAAkB,SAAAxC,EAAC1F,EAAQh3F,aAAT,IAAA08F,OAAA,EAACA,EAAevD,YAElCl8E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,iBAAkB,KAdhC,wBAAAzkF,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAwBnB,OACInR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACIx0F,KAAM,0CACNkzF,UAAQ,IAEZ90F,EAAAC,EAAAC,cAACm2F,GAAD,CACIxgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMguF,EACN58E,WA3DG,SAAC1G,EAAGkG,EAASE,GAC5B0mE,EAASj1B,GACT+nC,OA2DQr6F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACIje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,gDAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACI/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACI4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAK,OAAEqnD,QAAF,IAAEA,OAAF,EAAEA,EAAOsrC,MACdh8F,KAAK,UAET5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAK,OAAEqnD,QAAF,IAAEA,OAAF,EAAEA,EAAOurC,YACdj8F,KAAK,iBAGb5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACIpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eCpIlBnH,GAAS,CACX,OACA,QACA,QACA,UACA,UAGE4K,GAAY,CACd,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,YAAaxW,KAAM,SAC3B,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAIpBwzF,GAAc,CAChBC,QAAQ,EACRC,UAAW,MAETJ,GAAe,CACjB5pF,MAAO,GACP61B,MAAO,KACP9qB,QAAS,IA2LE+nF,GAxLgB,SAACt/F,GAC5B,IAAQiR,EAASjR,EAATiR,KACFvQ,EAAUzB,KAChB2T,QAAQyR,IAAR,OAAYpT,QAAZ,IAAYA,OAAZ,EAAYA,EAAMjR,MAAO,eACzB,IAAMojC,EAAQnvB,IAAMwB,WAAW8G,IAC/BlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAgCjJ,IAAMK,SAASgiF,IAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,IAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAwBMq5E,EAAe,SAAChhF,GAClB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAEHoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAapC+R,EAAc,WAChBjB,GAAQ,IAcN4I,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAz9E,EAAA69E,EAAAF,EAAAM,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OATd+gD,EAAMhnD,OACNgnD,EAAMnxB,OACNmxB,EAAMj8C,QASFk/E,EAASF,SACHp9E,EADW,OACFlI,QADE,IACFA,OADE,EACFA,EAAMjR,OACdilC,OAAOwxD,EAASD,UAAW,EAAGhjC,GAErCwjC,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA42F,EAAE52F,EAAOiR,YAAT,IAAA2lF,OAAA,EAAEA,EAAaj0F,UACxB3C,MAAOmZ,GAEX8D,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,uBAAwB,WAEpDpkF,QAAQyR,IAAIoyE,EAAU,UAGtBO,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAK,GAAAiB,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OACG0Q,QADH,IACGA,OADH,EACGA,EAAMjR,OADT,CACgBwzD,KAGzBv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,uBAAwB,UAGxD5zD,EAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CA7BK,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAiCnB,OACInR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACIx0F,KAAM,kCACNkzF,UAAQ,IAEZ90F,EAAAC,EAAAC,cAACm2F,GAAD,CACIxgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMjR,MACZqiB,WAlEG,SAAC1G,EAAGkG,EAASE,GAC5B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAiED3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACIje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,wCAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACI/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACI4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMhnD,MACb1J,KAAK,UAET5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACIC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,YAClBC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACNxZ,EAAAC,EAAAC,cAAA,SACIgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAnIpBinB,EAmIwCjnB,EAAEC,OAAOy1B,MAAM,QAlIzEoiD,GAAY7wD,GACPvkB,KAAK,SAACC,GAAQ,IAAA60B,EACSgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACX1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,IAEJnxB,MAAK,OAAE/jB,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,OAEtB/wD,EAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIhBiC,MAAM,SAACC,GACJ9L,QAAQyR,IAAI3F,KAhBH,IAACkkB,KAqIM1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACXzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACItW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHf,kBAUPqyD,EAAMnxB,OAASnhC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACtBxZ,EAAAC,EAAAC,cAAA,OACI2hB,IAAI,YACJC,IAAKwwC,EAAMnxB,MACXhiC,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAI7CsD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,UACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAMj8C,QACbzU,KAAK,aAGb5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACIpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eC5MlBnH,GAAS,CACX,OACA,OACA,QACA,UACA,OACA,UAGE4K,GAAY,CACd,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAItBwzF,GAAc,CAChBC,QAAQ,EACRC,UAAW,MAETJ,GAAe,CACjBtzF,KAAM,GACNiqE,IAAK,KACL50C,QAAS,GACTonE,KAAM,IAmOKC,GAjOQ,SAACx/F,GAAU,IAAAq/F,EACtBpuF,EAASjR,EAATiR,KACFvQ,EAAUzB,KAEVmkC,EAAQnvB,IAAMwB,WAAW8G,IAC/BlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GAEA2I,EAAgCjJ,IAAMK,SAASgiF,IAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,IAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GA0BMq5E,EAAe,SAAChhF,GAClB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAEHoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAYpCovF,EAAkB,WACpB9S,EAAS2N,IACTn5E,GAAQ,IAKNiB,EAAc,WAChBjB,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,KAiBVzwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAutF,EAAAvI,EAAAuC,EAAAnC,EAAAF,EAAAG,EAAAwI,EAAArI,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAXd+gD,EAAM1wD,MACN0wD,EAAMuZ,KACNvZ,EAAMr7B,SACNq7B,EAAM+rC,KAUF9I,EAASF,SACH4C,EADW,OACCloF,QADD,IACCA,OADD,UAAAkuF,EACCluF,EAAMjR,aADP,IAAAm/F,OAAA,EACCA,EAAahG,WACrBl0D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAExCwjC,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA42F,EAAE52F,EAAOiR,YAAT,IAAA2lF,OAAA,EAAEA,EAAaj0F,UACxB3C,MAAO,CACHm5F,UAAWA,IAGnBl8E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,cAAe,eAG3CA,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACHm5F,UAAS,GAAAl4F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAi3F,EAAMj3F,EAAOiR,YAAb,IAAAgmF,OAAA,UAAAwI,EAAMxI,EAAaj3F,aAAnB,IAAAy/F,OAAA,EAAMA,EAAoBtG,WAA1B,CAAqC3lC,MAGtDv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,cAAe,cAG/C5zD,EAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CA7BK,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAgDnB,OACInR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACIx0F,KAAM,wBACNgzF,aAAcyF,IAElBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACIxgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEA,QAAF,IAAEA,OAAF,UAAAouF,EAAEpuF,EAAMjR,aAAR,IAAAq/F,OAAA,EAAEA,EAAalG,UACnBh3E,aAzBK,SAACxG,EAAGkG,EAASE,GAAa,IAAAq9E,EACvCpI,EACEmC,EAAS,OAAGloF,QAAH,IAAGA,OAAH,UAAAmuF,EAAGnuF,EAAMjR,aAAT,IAAAo/F,OAAA,EAAGA,EAAajG,UAC/BA,EAAUl0D,OAAOljB,EAAU,GAC3Bi1E,EAAU,CACNr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAO,CACHm5F,UAAWA,IAInBn5F,EAAMw3C,aAAaw/C,EAAS,cAAe,cAe/B30E,WA9FG,SAAC1G,EAAGkG,EAASE,GAC5Bw5E,IACA7E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MA6FD3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACIje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,yBAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACI/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACI4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAM1wD,KACbA,KAAK,SAEL5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACIC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,YAClBC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACNxZ,EAAAC,EAAAC,cAAA,SACIgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OA/JxBinB,EA+J4CjnB,EAAEC,OAAOy1B,MAAM,QA9J7EoiD,GAAY7wD,GACPvkB,KAAK,SAACC,GAAQ,IAAA60B,EACSgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACX1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,IAEJuZ,IAAG,OAAEzuD,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,OAEpB/wD,EAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIhBiC,MAAM,SAACC,GACJ9L,QAAQyR,IAAI3F,KAhBH,IAACkkB,KAiKU1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACXzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACItW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHf,mBASF,OAALqyD,QAAK,IAALA,OAAA,EAAAA,EAAOuZ,MAAO7rE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACrBxZ,EAAAC,EAAAC,cAAA,OACI2hB,IAAI,YACJC,IAAG,OAAEwwC,QAAF,IAAEA,OAAF,EAAEA,EAAOuZ,IACZ1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIjDsD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAM+rC,KACbz8F,KAAK,SAET5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAMr7B,QACbr1B,KAAK,aAGb5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACIpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eChPlBnH,GAAS,CAAC,OAAQ,QAAS,QAAS,OAAQ,UAAW,UACvD4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAEpBwzF,GAAc,CAClBC,QAAQ,EACRC,UAAW,MAEPJ,GAAe,CACnB5pF,MAAO,GACPugE,IAAK,KACLzzD,KAAM,GACNomF,IAAK,GACLC,KAAM,IAuOOC,GApOS,SAAC5/F,GAAU,IAAA6/F,EACzB5uF,EAASjR,EAATiR,KACFvQ,EAAUzB,KAEVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAgCjJ,IAAMK,SAASgiF,IAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,IAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAsBMq5E,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAUhCovF,EAAkB,WACtBt+E,GAAQ,GACRwrE,EAASj1B,IAGLt1C,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,KAWRzwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAutF,EAAAvI,EAAAuC,EAAAnC,EAAAF,EAAAsI,EAAAhI,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAPhB+gD,EAAMhnD,OAASgnD,EAAMuZ,KAAOvZ,EAAMl6C,MAAQk6C,EAAMksC,KAAOlsC,EAAMmsC,KAS3DlJ,EAASF,SACL4C,EADa,OACDloF,QADC,IACDA,OADC,UAAAkuF,EACDluF,EAAMjR,aADL,IAAAm/F,OAAA,EACDA,EAAahG,WACrBl0D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAExCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA42F,EAAE52F,EAAOiR,YAAT,IAAA2lF,OAAA,EAAEA,EAAaj0F,UACxB3C,MAAO,CACLm5F,UAAWA,IAGfl8E,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,IACZt2F,EAAMw3C,aAAaw/C,EAAS,iBAAkB,eAG9CpkF,QAAQyR,IAAIoyE,EAAU,UAEtBO,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACLm5F,UAAS,GAAAl4F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAM0Q,QAAN,IAAMA,OAAN,UAAAmuF,EAAMnuF,EAAMjR,aAAZ,IAAAo/F,OAAA,EAAMA,EAAajG,WAAnB,CAA8B3lC,MAG3Cv2C,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,IACZt2F,EAAMw3C,aAAaw/C,EAAS,iBAAkB,cAGhD5zD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CAnCW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAqDnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,6BACNgzF,aAAcyF,IAEhBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEA,QAAF,IAAEA,OAAF,UAAA4uF,EAAE5uF,EAAMjR,aAAR,IAAA6/F,OAAA,EAAEA,EAAa1G,UACnBh3E,aAxBa,SAACxG,EAAGkG,EAASE,GAAa,IAAAs9E,EACzCrI,EACEmC,EAAS,OAAGloF,QAAH,IAAGA,OAAH,UAAAouF,EAAGpuF,EAAMjR,aAAT,IAAAq/F,OAAA,EAAGA,EAAalG,UAC/BA,EAAUl0D,OAAOljB,EAAU,GAC3Bi1E,EAAU,CACRr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAO,CACLm5F,UAAWA,IAIfn5F,EAAMw3C,aAAaw/C,EAAS,iBAAkB,cAcxC30E,WA1FW,SAAC1G,EAAGkG,EAASE,GAC9Bw5E,IACA7E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAyFL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,mCAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMhnD,MACb1J,KAAK,UAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMl6C,KACbxW,KAAK,SAEP5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,YAClBC,QAAS,GAET2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAnKJinB,EAmKwBjnB,EAAEC,OAAOy1B,MAAM,QAlK3DoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENuZ,IAAG,OAAEzuD,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,OAElB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAhBG,IAACkkB,KAqKR1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,kBAUHqyD,EAAMuZ,KACL7rE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMuZ,IACX1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAKzCsD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,MACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMksC,IACb58F,KAAK,QAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAS,EACThqD,KAAM,EACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAMmsC,KACb78F,KAAK,UAGT5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eCzPNnH,GAAS,CACX,OACA,QACA,UAGE4K,GAAY,CACd,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAmHXg9F,GA9GG,SAAC9/F,GACf,IAAQiR,EAASjR,EAATiR,KACFvQ,EAAUzB,KAEhBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS,IAAzC6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO1Q,EAAP2Q,EAAA,GAAc4iF,EAAd5iF,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS,CACrC9H,MAAO,KADX8Q,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAKArJ,IAAMkK,UAAU,WACZ4hF,EAAS,QAAC9uF,QAAD,IAACA,OAAD,EAACA,EAAMjR,QAChByoF,EAAQ,OAACx3E,QAAD,IAACA,OAAD,EAACA,EAAMjR,QAChB,IAGH,IAeMu7F,EAAkB,WACpBt+E,GAAQ,IAKNiB,EAAc,WAChBjB,GAAQ,IAYN4I,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAI,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OARd+gD,EAAMhnD,MAAMkG,OAAS,EAmBrB0wB,MAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,QACVG,IAAK,6CAXTw6E,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA42F,EAAE52F,EAAOiR,YAAT,IAAA2lF,OAAA,EAAEA,EAAaj0F,UACxB3C,MAAOwzD,GAEXusC,EAAS,CAAC/I,EAAQh3F,QAClBid,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,YAAa,KAT3B,wBAAAzkF,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAkBnB,OACInR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACIx0F,KAAM,mBACNkzF,UAAQ,IAEZ90F,EAAAC,EAAAC,cAACm2F,GAAD,CACIxgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMzE,EACN6V,WAtDO,SAAC1G,EAAGkG,EAASE,GAC5B0mE,EAASj1B,GACT+nC,OAsDIr6F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACIje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,wBAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACI/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACI4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAhFC,SAAC5E,GAClB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFizD,GADC,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAEHoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UA8EtBA,MAAK,OAAEqnD,QAAF,IAAEA,OAAF,EAAEA,EAAOhnD,MACd1J,KAAK,WAGb5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACIpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cCjHdnH,GAAS,CAAC,OAAQ,QAAS,cAAe,UAC1C4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAoGTk9F,GAjGc,SAAChgG,GAC5B,IAAMU,EAAUzB,KAEhBoV,GADcoB,qBAAW8G,IACDtI,IAAMK,UAAS,IAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS,CACvC9H,MAAO,GACP+d,YAAa,KAFfpN,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GAIAE,EAAkCpJ,IAAMK,SAAS,IAAjDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOg+E,EAAP/9E,EAAA,GAAkBg+E,EAAlBh+E,EAAA,GACArJ,IAAMkK,UAAU,WAAM,IAAAy4E,EACpB0E,EAAa,QAACt7F,QAAD,IAACA,OAAD,UAAA42F,EAAC52F,EAAOiR,YAAR,IAAA2lF,OAAA,EAACA,EAAa52F,SAC1B,IAEH,IAAMu7F,EAAkB,WACtBt+E,GAAQ,IAGJiB,EAAc,WAClBjB,GAAQ,IAEJ05E,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC0Z,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAklF,EAAAE,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdukF,EAAU,CACdr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAOwzD,GAETv2C,GAAQ,GACRq+E,EAAa,CAAC9nC,IACdxzD,EAAMw3C,aAAaw/C,EAAQ,sBAAsB,IAP7B,wBAAAzkF,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAcnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,kCACNkzF,UAAQ,EACRF,aAAcyF,IAEhBr6F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAMoqF,EACNh5E,WAfa,SAAC1G,EAAGkG,EAASE,GAC9Bw5E,IACA9S,EAAS5mE,MAgBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,sCAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqnD,EAAMhnD,MACb1J,KAAK,UAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACTinE,WAAW,EACXhqD,KAAM,GACN7c,SAAUo8E,EACVxqF,MAAOqnD,EAAMjpC,YACbznB,KAAK,iBAGT5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cC/FJnH,GAAS,CACb,OACA,QACA,cACA,cACA,cACA,MACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAwOXm9F,GArOgB,SAACjgG,GAAU,IAAAk2F,EAAAC,EAClCz1F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACnB65E,EAAe,CACnBrpB,IAAK,GACLxiD,YAAa,GACb21E,YAAa,GACbrB,YAAa,GACbhtF,IAAK,IAGDykF,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjDy4D,KAAK,IADPvvD,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GAIMm5E,GAJNn5E,EAAA,GAIqB,SAAC7H,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,WAQhC+R,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IAyBLvwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMuZ,KAAOvZ,EAAMjpC,aAAeipC,EAAMqrC,aAAerrC,EAAM3hD,KAC3D4kF,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,UAAAC,EACCD,EAAa52F,aADd,IAAA62F,OAAA,EACCA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaD,IAGjB5gF,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,oBAAqB,iBAGjDA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,oBAAqB,gBAEnDN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAsDnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,0BACNgzF,aAzFkB,WACtB74E,GAAQ,MA0FN/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA5Be,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,oBAAqB,gBAmB7C30E,WAhBa,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAkBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,8BAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM0sC,YACb3lF,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMqrC,YACbtkF,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,MACHvJ,MAAM,MACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM3hD,IACb0I,SAAUo8E,EACV7zF,KAAK,MACLiwC,UAAQ,IAKV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAE/C,QAAS,aAChC4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OA5JFinB,EA4JsBjnB,EAAEC,OAAOy1B,MAAM,GA5J/BvuC,EA4JmC,WA3J7D2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAIrB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAlBG,IAACkkB,EAAM9/B,KA8JhB5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcjnB,IACxB3G,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,mBAWHqyD,EAAMuZ,IAAIr6D,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMuZ,IACX1sE,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAM3CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cC7PJnH,GAAS,CACX,OACA,mBACA,gBACA,UAGE4K,GAAY,CACd,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,mBACtB,CAAEwW,KAAM,YAAaxW,KAAM,gBAC3B,CAAEwW,KAAM,SAAUxW,KAAM,KAEtBwzF,GAAc,CAChBC,QAAQ,EACRC,UAAW,MAGT2J,GAAc,CAChBC,gBAAiB,GACjBC,aAAc,IAEZC,GAAkB,CACpBzuF,IAAK,GACL/O,KAAM,IA6PKy9F,GA3PI,SAACvgG,GAAU,IAAAwgG,EAAAC,EAClBxvF,EAASjR,EAATiR,KACR2B,QAAQyR,IAAI,eAAZ,OAA4BpT,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAMjR,OAClC,IAAMU,EAAUzB,KACVmkC,EAAQnvB,IAAMwB,WAAW8G,IAC/BlI,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAgCjJ,IAAMK,SAASgiF,IAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GAGAE,EAAgCpJ,IAAMK,SAASgsF,IAA/ChjF,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOqjF,EAAPpjF,EAAA,GAAiBqjF,EAAjBrjF,EAAA,GACAC,EAA0BtJ,IAAMK,SAAS6rF,IAAzC3iF,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOqjF,EAAPpjF,EAAA,GAAcqjF,EAAdrjF,EAAA,GAEMqsB,EAAe,SAAC1zB,EAAKoM,EAAK/D,EAAGsiF,GAC/B,IAAIC,EAAYH,EAChBG,EAAUD,GAAWtiF,GAAGrI,GAAOoM,EAC/Bs+E,EAAStgG,OAAAQ,EAAA,EAAAR,CAAA,GAAKwgG,KAoBZhrD,EAAW,WACb,SACI6qD,EAAMR,kBACNQ,EAAMP,eAQRx6E,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAz9E,EAAA69E,EAAAF,EAAAM,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdsjC,EACI0gD,EAASF,SACHp9E,EADW,OACFlI,QADE,IACFA,OADE,EACFA,EAAMjR,OACdilC,OAAOwxD,EAASD,UAAW,EAAGoK,GAErC5J,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA42F,EAAE52F,EAAOiR,YAAT,IAAA2lF,OAAA,EAAEA,EAAaj0F,UACxB3C,MAAOmZ,GAEX8D,GAAQ,GACR4jF,EAASV,IACTzJ,EAAYJ,IACZt2F,EAAMw3C,aAAaw/C,EAAS,UAAW,WAGvCA,EAAU,CACNr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAK,GAAAiB,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAM0Q,QAAN,IAAMA,OAAN,EAAMA,EAAMjR,OAAZ,CAAmB4gG,KAE5B3jF,GAAQ,GACR4jF,EAASV,IACTngG,EAAMw3C,aAAaw/C,EAAS,UAAW,UAG3C5zD,EAAM1mB,SAAS,CACXlE,MAAM,EACN6D,SAAU,QACVG,IAAK,4CA5BK,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GA4Cb2uF,EAAgB,SAAC7qF,EAAKhK,GACxBw0F,EAAYpgG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKmgG,GAAN,GAAAngG,OAAAM,EAAA,EAAAN,CAAA,GAAiB4V,EAAMhK,MA0BhC80F,EAAc,SAAC9qF,EAAKhK,GACtB00F,EAAStgG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKqgG,GAAN,GAAArgG,OAAAM,EAAA,EAAAN,CAAA,GAAc4V,EAAMhK,MAMhC,OADAyG,QAAQyR,IAAIu8E,EAAO,SAEf1/F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACIx0F,KAAM,qBACNgzF,aAxBQ,WACpBY,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,KACnCt5E,GAAQ,MAwBA/b,EAAAC,EAAAC,cAACm2F,GAAD,CACIxgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMjR,MACZqiB,WApHG,SAAC1G,EAAGkG,EAASE,GAC5B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD8+E,EAAStgG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACFqgG,GADC,IAEJR,gBAAe,OAAEv+E,QAAF,IAAEA,OAAF,EAAEA,EAASu+E,gBAC1BC,aAAY,OAAEx+E,QAAF,IAAEA,OAAF,EAAEA,EAASw+E,iBA+Gfl+E,aA1CK,SAACxG,EAAGkG,EAASE,GAC9B,IAAIi1E,EACEkK,EAAa,OAAGjwF,QAAH,IAAGA,OAAH,EAAGA,EAAMjR,MAC5BkhG,EAAcj8D,OAAOljB,EAAU,GAC/Bi1E,EAAU,CACNr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAOkhG,GAEXlhG,EAAMw3C,aAAaw/C,EAAS,UAAW,YAoC/B91F,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACIje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,GACNtX,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACZlL,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQi1F,YAAat1F,MAAO,CAAElB,QAAS,SACnD+B,EAAAC,EAAAC,cAACC,EAAA,EAAD,kCAMRH,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACI/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACI4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,kBACHvJ,MAAM,mBACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU,SAACoB,GAAD,OAAOslF,EAAY,kBAAmBtlF,EAAEC,OAAOzP,QACzDA,MAAOy0F,EAAMR,kBAEjBl/F,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAIW,MAAI,EAACymF,aAAc,QAC7B9hG,eAAgB,iBAChB6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG6B,WAAY,SACpCC,eAAgB,iBAChB6B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACItV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTid,KAAM,EACN7c,SAAU,SAACgI,GAAD,OAASy+E,EAAc,OAAQz+E,EAAI3G,OAAOzP,QACpDA,MAAK,OAAEu0F,QAAF,IAAEA,OAAF,EAAEA,EAAU59F,KACjBA,KAAK,UAGb5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,MACN1C,QAAQ,WACRga,WAAS,EACTid,KAAM,EACN7c,SAAU,SAACgI,GAAD,OAASy+E,EAAc,MAAOz+E,EAAI3G,OAAOzP,QACnDA,MAAK,OAAEu0F,QAAF,IAAEA,OAAF,EAAEA,EAAU7uF,IACjB/O,KAAK,SAGb5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,EACX1Z,MAAO,CAAElB,QAAS,OAAQE,eAAgB,WAC1C6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAlF/D,WACb,IAAMhG,EAAI,GAAAhQ,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAOqgG,QAAP,IAAOA,OAAP,EAAOA,EAAOP,cAAd,CAA4BK,IACtCO,EAAY,eAAgBhwF,GAC5B0vF,EAAYL,MA+EoB,UAMC,OAALM,QAAK,IAALA,OAAA,UAAAJ,EAAAI,EAAOP,oBAAP,IAAAG,OAAA,EAAAA,EAAqB9tF,QAAS,IAA9B,OAAmCkuF,QAAnC,IAAmCA,OAAnC,UAAAH,EAAmCG,EAAOP,oBAA1C,IAAAI,OAAA,EAAmCA,EAAqBx0F,IAAI,SAAC0P,EAAG6C,GAC5D,OAAOtd,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACHtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACTid,KAAM,EACN7c,SAAU,SAACgI,GAAD,OAASsnB,EAAa,OAAQtnB,EAAI3G,OAAOzP,MAAOqS,EAAG,iBAC7DrS,MAAK,OAAEwP,QAAF,IAAEA,OAAF,EAAEA,EAAG7Y,KACVA,KAAK,UAGb5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,GACX7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACIP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,MACN1C,QAAQ,WACRga,WAAS,EACTid,KAAM,EACN7c,SAAU,SAACgI,GAAD,OAASsnB,EAAa,MAAOtnB,EAAI3G,OAAOzP,MAAOqS,EAAG,iBAC5DrS,MAAK,OAAEwP,QAAF,IAAEA,OAAF,EAAEA,EAAG9J,IACV/O,KAAK,SAGb5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMunF,MAAI,EAACrnF,GAAI,EACX1Z,MAAO,CAAElB,QAAS,OAAQE,eAAgB,WAC1C6B,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,CAAY8V,QAAS,SAACsL,GAAD,OAlJxC,SAACA,EAAK/D,EAAGoiF,GAC9B,IAAMS,EAAM9gG,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAOqgG,QAAP,IAAOA,OAAP,EAAOA,EAAOP,cAC1BgB,EAAOp8D,OAAOzmB,EAAG,GACjBqiF,EAAStgG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKqgG,GAAN,IAAaP,aAAcgB,KA+ImCC,CAAiB/+E,EAAK/D,EAAGoiF,IACnDvgG,MAAO,CAAE3B,MAAO,MAAOgZ,OAAQ,qBAY/DxW,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACIpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAgB4wE,EAASF,OAAS,UAAY,OAC/Dr1F,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAvNR,WAChBgG,GAAQ,GACR4jF,EAASV,MAqNO,eCpQhBppF,GAAS,CACb,OACA,eACA,YACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,UAC3B,CAAEwW,KAAM,YAAaxW,KAAM,OAC3B,CAAEwW,KAAM,OAAQxW,KAAM,KA4MTy+F,GAzMa,SAACvhG,GAAU,IAAAw3F,EAAAC,EAC/B/2F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACnB65E,EAAe,CACnBr9E,OAAQ,GACRo7E,IAAK,IAGDmC,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjD6/E,KAAK,EACLp7E,QAAQ,IAFVyE,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GASMU,GATNV,EAAA,GASoB,WAClBP,GAAQ,GACRwrE,EAAS2N,KAGLvsD,EAAe,SAACjH,EAAM9/B,GAC1B2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAIrB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAIZmH,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMz6C,QAAUy6C,EAAM2gC,KACpBsC,EAASF,SACLQ,EADa,OACA/2F,QADA,IACAA,OADA,UAAA42F,EACA52F,EAAOiR,YADP,IAAA2lF,OAAA,UAAAC,EACAD,EAAa52F,aADb,IAAA62F,OAAA,EACAA,EAAoBQ,SAC5BpyD,OAAOwxD,EAASD,UAAW,EAAGhjC,GAEzCwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACLq3F,QAASN,IAGb95E,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,mBAAoB,aAGhDA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACLq3F,QAAO,GAAAp2F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoBE,SAA1B,CAAmC7jC,MAG9Cv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,mBAAoB,YAElDN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GA0CnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,8BACNgzF,aA9EgB,WACtB74E,GAAQ,IA8EF+4E,UAAQ,IAEV90F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAw3F,EAAEx3F,EAAOiR,YAAT,IAAAumF,OAAA,UAAAC,EAAED,EAAax3F,aAAf,IAAAy3F,OAAA,EAAEA,EAAoBJ,QAC1Bh1E,WAlBW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAoBL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,uBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KAIE/d,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,aAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,kBAUJ7X,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,UAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcG,IACxB/tB,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,qBAWJqyD,EAAMz6C,OAAOrG,OAAS,GAAK8gD,EAAM2gC,IAAIzhF,OAAS,IAC9CxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,aACfgB,MAAO,CAAE/C,QAAS,aAEjBk2D,EAAMz6C,OAAOrG,OAAS,GACrBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMz6C,OACX1Y,MAAO,CAAEhD,MAAO,QAASO,OAAQ,WAItC41D,EAAM2gC,IAAIzhF,OAAS,GAClBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAE+6B,UAAW,UAAYrhB,GAAI,EAAGs+C,GAAI,EAAG39C,MAAI,GACtDxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAM2gC,IACX9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAO7CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,eC9MRnH,GAAS,CACb,OACA,mBACA,eACA,cACA,aACA,cACA,cACA,OACA,UAEI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,oBAC3B,CAAEwW,KAAM,YAAaxW,KAAM,gBAC3B,CAAEwW,KAAM,WAAYxW,KAAM,eAC1B,CAAEwW,KAAM,WAAYxW,KAAM,cAC1B,CAAEwW,KAAM,OAAQxW,KAAM,kBACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,QACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAElBszF,GAAe,CACnBoL,iBAAkB,GAClBC,aAAc,GACdl3E,YAAa,GACbm3E,WAAY,GACZC,eAAgB,GAChB/D,YAAa,GACbtkF,KAAM,IAEFg9E,GAAc,CAClBC,QAAQ,EACRC,UAAW,MA0PEoL,GAxPW,SAAC5hG,GACzB4S,QAAQyR,IAAI,eAAgBrkB,GAC5B,IAAQiR,EAASjR,EAATiR,KACFvQ,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IACzBlI,EAAgCJ,IAAMK,SAAS,IAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOwtF,EAAPttF,EAAA,GAAiButF,EAAjBvtF,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS8hF,IAAzCj5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GACAE,EAAwBpJ,IAAMK,UAAS,GAAvCgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO7E,EAAP8E,EAAA,GAAaL,EAAbK,EAAA,GACAC,EAAgCtJ,IAAMK,SAASgiF,IAA/C94E,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOk5E,EAAPj5E,EAAA,GAAiBk5E,EAAjBl5E,EAAA,GACAG,EAAoC1J,IAAMK,SAAS,CACjDktF,kBAAkB,EAClBC,cAAc,IAFhB7jF,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOq2E,EAAPp2E,EAAA,GAAAA,EAAA,GAOA3J,IAAMkK,UAAU,WACd2jF,EAAY,QAAC7wF,QAAD,IAACA,OAAD,EAACA,EAAMjR,QACnByoF,EAAQ,OAACx3E,QAAD,IAACA,OAAD,EAACA,EAAMjR,QACd,QAACiR,QAAD,IAACA,OAAD,EAACA,EAAMjR,QACV,IAAMke,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,KAELO,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAGhC09B,EAAe,SAACjH,EAAM9/B,GAC1B2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAErB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAGZmH,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAolF,EAAA,OAAAtlF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB+gD,EAAMguC,kBACNhuC,EAAMiuC,cACNjuC,EAAMjpC,aACNipC,EAAMkuC,YACNluC,EAAMmuC,gBACNnuC,EAAMoqC,aACNpqC,EAAMl6C,MAEF09E,EAAU,GACVP,EAASF,QACXS,EAAU,CACRr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAOwzD,GAETv2C,GAAQ,KAER+5E,EAAU,CACRr0F,UAAS,OAAEsO,QAAF,IAAEA,OAAF,EAAEA,EAAMtO,UACjB3C,MAAK,GAAAiB,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAM0Q,QAAN,IAAMA,OAAN,EAAMA,EAAMjR,OAAZ,CAAmBwzD,KAE1Bv2C,GAAQ,IAEVjd,EAAMw3C,aAAaw/C,EAAS,iBAAkB,SAC9CN,EAAYJ,IACZ7N,EAAS2N,KAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BA/BW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAoDnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,4BACNgzF,aA7FgB,WACtB74E,GAAQ,IA6FF+4E,UAAQ,IAEV90F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAM4wF,EACNx/E,WA7BW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpDnP,QAAQyR,IAAI,UAAWxC,MA6BnB3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBAnCc,SAACjpF,GACzBw3E,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENjpC,YAAatZ,MAiCLopF,YAAa7mC,EAAMjpC,cAErBrpB,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBAjCc,SAACjpF,GACzBw3E,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,IAENkuC,WAAYzwF,MA+BJopF,YAAa7mC,EAAMkuC,aAErBxgG,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,iBACHvJ,MAAM,iBACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMmuC,eACbpnF,SAAUo8E,EACV7zF,KAAK,iBACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMoqC,YACbrjF,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,OACHvJ,MAAM,OACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMl6C,KACbiB,SAAUo8E,EACV7zF,KAAK,OACLiwC,UAAQ,IAGV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAE/C,QAAS,aAChC4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OACRkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,uBAGpCnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcwN,iBACxBp7B,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,mBAUHqyD,EAAMguC,iBAAiB9uF,OAAS,GAC/BxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACra,MAAO,CAAE/C,QAAS,YAC3B4D,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMguC,iBACXnhG,MAAO,CAAEhD,MAAO,QAASO,OAAQ,WAIvCsD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OACRkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,mBAGpCnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcyN,aACxBr7B,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,mBAUHqyD,EAAMiuC,aAAa/uF,OAAS,GAC3BxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACra,MAAO,CAAE/C,QAAS,YAC3B4D,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMiuC,aACXphG,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAM3CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAAS4O,GAArD,OAGA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAASiH,GAArD,eClRJnH,GAAS,CAAC,OAAQ,QAAS,QAAS,cAAe,MAAO,UAE1D4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,YAAaxW,KAAM,SAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,SAAUxW,KAAM,KA0OXi/F,GAvOgB,SAAC/hG,GAAU,IAAAk2F,EAAAC,EAClCz1F,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IAEnB65E,EAAe,CACnB/zD,MAAO,GACP71B,MAAO,GACP+d,YAAa,GACb1Y,IAAK,IAGDykF,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbniF,EAA0BJ,IAAMK,SAAS8hF,GAAzC7hF,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOm/C,EAAPj/C,EAAA,GAAck0E,EAAdl0E,EAAA,GACA2I,EAAwBjJ,IAAMK,UAAS,GAAvC6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO1E,EAAP2E,EAAA,GAAaF,EAAbE,EAAA,GACAE,EAAgCpJ,IAAMK,SAASgiF,GAA/Ch5E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOo5E,EAAPn5E,EAAA,GAAiBo5E,EAAjBp5E,EAAA,GACAC,EAAoCtJ,IAAMK,SAAS,CACjD+tB,OAAO,IADT7kB,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOy2E,EAAPx2E,EAAA,GAGAG,GAHAH,EAAA,GAG8CvJ,IAAMK,SAASgiF,IAA7D14E,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAMMO,GANNN,EAAA,GAAAA,EAAA,GAMoB,WAClBX,GAAQ,GACRwrE,EAAS2N,GACTM,EAAYJ,KAGRK,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAwBhC0Z,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAChB+gD,EAAMnxB,OAASmxB,EAAMhnD,OAASgnD,EAAMjpC,aAAeipC,EAAM3hD,KACvD4kF,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,UAAAC,EACCD,EAAa52F,aADd,IAAA62F,OAAA,EACCA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaD,IAGjB5gF,GAAQ,GACRy5E,EAAYJ,GACZ7N,EAAS2N,GACTp2F,EAAMw3C,aAAaw/C,EAAS,iBAAkB,iBAG9CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRy5E,EAAYJ,GACZ7N,EAAS2N,GACTp2F,EAAMw3C,aAAaw/C,EAAS,iBAAkB,gBAEhDN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BAnCW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GA2DnB,OACEnR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,6BACNgzF,aArGgB,WACtB74E,GAAQ,MAsGJ/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA9Ba,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,iBAAkB,gBAqBxC30E,WAlBW,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAoBL3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMA,EACNC,QAASyF,GAEThd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMhnD,MACb+N,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,IAGV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAGV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,MACHvJ,MAAM,MACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM3hD,IACb0I,SAAUo8E,EACV7zF,KAAK,MACLiwC,UAAQ,IAIV7xC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAE/C,QAAS,aAChC4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAxJJinB,EAwJwBjnB,EAAEC,OAAOy1B,MAAM,GAxJjCvuC,EAwJqC,aAvJ/D2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACb1L,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELuC,EAFK,OAEEwb,QAFF,IAEEA,OAFF,UAAA6gC,EAEE7gC,EAAKrN,YAFP,IAAAkuC,OAAA,EAEEA,EAAWg1C,OAErB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAhBG,IAACkkB,EAAM9/B,KA0Jd5B,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAc3xD,MACxB+jC,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,mBAUHqyD,EAAMnxB,MAAM3vB,OAAS,GACpBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACra,MAAO,CAAE/C,QAAS,YAC3B4D,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKwwC,EAAMnxB,MACXhiC,MAAO,CAAEhD,MAAO,QAASO,OAAQ,aAM3CsD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAAS4O,GAArD,OAGA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QAASiH,GAArD,eC7ORnH,GAAS,CACb,OACA,QACA,UACA,WACA,iBACA,WACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,OAAQxW,KAAM,MAAOzF,MAAO,SACpC,CAAEic,KAAM,OAAQxW,KAAM,aACtB,CAAEwW,KAAM,OAAQxW,KAAM,OACtB,CAAEwW,KAAM,SAAUxW,KAAM,KAGpBszF,GAAe,CACnB5pF,MAAO,GACP2rB,QAAS,GACTtmB,IAAK,GACLmwF,UAAW,GACX7rF,IAAK,IAGDmgF,GAAc,CAClBC,QAAQ,EACRC,UAAW,MAsKEyL,GAnKgB,SAACjiG,GAAU,IAAAk2F,EAClCx1F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA0BjJ,IAAMK,SAAS8hF,IAAzCj5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOs2C,EAAPr2C,EAAA,GAAcsrE,EAAdtrE,EAAA,GACAE,EAAgCpJ,IAAMK,SAASgiF,IAA/Ch5E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOo5E,EAAPn5E,EAAA,GAAiBo5E,EAAjBp5E,EAAA,GAMMq5E,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC+R,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,KAGRzwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAE,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAE,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB+gD,EAAMhnD,OACNgnD,EAAMr7B,SACNq7B,EAAMwuC,WACNxuC,EAAMr9C,IAEFsgF,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,EACCA,EAAa52F,OACrBilC,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO69F,GAET5gF,GAAQ,GACRwrE,EAAS2N,IACTM,EAAYJ,IACZt2F,EAAMw3C,aAAaw/C,EAAS,wBAAyB,MAGrDA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAK,GAAAiB,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,EAAMA,EAAal3F,OAAnB,CAA0BwzD,KAEjCv2C,GAAQ,GACRwrE,EAAS2N,IACTp2F,EAAMw3C,aAAaw/C,EAAS,wBAAyB,gBAGvD5zD,MAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BAjCW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAuDnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,wBACNgzF,aA5EkB,WACtB74E,GAAQ,MA6EN/b,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,EAAEA,EAAal2F,MACnBmiB,aArBe,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAE,EACzCV,EACEkL,EAAa,OAAGliG,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,EAAGA,EAAax3F,MACnCkiG,EAAcj9D,OAAOljB,EAAU,GAC/Bi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAOkiG,GAETliG,EAAMw3C,aAAaw/C,EAAS,wBAAyB,KAcjD30E,WA5Ba,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MA8BP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,qBACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMhnD,MACb+N,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,UACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMr7B,QACb5d,SAAUo8E,EACV7zF,KAAK,UACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM3hD,IACb0I,SAAUo8E,EACV7zF,KAAK,MACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,YACHvJ,MAAM,aACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMwuC,UACbznF,SAAUo8E,EACV7zF,KAAK,YACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,MACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMr9C,IACboE,SAAUo8E,EACV7zF,KAAK,MACLiwC,UAAQ,KAGZ7xC,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,yBChLJnH,GAAS,CACb,OACA,QACA,SACA,gBACA,eACA,UACA,OACA,cACA,YACA,UAEI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,QAC3B,CAAEwW,KAAM,YAAaxW,KAAM,SAC3B,CAAEwW,KAAM,OAAQxW,KAAM,UACtB,CAAEwW,KAAM,WAAYxW,KAAM,iBAC1B,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,OAAQxW,KAAM,WACtB,CAAEwW,KAAM,cAAexW,KAAM,QAC7B,CAAEwW,KAAM,OAAQxW,KAAM,cACtB,CAAEwW,KAAM,cAAexW,KAAM,QAAQ2gB,WAAW,gBAChD,CAAEnK,KAAM,SAAUxW,KAAM,KAGpBmX,GAAU,CAAC,OAAQ,SAEnBkoF,GAAqB,CACzB9/D,MAAO,GACPtrB,OAAQ,GACRqrF,cAAe,GACfh7C,QAAS,GACT7vC,QAAS,GACTkN,KAAM,IAAID,KACV69E,WAAY,GACZC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,SAAU,GACVC,YAAa,CACXv6E,MAAO,GACPka,MAAO,IAETsgE,aAAc,CACZtL,QAAS,KAIPf,GAAc,CAClBC,QAAQ,EACRC,UAAW,MA2rBEoM,OAxrBf,SAAqB5iG,GAAO,IAAAk2F,EAAAC,EAAA0M,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACpB5iG,EAAUzB,KACVmkC,EAAQ3tB,qBAAW8G,IAEzB5H,EAAgCL,oBAAS,GAAzCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO4uF,EAAP3uF,EAAA,GAAiB4uF,EAAjB5uF,EAAA,GACAG,EAA0BT,mBAAS,IAAnCU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0uF,EAAPzuF,EAAA,GAAc0uF,EAAd1uF,EAAA,GACAG,EAAqCb,oBAAS,GAA9CgB,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwuF,EAAPruF,EAAA,GAAsBsuF,EAAtBtuF,EAAA,GACAykB,EAA0BzlB,mBAAS,CACjCmvF,MAAO,KADTzpE,EAAAz5B,OAAAiU,EAAA,EAAAjU,CAAAw5B,EAAA,GAIA1lB,GAJA2lB,EAAA,GAAAA,EAAA,GAI0B/lB,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,CAAA,GAAoB4hG,MAA9C5tF,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA4lB,GADA1lB,EAAA,GAAAA,EAAA,GACkCD,mBAAS/T,OAAAQ,EAAA,EAAAR,CAAA,GAAK4hG,MAAhDjoE,EAAA35B,OAAAiU,EAAA,EAAAjU,CAAA05B,EAAA,GAAO4pE,EAAP3pE,EAAA,GAAkB4pE,EAAlB5pE,EAAA,GACAC,EAAgC7lB,mBAASgiF,IAAzCl8D,EAAA75B,OAAAiU,EAAA,EAAAjU,CAAA45B,EAAA,GAAOs8D,EAAPr8D,EAAA,GAAiBs8D,EAAjBt8D,EAAA,GAOM2+D,EAAoB,WACxByK,GAAY,IAGR1N,EAAe,WACnB8N,GAAY,IAGR5K,EAA0B,WAC9B4K,GAAY,GACZlN,EAAYJ,IACZwN,EAAa3B,KAGTlJ,EAAoB,SAACtjF,GACzBmuF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,GAAAtjG,OAAAM,EAAA,EAAAN,CAAA,GAEToV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAIhC09B,EAAe,SAACjH,EAAM9/B,EAAK0b,GAE/Bi1E,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EAEb,GADAvgC,QAAQyR,IAAR,OAAY/F,QAAZ,IAAYA,OAAZ,EAAYA,EAAKrN,KAAM,MACvB,OAAIqN,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,IAAK,CACM,IAAA4P,EAAAC,EAAA7kD,EAAAq+C,EAAxB,GAAa,YAAT16F,EACFghG,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVlB,aAAc,CACZtL,QAAO,GAAAp2F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OACFsjG,QADE,IACFA,OADE,UAAAE,EACFF,EAAWlB,oBADT,IAAAoB,OAAA,EACFA,EAAyB1M,SADvB,CAEL,CACEvkE,SAAQ,OAAE+wE,QAAF,IAAEA,OAAF,UAAAG,EAAEH,EAAWlB,oBAAb,IAAAqB,OAAA,EAAEA,EAAyB3M,QAAQ3kF,OAC3Cb,IAAK,GACLwkF,SAAU,GACVlC,IAAG,OAAE71E,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,IAChBp7E,OAAM,OAAEuF,QAAF,IAAEA,OAAF,UAAAk/E,EAAEl/E,EAAKrN,YAAP,IAAAusF,OAAA,EAAEA,EAAWrJ,gBAKtB,GAAa,gBAATrxF,EAAwB,KAAAmhG,EACjCH,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVnB,YAAYniG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAD,OACNsjG,QADM,IACNA,OADM,EACNA,EAAWnB,aADL,IAETrgE,MAAK,OAAE/jB,QAAF,IAAEA,OAAF,UAAA2lF,EAAE3lF,EAAKrN,YAAP,IAAAgzF,OAAA,EAAEA,EAAW9P,cAGlB,GAAY,gBAATrxF,EAAuB,KAAAohG,EAAAC,EAAAC,EAExBC,EAAY,CAChBvxE,SAAUtU,EAAE,EACZ3M,IAAK,GACLwkF,SAAU,GACVlC,IAAG,OAAE71E,QAAF,IAAEA,OAAF,UAAA4lF,EAAE5lF,EAAKrN,YAAP,IAAAizF,OAAA,EAAEA,EAAW/P,IAChBp7E,OAAM,OAAEuF,QAAF,IAAEA,OAAF,UAAA6lF,EAAE7lF,EAAKrN,YAAP,IAAAkzF,OAAA,EAAEA,EAAWhQ,KAEfmQ,EAAW/jG,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAOsjG,QAAP,IAAOA,OAAP,UAAAO,EAAOP,EAAWlB,oBAAlB,IAAAyB,OAAA,EAAOA,EAAyB/M,SACjDiN,EAAYr/D,OAAOzmB,EAAE,EAAE6lF,GACvBP,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVlB,aAAc,CACZtL,QAAQiN,UAGP,KAAAC,EACLT,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,GAAAtjG,OAAAM,EAAA,EAAAN,CAAA,GAETuC,EAFS,OAEFwb,QAFE,IAEFA,OAFE,UAAAimF,EAEFjmF,EAAKrN,YAFH,IAAAszF,OAAA,EAEFA,EAAWpQ,OAGvB/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAiKlB,OA7JA9L,QAAQyR,IAAIw/E,EAAW,aA8JrB3iG,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,sBACNgzF,aAAcA,IAGhB50F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B77E,iBAnQiB,SAACtG,EAAG1K,EAAMiT,GAC/Bs/E,GAAY,GACZE,EAASzyF,IAkQLkR,aAjEe,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,eAAgB,gBAwDxC30E,WAxEa,SAAC1G,EAAGkG,EAASE,GAC9B+zE,IACAY,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD+hF,EAAajiF,MAyEX3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQg0F,aAC1Bv6E,WAAS,EACT3B,KAAM+qF,EACN9qF,QAASsgF,GAET73F,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACdlL,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk0F,cACtB1zF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEqX,OAAQ,WAAaT,QAAS8hF,GAC1C73F,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,SAIND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ8jG,aACxBtjG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,uBAGFH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG8C,MAAO,CAAC/C,QAAQ,mBAA5C,OACGmmG,QADH,IACGA,OADH,UAAAZ,EACGY,EAAOd,oBADV,IAAAE,OAAA,UAAAC,EACGD,EAAqBxL,eADxB,IAAAyL,OAAA,EACGA,EAA8B72F,IAAI,SAACsW,GAClC,OACIrhB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMw+C,GAAI,EAAGt+C,GAAI,GACf7Y,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAK4hB,IAAG,OAAET,QAAF,IAAEA,OAAF,EAAEA,EAAK4xE,IAAKpxE,IAAI,eAAe1lB,MAAO,aAM1D6D,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,sBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQm0F,gBACtB3zF,EAAAC,EAAAC,cAAA,OAAK4hB,IAAG,OAAEygF,QAAF,IAAEA,OAAF,UAAAV,EAAEU,EAAOf,mBAAT,IAAAK,OAAA,EAAEA,EAAoB1gE,MAAOtf,IAAI,mBAI/C7hB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,wBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQw0F,aACtBh0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,YAAaoiG,QAAb,IAAaA,OAAb,EAAaA,EAAOnB,kBAI1BphG,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,wBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQw0F,aACtBh0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,YAAaoiG,QAAb,IAAaA,OAAb,EAAaA,EAAOlB,kBAI1BrhG,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,wBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQw0F,aACtBh0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,YAAaoiG,QAAb,IAAaA,OAAb,EAAaA,EAAOjB,kBAI1BthG,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQq0F,WACtB7zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,mBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQw0F,aACtBh0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,YAAaoiG,QAAb,IAAaA,OAAb,EAAaA,EAAOhB,aAI1BvhG,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQM,QACtBE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQu0F,WACtB/zF,EAAAC,EAAAC,cAACC,EAAA,EAAD,gBAGJH,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQw0F,aACtBh0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,YAAaoiG,QAAb,IAAaA,OAAb,UAAAT,EAAaS,EAAOf,mBAApB,IAAAM,OAAA,EAAaA,EAAoB76E,cAU/CjnB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQg0F,aAC1Bv6E,WAAS,EACT3B,KAAMmrF,EACNlrF,QAASugF,GAET93F,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,oBAAoB/L,MAAO,CAAE+iB,cAAe,QAC1DliB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQk0F,cACtB1zF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEqX,OAAQ,WACjBT,QAAS+hF,GAET93F,EAAAC,EAAAC,cAACwY,GAAAzY,EAAD,SAIND,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAAA,OACElB,UAAWQ,EAAQk0F,aACnBv0F,MAAO,CACL8mE,aAAc,oBACdpvD,aAAc,MACdqL,cAAe,SAGnBliB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ60F,YACtBr0F,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,SACHvJ,MAAM,SACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAK,OAAE03F,QAAF,IAAEA,OAAF,EAAEA,EAAW9sF,OAClBjU,KAAK,SACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQg1F,cACtBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BAEFH,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBAnNmB,SAACjpF,GAChC6yF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVzB,cAAenxF,MAiNLopF,YAAawJ,EAAUzB,iBAG3BlhG,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,SACP9N,GAAG,8BACHvJ,MAAM,eACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAO03F,EAAUz8C,QACjBtkD,KAAK,UACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,SACP9N,GAAG,UACHvJ,MAAM,UACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAK,OAAE03F,QAAF,IAAEA,OAAF,EAAEA,EAAWtsF,QAClBzU,KAAK,UACLs+E,WAAS,EACThqD,KAAM,EACN2b,UAAQ,IAEV7xC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQg1F,cACtBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,uBAEFH,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQy0F,YACtBj0F,EAAAC,EAAAC,cAACqjG,GAAD,CAAgBlqF,SAzNX,SAACpO,GAClB23F,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKsjG,GAAN,IAAiBp/E,KAAMtY,MAwNeA,MAAK,OAAE03F,QAAF,IAAEA,OAAF,EAAEA,EAAWp/E,OACvD7R,QAAQyR,IAAR,OAAYw/E,QAAZ,IAAYA,OAAZ,EAAYA,EAAWp/E,KAAM,QAGlCvjB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,SACP9N,GAAG,aACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAK,OAAE03F,QAAF,IAAEA,OAAF,EAAEA,EAAWxB,WAClBv/F,KAAK,aACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQg1F,cACtBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BAEFH,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBAjQoB,SAACjpF,GACjC6yF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVvB,cAAerxF,MA+PLopF,YAAawJ,EAAUvB,iBAG3BphG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQg1F,cACtBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BAEFH,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBAnQoB,SAACjpF,GACjC6yF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVtB,cAAetxF,MAiQLopF,YAAawJ,EAAUtB,iBAG3BrhG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQg1F,cACtBx0F,EAAAC,EAAAC,cAACC,EAAA,EAAD,8BAEFH,EAAAC,EAAAC,cAACo6F,GAAD,CACEtB,kBArQoB,SAACjpF,GACjC6yF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVrB,cAAevxF,MAmQLopF,YAAawJ,EAAUrB,iBAG3BthG,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,SACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAU0+E,EACV9sF,MAAK,OAAE03F,QAAF,IAAEA,OAAF,EAAEA,EAAWpB,SAClB3/F,KAAK,WACLs+E,WAAS,EACThqD,KAAM,EACN2b,UAAQ,IAEV7xC,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE7N,MAAK,OAAE03F,QAAF,IAAEA,OAAF,UAAAZ,EAAEY,EAAWnB,mBAAb,IAAAO,OAAA,EAAEA,EAAwB96E,MAC/B5N,SAAU,SAAC5E,EAAO4/B,GAChBuuD,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVnB,YAAYniG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAMsjG,EAAUnB,aAAjB,IAA8Bv6E,MAAOotB,QAGpDnpC,GAAG,2BACH6N,QAASA,GACTyqF,GAAI,CAAErnG,MAAO,KACbmd,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEE3R,QAAQ,WACR0C,MAAM,6BACNkwC,UAAQ,EACR74B,OAAO,cAIbhZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG8C,MAAO,CAAExC,WAAY,QAC/CqD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,YAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,iBASH0iG,EAAUxhE,MAAM3vB,OAAS,GACxBxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAK6gF,EAAUxhE,MACfhiC,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAKzCsD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG8C,MAAO,CAAExC,WAAY,QAC/CqD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,cAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,0BASM,OAAT0iG,QAAS,IAATA,OAAA,UAAAX,EAAAW,EAAWlB,oBAAX,IAAAO,OAAA,EAAAA,EAAyB7L,QAAQ3kF,QAAS,IAA1C,OAA+CmxF,QAA/C,IAA+CA,OAA/C,UAAAV,EAA+CU,EAAWlB,oBAA1D,IAAAQ,OAAA,UAAAC,EAA+CD,EAAyB9L,eAAxE,IAAA+L,OAAA,EAA+CA,EAAkCn3F,IAAI,SAAC8gE,EAAI7oD,GACrF,OACEhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACra,MAAO,CAACyyB,SAAS,aAC5B5xB,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAACyyB,SAAS,WAAWz1B,MAAM,UACrC6D,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAClB,QAAQ,OAAOE,eAAe,kBACzC6B,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAE,mBAAAnL,OAAqBijB,GACvBgX,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAG,cAAcntB,MAEjEhjB,EAAAC,EAAAC,cAAA,SAAOuwC,QAAO,mBAAA1wC,OAAqBijB,IACjChjB,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,CAAMd,MAAO,CAACV,SAAS,OAAOjB,MAAM,OAAOH,gBAAgB,OAAOmZ,OAAO,cAE3ExW,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAC9B,gBAAgB,SAC3B2C,EAAAC,EAAAC,cAACujG,GAAA,EAAD,CAAQtkG,MAAO,CAACV,SAAS,OAAOjB,MAAM,OAAOgZ,OAAO,WAAYT,QAAS,kBArWzE,SAACuH,GAAM,IAAAomF,EACzBN,EAAW/jG,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAOsjG,QAAP,IAAOA,OAAP,UAAAe,EAAOf,EAAWlB,oBAAlB,IAAAiC,OAAA,EAAOA,EAAyBvN,SACjDiN,EAAYr/D,OAAOzmB,EAAE,GACrBslF,EAAavjG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRsjG,GADO,IAEVlB,aAAc,CACZtL,QAAQiN,MA+V2FO,CAAmB3gF,SAIxGhjB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAG,OAAE+pD,QAAF,IAAEA,OAAF,EAAEA,EAAKonB,IACV9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,eAO7CsD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG8C,MAAO,CAAExC,WAAY,QAC/CqD,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OACRkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,kBAGpCnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAHb,kBASM,OAAT0iG,QAAS,IAATA,OAAA,UAAAR,EAAAQ,EAAWnB,mBAAX,IAAAW,OAAA,EAAAA,EAAwBhhE,MAAM3vB,QAAS,GACtCxR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAG,OAAE6gF,QAAF,IAAEA,OAAF,UAAAP,EAAEO,EAAWnB,mBAAb,IAAAY,OAAA,EAAEA,EAAwBjhE,MAC7BhiC,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAKzCsD,EAAAC,EAAAC,cAAA,OACElB,UAAWQ,EAAQk0F,aACnBv0F,MAAO,CAAEhB,eAAgB,aAoB7B6B,EAAAC,EAAAC,cAACke,GAAA,EAAD,CAAejf,MAAO,CAAElB,QAAS,OAAQE,eAAgB,WACvD6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAYzB,MAAM,UAAUuY,QA3jBhC,WACpB,GACE4sF,EAAUxhE,OACVwhE,EAAU9sF,QACV8sF,EAAUzB,eACVyB,EAAUz8C,SACVy8C,EAAUtsF,SACVssF,EAAUp/E,MACVo/E,EAAUxB,YACVwB,EAAUvB,eACVuB,EAAUtB,eACVsB,EAAUrB,eACVqB,EAAUpB,UACVoB,EAAUnB,YAAYv6E,OACtB07E,EAAUnB,YAAYrgE,MAAM3vB,OAAS,GACrCmxF,EAAUlB,aAAatL,QAAQ3kF,OAAS,EACxC,CACA,GAAI+jF,EAASF,OAAQ,KAAAK,EAAAC,EAAAiO,EAAAC,EAAAC,EAAAC,EAAAnO,EACb2C,EAAa,OAAGz5F,QAAH,IAAGA,OAAH,UAAA42F,EAAG52F,EAAOiR,YAAV,IAAA2lF,OAAA,UAAAC,EAAGD,EAAa52F,aAAhB,IAAA62F,OAAA,EAAGA,EAAoBiH,YAC1CrE,EAAcx0D,OAAOwxD,EAASD,UAAW,EAAG,CAC1C6L,WAAU,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAWxB,WACvB9qF,QAAO,OAAEssF,QAAF,IAAEA,OAAF,EAAEA,EAAWtsF,QACpBkN,KAAMpB,KAAM,OAACwgF,QAAD,IAACA,OAAD,EAACA,EAAWp/E,MAAMnB,OAAO,cACrCg/E,cAAa,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAWvB,cAC1BC,cAAa,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAWtB,cAC1BC,cAAa,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAWrB,cAC1BC,SAAQ,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAWpB,SACrB1rF,OAAM,OAAE8sF,QAAF,IAAEA,OAAF,EAAEA,EAAW9sF,OACnBqrF,cAAa,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAWzB,cAC1Bh7C,QAAO,OAAEy8C,QAAF,IAAEA,OAAF,EAAEA,EAAWz8C,QACpB/kB,MAAK,OAAEwhE,QAAF,IAAEA,OAAF,EAAEA,EAAWxhE,MAClBsgE,aAAc,CACZtL,QAAO,OAAEwM,QAAF,IAAEA,OAAF,UAAAiB,EAAEjB,EAAWlB,oBAAb,IAAAmC,OAAA,UAAAC,EAAED,EAAyBzN,eAA3B,IAAA0N,OAAA,EAAEA,EAAkC94F,IAAI,SAACsW,EAAK2B,GACnD,MAAO,CACL4O,SAAU5O,EACVrS,IAAK,GACLwkF,SAAU,GACVlC,IAAK5xE,EAAI4xE,QAIfuO,YAAa,CACXv6E,MAAK,OAAE07E,QAAF,IAAEA,OAAF,UAAAmB,EAAEnB,EAAWnB,mBAAb,IAAAsC,OAAA,EAAEA,EAAwB78E,MAC/Bka,MAAK,OAAEwhE,QAAF,IAAEA,OAAF,UAAAoB,EAAEpB,EAAWnB,mBAAb,IAAAuC,OAAA,EAAEA,EAAwB5iE,SAGnC,IAAM20D,EAAU,CACdr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAarE,IAGjBT,IACAh5F,EAAMw3C,aAAaw/C,EAAS,eAAgB,mBACvC,KAAAC,EAAAC,EAAAC,EAAA+N,EAAAC,EACDnO,EACJA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OACNP,QADM,IACNA,OADM,UAAAk3F,EACNl3F,EAAOiR,YADD,IAAAimF,OAAA,UAAAC,EACND,EAAal3F,aADP,IAAAm3F,OAAA,EACNA,EAAoB2G,aADd,CAET,CACEuE,WAAU,OAAEwB,QAAF,IAAEA,OAAF,EAAEA,EAAWxB,WACvB9qF,QAAO,OAAEssF,QAAF,IAAEA,OAAF,EAAEA,EAAWtsF,QACpBkN,KAAM,IAAID,KAAJ,OAASq/E,QAAT,IAASA,OAAT,EAASA,EAAWp/E,MAC1B69E,cAAa,OAAEuB,QAAF,IAAEA,OAAF,EAAEA,EAAWvB,cAC1BC,cAAa,OAAEsB,QAAF,IAAEA,OAAF,EAAEA,EAAWtB,cAC1BC,cAAa,OAAEqB,QAAF,IAAEA,OAAF,EAAEA,EAAWrB,cAC1BC,SAAQ,OAAEoB,QAAF,IAAEA,OAAF,EAAEA,EAAWpB,SACrB1rF,OAAM,OAAE8sF,QAAF,IAAEA,OAAF,EAAEA,EAAW9sF,OACnBqrF,cAAa,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAWzB,cAC1Bh7C,QAAO,OAAEy8C,QAAF,IAAEA,OAAF,EAAEA,EAAWz8C,QACpB/kB,MAAK,OAAEwhE,QAAF,IAAEA,OAAF,EAAEA,EAAWxhE,MAClBsgE,aAAckB,EAAUlB,aACxBD,YAAa,CACXv6E,MAAK,OAAE07E,QAAF,IAAEA,OAAF,UAAAqB,EAAErB,EAAWnB,mBAAb,IAAAwC,OAAA,EAAEA,EAAwB/8E,MAC/Bka,MAAK,OAAEwhE,QAAF,IAAEA,OAAF,UAAAsB,EAAEtB,EAAWnB,mBAAb,IAAAyC,OAAA,EAAEA,EAAwB9iE,YAMzCuhE,GAAY,GACZ5jG,EAAMw3C,aAAaw/C,EAAS,eAAgB,eAE9CN,EAAYJ,IACZwN,EAAa3B,SAEb/+D,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,iCAgeD,UAGAtb,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAAS+hF,GAHX,eC1uBNjiF,GAAS,CACb,OACA,QACA,cACA,gBACA,YACA,QACA,UAGI4K,GAAY,CAChB,CAAErI,KAAM,YAAaxW,KAAM,IAC3B,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,eACtB,CAAEwW,KAAM,OAAQxW,KAAM,iBACtB,CAAEwW,KAAM,OAAQxW,KAAM,YACtB,CAAEwW,KAAM,OAAQxW,KAAM,SACtB,CAAEwW,KAAM,OAAQxW,KAAM,KAgMTsiG,GA7LM,SAACplG,GAAU,IAAAk2F,EAAAC,EACxBz1F,EAAUzB,KAChBoV,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IAEnB65E,EAAe,CACnB5pF,MAAO,GACP+d,YAAa,GACb86E,cAAe,GACfC,SAAU,GACV/kE,MAAO,IAGH+1D,EAAc,CAClBC,QAAQ,EACRC,UAAW,MAGbt5E,EAAgCjJ,IAAMK,SAASgiF,GAA/Cn5E,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOu5E,EAAPt5E,EAAA,GAAiBu5E,EAAjBv5E,EAAA,GACAE,EAA0BpJ,IAAMK,SAAS8hF,GAAzC94E,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOm2C,EAAPl2C,EAAA,GAAcmrE,EAAdnrE,EAAA,GAEMq5E,EAAe,SAAChhF,GACpB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,GADG,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAELoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAQhC+R,EAAc,WAClBjB,GAAQ,GACRwrE,EAAS2N,IAGLvwE,EAAa,eAAArU,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAglF,EAAAC,EAAAC,EAAA+G,EAAA7G,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1lF,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElB+gD,EAAMhnD,OACNgnD,EAAMjpC,aACNipC,EAAM6xC,eACN7xC,EAAM8xC,UACN9xC,EAAMjzB,OAEFk2D,EAASF,SACLsH,EADa,OACC79F,QADD,IACCA,OADD,UAAA42F,EACC52F,EAAOiR,YADR,IAAA2lF,OAAA,UAAAC,EACCD,EAAa52F,aADd,IAAA62F,OAAA,EACCA,EAAoBiH,aAC5B74D,OAAOwxD,EAASD,UAAW,EAAGhjC,GAE1CwjC,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA82F,EAAE92F,EAAOiR,YAAT,IAAA6lF,OAAA,EAAEA,EAAan0F,UACxB3C,MAAO,CACL89F,YAAaD,IAGjB5gF,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,cAAe,iBAG3CA,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAAi3F,EAAEj3F,EAAOiR,YAAT,IAAAgmF,OAAA,EAAEA,EAAat0F,UACxB3C,MAAO,CACL89F,YAAW,GAAA78F,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAA,OAAMP,QAAN,IAAMA,OAAN,UAAAk3F,EAAMl3F,EAAOiR,YAAb,IAAAimF,OAAA,UAAAC,EAAMD,EAAal3F,aAAnB,IAAAm3F,OAAA,EAAMA,EAAoB2G,aAA1B,CAAuCtqC,MAGtDv2C,GAAQ,GACRjd,EAAMw3C,aAAaw/C,EAAS,cAAe,gBAE7CN,EAAYJ,GACZ7N,EAAS2N,IAEThzD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,QACVG,IAAK,+BArCW,wBAAAjK,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GA4DnB,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACk2F,GAAD,CACEx0F,KAAM,uBACNgzF,aAzEkB,WACtB74E,GAAQ,IAyEJ+4E,UAAQ,IAGV90F,EAAAC,EAAAC,cAACm2F,GAAD,CACExgF,OAAQA,GACR4K,UAAWA,GACX1Q,KAAI,OAAEjR,QAAF,IAAEA,OAAF,UAAAk2F,EAAEl2F,EAAOiR,YAAT,IAAAilF,OAAA,UAAAC,EAAED,EAAal2F,aAAf,IAAAm2F,OAAA,EAAEA,EAAoB2H,YAC1B37E,aA9Be,SAACxG,EAAGkG,EAASE,GAAa,IAAAy1E,EAAAC,EAAAC,EACzCV,EACEz/E,EAAO,OAAGvX,QAAH,IAAGA,OAAH,UAAAw3F,EAAGx3F,EAAOiR,YAAV,IAAAumF,OAAA,UAAAC,EAAGD,EAAax3F,aAAhB,IAAAy3F,OAAA,EAAGA,EAAoBqG,YACpCvmF,EAAQ0tB,OAAOljB,EAAU,GACzBi1E,EAAU,CACRr0F,UAAS,OAAE3C,QAAF,IAAEA,OAAF,UAAA03F,EAAE13F,EAAOiR,YAAT,IAAAymF,OAAA,EAAEA,EAAa/0F,UACxB3C,MAAO,CACL89F,YAAavmF,IAGjBvX,EAAMw3C,aAAaw/C,EAAS,cAAe,gBAqBvC30E,WAlBa,SAAC1G,EAAGkG,EAASE,GAC9B9E,GAAQ,GACRy5E,EAAYn2F,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKk2F,GAAN,IAAgBF,QAAQ,EAAMC,UAAWz0E,KACpD0mE,EAAS5mE,MAoBP3gB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,8BAGAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,QACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMhnD,MACb+N,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,cACHvJ,MAAM,cACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjpC,YACbhQ,SAAUo8E,EACV7zF,KAAK,cACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,gBACHvJ,MAAM,gBACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM6xC,cACb9qF,SAAUo8E,EACV7zF,KAAK,gBACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAM8xC,SACb/qF,SAAUo8E,EACV7zF,KAAK,WACLiwC,UAAQ,IAEV7xC,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,QACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACThO,MAAOqnD,EAAMjzB,MACbhmB,SAAUo8E,EACV7zF,KAAK,QACLiwC,UAAQ,KAGZ7xC,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,OACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,cCsFKqnF,GAvQM,SAACvlG,GACpB,IAAMU,EAAUzB,KACVgf,EAAQhK,IAAMwB,WAAW8G,IACzB6D,EAAWolF,cACjB7wF,EAA0BL,mBAAS,IAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO6+C,EAAP5+C,EAAA,GAAc6zE,EAAd7zE,EAAA,GACAG,EAAsCT,oBAAS,GAA/CU,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO0wF,EAAPzwF,EAAA,GAAoB0wF,EAApB1wF,EAAA,GACAG,EAAoCb,mBAAS,CAC3CmT,KAAM,OADRnS,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAOwwF,EAAPrwF,EAAA,GAAmBswF,EAAnBtwF,EAAA,GAGA1C,QAAQyR,IAAI,QAASmvC,GACrB5gD,QAAQyR,IAAI,aAAcshF,GAE1BxnF,oBAAU,WACR0nF,KACC,IAEH,IAsCMC,EAAyB,WAC7BJ,GAAe,IAUXG,EAAY,WAAM,IAAAE,EAChBC,EAAQ,OAAG5lF,QAAH,IAAGA,OAAH,UAAA2lF,EAAG3lF,EAAUozC,aAAb,IAAAuyC,OAAA,EAAGA,EAAiBjjG,KAClCoQ,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MzBhHa,0IyBiHbga,UAAW,CAAE8B,KAAMu+E,OAGpB3nF,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GAAS,IAAAg1F,EAAAC,EACRC,EAAe9yF,KAAKsP,MAAL,OAAW1R,QAAX,IAAWA,OAAX,UAAAg1F,EAAWh1F,EAAMA,YAAjB,IAAAg1F,OAAA,UAAAC,EAAWD,EAAYG,iBAAvB,IAAAF,OAAA,EAAWA,EAAuBj1F,MACvD2B,QAAQyR,IAAI,eAAgB8hF,GAC5B1d,EAAS0d,MAIT3uD,EAAY,eAAAhmC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAOX,EAAMtO,EAAW0jG,GAAxB,IAAAC,EAAAhN,EAAAiN,EAAA,OAAA70F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb6zF,EAAe9yC,EAAMgzC,UAAU,SAACjkF,GAAD,OAASA,EAAI5f,YAAcA,KAC1D22F,EAAW9lC,GACRvuB,OAAOqhE,EAAc,EAAGr1F,GAC3Bs1F,EAAiBlzF,KAAKC,UAAUgmF,GACtCpmF,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MzBlHe,mRyBmHfga,UAAW,CACT4gF,eAAgBA,EAChB9+E,KAAMrH,EAASozC,MAAM1wD,UAIxBub,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GAELgN,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,0BAEP,IAAMiqF,EAAcpzF,KAAKsP,MAAMtP,KAAKC,UAAUgmF,IAC9C7Q,EAASge,GACTZ,MA3Be,wBAAAtzF,EAAAmB,SAAA9B,MAAH,gBAAA+B,EAAAC,EAAAC,GAAA,OAAArC,EAAAsC,MAAAC,KAAA1B,YAAA,GAmIlB,OACEnR,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTiD,UAAU,MACV1d,eAAe,WACfD,WAAW,UAEX8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,YAAY8W,QAjNhB,WAClBrE,QAAQyR,IAAI,cAAemvC,GAC3BkyC,GAAe,IA+MyChnG,MAAM,WAAxD,WAMH80D,EAAMvnD,IAAI,SAACsW,EAAK/D,GACf,OApHc,SAAC+D,GAEnB,OADA3P,QAAQyR,IAAI,SAAU9B,GACtB,OAAQA,QAAR,IAAQA,OAAR,EAAQA,EAAK5f,WACX,IAAK,kBACH,OAAOzB,EAAAC,EAAAC,cAACslG,GAAD,CAAWz1F,KAAMsR,EAAKi1B,aAAcA,IAE7C,IAAK,eACH,OAAOt2C,EAAAC,EAAAC,cAACulG,GAAD,CAAiB11F,KAAMsR,EAAKi1B,aAAcA,IAEnD,IAAK,eACH,OAAOt2C,EAAAC,EAAAC,cAACwlG,GAAD,CAAqB31F,KAAMsR,EAAKi1B,aAAcA,IAEvD,IAAK,YACH,OAAOt2C,EAAAC,EAAAC,cAACylG,GAAD,CAAc51F,KAAMsR,EAAKi1B,aAAcA,IAEhD,IAAK,oBAEH,OAAOt2C,EAAAC,EAAAC,cAAC0lG,GAAD,CAAqB71F,KAAMsR,EAAKi1B,aAAcA,IAEvD,IAAK,eACH,OAAOt2C,EAAAC,EAAAC,cAAC2lG,GAAD,CAAuB91F,KAAMsR,EAAKi1B,aAAcA,IAEzD,IAAK,aACH,OAAOt2C,EAAAC,EAAAC,cAAC4lG,GAAD,CAAqB/1F,KAAMsR,EAAKi1B,aAAcA,IAEvD,IAAK,mBACH,OACEt2C,EAAAC,EAAAC,cAAC6lG,GAAD,CAA2Bh2F,KAAMsR,EAAKi1B,aAAcA,IAGxD,IAAK,kBACH,OACEt2C,EAAAC,EAAAC,cAAC8lG,GAAD,CAA0Bj2F,KAAMsR,EAAKi1B,aAAcA,IAGvD,IAAK,aACH,OAAOt2C,EAAAC,EAAAC,cAAC+lG,GAAD,CAAel2F,KAAMsR,EAAKi1B,aAAcA,IAEjD,IAAK,iBACH,OAAOt2C,EAAAC,EAAAC,cAACgmG,GAAD,CAAgBn2F,KAAMsR,EAAKi1B,aAAcA,IAElD,IAAK,uBACH,OACEt2C,EAAAC,EAAAC,cAACimG,GAAD,CAAwBp2F,KAAMsR,EAAKi1B,aAAcA,IAGrD,IAAK,YACH,OAAOt2C,EAAAC,EAAAC,cAACkmG,GAAD,CAAWr2F,KAAMsR,EAAKi1B,aAAcA,IAE7C,IAAK,cACH,OAAOt2C,EAAAC,EAAAC,cAACmmG,GAAD,CAAgBt2F,KAAMsR,EAAKi1B,aAAcA,IAElD,IAAK,iBACH,OAAOt2C,EAAAC,EAAAC,cAAComG,GAAD,CAAiBv2F,KAAMsR,EAAKi1B,aAAcA,IAEnD,IAAK,sBACH,OAAOt2C,EAAAC,EAAAC,cAACqmG,GAAD,CAAsBx2F,KAAMsR,EAAKi1B,aAAcA,IAExD,IAAK,oBACH,OACEt2C,EAAAC,EAAAC,cAACsmG,GAAD,CAAwBz2F,KAAMsR,EAAKi1B,aAAcA,IAGrD,IAAK,UACH,OAEEt2C,EAAAC,EAAAC,cAACumG,GAAD,CAAY12F,KAAMsR,EAAKi1B,aAAcA,IAGzC,IAAK,iBACH,OAAOt2C,EAAAC,EAAAC,cAACwmG,GAAD,CAAmB32F,KAAMsR,EAAKi1B,aAAcA,IAGrD,IAAK,mBACH,OAAOt2C,EAAAC,EAAAC,cAACymG,GAAD,CAAqB52F,KAAMsR,EAAKi1B,aAAcA,IAGvD,IAAK,iBACH,OAAOt2C,EAAAC,EAAAC,cAAC0mG,GAAD,CAAwB72F,KAAMsR,EAAKi1B,aAAcA,IAG1D,IAAK,eACH,OAAOt2C,EAAAC,EAAAC,cAAC2mG,GAAD,CAAa92F,KAAMsR,EAAKi1B,aAAcA,IAG/C,IAAK,wBACH,OACEt2C,EAAAC,EAAAC,cAAC4mG,GAAD,CAAwB/2F,KAAMsR,EAAKi1B,aAAcA,IAGrD,IAAK,cACH,OAAOt2C,EAAAC,EAAAC,cAAC6mG,GAAD,CAAch3F,KAAMsR,EAAKi1B,aAAcA,IAGhD,QACE,OAAOt2C,EAAAC,EAAAC,cAAA,YAqBA8mG,CAAY3lF,KAGrBrhB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEje,QAAS,CAAE+Y,MAAO/Y,EAAQi0F,gBAC1Bn8E,KAAMitF,EACNhtF,QAASqtF,GAET5kG,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,0BACAlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,OACHvJ,MAAM,aACN1C,QAAQ,WACRga,WAAS,EACTI,SA/LW,SAAC5E,GACpBiwF,EAAcrlG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACTolG,GADQ,GAAAplG,OAAAM,EAAA,EAAAN,CAAA,GAEVoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UA6L5BA,MAAOw5F,EAAWl+E,KAClB3kB,KAAK,UAGT5B,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QA1OU,WACxB,GAAI0uF,EAAWl+E,KAAM,CACnB,IAAM0gF,EAAY90F,KAAKC,UAAUkgD,GAC3BwyC,EAAWL,EAAWl+E,KAC5BvU,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MzBjCa,2KyBkCbga,UAAW,CACTwiF,UAAWA,EACX1gF,KAAMu+E,OAIT3nF,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GACL60F,IACA7nF,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,qCAIXyB,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,kCA8MH,cACAtb,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS6uF,GAAjB,uCChSJsC,GAAYtmG,YAAW,SAAA3E,GAAK,MAAK,CACnC+B,KAAM,CACF7B,MAAO,GACPO,OAAQ,GACRN,QAAS,EACT4c,OAAQ/c,EAAMI,QAAQ,IAE1B8qG,WAAY,CACR/qG,QAAS,EACTgrG,YAAa,CACTvqG,UAAW,mBACXW,MAAOvB,EAAMwB,QAAQgiE,OAAO1/B,MAC5BsnE,aAAc,CACVhqG,gBAAiB,UACjBiqG,QAAS,EACTxnG,OAAQ,SAGhBynG,wBAAyB,CACrB/pG,MAAO,UACPsC,OAAQ,mBAGhB0nG,MAAO,CACHrrG,MAAO,GACPO,OAAQ,IAEZ+qG,MAAO,CACHnpG,aAAc,GACdwB,OAAM,aAAAC,OAAe9D,EAAMwB,QAAQ8C,KAAK,MACxClD,gBAAiBpB,EAAMwB,QAAQ8C,KAAK,IACpC+mG,QAAS,EACTxqG,WAAYb,EAAMc,YAAYC,OAAO,CAAC,mBAAoB,YAE9DmhB,QAAS,GACTupF,aAAc,KAnCA9mG,CAoCd,SAAA0P,GAA2B,IAAxB9Q,EAAwB8Q,EAAxB9Q,QAAYV,EAAYO,OAAAC,EAAA,EAAAD,CAAAiR,EAAAq3F,IAC3B,OACI3nG,EAAAC,EAAAC,cAACge,GAAA,EAAD7e,OAAAe,OAAA,CACIwnG,sBAAuBpoG,EAAQkoG,aAC/Bt0D,eAAa,EACb5zC,QAAS,CACLxB,KAAMwB,EAAQxB,KACdmpG,WAAY3nG,EAAQ2nG,WACpBK,MAAOhoG,EAAQgoG,MACfC,MAAOjoG,EAAQioG,MACftpF,QAAS3e,EAAQ2e,UAEjBrf,MASD,SAAS+oG,GAAa/oG,GAEjC,IAAAqU,EAA0BJ,IAAMK,SAAS,CACrC00F,UAAU,EACVC,UAAU,EACVC,UAAU,IAHd30F,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOm/C,EAAPj/C,EAAA,GAAck0E,EAAdl0E,EAAA,GAOMs1B,EAAe,SAAA/mC,GAAI,OAAI,SAAA6S,GACzB8yE,EAASloF,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKizD,GAAN,GAAAjzD,OAAAM,EAAA,EAAAN,CAAA,GAAcuC,EAAO6S,EAAMiG,OAAOyD,aAM9C,OACIne,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACI3Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKE,MAAO,CAAE7C,UAAW,OAAQua,aAAc,OAAQhW,WAAY,MAAOpC,SAAU,SAAxG,wBAEJuB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACzZ,MAAO,CAAEhD,MAAO,MAAO6c,OAAQ,SAC3ChZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACgmB,GAAI,GAAIu4B,GAAI,GAAI8wC,SAAU,EAAGnrE,QAAQ,SAAS5xB,GAAG,SAAS/L,MAAO,CAAE0X,aAAc,SAC7F7W,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMimB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IAC3B7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CAAWrO,GAAG,iBAAiBvJ,MAAM,OAAOqX,OAAO,QAAQ/Z,QAAQ,WAAWzB,MAAM,aAExFwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMimB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IAC3B7Y,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CAAWrO,GAAG,iBAAiBvJ,MAAM,MAAMqX,OAAO,QAAQ/Z,QAAQ,WAAWzB,MAAM,aAEvFwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMimB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,GAAInM,GAAI,IAC5B7Y,EAAAC,EAAAC,cAAIqZ,GAAA,EAAJ,CAAcrO,GAAG,iBAAiBvJ,MAAM,WAAWqX,OAAO,QAAQ/Z,QAAQ,WAAWzB,MAAM,cAGnGwC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAAC5Z,UAAU,SAAS4/B,GAAI,GAAIu4B,GAAI,GAAIr6B,QAAQ,UACvD98B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAC6Z,OAAO,aAAc4lB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IACxD7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAU,cAAcC,QAAQ,KAAME,MAAO,CAAE0B,WAAY,MAAOpC,SAAU,SAAxF,eACAuB,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,KACXgB,EAAAC,EAAAC,cAAA,MAAIf,MAAO,CAAClB,QAAQ,eAAewX,YAAY,SAA/C,KACAzV,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CAEIC,QACIje,EAAAC,EAAAC,cAACgnG,GAAD,CACI/oF,QAASm0C,EAAMw1C,SACfzuF,SAAWsvB,EAAa,YACxB19B,MAAM,aAIdtJ,MAAM,QAMlB3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAOxZ,MAAO,CAAC6Z,OAAO,YAAa4lB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IACxD7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAU,cAAcC,QAAQ,KAAME,MAAO,CAAE0B,WAAY,MAAOpC,SAAU,SAAxF,cACAuB,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,KACfgB,EAAAC,EAAAC,cAAA,MAAIf,MAAO,CAAClB,QAAQ,eAAewX,YAAY,SAA/C,KACIzV,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACIC,QACIje,EAAAC,EAAAC,cAACgnG,GAAD,CACI/oF,QAASm0C,EAAMy1C,SACf1uF,SAAWsvB,EAAa,YACxB19B,MAAM,aAGdtJ,MAAM,QAIlB3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAC6Z,OAAO,aAAc4lB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,GAAInM,GAAI,IACzD7Y,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYlB,QAAQ,KAAKD,UAAU,cAAeG,MAAO,CAAE0B,WAAY,MAAOpC,SAAU,SAAxF,aACAuB,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,KACfgB,EAAAC,EAAAC,cAAA,MAAIf,MAAO,CAAClB,QAAQ,eAAewX,YAAY,SAA/C,KACIzV,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACIC,QACIje,EAAAC,EAAAC,cAACgnG,GAAD,CACI/oF,QAASm0C,EAAM01C,SACf3uF,SAAWsvB,EAAa,YACxB19B,MAAM,aAGdtJ,MAAM,SAKtB3B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACX5Y,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAElB,QAAS,OAAQE,eAAgB,WAAYhC,MAAO,MAAO6c,OAAQ,OAAQ1c,UAAW,SACjG0D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAU,UAAUC,QAAQ,YAAY0W,KAAK,SAASnY,MAAM,UAAUH,gBAAgB,YAAY8B,MAAO,CAAE6Z,OAAQ,cAA3H,UAGAhZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAU,UAAUC,QAAQ,YAAY0W,KAAK,SAASnY,MAAM,UAAUH,gBAAgB,YAAY8B,MAAO,CAAE6Z,OAAQ,cAA3H,SAIJhZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,6CCzJd5a,WAAY/B,YAAW,SAAAC,GAAK,MAAK,CACnC6E,WAAY,CACR1E,QAASH,EAAMI,QAAQ,IAE3B6rG,cAAc7oG,OAAAM,EAAA,EAAAN,CAAA,CACVlD,MAAM,QACNqB,MAAM,UACNS,QAAS,OACb7B,QAAS,YACT+rG,UAAU,SACV1pG,SAAS,MACT2hB,UAAW,UACXgoF,UAAW,SACXC,cAAe,OACfC,oBAAqB,kBAEpBrsG,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC1BxxE,MAAM,QACNqB,MAAM,UACNS,QAAS,OACb7B,QAAS,YACT+rG,UAAU,SACV1pG,SAAS,OACT2hB,UAAW,UACXgoF,UAAW,SACXC,cAAe,OACfC,oBAAqB,uBAQV,SAASC,GAAQzpG,GAC5B,IAAMU,EAAUzB,KAoFhBoV,EAA8BJ,IAAMK,SAAS,CACzCo1F,YAnFgB,CAChB,CACIt9F,GAAG,EACHtJ,KAAK,YACLiiB,UAAU,GAEd,CACI3Y,GAAG,EACHtJ,KAAK,MACLiiB,UAAS,GAEb,CACI3Y,GAAG,EACHtJ,KAAK,QACLiiB,UAAU,GAEd,CACI3Y,GAAG,EACHtJ,KAAK,OACLiiB,UAAW,GAEf,CACI3Y,GAAG,EACHtJ,KAAK,UACLiiB,UAAU,GAEd,CACI3Y,GAAG,EACHtJ,KAAK,UACLiiB,UAAS,GAEb,CACI3Y,GAAG,EACHtJ,KAAM,WACNiiB,UAAS,GAEb,CACI3Y,GAAG,EACHtJ,KAAK,SACLiiB,UAAS,GAEb,CACI3Y,GAAG,EACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,GAEb,CACI3Y,GAAG,GACHtJ,KAAK,YACLiiB,UAAS,MAQjBxQ,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOkT,EAAPhT,EAAA,GAAeo1F,EAAfp1F,EAAA,GA+CA,OAEKrT,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEgpG,UAAW,UACtBnoG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAE0B,WAAY,MAAOrD,MAAO,UAAWrB,MAAO,MAAO6c,OAAQ,YAAcha,UAAWQ,EAAQsB,WAAY7B,QAAQ,MAArI,mDACAe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAEzC,OAAQ,QAASupE,aAAc,oBAAqBzpB,UAAW,oBAAqBrgD,MAAO,MAAO6c,OAAQ,OAAQrc,WAAY,MAAOulB,cAAe,SAC/JliB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM+vF,WAAS,GACjB1oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAGxa,UAAWQ,EAAQ0oG,eAC1B7hF,EAAQmiF,YAAYz9F,IAAI,SAAC49F,GAAD,OAAS3oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GAC5C5Y,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACIxtD,MAAM,UACN4nB,WAAY,CAAE5jB,aAAc,sBACzB2c,QAAWwqF,EAAK9kF,SAC3BxK,SAAY,kBAxD5B,SAAqBnO,GACjB,IAAIs9F,EAAcniF,EAAQmiF,YAAYz9F,IAAI,SAACgF,EAAKiT,GAI5C,OAHG9X,IAAK6E,EAAK7E,KACT6E,EAAK8T,UAAW9T,EAAK8T,UAElB9T,IAEX04F,EAAW,CACPD,gBAgDwBI,CAAYD,EAAKz9F,OAGlClL,EAAAC,EAAAC,cAAA,MAAIf,MAAO,CAAC0B,WAAY,QAAU8nG,EAAK/mG,YAI9C5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAElB,QAAS,OAAQE,eAAgB,gBAAiB6a,OAAQ,YAAa7c,MAAO,QACzF6D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACI3Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQI,KAAK,QAAQI,QAAS,kBAtD9C,WACI,IAAIyyF,EAAcniF,EAAQmiF,YAAYz9F,IAAI,SAACgF,EAAKiT,GAG5C,OAFIjT,EAAK8T,UAAW,EAEb9T,IAEX04F,EAAW,CACPD,gBA+C0CK,KAAlC,UAEJ7oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAElB,QAAS,OAAQE,eAAgB,kBAC5C6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQI,KAAK,QAAQI,QAAS,kBAAIjX,EAAMgqG,gBAAxC,UACA9oG,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQ/X,MAAM,UAAUH,gBAAgB,YAAYsY,KAAK,QAAQ1W,QAAQ,YAAYD,UAAWQ,EAAQwZ,QAAxG,WCrLpB,IAAM+vF,GAAa/sG,YAAW,SAAAC,GAAK,MAAK,CACtCk0B,OAAQ,CACN3yB,MAAO,UACPsC,OAAQ,oBACRswB,UAAW,CACT/yB,gBAAiB,yBACjByC,OAAQ,yBAMR/B,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC6E,WAAY,CACV1E,QAASH,EAAMI,QAAQ,OAKrB0c,GAAU,CACd,gCACA,gCACA,sCACA,iCAGa,SAASiwF,KACLD,KAAjB,IACMvpG,EAAUzB,KAChBoV,EAAgCJ,IAAMK,SAAS,MAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO08C,EAAPx8C,EAAA,GAAiBy8C,EAAjBz8C,EAAA,GAcM2J,EAAc,WAClB8yC,EAAY,OAGRx4C,EAAOy6B,QAAQ8d,GACf3kD,EAAKoM,EAAO,sBAAmB7F,EAGrC,OACEzR,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,SAASG,MAAO,CAAElB,QAAS,OAAQE,eAAgB,eAAgBmnC,WAAY,QAASkX,UAAW,oBAAqBypB,aAAc,sBACnJjmE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMimB,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,GACtBhlB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAtBM,SAAAtB,GAClBq7C,EAAYr7C,EAAM2+C,gBAqBgBn0D,QAAQ,WAAWzB,MAAM,UAAUH,gBAAgB,YAAYsY,KAAK,QAASxW,MAAO,CAAEV,SAAU,OAAQtC,MAAO,MAAOK,WAAY,OAAQF,UAAW,OAAQua,aAAc,OAAQza,QAAS,YAA1N,aACY4D,EAAAC,EAAAC,cAAC+oG,GAAAhpG,EAAD,CAAmBxB,SAAS,aAGxCuB,EAAAC,EAAAC,cAACgpG,GAAA,EAAD,CACEh+F,GAAIA,EACJoM,KAAMA,EACNu4C,SAAUA,EACVt4C,QAASyF,EACT6C,aAAc,CACZjF,SAAU,SACVG,WAAY,UAEdouF,gBAAiB,CACfvuF,SAAU,MACVG,WAAY,WAGd/a,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAE+iB,cAAe,MAAOknF,WAAY,MAAO5rG,MAAO,WAAawB,UAAWQ,EAAQsB,WAAY7B,QAAQ,MAAzH,8BAEAe,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,KAAMmB,MAAO,CAAC/C,QAAQ,uBAE1C4D,EAAAC,EAAAC,cAACk6C,GAAA,EAAD,CACAp7C,UAAWQ,EAAQs5C,eACjB7/B,WAAS,EACTha,QAAQ,WACR+Z,OAAO,QACPqhC,QAAQ,oCACRnvC,GAAG,+BAITlL,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUr7C,MAAO,CAAC9B,gBAAgB,QAAQG,MAAM,UAAUpB,QAAQ,YAAYqC,SAAS,SAAvF,cACAuB,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUr7C,MAAO,CAAC9B,gBAAgB,QAAQG,MAAM,UAAUpB,QAAQ,YAAYqC,SAAS,SAAvF,SACAuB,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUr7C,MAAO,CAAC9B,gBAAgB,QAAQG,MAAM,UAAUpB,QAAQ,YAAYqC,SAAS,SAAvF,UAGEuB,EAAAC,EAAAC,cAACozD,GAAA,EAAD,CACEpoD,GAAG,YAGHyS,aAAW,EAEXpG,QAASyF,GAERjE,GAAQhO,IAAI,SAACqO,EAAQ4J,GAAT,OACXhjB,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CACEvlC,IAAKmE,EAGLrD,QAAS,SAAAtB,GAhEvBq7C,EAAY,QAkEG12C,SAWbpZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMimB,GAAI,GAAIu4B,GAAI,GAAInyC,GAAI,GACxBhlB,EAAAC,EAAAC,cAAA,QAAMmpG,YAAU,EAACtsE,aAAa,MAAM59B,MAAO,CAAEhD,MAAO,MAAO6c,OAAQ,OAAQ1c,UAAW,OAAQua,aAAc,SAC1G7W,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CAAWN,WAAS,EAACD,OAAO,QAAQ9N,GAAG,iBAAiBjM,QAAQ,gBC/H1E,IAAMlB,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCk0B,OAAQ,CACN3yB,MAAO,UACPsC,OAAQ,oBACRswB,UAAW,CACT/yB,gBAAiB,yBACjByC,OAAQ,yBAiGCwpG,OA5Ff,WACkBvrG,KADI,IAAAuiD,EAEpBntC,EAAgCJ,IAAMK,SAAS,MAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO08C,EAAPx8C,EAAA,GAAiBy8C,EAAjBz8C,EAAA,GAKM2J,EAAc,WAClB8yC,GAAY,IAERx4C,EAAOy6B,QAAQ8d,GACf3kD,EAAKoM,EAAO,sBAAmB7F,EAErC,OACEzR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTgmB,GAAI,GACJu4B,GAAI,GACJnyC,GAAI,GACJnM,GAAI,GACJ1Z,MAAO,CACLlB,QAAS,OACTE,eAAgB,gBAChB0Y,aAAc,OACdva,UAAW,SAGb0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM2/C,GAAI,EAAG15B,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IACpC7Y,EAAAC,EAAAC,cAAA,MACElB,UAAU,WACVG,MAAO,CAAEV,SAAU,OAAQoC,WAAY,QAFzC,aAOFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACT0/C,GAAI,EACJ15B,GAAI,EACJu4B,GAAI,EACJnyC,GAAI,EACJnM,GAAI,GACJ0wF,SAAS,SACTpqG,MAAO,CAAElB,QAAS,OAAQE,eAAgB,kBAE1C6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM3Z,UAAU,aAAa4/B,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,GACpD7Y,EAAAC,EAAAC,cAACqV,GAAA,GAAD+qC,EAAA,CACEthD,UAAU,UACVkM,GAAG,MACH1N,MAAM,UACNuY,QA9CU,SAACtB,GACnBq7C,EAAYr7C,EAAM2+C,gBA8CVn0D,QAAQ,WACR0W,KAAK,SANPtW,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAOQ,WAPRjhD,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAQS,CAAE7hD,SAAU,OAAQrC,QAAS,YARtCkkD,GAAA,UAWEtgD,EAAAC,EAAAC,cAAC+oG,GAAAhpG,EAAD,CAAmBxB,SAAS,aAE9BuB,EAAAC,EAAAC,cAACgpG,GAAA,EAAD,CACEh+F,GAAIA,EACJoM,KAAMA,EACNu4C,SAAUA,EACVt4C,QAASyF,EACT6C,aAAc,CACZjF,SAAU,SACVG,WAAY,UAEdouF,gBAAiB,CACfvuF,SAAU,MACVG,WAAY,WAGd/a,EAAAC,EAAAC,cAACqoG,GAAD,CAASO,YAAa9rF,MAG1Bhd,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM3Z,UAAU,aAAa4/B,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,GACpD7Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACErK,GAAG,SACHlM,UAAU,UACVC,QAAQ,YACR0W,KAAK,QACLnY,MAAM,UACNH,gBAAgB,aANlB,sBCxEV,SAAS8tE,GAAWvpE,EAAMwpE,EAAUC,EAAKC,EAAOC,EAASi+B,EAAUC,GACjE,MAAO,CAAE7nG,OAAMwpE,WAAUC,MAAKC,QAAOC,UAAUi+B,WAAUC,YAG3D,IAAMvzE,GAAO,CACXi1C,GAAW,UAAW,IAAK,IAAK,GAAI,IAAK,GAAI,KAC7CA,GAAW,QAAS,IAAK,GAAM,GAAI,IAAK,GAAI,KAC5CA,GAAW,SAAU,IAAK,GAAM,GAAI,EAAK,GAAI,KAC7CA,GAAW,iBAAkB,IAAK,EAAK,GAAI,EAAK,GAAI,KACpDA,GAAW,cAAe,IAAK,GAAM,GAAI,IAAK,GAAI,KAClDA,GAAW,YAAa,IAAK,IAAK,GAAI,IAAK,GAAI,KAC/CA,GAAW,qBAAsB,IAAK,EAAK,GAAI,IAAK,GAAI,KACxDA,GAAW,aAAc,IAAK,EAAK,GAAI,EAAK,GAAI,KAChDA,GAAW,SAAU,IAAK,GAAM,GAAI,EAAK,GAAI,KAC7CA,GAAW,WAAY,IAAK,GAAK,GAAI,EAAK,GAAI,KAC9CA,GAAW,cAAe,IAAK,EAAG,GAAI,EAAK,GAAI,KAC/CA,GAAW,SAAU,IAAK,GAAM,EAAG,GAAM,GAAI,KAC7CA,GAAW,OAAQ,IAAK,GAAM,GAAI,EAAK,GAAI,MAK7C,SAASlkB,GAAqBhnD,EAAGinD,EAAGz2B,GAClC,OAAIy2B,EAAEz2B,GAAWxwB,EAAEwwB,IACT,EAENy2B,EAAEz2B,GAAWxwB,EAAEwwB,GACV,EAEF,EAmBT,IAAMi5E,GAAY,CAChB,CAAEx+F,GAAI,OAAQgc,SAAS,EAAOC,gBAAgB,EAAMxlB,MAAO,6BAC3D,CAAEuJ,GAAI,WAAYgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,YAC/D,CAAEuJ,GAAI,MAAOgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,cAC1D,CAAEuJ,GAAI,QAASgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,gBAC5D,CAAEuJ,GAAI,UAAWgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,kBAC9D,CAAEuJ,GAAI,WAAYgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,mBAC/D,CAAEuJ,GAAI,WAAYgc,SAAS,EAAMC,gBAAgB,EAAOxlB,MAAO,oBAGjE,SAAS2uB,GAAkBxxB,GACzB,IAAQU,EAAoFV,EAApFU,QAASgxB,EAA2E1xB,EAA3E0xB,iBAAkBD,EAAyDzxB,EAAzDyxB,MAAOE,EAAkD3xB,EAAlD2xB,QAASE,EAAyC7xB,EAAzC6xB,YAAaC,EAA4B9xB,EAA5B8xB,SAAUF,EAAkB5xB,EAAlB4xB,cAK1E,OAEC1wB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACCtV,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWllB,QAAQ,YACjB4D,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACE2+C,cAAeh5E,EAAc,GAAKA,EAAcC,EAChDzS,QAASyS,EAAW,GAAKD,IAAgBC,EACzCvX,SAAUmX,EACVpL,WAAY,CAAE5jB,aAAc,0BAG/BkoG,GAAU3+F,IAAI,SAAAic,GAAQ,OACrBhnB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK+R,EAAS9b,GACd+b,MAAOD,EAASE,QAAU,QAAU,OACpC9qB,QAAS4qB,EAASG,eAAiB,OAAS,UAC5C0J,cAAeJ,IAAYzJ,EAAS9b,IAAKqlB,GAEzCvwB,EAAAC,EAAAC,cAAC4wB,GAAA,EAAD,CACEC,OAAQN,IAAYzJ,EAAS9b,GAC7B2Q,UAAW4U,IAAYzJ,EAAS9b,GAAKqlB,EAAQ,MAC7Cxa,SA3Bcib,EA2BahK,EAAS9b,GA3BV,SAAAuJ,GACpCic,EAAcjc,EAAOuc,MA4BVhK,EAASrlB,MACT8uB,IAAYzJ,EAAS9b,GACpBlL,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQyxB,gBACZ,SAAVV,EAAmB,oBAAsB,oBAE1C,OAlCU,IAAAS,OAsD5B,IAAM44E,GAAmB5tG,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eAIJo4E,GAAuB,SAAA/qG,GAC3B,IAAMU,EAAUoqG,KACRj5E,EAAgB7xB,EAAhB6xB,YAER,OAEE3wB,EAAAC,EAAAC,cAAC2kE,GAAA,EAAD,CAEE7lE,UAAWU,kBAAKF,EAAQxB,KAATqB,OAAAM,EAAA,EAAAN,CAAA,GACZG,EAAQ4xB,UAAYT,EAAc,KAGpCA,EAAc,EACb3wB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ8L,MAAO9N,MAAM,UAAUyB,QAAQ,aAC3D0xB,EADH,aAIA3wB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ8L,MAAOnM,MAAO,CAAC0B,WAAW,OAAQ5B,QAAQ,KAAKiM,GAAG,cAAjF,aAMDylB,EAAc,EACb3wB,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,UACbtL,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,UACrBxB,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,QAIJD,EAAAC,EAAAC,cAACwwC,GAAA,EAAD,CAASplC,MAAM,eACbtL,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYxtC,aAAW,mBAa3BzD,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CAEL/jB,MAAM,OACNikB,UAAU,UAEZ6Q,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MAII,SAAS2tG,KACtB,IAAMtqG,EAAUzB,KAChBoV,EAA0BJ,IAAMK,SAAS,OAAzCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOod,EAAPld,EAAA,GAAcuhB,EAAdvhB,EAAA,GACA2I,EAA8BjJ,IAAMK,SAAS,YAA7C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyU,EAAPxU,EAAA,GAAgB8Y,EAAhB9Y,EAAA,GACAE,EAAgCpJ,IAAMK,SAAS,IAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOkH,EAAPjH,EAAA,GAAiBogD,EAAjBpgD,EAAA,GACAC,EAAwBtJ,IAAMK,SAAS,GAAvCkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOkK,EAAPjK,EAAA,GAAakK,EAAblK,EAAA,GACAG,EAA0B1J,IAAMK,UAAS,GAAzCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO4rE,EAAP3rE,EAAA,GACA4V,GADA5V,EAAA,GACsC3J,IAAMK,SAAS,IAArDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO7L,EAAP8L,EAAA,GAAoB7L,EAApB6L,EAAA,GAqDMw3E,EAAYtjF,EAAc8wC,KAAKyyC,IAAIvjF,EAAayP,GAAK1kB,OAAS+U,EAAOE,GAE3E,OACEzmB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MAWpBgC,EAAAC,EAAAC,cAAC+pG,GAAD,CAAYrrE,GAAI,GAAIu4B,GAAI,GAAInyC,GAAI,KAExChlB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACgmB,GAAI,GAAIu4B,GAAI,GAAInyC,GAAI,GAAInM,GAAI,GAAI1Z,MAAO,CAACihB,UAAU,SAC5DpgB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQ+Y,OACxBvY,EAAAC,EAAAC,cAACgqG,GAAD,CAAsBv5E,YAAatN,EAAS7R,SAC5CxR,EAAAC,EAAAC,cAAC+wC,GAAA,EAAD,KACAjxC,EAAAC,EAAAC,cAACiqG,GAAD,MAEEnqG,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBtC,kBAAgB,aAChBjI,KAAM0yE,EAAQ,QAAU,SACxB7mF,aAAW,kBAEXxB,EAAAC,EAAAC,cAACkqG,GAAD,CACE5qG,QAASA,EACTmxB,YAAatN,EAAS7R,OACtB+e,MAAOA,EACPE,QAASA,EACTD,iBA9EiB,SAAA/b,GAC3B,GAAIA,EAAMiG,OAAOyD,QAAjB,CACE,IAAMksF,EAAen0E,GAAKnrB,IAAI,SAAAu/F,GAAC,OAAIA,EAAE1oG,OACrC46D,EAAY6tC,QAGd7tC,EAAY,KAyEF9rC,cArFc,SAACjc,EAAOuc,GAEhC4D,EADcnE,IAAYO,GAAsB,QAAVT,EACrB,OAAS,OAC1BwE,EAAW/D,IAmFDJ,SAAUsF,GAAK1kB,SAEjBxR,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KAvQZ,SAAoBqkC,EAAOC,GACzB,IAAMC,EAAiBF,EAAMr8C,IAAI,SAACw8C,EAAIvkC,GAAL,MAAe,CAACukC,EAAIvkC,KAMrD,OALAskC,EAAezxB,KAAK,SAAC51B,EAAGinD,GACtB,IAAM32B,EAAQ82B,EAAWpnD,EAAE,GAAIinD,EAAE,IACjC,OAAc,IAAV32B,EAAoBA,EACjBtwB,EAAE,GAAKinD,EAAE,KAEXI,EAAev8C,IAAI,SAAAw8C,GAAE,OAAIA,EAAG,KAkQZC,CAAWtxB,GA/QpC,SAAuB3F,EAAOE,GAC5B,MAAiB,SAAVF,EACH,SAACtwB,EAAGinD,GAAJ,OAAUD,GAAqBhnD,EAAGinD,EAAGz2B,IACrC,SAACxwB,EAAGinD,GAAJ,OAAWD,GAAqBhnD,EAAGinD,EAAGz2B,IA4QFg3B,CAAcl3B,EAAOE,IACtCrJ,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1b,IAAI,SAACsc,EAAKrE,GACX,IA5CHphB,EA4CS2oG,GA5CT3oG,EA4CqCylB,EAAIzlB,MA5CL,IAA5ByhB,EAASoW,QAAQ73B,IA6ChBy4C,EAAO,2BAAAt6C,OAA8BijB,GAEjD,OACEhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CACEopF,OAAK,EACLz0F,QAAS,SAAAtB,GAAK,OApFd,SAACA,EAAO7S,GAC1B,IAAM+mB,EAAgBtF,EAASoW,QAAQ73B,GACnC6oG,EAAc,IAEK,IAAnB9hF,EACF8hF,EAAcA,EAAY1qG,OAAOsjB,EAAUzhB,GAChB,IAAlB+mB,EACT8hF,EAAcA,EAAY1qG,OAAOsjB,EAAS+D,MAAM,IACvCuB,IAAkBtF,EAAS7R,OAAS,EAC7Ci5F,EAAcA,EAAY1qG,OAAOsjB,EAAS+D,MAAM,GAAI,IAC3CuB,EAAgB,IACzB8hF,EAAcA,EAAY1qG,OACxBsjB,EAAS+D,MAAM,EAAGuB,GAClBtF,EAAS+D,MAAMuB,EAAgB,KAInC6zC,EAAYiuC,GAmEwBhgC,CAAYh2D,EAAO4S,EAAIzlB,OACzC8oG,KAAK,WACLC,eAAcJ,EACdK,UAAW,EACX31F,IAAKoS,EAAIzlB,KACTyhB,SAAUknF,GAEVvqG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWllB,QAAQ,YACjB4D,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACE7sC,QAASosF,EACTnlF,WAAY,CAAExH,kBAAmBy8B,MAGrCr6C,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKyJ,GAAImvC,EAASrjB,MAAM,MAAM56B,QAAQ,QACxDirB,EAAIzlB,MAEP5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAI+jD,UAC9BprE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIgkD,KAC9BrrE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIikD,OAC9BtrE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIkkD,SAC9BvrE,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAImiF,UAC9BxpG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAASI,EAAIoiF,aAKrCM,EAAY,GACX/pG,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUjiB,MAAO,CAAEzC,QAAS2rF,EAAQ,GAAK,IAAM0hB,IAC7C/pG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,QAa9BnxC,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BtmB,UAAU,MACVumB,MAAOkO,GAAK1kB,OACZiV,YAAaA,EACbF,KAAMA,EACN0B,aA/GiB,SAACxT,EAAOyT,GAE/B1B,EAAQ0B,IA8GFC,oBA3GwB,SAAA1T,GAC9BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,SChRGqkF,OAPf,WACI,OACI7qG,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEhD,MAAO,SACjB6D,EAAAC,EAAAC,cAAC4pG,GAAD,QCqNGgB,GA9MC,SAAChsG,GACf,IAAIy7B,EAAUvI,cACRjV,EAAQhK,IAAMwB,WAAW8G,IAE/B5H,EAA0BL,mBAAS,IAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO6+C,EAAP5+C,EAAA,GAAc6zE,EAAd7zE,EAAA,GACAhC,QAAQyR,IAAI,eAAgBmvC,GAW5Br1C,oBAAU,WACRjL,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MAAOgsF,OAGRt5E,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GAEL,IAAMk1F,EAAel1F,EAAKA,KAAKg7F,QAAQjgG,MACvCy8E,EAAS0d,MAEZ,IAEH,IA4BM+F,EAAqB,SAACzkF,EAAM1C,GAChC7R,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MhCjCsB,uQgCkCtBga,UAAW,CACTZ,UAAWA,EACX0C,KAAMA,OAITpJ,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GAELgN,EAAMvB,SAAS,CACblE,MAAM,EACNgE,IAAK,gCA9CXtJ,MAAK,GAAAjS,OAAIS,EAAJ,YAAuB,CAC1BsQ,OAAQ,OACRC,QAAS,CACPa,eAAgB,oBAElBK,KAAME,KAAKC,UAAU,CACnB3H,MAAOgsF,OAGRt5E,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAACpN,GAGL,IAAMk1F,EAAel1F,EAAKA,KAAKg7F,QAAQjgG,MACvCy8E,EAAS0d,QAqCf,OACEjlG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GAEvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAACX,GAAI,GAAImM,GAAI,GAAI3oB,QAAS,GAC5C2D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,MAAnC,sBAKFe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAG,iBAC/Ch/B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAHV,mBAYRe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAG,oBAC/Ch/B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAHV,wBAYRe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAG,aAC/Ch/B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAHV,yBAWRe,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAC3B5+B,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CAAMC,UAAU,OAAOr9B,UAAWs9B,IAAYC,GAAG,eAC/Ch/B,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CAAE+6B,UAAW,SAAU59B,UAAW,GACzCmF,UAAU,KACVxC,QAAQ,MAHV,mBAaPqzD,EAAMvnD,IAAI,SAACsW,GAAD,OACTrhB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG4Z,GAAI,GAE3B5+B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAMzU,WAAS,EAACjmB,UAAU,SACxBgB,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEhB,MAAO,CACL+6B,UAAW,SACXlhB,OAAQ,UACR8iD,cAAe,aACftlD,OAAQ,UACRlY,aAAc,MACdjB,gBAAiB,UACjBjB,QAAS,MACToB,MAAO,QAETiE,UAAU,KACVxC,QAAQ,KACR8W,QAAS,kBA3KJnU,EA2KsByf,EAAIkF,UA1K7CgU,EAAQllB,KAAK,CACX8J,SAAU,gBACVmzC,MAAO,CACL1wD,KAAMA,KAJQ,IAACA,IA8CG,SAACA,GACvB,IAAIqpG,EAAcrpG,EAAKkxD,QAAQ,SAAU,SAAAzxC,GAAG,MAAI,OAAAthB,OAASshB,EAAIgjB,iBAC7D,MAAa,QAATziC,EACmB,wBAEdqpG,EA0HMC,CAAgB7pF,EAAIkF,OAEvBvmB,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAClB,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAS4jB,IAAI,QAC1E/hB,EAAAC,EAAAC,cAACC,EAAA,EAAD,wBACAH,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACE7e,MAAO,CAAElB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAChE8f,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAASkD,EAAIwC,SACbxK,SAAU,kBAAM2xF,EAAmB3pF,EAAIkF,KAAMlF,EAAIwC,WACjDjiB,KAAK,WACLpE,MAAM,uBChLxBgmB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAiVI2tG,GA9UW,SAACrsG,GACzB,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACM6uB,EAAQ3tB,qBAAW8G,IACzB5H,EAAgDL,mBAAS,IAAzDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO23F,EAAP13F,EAAA,GAAyB23F,EAAzB33F,EAAA,GACAG,EAAsDT,mBAAS,CAC7Dwe,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAJPn/E,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOy3F,EAAPx3F,EAAA,GAA4By3F,EAA5Bz3F,EAAA,GAMAG,EAAoCb,mBAAS,CAC3C6/E,KAAK,EACLp7E,QAAQ,IAFVzD,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO6+E,EAAP1+E,EAAA,GAAsBo3F,EAAtBp3F,EAAA,GAKA6I,oBAAU,WACRmH,KACC,IACH,IAAMA,EAAkB,eAAA9T,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjQuqD4B,yLiQ7qDP4G,EAAAE,KAAA,EAUnBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAK07F,WAAW3gG,MACtCiF,EAAK8lB,KAAK,SAAC51B,EAAGinD,GAAJ,OAAUva,WAAW1sC,EAAE2xB,UAAY+a,WAAWua,EAAEt1B,YAE1Dy5E,EAAoBt7F,KAErBwN,MAAM7L,QAAQzB,OAlBQ,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAwBlB6L,EAAc,WAClBjB,GAAQ,IAEJ05E,EAAe,SAAChhF,GACpB82F,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,GAAAjsG,OAAAM,EAAA,EAAAN,CAAA,GAEnBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAGhCgW,EAAY,eAAAoD,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAsV,EAAO7a,GAAP,IAAAyF,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO9B,GACP8b,UAAW,CAAEvZ,GAAIA,MAPF8a,EAAAzU,KAAA,EAWbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLE,MAED7G,MAAM7L,QAAQzB,OAhBE,wBAAA+V,EAAAxT,SAAAuT,MAAH,gBAAAtT,GAAA,OAAA4R,EAAAzR,MAAAC,KAAA1B,YAAA,GAmBZwT,EAAa,eAAAC,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,IAAA,IAAAonF,EAAA/6F,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,YAElB+5F,EAAoB15E,UACpB05E,EAAoBjrF,MACpBirF,EAAoBzzF,QACpByzF,EAAoBrY,KALF,CAAAzuE,EAAAjT,KAAA,eAOdm6F,EAAqB,CACvB95E,UAAW05E,EAAoB15E,SAC/BjhB,IAAK26F,EAAoBjrF,KACzBxI,OAAQyzF,EAAoBzzF,OAC5Bo7E,IAAKqY,EAAoBrY,IACzB0Y,KAAK,IAAIroF,MAAOsoF,eAGZj7F,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MjQopDqB,2fiQnpDrBga,UAAWinF,KArBGlnF,EAAAjT,KAAA,EAyBZS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL2nF,IACAznF,IACArI,GAAQ,KAETwB,MAAM7L,QAAQzB,OAhCC,OAAAuU,EAAAjT,KAAA,eAkClB2wB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,qBArCW,wBAAAkJ,EAAAhS,SAAA8R,MAAH,yBAAAM,EAAAhS,MAAAC,KAAA1B,YAAA,GAyCbw3B,EAAe,SAACjH,EAAM9/B,GAC1B2wF,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,GAApB,OAAI7gC,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACbsY,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,GAAAjsG,OAAAM,EAAA,EAAAN,CAAA,GAEnBuC,EAFmB,OAEZwb,QAFY,IAEZA,OAFY,UAAA6gC,EAEZ7gC,EAAKrN,YAFO,IAAAkuC,OAAA,EAEZA,EAAWg1C,OAErBuY,EAAWnsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKyzF,GAAN,GAAAzzF,OAAAM,EAAA,EAAAN,CAAA,GAAsBuC,GAAO,KAEvCsgC,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,MAIZquF,EAAa,WACjBN,EAAuB,CACrB35E,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAEPuY,EAAW,CACTvY,KAAK,EACLp7E,QAAQ,KAGZ,OACE7X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,iCASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QApIY,WACtBgG,GAAQ,KAgIA,aAUJ/b,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBACb,IADH,6BAE6B,KAE7BlL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqgG,EAAoB15E,SAC3BhwB,KAAK,aAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,uCACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqgG,EAAoBjrF,KAC3Bze,KAAK,SAEK5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACVC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,aAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,kBAUJ7X,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACPlxC,UAAWQ,EAAQynC,MACnB9nC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,eACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAAOkuB,EAAaluB,EAAEC,OAAOy1B,MAAM,GAAI,UAEnDnwC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,gBACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACV+T,SAAUs9E,EAAcG,IACxB/tB,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,OAJb,qBAYRD,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGqoF,EAAiBrgG,IAAI,SAACsW,EAAK2B,GAAN,OACpBhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoM,EAAInW,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIuQ,UAChB5xB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAI,GAAA3B,OAAKU,GACTia,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAHrB,GAAAvgB,OAKMU,KAGRT,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAM2f,EAAIxJ,OACV6C,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAGnBtgB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKT,EAAIxJ,OACT1Y,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAM2f,EAAI4xE,IACVv4E,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAGnBtgB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKT,EAAI4xE,IACT9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAInW,KAChC/L,MAAO,CAAE3B,MAAO,OAAQH,gBAAiB,QAF3C,oBC1VdmmB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAW,QAEb0jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAuTIsuG,GApTW,SAAChtG,GACzB,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACAI,EAAgDL,mBAAS,IAAzDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO23F,EAAP13F,EAAA,GAAyB23F,EAAzB33F,EAAA,GACAG,EAAsDT,mBAAS,CAC7Dwe,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAJPn/E,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOy3F,EAAPx3F,EAAA,GAA4By3F,EAA5Bz3F,EAAA,GAMAG,EAAoCb,mBAAS,CAC3C6/E,KAAK,EACLp7E,QAAQ,IAFVzD,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO6+E,EAAP1+E,EAAA,GAAsBo3F,EAAtBp3F,EAAA,GAIM8tB,EAAQ3tB,qBAAW8G,IAEzB4B,oBAAU,WACRmH,KACC,IAEH,IAAMA,EAAkB,eAAA9T,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MlQqrDyB,+LkQ3rDJ4G,EAAAE,KAAA,EAUnBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAK07F,WAAW3gG,MACtCiF,EAAK8lB,KAAK,SAAC51B,EAAGinD,GAAJ,OAAUva,WAAW1sC,EAAE2xB,UAAY+a,WAAWua,EAAEt1B,YAE1Dy5E,EAAoBt7F,KAErBwN,MAAM7L,QAAQzB,OAlBQ,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAyBlB6L,EAAc,WAClBjB,GAAQ,GACR8vF,KAEIpW,EAAe,SAAChhF,GACpB82F,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,GAAAjsG,OAAAM,EAAA,EAAAN,CAAA,GAEnBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UAGhCgW,EAAY,eAAAoD,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAsV,EAAO7a,GAAP,IAAAyF,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO9B,GACP8b,UAAW,CAAEvZ,GAAIA,MAPF8a,EAAAzU,KAAA,EAWbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLE,MAED7G,MAAM7L,QAAQzB,OAhBE,wBAAA+V,EAAAxT,SAAAuT,MAAH,gBAAAtT,GAAA,OAAA4R,EAAAzR,MAAAC,KAAA1B,YAAA,GAmBZwT,EAAa,eAAAC,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,IAAA,IAAAonF,EAAA/6F,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,YAElB+5F,EAAoB15E,UACpB05E,EAAoBjrF,MACpBirF,EAAoBzzF,QACpByzF,EAAoBrY,KALF,CAAAzuE,EAAAjT,KAAA,eAOdm6F,EAAqB,CACvB95E,UAAW05E,EAAoB15E,SAC/BjhB,IAAK26F,EAAoBjrF,KACzBxI,OAAQyzF,EAAoBzzF,OAC5Bo7E,IAAKqY,EAAoBrY,IACzB0Y,KAAK,IAAIroF,MAAOsoF,eAGZj7F,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MlQutDmB,mgBkQttDnBga,UAAWinF,KArBGlnF,EAAAjT,KAAA,EAyBZS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL2nF,IACAznF,IACArI,GAAQ,KAETwB,MAAM7L,QAAQzB,OAhCC,OAAAuU,EAAAjT,KAAA,eAkClB2wB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,qBArCW,wBAAAkJ,EAAAhS,SAAA8R,MAAH,yBAAAM,EAAAhS,MAAAC,KAAA1B,YAAA,GAgEb06F,EAAa,WACjBN,EAAuB,CACrB35E,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAEPuY,EAAW,CACTvY,KAAK,EACLp7E,QAAQ,KAGZ,OACE7X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,iCASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QAvIY,WACtBgG,GAAQ,GACR8vF,MAkIQ,aAUJ7rG,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,iCACiC,KAEjClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACE4L,WAAS,EACTnM,OAAO,QACP9N,GAAG,WACHvJ,MAAM,WACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqgG,EAAoB15E,SAC3BhwB,KAAK,aAEP5B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,OACHvJ,MAAM,uCACN1C,QAAQ,WACRga,WAAS,EACTI,SAAUo8E,EACVxqF,MAAOqgG,EAAoBjrF,KAC3Bze,KAAK,SAEP5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAzGJinB,EAyGwBjnB,EAAEC,OAAOy1B,MAAM,QAxG3DoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,EAAAq+C,GAApB,OAAIl/E,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACbsY,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,IAEpBzzF,OAAM,OAAEuF,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,IACnBA,IAAG,OAAE71E,QAAF,IAAEA,OAAF,UAAAk/E,EAAEl/E,EAAKrN,YAAP,IAAAusF,OAAA,EAAEA,EAAWrJ,OAElBuY,EAAWnsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKyzF,GAAN,IAAqBj7E,QAAQ,EAAMo7E,KAAK,KAElD/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAnBG,IAACkkB,KA2GR1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,qBAYR7X,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGqoF,EAAiBrgG,IAAI,SAACsW,EAAK2B,GAAN,OACpBhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoM,EAAInW,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAYD,EAAIuQ,UAChB5xB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAI,GAAA3B,OAAKU,GACTia,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAHrB,GAAAvgB,OAKMU,KASRT,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAM2f,EAAI4xE,IACVv4E,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAGnBtgB,EAAAC,EAAAC,cAAA,OACE4hB,IAAKT,EAAI4xE,IACTpxE,IAAI,YACJ1iB,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAInW,KAChC/L,MAAO,CAAE3B,MAAO,OAAQH,gBAAiB,QAF3C,oBCjUdmmB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAW,QAEb0jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAmTIuuG,OA/Sf,SAA2BjtG,GACzB,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACAI,EAAgDL,mBAAS,IAAzDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO23F,EAAP13F,EAAA,GAAyB23F,EAAzB33F,EAAA,GACAG,EAAsDT,mBAAS,CAC7Dwe,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAJPn/E,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOy3F,EAAPx3F,EAAA,GAA4By3F,EAA5Bz3F,EAAA,GAMAG,EAAoCb,mBAAS,CAC3C6/E,KAAK,EACLp7E,QAAQ,IAFVzD,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO6+E,EAAP1+E,EAAA,GAAsBo3F,EAAtBp3F,EAAA,GAIM8tB,EAAQ3tB,qBAAW8G,IAMnB2B,EAAc,WAClBjB,GAAQ,IAUVkB,oBAAU,WACRmH,KACC,IACH,IAAMA,EAAkB,eAAA9T,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOtC,MANckJ,EAAAE,KAAA,EAUnBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAK07F,WAAW3gG,MACtCiF,EAAK8lB,KAAK,SAAC51B,EAAGinD,GAAJ,OAAUva,WAAW1sC,EAAE2xB,UAAY+a,WAAWua,EAAEt1B,YAE1Dy5E,EAAoBt7F,KAErBwN,MAAM7L,QAAQzB,OAlBQ,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAoBlBwT,EAAa,eAAAN,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAsV,IAAA,IAAA2lF,EAAA/6F,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,YAElB+5F,EAAoBnW,UACpBmW,EAAoBzzF,QACpByzF,EAAoBrY,KAJF,CAAAjtE,EAAAzU,KAAA,eAMdm6F,EAAqB,CACvBvW,SAAUmW,EAAoBnW,SAC9Bt9E,OAAQyzF,EAAoBzzF,OAC5Bo7E,IAAKqY,EAAoBrY,IACzB0Y,KAAK,IAAIroF,MAAOsoF,eAEZj7F,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOrC,GACPqc,UAAWinF,KAlBG1lF,EAAAzU,KAAA,EAsBZS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL2nF,IACAznF,IACArI,GAAQ,KAETwB,MAAM7L,QAAQzB,OA7BC,OAAA+V,EAAAzU,KAAA,eA+BlB2wB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,qBAlCW,wBAAA0K,EAAAxT,SAAAuT,MAAH,yBAAA1B,EAAAzR,MAAAC,KAAA1B,YAAA,GAuCb8P,EAAY,eAAA2D,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,EAAOpZ,GAAP,IAAAyF,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAO9B,GACP8b,UAAW,CAAEvZ,GAAIA,MAPFsZ,EAAAjT,KAAA,EAWbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLE,MAED7G,MAAM7L,QAAQzB,OAhBE,wBAAAuU,EAAAhS,SAAA8R,MAAH,gBAAA7R,GAAA,OAAAmS,EAAAhS,MAAAC,KAAA1B,YAAA,GAyCZ06F,EAAa,WACjBN,EAAuB,CACrB35E,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAEPuY,EAAW,CACTvY,KAAK,EACLp7E,QAAQ,KAGZ,OACE7X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,0CASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QA3JY,WACtBgG,GAAQ,KAuJA,aAUJ/b,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,0CAC0C,KAE1ClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KAYE/d,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEP,OAAO,QACP9N,GAAG,WACHvJ,MAAM,mCACN1C,QAAQ,WACRga,WAAS,EACTI,SAhLS,SAAC5E,GACpB82F,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,GAAAjsG,OAAAM,EAAA,EAAAN,CAAA,GAEnBoV,EAAMiG,OAAO9Y,KAAO6S,EAAMiG,OAAOzP,UA8K1BA,MAAOqgG,EAAoBnW,SAC3BvzF,KAAK,aAEA5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACLC,WAAS,EACTza,eAAe,eACfgB,MAAO,CAAE/C,QAAS,aAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OAzGJinB,EAyGwBjnB,EAAEC,OAAOy1B,MAAM,QAxG3DoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,EAAAq+C,GAApB,OAAIl/E,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACbsY,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,IAEpBzzF,OAAM,OAAEuF,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,IACnBA,IAAG,OAAE71E,QAAF,IAAEA,OAAF,UAAAk/E,EAAEl/E,EAAKrN,YAAP,IAAAusF,OAAA,EAAEA,EAAWrJ,OAElBuY,EAAWnsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKyzF,GAAN,IAAqBj7E,QAAQ,EAAMo7E,KAAK,KAElD/wD,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAnBG,IAACkkB,KA2GR1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,qBAYR7X,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGqoF,EAAiBrgG,IAAI,SAACsW,EAAK2B,GAAN,OACpBhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoM,EAAInW,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAY0B,EAAQ,GACpBhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAI,GAAA3B,OAAKU,EAAU4gB,EAAI8zE,UACvBz6E,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAHrB,GAAAvgB,OAKMU,EAAU4gB,EAAI8zE,YAQtBn1F,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAM2f,EAAI4xE,IACVv4E,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAEnBtgB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKT,EAAI4xE,IACT9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAInW,KAChC/L,MAAO,CAAE3B,MAAO,OAAQH,gBAAiB,QAF3C,oBC5TdmmB,ICPaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WDnBQxB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAW,QAEb0jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,YAwSIwuG,GArSa,SAACltG,GAC3B,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACAI,EAAgDL,mBAAS,IAAzDM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAO23F,EAAP13F,EAAA,GAAyB23F,EAAzB33F,EAAA,GACAG,EAAsDT,mBAAS,CAC7Dwe,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAJPn/E,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAOy3F,EAAPx3F,EAAA,GAA4By3F,EAA5Bz3F,EAAA,GAOAG,EAAoCb,mBAAS,CAC3C6/E,KAAK,EACLp7E,QAAQ,IAFVzD,EAAA/U,OAAAiU,EAAA,EAAAjU,CAAA4U,EAAA,GAAO6+E,EAAP1+E,EAAA,GAAsBo3F,EAAtBp3F,EAAA,GAIM8tB,EAAQ3tB,qBAAW8G,IAEzB4B,oBAAU,WACRmH,KACC,IACH,IAAMA,EAAkB,eAAA9T,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,IAAA,IAAAC,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACnBZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MpQqpDkC,wLoQ3pDb4G,EAAAE,KAAA,EASnBS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACL,IAAInU,EAAOmU,EAAWnU,KAAK07F,WAAW3gG,MACtCiF,EAAK8lB,KAAK,SAAC51B,EAAGinD,GAAJ,OAAUva,WAAW1sC,EAAE2xB,UAAY+a,WAAWua,EAAEt1B,YAE1Dy5E,EAAoBt7F,KAErBwN,MAAM7L,QAAQzB,OAjBQ,wBAAAoB,EAAAmB,SAAA9B,MAAH,yBAAAJ,EAAAsC,MAAAC,KAAA1B,YAAA,GAwBlB6L,EAAc,WAClBjB,GAAQ,GACR8vF,KAQI5qF,EAAY,eAAAoD,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAsV,EAAO7a,GAAP,IAAAyF,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACbZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MpQ09D6B,4KoQz9D7Bga,UAAW,CAAEvZ,GAAIA,MAPF8a,EAAAzU,KAAA,EAUbS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLE,MAED7G,MAAM7L,QAAQzB,OAfE,wBAAA+V,EAAAxT,SAAAuT,MAAH,gBAAAtT,GAAA,OAAA4R,EAAAzR,MAAAC,KAAA1B,YAAA,GAkBZwT,EAAa,eAAAC,EAAAvlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAA6T,IAAA,IAAAonF,EAAA/6F,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,WAChB+5F,EAAoBzzF,SAAUyzF,EAAoBrY,IADlC,CAAAzuE,EAAAjT,KAAA,eAEdm6F,EAAqB,CACvB95E,SAAU,EACVjhB,IAAK,IACLkH,OAAQyzF,EAAoBzzF,OAC5Bo7E,IAAKqY,EAAoBrY,IACzB0Y,KAAK,IAAIroF,MAAOsoF,eAGZj7F,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MpQyrD2B,ggBoQxrD3Bga,UAAWinF,KAhBGlnF,EAAAjT,KAAA,EAoBZS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLnI,GAAQ,GACRkD,OAAOC,SAASwF,WAEjBnH,MAAM7L,QAAQzB,OA1BC,OAAAuU,EAAAjT,KAAA,eA4BlB2wB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,qBA/BW,wBAAAkJ,EAAAhS,SAAA8R,MAAH,yBAAAM,EAAAhS,MAAAC,KAAA1B,YAAA,GAyDb06F,EAAa,WACjBN,EAAuB,CACrB35E,SAAU,GACVvR,KAAM,GACNxI,OAAQ,GACRo7E,IAAK,KAEPuY,EAAW,CACTvY,KAAK,EACLp7E,QAAQ,KAGZ,OACE7X,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTY,MAAI,EACJX,GAAI,GACJ1Z,MAAO,CAAE/C,QAAS,QAClB4oB,GAAI,GACJ9mB,WAAY,YAEZ8B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,GAC9BhlB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEsB,UAAU,KACVxC,QAAQ,KACRE,MAAO,CAAE0B,WAAY,SAHvB,wCASFb,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMsM,WAAS,EAACzL,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAG7lB,MAAO,CAAE+lB,aAAc,UACxDllB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,YACRzB,MAAM,UACNuY,QA/HY,WACtBgG,GAAQ,GACR8vF,MA0HQ,aAUJ7rG,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQnG,KAAMA,EAAMC,QAASyF,GAC3Bhd,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,qBAAhB,wCACwC,KAExClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KAsBE/d,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACza,eAAe,eAAgBgB,MAAO,CAAE/C,QAAS,aAC/D4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAAA,SACEgwC,OAAO,UACP/wC,MAAO,CAAElB,QAAS,QAClBiN,GAAG,cACH8uB,UAAQ,EACR5hB,KAAK,OACLiB,SAAU,SAACoB,GAAD,OApGJinB,EAoGwBjnB,EAAEC,OAAOy1B,MAAM,QAnG3DoiD,GAAY7wD,GACTvkB,KAAK,SAACC,GAAQ,IAAA60B,EACOgM,EAAAq+C,GAApB,OAAIl/E,QAAJ,IAAIA,OAAJ,UAAA60B,EAAI70B,EAAKrN,YAAT,IAAAkiC,OAAA,EAAIA,EAAWghD,OACbsY,EAAuBlsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAClBisG,GADiB,IAEpBrY,IAAG,OAAE71E,QAAF,IAAEA,OAAF,UAAA6gC,EAAE7gC,EAAKrN,YAAP,IAAAkuC,OAAA,EAAEA,EAAWg1C,IAChBp7E,OAAM,OAAEuF,QAAF,IAAEA,OAAF,UAAAk/E,EAAEl/E,EAAKrN,YAAP,IAAAusF,OAAA,EAAEA,EAAWrJ,OAErBuY,EAAWnsG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKyzF,GAAN,IAAqBG,KAAK,EAAMp7E,QAAQ,KAElDqqB,EAAM1mB,SAAS,CACblE,MAAM,EACN6D,SAAU,UACVG,IAAK,mCAIViC,MAAM,SAACC,GACN9L,QAAQyR,IAAI3F,KAnBG,IAACkkB,KAsGR1hC,EAAAC,EAAAC,cAAA,SAAOuwC,QAAQ,eACbzwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRwC,UAAU,OACVyjE,UAAWllE,EAAAC,EAAAC,cAACywC,GAAA1wC,EAAD,MACXuV,SAAUs9E,EAAcj7E,QAJ1B,qBAYR7X,EAAAC,EAAAC,cAACke,GAAA,EAAD,KACEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS4O,GAAjB,UACA3kB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,GAAjB,YAIJhd,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,aACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,sBACAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,qBAEAthB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,iBAGJthB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGqoF,EAAiBrgG,IAAI,SAACsW,EAAK2B,GAAN,OACpBhjB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoM,EAAInW,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAAY0B,EAAQ,GACpBhjB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAI,GAAA3B,OAAKU,EAAL,qBACJia,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAHrB,GAAAvgB,OAKMU,EALN,uBAaFT,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEn9B,KAAM2f,EAAI4xE,IACVv4E,OAAO,SACP1b,UAAWQ,EAAQ8gB,YAEnBtgB,EAAAC,EAAAC,cAAA,OACE2hB,IAAI,YACJC,IAAKT,EAAI4xE,IACT9zF,MAAO,CAAEhD,MAAO,QAASO,OAAQ,YAIvCsD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KACEthB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,kBAAMkL,EAAaI,EAAInW,KAChC/L,MAAO,CAAE3B,MAAO,OAAQH,gBAAiB,QAF3C,oBEtUdmmB,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAiBIyuG,GAdM,SAACntG,GACJ0kB,KAEhB,OACExjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAI,WAAW/O,KAAK,kBACjC5B,EAAAC,EAAAC,cAACgsG,GAAD,MACAlsG,EAAAC,EAAAC,cAACisG,GAAD,MACAnsG,EAAAC,EAAAC,cAACksG,GAAD,MACApsG,EAAAC,EAAAC,cAACmsG,GAAD,QC1CA7oF,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B2jB,eAAgB,CACd/hB,QAAS,OACTgiB,QAAS,CACPjH,OAAQ/c,EAAMI,QAAQ,KAG1B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,IAEV4jB,WAAY,CACV9iB,MAAO,WAeI8uG,GAZa,SAACxtG,GACX0kB,KAEhB,OACExjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACoB,EAAD,CAAaqP,IAAI,UAAU/O,KAAK,kBAChC5B,EAAAC,EAAAC,cAACisG,GAAD,QCXN1sE,0BACEC,KACAC,KACAgsC,KACAC,MAEF,IAAM9jB,GAAW9rD,YAAW,SAACC,GAAD,MAAY,CACtCqqD,YAAa,CACXwgB,4BAA6B,CAC3BtpE,MAAO,YAGX+uG,gBAAiB,CACf9tG,SAAU,SAEZ+tG,iBAAkB,CAChBlwG,UAAW,WAGR,SAASmwG,GAAc3tG,GAC5B,IAAMU,EAAUsoD,KACZjsB,EAAU/8B,EAAM8kB,UAChBtjB,EAAS,GACTkP,EAAW,GACXf,EAAe,GACfi+F,EAAY,GAGhBp0E,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACpB/a,EAAoCL,mBAAS6V,EAAWyB,mBAAxDhX,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GAAAC,EAAA,GAAAA,EAAA,GACAuV,EAAWuB,qBAAqB+O,QAAQ,SAACozE,GACvCrsG,EAAO+U,KAAKs3F,EAASt/F,gBAEvB4b,EAAWwB,sBAAsB8O,QAAQ,SAACozE,GACxCn9F,EAAS6F,KAAKs3F,EAASn/F,QACvBk/F,EAAUr3F,KAAKs3F,KAGjB1jF,EAAWgC,4BAA4BsO,QAAQ,SAACqzE,GAC9Cn+F,EAAa4G,KAAKu3F,EAAWhS,eAG/B,IAAA/mF,EAA8BT,mBAAS,CACrCya,YAAa,GACbD,aAAc,GACdi/E,cAAe,GACf7+E,gBAAiB,GACjB8+E,qBAAsB,GACtBn/E,eAAgB,GAChBhY,KAAM,KAPR7B,EAAAzU,OAAAiU,EAAA,EAAAjU,CAAAwU,EAAA,GAAO5U,EAAP6U,EAAA,GAAgBi5F,EAAhBj5F,EAAA,GAoBA,IAA4BsE,EA0BtB/H,EAAkB,eAAAC,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAOC,EAAKC,EAAQb,GAApB,IAAAc,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtG,EAAAuG,EAAAC,UAAA,OAAAX,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAA0BV,EAA1BK,EAAAM,OAAA,QAAAC,IAAAP,EAAA,IAAAA,EAAA,GACzBgxB,MAAMvxB,GACNA,EAAMnQ,EAAUmQ,EAChBe,QAAQC,KAAK,MAAOhB,EAAKZ,GACnBe,EAASf,EAAO,OAAS,MAC7BgB,EAAU,CACRa,eAAgB,oBAEhBZ,EAAU,KACVH,KACII,EAAQa,aAAaC,QAvEjB,UAwEChB,EAAO,KAAWE,EACxBgO,OAAOC,SAAW,KAZA7N,EAAAE,KAAA,EAcFS,MAAMrB,EAAK,CAChCG,SACAmB,KAAMC,oBAASnC,GAAQA,EAAOoC,KAAKC,UAAUrC,GAC7CgB,YAjBuB,aAcnBpG,EAdmB0G,EAAAgB,MAoBZxC,OAAS,KApBG,CAAAwB,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAqBP5G,EAAS2H,OArBF,QAqBvBtB,EArBuBK,EAAAgB,KAAAhB,EAAAE,KAAA,iBAuBvB2wB,MAAK,GAAAniC,OACA4K,EAASkF,OADT,KAAA9P,OACmB4K,EAASqiG,WAD5B,4CAAAjtG,OACiF4Q,IAxB/D,eAAAU,EAAAkB,OAAA,SA2BlBvB,GA3BkB,yBAAAK,EAAAmB,SAAA9B,MAAH,gBAAA+B,EAAAC,EAAAC,GAAA,OAAArC,EAAAsC,MAAAC,KAAA1B,YAAA,GArEW,SAAAovB,IAAA,OAAAA,EAAAlhC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAiRnC,SAAAsV,EACEya,EACAurC,EACAC,EACAtrC,GAJF,IAAAurC,EAAAC,EAAAC,EAAAC,EAAAzrC,EAAAC,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAhoB,EAAAszD,EAAAC,EAAA,OAAA97D,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAMM06D,EAAahtE,EAAQ0uB,eAGrBu+C,EAASrwC,EACTswC,EAAiBltE,EAAQ0uB,eAAeq+C,GACxCI,EAAa,EACbD,IACFC,EAAaD,EAAe36D,OAAS,GAGnCmvB,EAAYurC,EAAS,IAAME,EAAaJ,EAAW7M,OAAO,GAhBhEn5C,EAAAzU,KAAA,EAiB2BlB,EACvB,eACA,GACA,CACE8wB,MAAOX,EAAUY,cACjBtrB,SAAU6qB,EACVW,WAAY4qC,IAEd,GAzBJ,cAiBMtrC,EAjBN5a,EAAA3T,KA2BMwuB,EACFD,GAAgBA,EAAa7wB,MAAQ6wB,EAAa7wB,KAAK8wB,WACrDC,EAAgBD,GAAcA,EAAWC,cACzCnwB,EAAMkwB,GAAcA,EAAWlwB,IACnCe,QAAQyR,IAAI,cAAgBxS,GACxBowB,EAAeF,GAAcA,EAAWU,SACxCxoB,EAAU,CACZhI,QAAS,CACPa,eAAgB4uB,EAAUY,cAC1BvvB,8BAA+B,MAI/Bs6D,GACIE,EAAW,CACfzqE,KAAMsqE,EAAS,KAAOC,EAAe36D,OAAS,GAAKw6D,EAAW7M,OAAO,GACrEvtC,SAAUm6C,EACVvuE,MAAOwuE,EACPO,UAAWxrC,EACXpwB,IACE,yDACAowB,GAEe,SAAfL,EACFyrC,EAAeJ,GAAiBM,EAEhCF,EAAe92D,KAAKg3D,GAEtBJ,EAAWD,GAAcG,IAEnBE,EAAW,CACfzqE,KAAMsqE,EAAS,KAAOF,EAAW7M,OAAO,GACxCvtC,SAAUm6C,EACVvuE,MAAOwuE,EACPO,UAAWxrC,EACXpwB,IACE,yDACAowB,IAEJorC,EAAiB,IACF92D,KAAKg3D,IAEtBJ,EAAWD,GAAcG,EACzB4gC,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKJ,GAAN,IAAe0uB,eAAgBs+C,KAtE3CjmD,EAAAzU,KAAA,GA0EQiwB,KAAMC,IAAIX,EAAeN,EAAUkB,KAAM3oB,GA1EjD,yBAAAiN,EAAAxT,SAAAuT,OAjRmCnT,MAAAC,KAAA1B,WA8VnC,OACEnR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,GACvB2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAGmyC,GAAI,EAAGv4B,GAAI,GAClC5+B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACH+N,WAAS,EACTD,OAAO,QACPha,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAO/L,cACnC4/F,kBAAmB,SAAC7zF,GAAD,OACjB9Y,EAAOm5B,QAAQrgB,EAAO/L,eAAiB,GAEzCitC,aAAcrxB,EAAWuB,qBACzBzR,QAASkQ,EAAWsF,WAAWphB,YAC/BlC,MAAOge,EAAWyB,kBAClBrR,UAnUoBjB,EAmUS,oBAnUA,SAAC3D,EAAOxJ,GAC3C,IAAIiiG,EAAY,GAChBjiG,EAAMF,IAAI,SAACvN,EAAOwlB,GAChB,GACEiG,EAAWyB,kBAAkBwoC,KAC3B,SAAC15C,GAAD,OAAUA,EAAKnM,eAAiB7P,EAAM6P,oBAGnC,CACL,IAAI8/F,EAAS9tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACR7B,GADQ,IAEXqwB,YAAarwB,EAAM6P,eAErB6/F,EAAU73F,KAAK83F,MAGnBJ,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAER4uB,YAAaq/E,KAGf1+E,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOnN,OA6SJ6uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO/L,cACV0sB,EAAY,CAAE/W,UAJpB,CAKExN,SAAUlV,EAAOm5B,QAAQrgB,EAAO/L,eAAiB,QAIvDiM,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMlDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAGmyC,GAAI,EAAGv4B,GAAI,GA6ClC5+B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB3gB,OAAO,QACPG,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqrG,kBAAmB,SAAC7zF,GAAD,OAAY5J,EAASiqB,QAAQrgB,EAAOxX,OAAS,GAChE04C,aAAcrxB,EAAWwB,sBACzB1R,QAASkQ,EAAWsF,WAAWjhB,YAC/BrC,MAAOge,EAAW0B,mBAClBtR,SA3VkB,SAACjB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC1C,IAAImiG,EAAa,GACjB5+E,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOnN,KAEVA,EAAMF,IAAI,SAACvN,EAAOwlB,GAChB,IAAImqF,EAAS9tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACR7B,GADQ,IAEXgQ,OAAQhQ,EAAMgQ,SAEhB4/F,EAAW/3F,KAAK83F,KAElBJ,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAER2uB,aAAcw/E,MA4UAC,CAAkB,sBAC5BvzE,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO5L,QACVusB,EAAY,CAAE/W,UAJpB,CAKExN,SAAUhG,EAASiqB,QAAQrgB,EAAO5L,SAAW,QAInD8L,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAK/C6Q,EAAW0B,oBACV1B,EAAW0B,mBAAmB5f,IAAI,SAAC6iB,GAAD,OAChC5tB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEtE,IAAK2Y,EAAa1iB,GAClBlM,UAAWQ,EAAQ8mD,YACnBnnD,MAAO,CAAEhD,MAAO,QAASK,WAAY,OACrCyC,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTb,KAAK,SACLnN,MAAO2iB,EAAaE,aACpB5iB,GAAG,eACH+E,MAAO2d,GAAgBA,EAAaS,cACpCzsB,KAAK,eACLD,MAAK,UAAA5B,OAAY6tB,EAAapgB,QAC9B6L,SAAU,SAACoB,GAAD,OA7RtB,SAA6BA,EAAG6yF,GAE9B,IAAIC,EAActuG,EAAQ2uB,aAC1B2/E,EACEA,GACAA,EAAYxiG,IAAI,SAAC+iB,EAAc9K,GAI7B,OAHIsqF,IAAkBx/E,EAAa5iB,KACjC4iB,EAAaA,aAAerT,EAAEC,OAAOzP,OAEhC6iB,IAEXi/E,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAER2uB,aAAc2/E,KAgRWC,CAAoB/yF,EAAGmT,EAAa1iB,UAK7DlL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAGmyC,GAAI,EAAGv4B,GAAI,GAClC5+B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsrG,kBAAmB,SAAC7zF,GAAD,OACjB3K,EAAagrB,QAAQrgB,EAAOzX,QAAU,GAExC24C,aAAcrxB,EAAWgC,4BACzBlS,QAASkQ,EAAWsF,WAAW9f,aAC/BxD,MACEge,EAAW+B,yBACP/B,EAAW+B,yBACX,GAEN3R,SA1XkB,SAACjB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC1C,IAAIwiG,EAAkB,GACtBxiG,EAAMF,IAAI,SAACvN,EAAOwlB,GAChB,GAAIxlB,EAAMmE,MAAO,CACf,IAAIwrG,EAAS9tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACR7B,GADQ,IAEXo9F,YAAap9F,EAAMmE,QAErB8rG,EAAgBp4F,KAAK83F,OAChB,CACL,IAAIA,EAAS9tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACR7B,GADQ,IAEXo9F,YAAap9F,EAAMo9F,cAErB6S,EAAgBp4F,KAAK83F,MAWzBJ,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAER6tG,qBAAsBW,KAExBvrE,MAAM/vB,KAAKC,UAAUnH,IACrBujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAEV+Y,EAAOq1F,MA0VMC,CAAkB,4BAC5B5zE,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOwhF,aACV7gE,EAAY,CAAE/W,UAJpB,CAKExN,SAAU/G,EAAagrB,QAAQrgB,EAAOwhF,cAAgB,QAI5DthF,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMlDpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACX,GAAI,EAAGmM,GAAI,EAAGmyC,GAAI,EAAGv4B,GAAI,GACjC3V,EAAWuC,cAAgBvC,EAAWuC,aAAaha,OAAS,EAC3DxR,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnB1gB,WAAS,EACTE,eAAgB,SAACC,GAAD,OAAYA,GAC5BL,QAASkQ,EAAWsC,mBACpBtgB,MAAOge,EAAWuC,aAClBnS,SAhXmB,SAAC5E,EAAOxJ,GACnC,IAAI0iG,EAAW,GACf1iG,EAAMF,IAAI,SAACvN,EAAOwlB,GAChB,GAAIiG,EAAW6B,oBAAoBooC,KAAK,SAAC15C,GAAD,OAAUA,IAAShc,SACpD,CACL,IAAI2vG,EAAS9tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACR7B,GADQ,IAEXmE,MAAOnE,IAETmwG,EAASt4F,KAAK83F,MAGlBJ,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAER0W,KAAMg4F,MAmWA7zE,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,GACH2gB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,QACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAI9C,MAyCNpY,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,QACYnH,IAAxBxS,EAAQ4uB,YACL,KACA5uB,EAAQ4uB,YAAY9iB,IAAI,SAACE,EAAO+X,GAAR,OACtBhjB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAID,WAAS,EAACvc,QAAS,EAAGmd,MAAI,GACtCxZ,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAIW,MAAI,GAChBxZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYsB,UAAU,KAAKxC,QAAQ,KAAKgoB,MAAM,QAC3Chc,EAAMoC,eAGXrN,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAME,GAAI,GAAImM,GAAI,GAAImyC,GAAI,GAAI39C,MAAI,GAChCxZ,EAAAC,EAAAC,cAACyiC,GAAA,SAAD,CACE8pC,wBAAsB,EACtBC,0BAA0B,OAC1BC,2BAA2B,OAC3BC,yBAA0B,SAAClrC,GAAD,OACxB,IAAImrC,QAAQ,SAACC,EAASC,OAExBlqC,UAAU,eACVmqC,eAAe,EAEfC,cAAe,SAAClqC,KAGhBD,UAAW,SAAC7yB,EAAO8yB,IApnBF,SAAA7N,EAAAC,EAAAC,EAAAC,GAAAkL,EAAA3tB,MAAAC,KAAA1B,WAqnBf6xB,CAAoBD,EAAU/f,EAAO/X,EAAMrJ,KAAM,QAEnDsrE,aAAc,SAACj9D,EAAO8yB,KACtBoqC,mBAAoB,SAACzrC,GAAD,OAClB,IAAImrC,QAAQ,SAACC,GACX,IAAIZ,EAASrwC,EACTswC,EAAiBltE,EAAQ0uB,eAAe1iB,EAAMrJ,MAC9CwqE,EAAa,EACbD,IACFC,EAAaD,EAAe36D,OAAS,GAQvCs7D,EALEZ,EACA,IACAE,EACAnhE,EAAMrJ,KAAKu9D,OAAO,GAClBz9B,EAAK0rC,qBAUvBptE,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEC,WAAS,EACTzZ,MAAO,CACLlB,QAAS,OACTE,eAAgB,SAChB7B,UAAW,SAGb0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,SAAC0E,GAAD,OAncrB,WACE,IAAImzF,EAAgB,CAClBhqF,UAAWiY,EACXgyE,+BAAgC5uG,EAAQ4uB,YACxCigF,2BAA4B7uG,EAAQ2uB,aACpC9C,oBAAqB7rB,EAAQ6tG,qBAC7B9iF,YAAa/qB,EAAQ0W,KACrBgY,eAAgB1uB,EAAQ0uB,gBAItBogF,EAA2B1uG,OAAO+V,QAAQnW,EAAQ0uB,gBAClDqgF,GAAsB,EACtBpgF,EACF3uB,EAAQ2uB,cACR3uB,EAAQ2uB,aAAa7iB,IAAI,SAACkjG,GAKxB,MAJwC,KAApCA,EAAmBngF,eACrBmgF,EAAmB5/E,eAAgB,EACnC2/E,GAAsB,GAEjBC,IAUX,GARAhvG,EAAO,aAAmB2uB,EAC1Bm/E,EAAW1tG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACNJ,GADK,IAERA,aAEE8uG,EAAyBv8F,SAAWvS,EAAQ4uB,YAAYrc,QAC1D0wB,MAAM,6BAGLjjC,EAAQ4uB,YAAYrc,OAAS,GAC5BvS,EAAQ4uB,YAAYrc,SAAWu8F,EAAyBv8F,QACzDvS,EAAQ2uB,aAAapc,OAAS,IAA6B,IAAxBw8F,GACpC/uG,EAAQ0W,KAAKnE,OAAS,GACtBvS,EAAQ6tG,qBAAqBt7F,OAAS,EACtC,CACA,IAAI08F,EAAiBjlF,EAAWkC,kBAG5BJ,GAFe9B,EAAWmC,aACfnC,EAAWsB,SACNtB,EAAW8B,eAC/BA,EAAa,GAAAhrB,OAAAV,OAAA2wD,GAAA,EAAA3wD,CAAO0rB,GAAP,CAAsB9rB,EAAQ0uB,iBAC3CugF,EAAe74F,KAAKu4F,GAMZz7F,KAAKC,UAAUw7F,QAGvB1rE,MAAM,kCAgZkBisE,KAHlB,SAQFnuG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,MAULizF,oBCntBT1uG,WAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC6E,WAAY,CACV1E,QAASH,EAAMI,QAAQ,IAEzB6rG,cAAc7oG,OAAAM,EAAA,EAAAN,CAAA,CACZlD,MAAO,QACPqB,MAAO,UACPS,QAAS,OACT7B,QAAS,YACT+rG,UAAW,SACX1pG,SAAU,MACV2hB,UAAW,UACXgoF,UAAW,SACXC,cAAe,OACfC,oBAAqB,kBAEpBrsG,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5BxxE,MAAO,QACPqB,MAAO,UACPS,QAAS,OACT7B,QAAS,YACT+rG,UAAW,SACX1pG,SAAU,OACV2hB,UAAW,UACXgoF,UAAW,SACXC,cAAe,OACfC,oBAAqB,uBAKZ,SAASC,GAAQzpG,GAAO,IAAAwhD,EAC/B9gD,EAAUzB,KAEVqwG,EAActvG,EAAMunB,QAC1BlT,EAA8BJ,IAAMK,SAAS,CAC3Co1F,YAAa4F,IADf/6F,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOkT,EAAPhT,EAAA,GAAgBo1F,EAAhBp1F,EAAA,GAGA2I,EAAsCjJ,IAAMK,WAA5C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAAC,EAAA,GAAAA,EAAA,GA2DA,OACEjc,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEgpG,UAAW,UAEvBnoG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACExZ,MAAO,CACLzC,OAAQ,QACRupE,aAAc,iBACd9pE,MAAO,OACP6c,OAAQ,OACRrc,WAAY,MACZulB,cAAe,SAGjBliB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAM+vF,WAAS,GACb1oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACxa,UAAWQ,EAAQ0oG,eAC3B7hF,EAAQmiF,YAAYz9F,IAAI,SAAC49F,GAAD,OACvB3oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAAC8qD,GAAA,EAAD,CACExtD,MAAM,UACN4nB,WAAY,CAAE5jB,aAAc,sBAC5B2c,QAASwqF,EAAK9kF,SACdrO,SAAUmzF,EAAKnzF,SACf6D,SAAU,kBA/E1B,SAAqBnO,GACnB,IAAIs9F,EAAcniF,EAAQmiF,YAAYz9F,IAAI,SAACgF,EAAMiT,GAI/C,OAHI9X,IAAO6E,EAAK7E,KACd6E,EAAK8T,UAAW9T,EAAK8T,UAEhB9T,IAET04F,EAAW,CACTD,gBAuE4BI,CAAYD,EAAKz9F,OAEnClL,EAAAC,EAAAC,cAAA,MAAIf,MAAO,CAAE0B,WAAY,QAAU8nG,EAAK/mG,YAMlD5B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACExZ,MAAO,CACLlB,QAAS,OACTE,eAAgB,gBAChB6a,OAAQ,YACR7c,MAAO,QAGT6D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,KACE3Y,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQI,KAAK,QAAQI,QAAS,kBArFtC,WACE,IAAIyyF,EAAcniF,EAAQmiF,YAAYz9F,IAAI,SAACgF,EAAMiT,GAK/C,OAJKjT,EAAKyF,WACRzF,EAAK8T,UAAW,GAGX9T,IAET04F,EAAW,CACTD,gBA4EwCK,KAApC,UAIF7oG,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAElB,QAAS,OAAQE,eAAgB,kBAC9C6B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQI,KAAK,QAAQI,QAAS,kBAAMjX,EAAMgqG,gBAA1C,UAGA9oG,EAAAC,EAAAC,cAACqV,GAAA,GAAD+qC,EAAA,CACE3qC,KAAK,QACLnY,MAAM,UACNuY,QAAS,kBApFnB,WAOE,IAAIs4F,EAAc,GAClBhoF,EAAQmiF,YAAYjvE,QAAQ,SAACC,GACvBA,EAAQ3V,UACVwqF,EAAYh5F,KAAKmkB,KAGrB16B,EAAMwvG,mBAAmBD,EAAavvG,EAAMyvG,YAC5CzvG,EAAMgqG,cAsEiB0F,IACfnxG,gBAAgB,aAJlBgC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,OAKO,SALPjhD,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,UAMU,aANVjhD,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,YAOa9gD,EAAQwZ,QAPrBsnC,GAAA,WC5IV,IAAMviD,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvCk0B,OAAQ,CACN3yB,MAAO,UACPsC,OAAQ,oBACRswB,UAAW,CACT/yB,gBAAiB,yBACjByC,OAAQ,yBAkGCwpG,OA7Ff,SAAoBxqG,GACFf,KADS,IAAAuiD,EAEzBntC,EAAgCJ,IAAMK,SAAS,MAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO08C,EAAPx8C,EAAA,GAAiBy8C,EAAjBz8C,EAAA,GACA2I,EAA8BjJ,IAAMK,SAAStU,EAAMuvG,aAAnDpyF,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOjD,EAAPkD,EAAA,GAKMe,GALNf,EAAA,GAKoB,WAClB6zC,GAAY,KAERx4C,EAAOy6B,QAAQ8d,GACf3kD,EAAKoM,EAAO,sBAAmB7F,EAErC,OACEzR,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJZ,WAAS,EACTgmB,GAAI,GACJu4B,GAAI,GACJnyC,GAAI,GACJnM,GAAI,GACJ1Z,MAAO,CAAElB,QAAS,OAAQE,eAAgB,kBAE1C6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAAC8+C,GAAI,EAAG15B,GAAI,EAAGu4B,GAAI,EAAGnyC,GAAI,EAAGnM,GAAI,IACzC7Y,EAAAC,EAAAC,cAAA,MAAIlB,UAAU,YACXF,EAAMwM,MAAQxM,EAAMwM,MAAQ,iBAAkB,MAGnDtL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJZ,WAAS,EACT0/C,GAAI,EACJ15B,GAAI,EACJu4B,GAAI,EACJnyC,GAAI,EACJnM,GAAI,GACJ1Z,MAAO,CAAElB,QAAS,OAAQE,eAAgB,aAE1C6B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJxa,UAAU,aACV4/B,GAAI,EACJu4B,GAAI,EACJnyC,GAAI,EACJnM,GAAI,EACJ1Z,MAAO,CAAElB,QAAS,OAAQE,eAAgB,aAE1C6B,EAAAC,EAAAC,cAACqV,GAAA,GAAD+qC,EAAA,CACEthD,UAAU,UACV2W,KAAK,QACLzK,GAAG,MACH1N,MAAM,UACNH,gBAAgB,YAChB0Y,QAjDU,SAACtB,GACnBq7C,EAAYr7C,EAAM2+C,gBAiDVn0D,QAAQ,YAPVI,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAQQ,WARRjhD,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QASS,CAAE7hD,SAAU,OAAQrC,QAAS,YATtCkkD,GAAA,UAYEtgD,EAAAC,EAAAC,cAAC+oG,GAAAhpG,EAAD,CAAmBxB,SAAS,aAE9BuB,EAAAC,EAAAC,cAACgpG,GAAA,EAAD,CACEh+F,GAAIA,EACJoM,KAAMA,EACNu4C,SAAUA,EACVt4C,QAASyF,EACT6C,aAAc,CACZjF,SAAU,SACVG,WAAY,UAEdouF,gBAAiB,CACfvuF,SAAU,MACVG,WAAY,WAGd/a,EAAAC,EAAAC,cAACuuG,GAAD,CACEpoF,QAAStN,EACTu1F,mBAAoBxvG,EAAM4vG,eAC1BH,WAAYzvG,EAAMyvG,WAClBzF,YAAa9rF,+DC5FrBjf,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,KAET0Z,OAAQ,CACNzZ,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,IACV6C,OAAQ,UAEV3C,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,GAC1B8Z,SAAU,IACV6C,OAAQ,UAEV4mB,WAAY,CACV1F,UAAW,QACXzkB,YAAa,GAEfoqB,OAAQ,CACN7mB,OAAQ/c,EAAMI,QAAQ,EAAG,GACzB4B,QAAS,QAEXb,OAAQ,CACNqY,YAAaxZ,EAAMI,QAAQ,IAE7B8a,QAAS,CACP9Z,gBAAiBiD,IAAOC,KAAK,KAC7BnE,QAASH,EAAMI,QAAQ,GACvB4B,QAAS,OACTE,eAAgB,UAElB2hC,YAAa,CACXtiC,MAAOvB,EAAMwB,QAAQsiC,MACrB1iC,gBAAiBiD,IAAO+8B,MAAM,KAC9BjN,UAAW,CACT/yB,gBAAiBiD,IAAO+8B,MAAM,UAwPrBsxE,GAnPK,SAAC7vG,GAAU,IAAA8vG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAGrBhvE,EAAwDnhC,EAAxDmhC,QAAS3oB,EAA+CxY,EAA/CwY,KAAMC,EAAyCzY,EAAzCyY,QAAS2oB,EAAgCphC,EAAhCohC,QAASlhC,EAAuBF,EAAvBE,UAAcI,EAAvDC,OAAAC,EAAA,EAAAD,CAAgEP,EAAhEowG,IACMv3F,EAAgB,CACpBzM,GAAI+0B,EAAQ/0B,GACZ8hB,cAAeiT,EAAQjT,cAAgBiT,EAAQjT,cAAgB,GAC/DD,aAAckT,EAAQlT,aAAekT,EAAQlT,aAAe,GAC5DlhB,gBAAiBo0B,EAAQp0B,gBAAkBo0B,EAAQp0B,gBAAkB,KACrEihB,aAAcmT,EAAQnT,aAAemT,EAAQnT,aAAe,KAC5DG,gBAAe,QAAA2hF,EAAE3uE,EAAQhT,uBAAV,IAAA2hF,IAA6B,GAC5C1hF,mBAAkB,QAAA2hF,EAAE5uE,EAAQ/S,0BAAV,IAAA2hF,IAAgC,GAClD1hF,mBAAkB,QAAA2hF,EAAE7uE,EAAQ9S,0BAAV,IAAA2hF,IAAgC,GAClDliF,eAAc,QAAAmiF,EAAE9uE,EAAQrxB,sBAAV,IAAAmgG,IAA4B,GAC1Cr/F,YAAW,QAAAs/F,EAAE/uE,EAAQ26D,mBAAV,IAAAoU,IAAyB,GACpCniF,aAAY,QAAAoiF,EAAEhvE,EAAQ4mB,qBAAV,IAAAooD,IAA2B,IAEzCx7F,EAA0BL,mBAAS,IAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACA6kB,GADA5kB,EAAA,GAAAA,EAAA,GACsCX,IAAMwB,WAAWka,KAA/CxF,EAARqP,EAAQrP,WAER9V,GAFAmlB,EAAoB9J,cAEkBzb,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,CAAA,GACjCsY,KADLtE,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO+f,EAAP7f,EAAA,GAAoB8f,EAApB9f,EAAA,GAIM7T,EAAUzB,KACVs7B,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAErCwpB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GACnC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WASpD,OAFA8H,IAAMkK,UAAU,aAAU,CAACiW,IAGzBlzB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQtH,SAAS,KAAKoB,QAASA,EAASD,KAAMA,GAC5CtX,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC3CgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQqW,QACtB7V,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8mB,MAAM,SAASjoB,UAAWQ,EAAQ8L,MAAOq2B,cAAY,EAAC1iC,QAAQ,MAA1E,oBAIFe,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACtBrW,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAYjG,gBACnBzS,YAAa,YACb5Y,KAAK,OACLD,MAAM,YACNo7B,aAAa,OACb1jB,SAAUob,EAAkB,qBAC3B,IAaHz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY/F,mBACnB3S,YAAa,sBACb5Y,KAAK,OACLD,MAAM,cACNo7B,aAAa,OACb1jB,SAAUob,EAAkB,wBAE9Bz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAYlG,cACnBxS,YAAa,SACb5Y,KAAK,OACLm7B,aAAa,OACbp7B,MAAM,SACN0X,SAAUob,EAAkB,mBAE9Bz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACN6Y,YAAY,aACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,gBAC5BxpB,MAAOioB,EAAYnG,eAErB/sB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCoX,QAASkQ,EAAWsF,WAAW1iB,gBAC/BZ,MAAOioB,EAAYrnB,gBACnBwN,SAAUggB,EAAmB,mBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOioB,EAAYpG,aACnB/T,QAASkQ,EAAWsF,WAAWxiB,cAC/BsN,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EAETw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOioB,EAAYrG,aACnB9T,QAASkQ,EAAWsF,WAAW9gB,cAC/B4L,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAG7C,IACHpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOioB,EAAYtG,eACnB7T,QAASkQ,EAAWsF,WAAW5gB,iBAC/B0L,SAAUggB,EAAmB,kBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOioB,EAAYxjB,YACnBqJ,QAASkQ,EAAWsF,WAAW9f,aAC/B4K,SAAUggB,EAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKlDpY,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2X,SACtBnX,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAWQ,EAAQsgC,YAAa/pB,QAAS,kBAAMmqB,EAAQhN,IAAcj0B,QAAQ,aAArF,YCvPV,SAASugB,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAEtD,IAAMunB,GAAU,CACd,CAAEnb,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,eAAgBvJ,MAAO,gBAC7B,CAAEuJ,GAAI,eAAgBvJ,MAAO,mBAC7B,CAAEuJ,GAAI,cAAevJ,MAAO,eAC5B,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,UAAWvJ,MAAO,WACxB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,QAASvJ,MAAO,aACtB,CAAEuJ,GAAI,UAAWvJ,MAAO,WACxB,CAAEuJ,GAAI,QAASvJ,MAAO,SAEtB,CACEuJ,GAAI,OACJvJ,MAAO,OACPjD,SAAU,GACVyX,SAAU,GACV8Q,MAAO,SACP7E,OAAQ,SAACnX,GAAD,OAAWA,EAAMkkG,QAAQ,MAI/BC,GAAapzG,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAI9B,SAASgzG,GAAuBvwG,GAC9B,IAAMU,EAAU4vG,KACVnzG,EAAQ6tE,eACN9hD,EAA2ClpB,EAA3CkpB,MAAOzB,EAAoCznB,EAApCynB,KAAME,EAA8B3nB,EAA9B2nB,YAAawB,EAAiBnpB,EAAjBmpB,aAkBlC,OACEjoB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAlBhB,SAAoCtB,GAClCwT,EAAaxT,EAAO,IAiB+Be,SAAmB,IAAT+Q,EAAY/kB,aAAW,cAC3D,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,MAAmBD,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,OAElDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAjBhB,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAgBmB/Q,SAAmB,IAAT+Q,EAAY/kB,aAAW,iBACtD,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,MAAyBD,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,OAExDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAhBhB,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAemB/Q,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EAAGjlB,aAAW,aACtF,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,MAAwBD,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,OAEvDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAhBN,SAAmCtB,GACjCwT,EAAaxT,EAAO8iD,KAAK/0B,IAAI,EAAG+0B,KAAKm4C,KAAK1nF,EAAQvB,GAAe,KAgB7DjR,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,MAAoBD,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,QAiBzD,IAAMujB,GAAaxnB,YAAW,SAACC,GAAD,IAAAqU,EAAA,OAAAA,EAAA,CAC5BtS,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZliB,QAAS,OAETmiB,UAAW,QAEbuZ,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,KAhBeiD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OAmBtB,CACJhU,UAAWL,EAAMI,QAAQ,KApBCgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QAsBrB,IAtBqBjR,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,SAyBpB,CACN0I,OAAQ/c,EAAMI,QAAQ,KA1BIgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QA4BrB,CACLlU,QAASH,EAAMI,QAAQ,GACvBF,MAAO,SA9BmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAgCjB,CACTlU,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,SAnCmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,WAqClB,CACRmF,YAAaxZ,EAAMI,QAAQ,KAtCDgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAwCjB,CACT9T,WAAYP,EAAMI,QAAQ,KAzCAgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA2CjB,CACT7R,SAAU,KA5CgB6R,IAgDf,SAASq/F,GAAe7wG,GACrC,IAAAqU,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAwCjJ,IAAMK,SAAS,CACrDuU,QAAS,GACTxM,SAAU,KAFZc,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOq4D,EAAPp4D,EAAA,GAAqB2zF,EAArB3zF,EAAA,GAIQ5L,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR8L,EAAgCpJ,IAAMK,UAAS,GAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOgnB,EAAP/mB,EAAA,GAAiBgnB,EAAjBhnB,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,MAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAoB6W,EAApB7W,EAAA,GAEMmuD,EAAc,WAClB1uD,GAAQ,IAUJiB,EAAc,SAACvI,EAAOkL,GACX,cAAXA,GAIJ5D,GAAQ,IAEJvc,EAAUgkB,KAChB/G,EAAwB1J,IAAMK,SAAS,GAAvCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO8J,EAAP7J,EAAA,GAAa8J,EAAb9J,EAAA,GACA4V,EAAsCvf,IAAMK,SAAS,GAArDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO7L,EAAP8L,EAAA,GAAoB7L,EAApB6L,EAAA,GACAsjB,EAAsC9iC,IAAMwB,WAAWka,IAA/CxF,EAAR4sB,EAAQ5sB,WAAYuF,EAApBqnB,EAAoBrnB,cACpBgE,EAA8Bzf,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNunB,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOyB,EAAPxB,EAAA,GAAgByB,EAAhBzB,EAAA,GAIAE,EAAgD5f,IAAMK,SAAS,CAC7Dy8F,KAAM,KADRj9E,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAKm9E,EAALl9E,EAAA,GAAwBm9E,EAAxBn9E,EAAA,GAGMm3E,EAAYtjF,EAAc8wC,KAAKyyC,IAAIvjF,EAAa3nB,EAAMmhC,SAAWnhC,EAAMmhC,QAAQzuB,OAAS+U,EAAOE,GAvCzD,SA6E7BupF,EA7E6Bv9F,GAAA,OAAAw9F,EAAAr9F,MAAAC,KAAA1B,WAAA,SAAA8+F,IAAA,OAAAA,EAAA5wG,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA6E5C,SAAAC,EAA2Bk8F,GAA3B,IAAA72E,EAAAm6E,EAAA,OAAA1/F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAKMwkB,EAAW,KACX62E,EAAW/gG,iBAAmB+gG,EAAW9/E,cAAgB8/E,EAAW7/E,cAAgB6/E,EAAW5/E,eANrG,CAAA3b,EAAAE,KAAA,gBAOQ2+F,EAAYpxG,EAAMmhC,QACEiwE,EAAUnlG,IAAI,SAAColG,EAAiBntF,GACZ,IAAAotF,EAAAC,EAAAC,EAA1C,OAAI1D,EAAW1hG,KAAOilG,EAAgBjlG,IACpCilG,EAAgBI,gBAAkB3D,EAAW/gG,gBAAgBjK,KAC7DuuG,EAAgBK,aAAe5D,EAAW9/E,aAAalrB,KACvDuuG,EAAgBM,WAAa7D,EAAW7/E,aACxCojF,EAAgBO,YAAc9D,EAAW5/E,cACzC+I,EAAQ,gBAAsB62E,EAAW/gG,gBAAgBjK,KACzDm0B,EAAQ,aAAmB62E,EAAW9/E,aAAalrB,KACnDm0B,EAAQ,WAAiB62E,EAAW7/E,aACpCgJ,EAAQ,YAAkB62E,EAAW5/E,cACrC+I,EAAQ,UAAgB62E,EAAW1hG,GACnC6qB,EAAQ,SAAe62E,EAAW3/E,gBAClC8I,EAAQ,YAAkB62E,EAAW1/E,mBACrC6I,EAAQ,YAAkB62E,EAAWz/E,mBACrC4I,EAAQ,MAAR,QAAAq6E,EAAoBxD,EAAW//E,oBAA/B,IAAAujF,OAAA,EAAoBA,EAAyBzuG,MAC7Co0B,EAAQ,QAAR,OAAsB62E,QAAtB,IAAsBA,OAAtB,UAAAyD,EAAsBzD,EAAYhgF,sBAAlC,IAAAyjF,OAAA,EAAsBA,EAA4B1uG,MAClDo0B,EAAQ,YAAR,QAAAu6E,EAA0B1D,EAAWl9F,mBAArC,IAAA4gG,OAAA,EAA0BA,EAAwB3uG,MAC3CwuG,GAEFA,IA3Bb9+F,EAAAE,KAAA,EA6ByBlB,EAAmB,sBAAuB,GAAI0lB,GA7BvE,OAAA1kB,EAAAgB,KA+CIu9F,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,6BACTxM,SAAU,aAaZgY,EAAe,MACfiQ,GAAY,GAhEhB/xB,EAAAE,KAAA,iBAkEIq+F,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,4BACTxM,SAAU,UAEZsvD,IAvEJ,QAyEExrD,OAAOC,SAASwF,SAzElB,yBAAArT,EAAAmB,SAAA9B,OA7E4CkC,MAAAC,KAAA1B,WAmK5C,IAAMkoB,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAEnCwpB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GACnC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAGlD,OACEjL,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACEtV,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IAAMvI,QAASyF,GACrDhd,EAAAC,EAAAC,cAACywG,GAAD,CAAOp5F,QAASyF,EAAa7B,SAAUk5D,EAAal5D,UACjDk5D,EAAa1sD,WAIpB3nB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cAGtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAC+6C,GAAD,OACX9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWrM,IAAK6wC,EAAO56C,GAAI+b,MAAO6+B,EAAO7+B,MAAO9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WACvEonD,EAAOnkD,WAMhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMmhC,SACLnhC,EAAMmhC,QAAQ7Y,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,GAAD,OAC5ErnB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIuzE,aAGP56F,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIupF,UAGP5wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIwpF,aAEP7wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIgC,aAEPrpB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIw/B,eAEP7mD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIzY,gBAGNqlB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAUxlB,UAAU,KAAKu1B,MAAM,OAC/Ch3B,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACRE,MAAO,CAAEhD,MAAO,IAChB+O,GAAG,OACH8N,OAAO,QACPrX,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,iBAC5BxpB,MAAOge,EAAW+D,iBAItBhtB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIqpF,aAGRz8E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACRE,MAAO,CAAEhD,MAAO,IAChB+O,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACNC,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,gBAC5BxpB,MAAOge,EAAW8D,gBAItB/sB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACnD3P,EAAIopF,YAGTzwG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACnD3P,EAAIqpF,aAEP1wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACnD3P,EAAIypF,aAEN78E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOge,EAAWpd,gBAClBkN,QAASkQ,EAAWsF,WAAW1iB,gBAC/BwN,SAAUggB,EAAmB,mBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMlDpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIkpF,iBAGRt8E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOge,EAAW6D,aAClB/T,QAASkQ,EAAWsF,WAAWxiB,cAC/BsN,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,gBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAMlDpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAImpF,cAIRv8E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAOu1F,EAAY3oF,EAAInc,MACtClL,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAlLpCyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAmLrB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAzShB+rC,EAySmCn/B,EAxStD0oF,EAAqB1wG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAChBywG,GADe,IAElBD,KAAM19F,KAAKsP,MAAMtP,KAAKC,UAAUo0C,OAGlCh4B,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAEXpd,gBAAiBod,EAAWsF,WAAW1iB,gBAAgBwR,OACrD,SAAC0zF,EAAa/tF,GAAd,OAAwB+tF,EAAYnvG,OAAS4kD,EAAY+pD,kBACzD,GACFzjF,aAAc7D,EAAWsF,WAAWxiB,cAAcsR,OAChD,SAAC2zF,EAAWhuF,GAAZ,OAAsBguF,EAAUpvG,OAAS4kD,EAAYgqD,eACrD,GACFzjF,aAAcy5B,EAAYiqD,WAC1BzjF,cAAew5B,EAAYkqD,YAC3BzjF,gBAAiBu5B,EAAYoqD,SAC7B1jF,mBAAoBs5B,EAAYqqD,YAChC1jF,mBAAoBq5B,EAAYn9B,eAElC8J,EAAe,CACbjoB,GAAIs7C,EAAYt7C,GAChBW,gBAAiBod,EAAWsF,WAAW1iB,gBAAgBwR,OACrD,SAAC0zF,EAAa/tF,GAAd,OAAwB+tF,EAAYnvG,OAAS4kD,EAAY+pD,kBACzD,GACFzjF,aAAc7D,EAAWsF,WAAWxiB,cAAcsR,OAChD,SAAC2zF,EAAWhuF,GAAZ,OAAsBguF,EAAUpvG,OAAS4kD,EAAYgqD,eACrD,GACFzjF,aAAcy5B,EAAYiqD,WAC1BzjF,cAAew5B,EAAYkqD,YAC3BzjF,gBAAiBu5B,EAAYoqD,SAC7B1jF,mBAAoBs5B,EAAYqqD,YAChC1jF,mBAAoBq5B,EAAYn9B,mBAGlC+Z,GAAY,GAnCd,IAAqBojB,IA0SCxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,WAME,GAAb8pG,EACC/pG,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUjiB,MAAO,CAAEzC,OAAQ,EAAIqtG,IAC7B/pG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,MAGtB,MAENnxC,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAOlpB,EAAMmhC,SAAWnhC,EAAMmhC,QAAQzuB,OACtCiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aAhNd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,IAgNIC,oBA7Md,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,IA4MIyqF,iBAAkB5B,QAKzBn8E,GACClzB,EAAAC,EAAAC,cAACgxG,GAAD,CAAajxE,QAAS/M,EAAagN,QAAS8vE,EAAaz4F,QAlWlC,WAC7B4b,EAAe,MACfiQ,GAAY,IAgWoF9rB,KAAM6rB,gEC/gBpGplC,GAAY/B,YAAW,SAACC,GAAD,MAAY,CACvC+B,KAAM,CACJ7B,MAAO,KAET0Z,OAAQ,CACNzZ,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,IACV6C,OAAQ,UAEV3C,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,GAC1B8Z,SAAU,IACV6C,OAAQ,UAEV4mB,WAAY,CACV1F,UAAW,QACXzkB,YAAa,GAEfoqB,OAAQ,CACN7mB,OAAQ/c,EAAMI,QAAQ,EAAG,GACzB4B,QAAS,QAEXb,OAAQ,CACNqY,YAAaxZ,EAAMI,QAAQ,IAE7B8a,QAAS,CACP9Z,gBAAiBiD,IAAOC,KAAK,KAC7BnE,QAASH,EAAMI,QAAQ,GACvB4B,QAAS,OACTE,eAAgB,UAElB2hC,YAAa,CACXtiC,MAAOvB,EAAMwB,QAAQsiC,MACrB1iC,gBAAiBiD,IAAO+8B,MAAM,KAC9BjN,UAAW,CACT/yB,gBAAiBiD,IAAO+8B,MAAM,UAkNrB8zE,GA7MM,SAACryG,GAAU,IAAAsyG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtB3xE,EAAwDnhC,EAAxDmhC,QAAS3oB,EAA+CxY,EAA/CwY,KAAMC,EAAyCzY,EAAzCyY,QAAS2oB,EAAgCphC,EAAhCohC,QAASlhC,EAAuBF,EAAvBE,UAAcI,EAAvDC,OAAAC,EAAA,EAAAD,CAAgEP,EAAhE+yG,IACMl6F,EAAgB,CACpBzM,GAAI+0B,EAAQ/0B,GACZmD,iBAAgB,QAAA+iG,EAAA,OAAEnxE,QAAF,IAAEA,OAAF,EAAEA,EAAS5xB,wBAAX,IAAA+iG,IAA+B,KAC/CxlF,cAAa,QAAAylF,EAAA,OAAEpxE,QAAF,IAAEA,OAAF,EAAEA,EAASrU,qBAAX,IAAAylF,IAA4B,GACzCxlF,eAAc,QAAAylF,EAAA,OAAErxE,QAAF,IAAEA,OAAF,EAAEA,EAASpU,sBAAX,IAAAylF,IAA6B,GAC3C3lF,aAAY,QAAA4lF,EAAA,OAAEtxE,QAAF,IAAEA,OAAF,EAAEA,EAAStU,oBAAX,IAAA4lF,IAA2B,GACvCnkF,iBAAgB,QAAAokF,EAAA,OAAEvxE,QAAF,IAAEA,OAAF,EAAEA,EAAS7S,wBAAX,IAAAokF,IAA+B,GAC/CnkF,oBAAmB,QAAAokF,EAAA,OAAExxE,QAAF,IAAEA,OAAF,EAAEA,EAAS5S,2BAAX,IAAAokF,IAAkC,GACrDnkF,oBAAmB,QAAAokF,EAAA,OAAEzxE,QAAF,IAAEA,OAAF,EAAEA,EAAS3S,2BAAX,IAAAokF,IAAkC,GACrDhmF,cAAa,QAAAimF,EAAA,OAAE1xE,QAAF,IAAEA,OAAF,EAAEA,EAASvU,qBAAX,IAAAimF,IAA4B,KACzClmF,aAAY,QAAAmmF,EAAA,OAAE3xE,QAAF,IAAEA,OAAF,EAAEA,EAASxU,oBAAX,IAAAmmF,IAA2B,MAEzCn+F,EAA0BL,mBAAS,IAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACA6kB,GADA5kB,EAAA,GAAAA,EAAA,GACsCX,IAAMwB,WAAWka,KAA/CxF,EAARqP,EAAQrP,WAER9V,GAFAmlB,EAAoB9J,cAEkBzb,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,CAAA,GACjCsY,KADLtE,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO+f,EAAP7f,EAAA,GAAoB8f,EAApB9f,EAAA,GAIM7T,EAAUzB,KACVs7B,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAErCwpB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GACnC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAWpD,OAJA8H,IAAMkK,UAAU,aAEb,CAACiW,IAGFlzB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CAAQtH,SAAS,KAAKoB,QAASA,EAASD,KAAMA,GAC5CtX,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GAAShB,EAAT,CAAeJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAC3CgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQqW,QACtB7V,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAY8mB,MAAM,SAASjoB,UAAWQ,EAAQ8L,MAAOq2B,cAAY,EAAC1iC,QAAQ,MAA1E,qBAIFe,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACtBrW,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY9F,iBACnB5S,YAAa,YACb5Y,KAAK,OACLD,MAAM,YACNo7B,aAAa,OACb1jB,SAAUob,EAAkB,sBAC3B,IACHz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY7F,oBACnB1rB,MAAM,eACN6Y,YAAa,uBACb5Y,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,yBAC3B,IACHz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY5F,oBACnB9S,YAAa,eACb5Y,KAAK,OACLD,MAAM,cACNo7B,aAAa,OACb1jB,SAAUob,EAAkB,yBAE9Bz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAYvH,aACnBhqB,MAAM,OACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,kBAE9Bz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACHvJ,MAAM,SACNqX,OAAO,QACP/N,MAAOioB,EAAYrH,eACnBjqB,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,oBAE9Bz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACN6Y,YAAY,aACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,iBAC5BxpB,MAAOioB,EAAYtH,gBAErB5rB,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCoX,QAASkQ,EAAWsF,WAAWlgB,iBAC/BpD,MAAOioB,EAAY7kB,iBACnBgL,SAAUggB,EAAmB,oBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,WACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnCqJ,MAAOioB,EAAYxH,cACnB3S,QAASkQ,EAAWsF,WAAWrgB,cAC/BmL,SAAUggB,EAAmB,iBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOxX,MAAUm4B,EAAY,CAAE/W,eAGhF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,QACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOioB,EAAYzH,aACnB1S,QAASkQ,EAAWsF,WAAWvgB,aAC/BqL,SAAUggB,EAAmB,gBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,OACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,kBAKlDpY,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2X,SACtBnX,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQvW,UAAWQ,EAAQsgC,YAAa/pB,QAAS,kBAAMmqB,EAAQhN,IAAcj0B,QAAQ,aAArF,YCpNV,SAASugB,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAEtD,IAAMunB,GAAU,CACd,CAAEnb,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,gBAAiBvJ,MAAO,iBAC9B,CAAEuJ,GAAI,cAAevJ,MAAO,gBAC5B,CAAEuJ,GAAI,cAAevJ,MAAO,eAE5B,CAAEuJ,GAAI,OAAQvJ,MAAO,QACrB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,SAAUvJ,MAAO,UACvB,CAAEuJ,GAAI,QAASvJ,MAAO,aACtB,CAAEuJ,GAAI,UAAWvJ,MAAO,WACxB,CAAEuJ,GAAI,QAASvJ,MAAO,SACtB,CACEuJ,GAAI,OACJvJ,MAAO,OACPjD,SAAU,IACVuoB,MAAO,SACP7E,OAAQ,SAACnX,GAAD,OAAWA,EAAMkkG,QAAQ,MAI/BC,GAAapzG,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAI9B,SAASgzG,GAAuBvwG,GAC9B,IAAMU,EAAU4vG,KACVnzG,EAAQ6tE,eACN9hD,EAA2ClpB,EAA3CkpB,MAAOzB,EAAoCznB,EAApCynB,KAAME,EAA8B3nB,EAA9B2nB,YAAawB,EAAiBnpB,EAAjBmpB,aAkBlC,OACEjoB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAlBhB,SAAoCtB,GAClCwT,EAAaxT,EAAO,IAiB+Be,SAAmB,IAAT+Q,EAAY/kB,aAAW,cAC3D,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,MAAmBD,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,OAElDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAjBhB,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAgBmB/Q,SAAmB,IAAT+Q,EAAY/kB,aAAW,iBACtD,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,MAAyBD,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,OAExDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAhBhB,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAemB/Q,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EAAGjlB,aAAW,aACtF,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,MAAwBD,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,OAEvDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAhBN,SAAmCtB,GACjCwT,EAAaxT,EAAO8iD,KAAK/0B,IAAI,EAAG+0B,KAAKm4C,KAAK1nF,EAAQvB,GAAe,KAgB7DjR,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,MAAoBD,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,QAiBzD,IAAMujB,GAAaxnB,YAAW,SAACC,GAAD,IAAAqU,EAAA,OAAAA,EAAA,CAC5BtS,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbuZ,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,KAdeiD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OAiBtB,CACJhU,UAAWL,EAAMI,QAAQ,KAlBCgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QAoBrB,IApBqBjR,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,SAuBpB,CACN0I,OAAQ/c,EAAMI,QAAQ,KAxBIgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QA0BrB,CACLlU,QAASH,EAAMI,QAAQ,GACvBF,MAAO,SA5BmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA8BjB,CACTlU,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,SAjCmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,WAmClB,CACRmF,YAAaxZ,EAAMI,QAAQ,KApCDgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAsCjB,CACT9T,WAAYP,EAAMI,QAAQ,KAvCAgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAyCjB,CACT7R,SAAU,KA1CgB6R,IA8Cf,SAASwhG,GAAgBhzG,GACtC,IAAAqU,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAAwCjJ,IAAMK,SAAS,CACrDuU,QAAS,GACTxM,SAAU,KAFZc,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOq4D,EAAPp4D,EAAA,GAAqB2zF,EAArB3zF,EAAA,GAIAE,EAAgCpJ,IAAMK,UAAS,GAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOgnB,EAAP/mB,EAAA,GAAiBgnB,EAAjBhnB,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,MAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAoB6W,EAApB7W,EAAA,GAEQjM,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAEFo6D,EAAc,WAClB1uD,GAAQ,IASJiB,EAAc,SAACvI,EAAOkL,GACX,cAAXA,GAIJ5D,GAAQ,IAEJvc,EAAUgkB,KAChB/G,EAAwB1J,IAAMK,SAAS,GAAvCsJ,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAO8J,EAAP7J,EAAA,GAAa8J,EAAb9J,EAAA,GACA4V,EAAsCvf,IAAMK,SAAS,GAArDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO7L,EAAP8L,EAAA,GAAoB7L,EAApB6L,EAAA,GACAsjB,EAAsC9iC,IAAMwB,WAAWka,IAA/CxF,EAAR4sB,EAAQ5sB,WAAYuF,EAApBqnB,EAAoBrnB,cAEpBgE,EAA8Bzf,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNunB,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOyB,EAAPxB,EAAA,GAIAE,GAJAF,EAAA,GAIkD1f,IAAMK,SAAS,CAC/Dy8F,KAAM,MADRj9E,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAKo/E,EAALn/E,EAAA,GAAyBo/E,EAAzBp/E,EAAA,GAGMm3E,EAAYtjF,EAAc8wC,KAAKyyC,IAAIvjF,EAAa3nB,EAAMmzG,UAAYnzG,EAAMmzG,SAASzgG,OAAS+U,EAAOE,GAxC1D,SAmF9ByrF,EAnF8Bz/F,GAAA,OAAA0/F,EAAAv/F,MAAAC,KAAA1B,WAAA,SAAAghG,IAAA,OAAAA,EAAA9yG,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAmF7C,SAAAC,EAA4B0hG,GAA5B,IAAAlC,EAAAn6E,EAAAs8E,EAAAC,EAAAhnF,EAAA,OAAA9a,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YAGI6gG,EAAQ/jG,kBACR+jG,EAAQ1mF,eACR0mF,EAAQxmF,eACRwmF,EAAQvmF,gBACRumF,EAAQzmF,cAPZ,CAAAta,EAAAE,KAAA,gBAUQ2+F,EAAYpxG,EAAMmzG,SAClBl8E,EAAW,GACXs8E,EAAqBnC,EAAUnlG,IAAI,SAACwnG,EAAkBvvF,GACxD,OAAIovF,EAAQlnG,KAAOqnG,EAAiBrnG,IAClCqnG,EAAiBC,gBAAkBJ,EAAQ/jG,iBAAiBzM,KAC5D2wG,EAAiBE,cAAgBL,EAAQ1mF,cAAc9pB,KACvD2wG,EAAiB9B,WAAa2B,EAAQxmF,cACtC2mF,EAAiB7B,YAAc0B,EAAQvmF,eACvC0mF,EAAiBG,aAAeN,EAAQzmF,aACxCoK,EAAQ,gBAAsBq8E,EAAQ/jG,iBAAiBzM,KACvDm0B,EAAQ,cAAoBq8E,EAAQ1mF,cAAc9pB,KAClDm0B,EAAQ,WAAiBq8E,EAAQxmF,cACjCmK,EAAQ,aAAmBq8E,EAAQzmF,aACnCoK,EAAQ,YAAkBq8E,EAAQvmF,eAClCkK,EAAQ,GAASq8E,EAAQlnG,GACzB6qB,EAAQ,SAAeq8E,EAAQhlF,iBAC/B2I,EAAQ,YAAkBq8E,EAAQ/kF,oBAClC0I,EAAQ,YAAkBq8E,EAAQ9kF,oBAClCyI,EAAQ,aAAmBq8E,EAAQ3mF,aAAa9pB,MAEzC4wG,GAGFA,IAjCblhG,EAAAE,KAAA,EAoCyBlB,EAAmB,uBAAwB,GAAI0lB,GApCxE,OAAA1kB,EAAAgB,KAqCQigG,EACFD,GAAsBA,EAAmBh1F,OAAO,SAACs1F,EAAW3vF,GAAZ,OAAsB2vF,EAAUznG,KAAOknG,EAAQlnG,KAAI,GACjGogB,EAAoBrC,EAAWqC,kBAC/BnZ,KAAKC,UAAUkgG,KAAsBngG,KAAKC,UAAU2/F,EAAmBlC,QAEvEvkF,GAAqBA,EAAkB4nC,KAAK,SAAC0/C,EAAY5vF,GAAb,OAAuB4vF,EAAW1nG,KAAOonG,EAAiBpnG,KACjGogB,EACDA,GACAA,EAAkBvgB,IAAI,SAAC8nG,EAAe7vF,GACpC,OAAI6vF,EAAc3nG,KAAOonG,EAAiBpnG,GACjConG,EAEFO,IAETvnF,EAAkBjW,KAAKi9F,IAE/B1C,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,6BACTxM,SAAU,aAEZsvD,IACAj8C,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAEXoB,aAAcgoF,EACd/mF,oBACAjd,iBAAkB,GAClBqd,cAAe,GACfE,cAAe,GACfC,eAAgB,GAChBF,aAAc,MAEhBwH,EAAe,MACfiQ,GAAY,GAtEhB/xB,EAAAE,KAAA,iBAyEIq+F,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,4BACTxM,SAAU,UAEZsvD,IACAxrD,OAAOC,SAASwF,SA/EpB,yBAAArT,EAAAmB,SAAA9B,OAnF6CkC,MAAAC,KAAA1B,WA8K7C,IAAMkoB,EAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAE3CujB,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAEnCwpB,EAAoB,SAACrc,GAAD,OAAU,SAACqC,GAEnC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAElD,OACEjL,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACEtV,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IAAMvI,QAASyF,GACrDhd,EAAAC,EAAAC,cAAC4yG,GAAD,CAAOv7F,QAASyF,EAAa7B,SAAUk5D,EAAal5D,UACjDk5D,EAAa1sD,WAIpB3nB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GACxF7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGiF,GAAQtb,IAAI,SAAC+6C,GAAD,OACX9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWrM,IAAK6wC,EAAO56C,GAAI+b,MAAO6+B,EAAO7+B,MAAO9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WACvEonD,EAAOnkD,WAMhB3B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMmzG,UACLnzG,EAAMmzG,SAAS7qF,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAAa1b,IAAI,SAACsc,GAAD,OAC7ErnB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIqgC,cAGP1nD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIupF,UAGP5wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIwpF,aAEP7wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAO,SAAU9nB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACpE3P,EAAIgC,aAGN4K,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,gBACNC,KAAK,OACLyX,SAAUob,EAAkB,gBAC5BsI,aAAa,OACb9xB,MAAOge,EAAW0C,gBAIpB3rB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIqrF,cAGVz+E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,SACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,kBAC5BxpB,MAAOge,EAAW4C,kBAIpB7rB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIqpF,aAGVz8E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACErb,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACNC,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,iBAC5BxpB,MAAOge,EAAW2C,iBAIpB5rB,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIopF,YAGXzwG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACnD3P,EAAIqpF,aAEP1wG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAMsF,UAAU,KAAKu1B,MAAM,OACnD3P,EAAIypF,aAEN78E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOge,EAAW5a,iBAClB0K,QAASkQ,EAAWsF,WAAWlgB,iBAC/BgL,SAAUggB,EAAmB,oBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAOdpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAImrF,iBAGVv+E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC9Bh3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,EAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnCsJ,MAAOge,EAAWyC,cAClB3S,QAASkQ,EAAWsF,WAAWrgB,cAC/BmL,SAAUggB,EAAmB,iBAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CAAMnB,QAAQ,WAAW0W,KAAK,QAAQhU,MAAOyX,EAAOzX,OAAWo4B,EAAY,CAAE/W,eAGjF1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,iBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAERr6B,KAAM,kBAOdpY,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIorF,eAGVx+E,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACnClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAOy3F,EAAa7qF,EAAInc,MACvClL,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,QAIFD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,UACfjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAhUjBs4F,EAgUqC1rF,EA9TzD2qF,EAAsB3yG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACjB0yG,GADgB,IAEnBlC,KAAM19F,KAAKsP,MAAMtP,KAAKC,UAAU2gG,OAElCvkF,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAEX5a,iBAAkB4a,EAAWsF,WAAWlgB,iBAAiBgP,OACvD,SAAC0zF,EAAa/tF,GAAd,OAAwB+tF,EAAYnvG,OAASmxG,EAAaP,kBAC1D,GACF9mF,cAAezC,EAAWsF,WAAWrgB,cAAcmP,OACjD,SAAC2zF,EAAWhuF,GAAZ,OAAsBguF,EAAUpvG,OAASmxG,EAAaN,gBACtD,GACF7mF,cAAemnF,EAAatC,WAC5B5kF,eAAgBknF,EAAarC,YAC7B/kF,aAAconF,EAAaL,aAC3BtlF,iBAAkB2lF,EAAanC,SAC/BvjF,oBAAqB0lF,EAAalC,YAClCvjF,oBAAqBylF,EAAa1pF,YAClCoC,aAAcsnF,EAAarrD,gBAE7Bv0B,EAAe,CACbjoB,GAAI6nG,EAAa7nG,GACjBmD,iBAAkB4a,EAAWsF,WAAWlgB,iBAAiBgP,OACvD,SAAC0zF,EAAa/tF,GAAd,OAAwB+tF,EAAYnvG,OAASmxG,EAAaP,kBAC1D,GACF9mF,cAAezC,EAAWsF,WAAWrgB,cAAcmP,OACjD,SAAC2zF,EAAWhuF,GAAZ,OAAsBguF,EAAUpvG,OAASmxG,EAAaN,gBACtD,GACF7mF,cAAemnF,EAAatC,WAC5B5kF,eAAgBknF,EAAarC,YAC7B/kF,aAAconF,EAAaL,aAC3BtlF,iBAAkB2lF,EAAanC,SAC/BvjF,oBAAqB0lF,EAAalC,YAClCvjF,oBAAqBylF,EAAa1pF,YAClCoC,aAAcsnF,EAAarrD,oBAG7BtkB,GAAY,GAvCd,IAAsB2vE,IAiUE/yG,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,WAMA,GAAb8pG,GACC/pG,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUjiB,MAAO,CAAEzC,OAAQ,EAAIqtG,IAC7B/pG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,MAI1BnxC,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAOlpB,EAAMmzG,UAAYnzG,EAAMmzG,SAASzgG,OACxCiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA3Nd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,IA2NIC,oBAxNd,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,IAuNIyqF,iBAAkB5B,QAKzBn8E,GACClzB,EAAAC,EAAAC,cAAC8yG,GAAD,CAAc/yE,QAAS/M,EAAagN,QAASgyE,EAAc36F,QA3XpC,WAC7B4b,EAAe,MACfiQ,GAAY,IAyXsF9rB,KAAM6rB,MCpfzFnnC,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAsGLL,YAAW,SAAAC,GAAK,MAAK,CAC5C+B,KAAM,CACJkzB,YAAaj1B,EAAMI,QAAQ,GAC3B80B,aAAcl1B,EAAMI,QAAQ,IAE9B+0B,UACyB,UAAvBn1B,EAAMwB,QAAQ2a,KACV,CACE5a,MAAOvB,EAAMwB,QAAQK,UAAUF,KAC/BP,gBAAiBg0B,YAAQp1B,EAAMwB,QAAQK,UAAUwzB,MAAO,MAE1D,CACE9zB,MAAOvB,EAAMwB,QAAQ4yB,KAAKkB,QAC1Bl0B,gBAAiBpB,EAAMwB,QAAQK,UAAU0zB,MAEjDlmB,MAAO,CACLmmB,KAAM,eA6CQz1B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,QAEToc,MAAO,CACLpc,MAAO,OACP0a,aAAc5a,EAAMI,QAAQ,IAE9B6jB,MAAO,CACLxhB,SAAU,KAEZuyB,eAAgB,CACdnxB,OAAQ,EACR4xB,KAAM,gBACNh1B,OAAQ,EACRsc,QAAS,EACT2Y,SAAU,SACVv1B,QAAS,EACTw1B,SAAU,WACV/W,IAAK,GACL1e,MAAO,MA3FX,IAmGMqnB,GAAaxnB,YAAW,SAAAC,GAAK,MAAK,CACtC+B,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbC,KAAM,CACJpiB,QAAS,QAEX4D,KAAM,CACJ4T,YAAaxZ,EAAMI,QAAQ,IAC3BF,MAAO,GACPO,OAAQ,OAmSGq1B,gBA/RA,SAACjzB,GACAkzB,cAAd,IACMxyB,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GACA6I,GADA3I,EAAA,GAAAA,EAAA,GACsCN,IAAMK,SAAS,KAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACiClJ,IAAMK,SAAS,IAAhDgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACqCrJ,IAAMK,SAAS,IAApDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACmCvJ,IAAMK,SAAStU,EAAMmZ,SAAxDyE,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwmB,EAAPvmB,EAAA,GAAkBwmB,EAAlBxmB,EAAA,GAEA4V,EAAuCvf,IAAMK,SAAS,IAAtDmf,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GAC6Cxf,IAAMK,SAAS,KAA5Dqf,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC+C1f,IAAMK,SAAS,KAA9Dwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GACmD7f,IAAMK,SAAS,KAAlE2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GACAE,GADAD,EAAA,GAAAA,EAAA,GACmChgB,IAAMK,SAAS,KAAlD6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GACAI,GADAH,EAAA,GAAAA,EAAA,GACqClgB,IAAMK,SAAS,KAApDigB,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOF,EAAPG,EAAA,GAAmBF,EAAnBE,EAAA,GACAC,EAAyBvgB,IAAMK,UAAS,GAAxCmgB,EAAAl0B,OAAAiU,EAAA,EAAAjU,CAAAi0B,EAAA,GAAOE,EAAPD,EAAA,GAAaE,EAAbF,EAAA,GACAG,EAA2B3gB,IAAMK,UAAS,GAA1CugB,EAAAt0B,OAAAiU,EAAA,EAAAjU,CAAAq0B,EAAA,GAEAI,GAFAH,EAAA,GAAAA,EAAA,GAE8B5gB,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,MAFN8oB,EAAA30B,OAAAiU,EAAA,EAAAjU,CAAAy0B,EAAA,GAAOG,EAAPD,EAAA,GAAgBE,EAAhBF,EAAA,GAlBuB,SAAAK,IAAA,OAAAA,EAAAh1B,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAoDvB,SAAAC,EAA0B4jB,GAA1B,OAAA9jB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACIzS,EAAM6kC,SAASzQ,GACfO,GAAS,GAEXS,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,KAJ1C,wBAAA1iB,EAAAmB,SAAA9B,OApDuBkC,MAAAC,KAAA1B,WAoCvByyB,MAAMC,UAAUC,OAAS,SAAW9gB,EAAOxJ,GACzC3G,KAAKkxB,OAAQ/gB,EAAO,EAAGxJ,IA+CzB,IAAMib,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAEhDouB,EAAqB,SAAAjhB,GAAI,OAAI,SAAC3D,EAAOxJ,GACzCkoB,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOnN,OAWzCypB,EAA0B3hB,IAAMK,SAAS,OAAzCuhB,EAAAt1B,OAAAiU,EAAA,EAAAjU,CAAAq1B,EAAA,GAAOnE,EAAPoE,EAAA,GAAcC,EAAdD,EAAA,GACAE,EAA8B9hB,IAAMK,SAAS,aAA7C0hB,EAAAz1B,OAAAiU,EAAA,EAAAjU,CAAAw1B,EAAA,GAAOpE,GAAPqE,EAAA,GAAgBC,GAAhBD,EAAA,GAOA7X,oBAAW,WAETimB,EAAcpkC,EAAMmZ,SACnB,CAACnZ,EAAMmZ,SAqBV,OACEjY,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MAIxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CAAO3jB,UAAWQ,EAAQ0gB,MAAOpgB,OAAQ,EAAG8iB,YAAa,OAAQjN,KAAK,QAAQkN,cAAY,GAcvF7iB,EAAAC,EAAAC,cAACykC,GAAD,CACGte,QAASvnB,EAAMunB,QACf7mB,QAASA,EACT+wB,MAAOA,EACPE,QAASA,GACTC,cAnCc,SAACjc,EAAOuc,GAGhC4D,EAFcnE,KAAYO,GAAsB,QAAVT,EAErB,OAAS,OAC1BwE,GAAW/D,MAiCLhxB,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACCkgB,EAAWl4B,IAAI,SAACsc,EAAKrE,GAAN,OACdhjB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAGAtV,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC62B,EAAY5e,GAAb,IAAAs9B,EAtEZloC,EAsEY,OACjBpY,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACoB,WAAnBssB,EAAW3sB,IACZjV,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAS,CAAChD,MAAO,KAEvC83B,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GAAOlL,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KAC3CtV,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAASQ,QAAS,SAAC0E,GAAD,OA1Kb,SAAAhI,GAAA,OAAA4hB,EAAAzhB,MAAAC,KAAA1B,WA0KoBijB,KAAcp0B,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEtCD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OApGhC+Y,IAEayP,EAEPc,OAAO,EAAG,GAClBb,EAAcD,IAGZxP,GAAS,GACXN,EAAe,SACfe,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAG,GAAI6oB,QAAQ,OA0FkB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAC1BD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,cAtI/B4c,EAsIiDhQ,GArIlD,OAGjB8L,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACV6zB,GACAmE,GAFS,IAGZ9C,QAAS,UAGXL,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAGmsB,EAAWnsB,GAAI6oB,QAAQ,KAVrD,IAAoBsD,IAsIwDr3B,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,QAI9DD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACC2e,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAInc,GACrClL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,QACI,IAApB2a,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACxB7E,UAvFGjB,EAuFoBwpB,EAAW3sB,IAvFvB,SAACR,GAC5B0e,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAO3D,EAAMiG,OAAOyD,aAuFtCA,QAAS+U,EAAY0O,EAAW3sB,KAChCzX,MAAM,UACNoE,KAAK,WACLwjB,WAAY,CAAE5jB,aAAc,sBACzB,KACiB,IAApBogC,EAAWxpB,KAAiBpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWzB,MAAM,WAC5BokC,EAAWU,cACF,KACxB,GAAnBV,EAAWxpB,KACVpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACAkhB,UAAQ,EACR9uB,GAAG,iBACH6N,QAAS6oB,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,QACtFwB,OAAO,QACPC,WAAS,EACThO,MAAOioB,EAAY0O,EAAWS,YAC9BhpB,SAAUggB,EAAmBuI,EAAWS,YACxClpB,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC0X,YAAa,SAAC1I,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAOigC,EAAWjgC,MAAO1C,QAAQ,iBAC9E,KACgB,GAAnB2iC,EAAWxpB,KACXpY,EAAAC,EAAAC,cAAC4Y,GAAA,GAADwnC,EAAA,CAEAp1C,GAAG,iBACH6N,QAASja,EAAM0Y,QAAQoqB,EAAWQ,gBAClCppB,OAAO,QACPC,WAAS,GALT5Z,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,UAMS1e,EAAWQ,eAAiBtjC,EAAM0Y,QAAQoqB,EAAWQ,gBAAkBtjC,EAAM0Y,SANtFnY,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,WAOUjnB,EAAmBuI,EAAWS,aAPxChjC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAQOptB,EAAY0O,EAAWS,aAR9BhjC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,iBASgB,SAAClnC,GAAD,OAAYA,EAAOxX,OATnCvC,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,cAUa,SAAC1vC,GAAD,OAAY5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GAAewQ,EAAf,CAAuBjP,MAAOigC,EAAWjgC,MAAO1C,QAAQ,gBAVjFqhD,IAWG,KACe,GAAnB1e,EAAWxpB,KACZpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAcknB,EAAIua,EAAW3sB,MAAqB,KAC7B,GAAnB2sB,EAAWxpB,KACbpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IAAMpoB,QAAQ,WAAW0W,KAAK,QAAQnY,MAAM,WAAzF,QAGE,KACAokC,EAAWxpB,MAA2B,GAAnBwpB,EAAWxpB,KAUxB,KAVoCpY,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACtCta,QAAQ,WACR+Z,OAAO,QAEP9N,GAAI02B,EAAW3sB,IACfrT,KAAMggC,EAAW3sB,IACjBhK,MAAOioB,EAAY0O,EAAW3sB,KAC9BoE,SAAUob,EAAkBmN,EAAW3sB,KAEvCtT,MAAOigC,EAAWjgC,QApDxB,MAsDG3B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,KAa2B,GAAnBsgB,EAAWxpB,KAAgBpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IAAMpoB,QAAQ,WAAW0W,KAAK,QAAQnY,MAAM,WAAzF,QAEM,KACjB,IAApBokC,EAAWxpB,KAAiBpY,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,kBAAMjX,EAAMomC,gBAAgB7d,IAAMpoB,QAAQ,WAAW0W,KAAK,QAAQnY,MAAM,WACzFokC,EAAWU,cACF,KACjB,IAApBV,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACxB1gB,MAAM,UACNoE,KAAK,WACLyX,SAAUob,EAAkBmN,EAAW3sB,KACvCkJ,QAASkJ,EAAIua,EAAW3sB,KACxBmQ,WAAY,CAAE5jB,aAAc,sBACzB,KACE,GAAnBogC,EAAWxpB,MAAgC,GAAnBwpB,EAAWxpB,MAAiC,GAAnBwpB,EAAWxpB,KAAcpY,EAAAC,EAAAC,cAACC,EAAA,EAAD,SAAc8yG,MAAM5rF,EAAIua,EAAW3sB,MAAQoS,EAAIua,EAAW3sB,KAAQ03B,WAAWtlB,EAAIua,EAAW3sB,MAAMk6F,QAAQ,IAAoB,oBCngBnM,SAAS+D,GAAiBp0G,GACvC,IAAAqU,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GAEA2I,GADc8tD,eACoB/2D,IAAMK,UAAS,IAAjD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAO/C,EAAPgD,EAAA,GACAE,GADAF,EAAA,GACgClJ,IAAMK,SAAS,OAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOhG,EAAPiG,EAAA,GAKMY,GALNZ,EAAA,GAKoB,WAClBL,GAAQ,GACRjd,EAAMyY,YAGR,OACEvX,EAAAC,EAAAC,cAAA,WAEEF,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACAxE,UAAWA,EACX9C,SAAUA,EACRmB,KAAMA,EACNC,QAASyF,EACTY,kBAAgB,2BAEhB5d,EAAAC,EAAAC,cAAC4d,GAAA,EAAD,CAAa5S,GAAG,2BAA2B,iBAC3ClL,EAAAC,EAAAC,cAAC6d,GAAA,EAAD,KACA/d,EAAAC,EAAAC,cAACizG,GAAD,CAAe7nG,MAAQ,gBAAiBi5B,aAAa,GAAKle,QAASgoF,GAAY+E,aAAcn7F,OAAQnZ,EAAMmZ,UAE3GjY,EAAAC,EAAAC,cAACke,GAAA,EAAD,KAEEpe,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAASiH,EAAaxf,MAAM,UAAU2nB,WAAS,GAAvD,wBC9BJ3B,GAAaxnB,YAAW,SAACC,GAAD,IAAAqU,EAAA,OAAAA,EAAA,CAC5BtS,KAAM,CACJ7B,MAAO,OACPO,OAAQ,IACRJ,UAAWL,EAAMI,QAAQ,IAG3B8jB,aAAc,CACZC,UAAW,QAEbuZ,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,KAbeiD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OAgBtB,CACJhU,UAAWL,EAAMI,QAAQ,KAjBCgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QAmBrB,CACLnU,MAAO,SApBmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,SAuBpB,CACN0I,OAAQ/c,EAAMI,QAAQ,KAxBIgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QA0BrB,CACLlU,QAASH,EAAMI,QAAQ,GACvBF,MAAO,SA5BmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA8BjB,CACTlU,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,SAjCmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,WAmClB,CACRmF,YAAaxZ,EAAMI,QAAQ,KApCDgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAsCjB,CACT9T,WAAYP,EAAMI,QAAQ,KAvCAgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAyCjB,CACT7R,SAAU,KA1CgBY,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA4CjB,CACT3T,WAAY,SA7Cc0C,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OA+CtB,CACJ+iG,UAAW,QACXn5E,UAAW,OACXh5B,UAAW,oEAlDe7B,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,gBAoDb,CACb4gB,YAAa,GACbC,aAAc,GACdx0B,WAAY,GACZulB,cAAe,KAxDW5R,IA4Df,SAASgjG,GAAcx0G,GACpC,IAAMU,EAAUgkB,KACZ+vF,EAAc,EACdjyE,EAAa,GACjBnuB,EAA8BJ,IAAMK,UAAS,GAA7CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOzV,EAAP2V,EAAA,GAAgB86D,EAAhB96D,EAAA,GACA2I,EAA0CjJ,IAAMK,SAAStU,EAAMmtE,YAA/DhwD,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOw3F,EAAPv3F,EAAA,GAAsBw3F,EAAtBx3F,EAAA,GACQ5L,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAERixB,EAAagjE,cAAcnlF,SAAS2c,MAAM,KAAK43E,MAE/C3gG,IAAMkK,UAAU,WACdw2F,EAAiB30G,EAAMmtE,aACtB,CAACntE,EAAMmtE,aAEVunC,EAAcj6E,QAAQ,SAACo6E,GACrBjiG,QAAQyR,MACRowF,GAA4B,EACxBI,EAAO/vF,YACT0d,EAAaqyE,EAAO/vF,aAGxB,IAAM5G,EAAc,SAACvI,EAAOkL,GACX,cAAXA,GAIJwuD,GAAW,IAEPylC,EAAW,eAAAvvF,EAAAhlB,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAG,SAAAC,EAAOmjG,GAAP,IAAAljG,EAAAsT,EAAA,OAAAzT,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACZZ,EAAMjQ,EACNujB,EAAO,CACXnT,OAAQ,OACRC,QAAS,CAAEa,eAAgB,oBAC3BK,KAAME,KAAKC,UAAU,CACnB3H,MAAOpC,GACPoc,UAAW,CAAEqvF,eAAgBD,EAAU3oG,OAPzBmG,EAAAE,KAAA,EAWZS,MAAMrB,EAAKsT,GACd9G,KAAK,SAACC,GAAD,OAASA,EAAI9K,SAClB6K,KAAK,SAAC+G,GACLA,EAAW/O,WAAoB8J,OAAOC,SAASwF,WAEhDnH,MAAM7L,QAAQzB,OAhBC,wBAAAoB,EAAAmB,SAAA9B,MAAH,gBAAA+B,GAAA,OAAA4R,EAAAzR,MAAAC,KAAA1B,YAAA,GAkBX4iG,EAAuB,SAACt5F,GAC5B,IAAM01B,EAAQ11B,EAAEC,OAAOy1B,MACvB9wC,OAAOwvB,KAAKshB,GAAOplC,IAAI,SAAC22B,EAAM1e,GAC5B,IAAIopD,EAAa,EACbonC,IACFpnC,EAAamnC,EAAc,GAE7B,IAAI5yE,EAAYW,EAAa,IAAM8qC,EAE7B4nC,EADY7jE,EAAMntB,GAAO5K,KAAK0jB,MAAM,KACf,IAvDY,SAAAppB,EAAAC,EAAAuiB,EAAAC,EAAAC,EAAAC,GAAAkL,EAAA3tB,MAAAC,KAAA1B,WAyDvC6xB,CAAoBmN,EAAMntB,GAAQgxF,EAAUrzE,EAAWW,EAAY,IAAI,MAzDhC,SAAAf,IAAA,OAAAA,EAAAlhC,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA6D3C,SAAAsV,EAAmCkuF,EAASC,EAAUvzE,EAAWurC,EAAQioC,EAAc5/E,GAAvF,IAAAqM,EAAAC,EAAAC,EAAAnwB,EAAAowB,EAAAhoB,EAAAszD,EAAA+nC,EAAAC,EAAA,OAAA7jG,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cAAAyU,EAAAzU,KAAA,EAC2BlB,EACvB,eACA,GACA,CAAE8wB,MAAO+yE,EAAUp+F,SAAU6qB,EAAWW,WAAY4qC,IACpD,GALJ,cACMtrC,EADN5a,EAAA3T,KAQMwuB,EAAaD,EAAa7wB,KAAK8wB,WAC/BC,EAAgBD,EAAWC,cAC3BnwB,EAAMkwB,EAAWlwB,IAErBowB,GADIA,EAAeF,EAAWU,UACFuxB,QAAQ,cAAe,WAAaoZ,GAC5DnzD,EAAU,CACZhI,QAAS,CACPa,eAAgBsiG,IAKf3/E,IACG83C,EAAW,CACfzqE,KAAM0/B,EAAa,KAAOiyE,EAAc,GACxCe,cAAef,EAAc,EAC7BlmG,aAAcvO,EAAMtB,MACpBomB,UAAW0d,EACXxb,SAAUnV,EACVA,IAAK,yDAA2DowB,GAElEozE,EAAe9nC,GAGZ93C,IACC6/E,EAAc,GAClBZ,EAAcj6E,QAAQ,SAACsyC,GACrBuoC,EAAY/+F,KAAKw2D,KAEnBuoC,EAAY/+F,KAAK8+F,IArCrBnuF,EAAAzU,KAAA,GAwCQiwB,KAAMC,IAAIX,EAAemzE,EAASl7F,GAxC1C,eAAAiN,EAAAzU,KAAA,GAyC8BlB,EAAmB,sBAAuB,GAAI,CAAEg8D,SAAU8nC,EAAc5/E,OAAQA,IAAU,GAzCxH,QA0CiC,OAD3B8/E,EAzCNruF,EAAA3T,MA0CkB8C,YAAsBg5D,GAAW,GACjDO,WAAW,WACsB,MAA/B2lC,EAAgBl/F,YAAsB8J,OAAOC,SAASwF,UACrD,MA7CL,yBAAAsB,EAAAxT,SAAAuT,OA7D2CnT,MAAAC,KAAA1B,WA6G3C,OACEnR,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAACw5B,EAAA,EAAD,CAAM16B,UAAWQ,EAAQtD,MACvB8D,EAAAC,EAAAC,cAACo9B,GAAA,EAAD,CAAYhyB,MAAOxM,EAAMtB,OAASsB,EAAMy1G,UAAYz1G,EAAMtB,MAAQ,oBAAsBsB,EAAMtB,QAC9FwC,EAAAC,EAAAC,cAACs9B,GAAA,EAAD,KACEx9B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACvc,QAAS,EAAG2C,UAAWQ,EAAQg1G,WAC5ChB,EAAczoG,IAAI,SAAC4F,EAAKqS,GAAN,OACjBhjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAKtE,EAAIzF,IACvBlL,EAAAC,EAAAC,cAAA,OAAKf,MAAO,CAAEyyB,SAAU,aACtB5xB,EAAAC,EAAAC,cAAA,KACElB,UAAU,oBACVG,MAAO,CACLyyB,SAAU,WACV3W,MAAO,GACPJ,IAAK,GACLrd,MAAO,MACPy7C,OAAQ,QAIZj5C,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJra,MAAO,CACLhD,MAAO,QACPs4G,UAAW,YACX/3G,OAAQ,QACRN,QAAS,MACT4c,OAAQ,IAER4Y,SAAU,YAEZ5yB,UAAU,aAEVgB,EAAAC,EAAAC,cAAA,OACE4hB,IAAKnR,EAAImV,SACT3mB,MAAO,CACLhD,MAAO,OACPO,OAAQ,OACR4B,aAAc,OAEhBujB,IAAI,oBAGR7hB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQtW,QAAQ,WAAWE,MAAO,CAAE6Z,OAAQ,OAAQ/a,QAAS,QAAU8X,QAAS,kBAAM69F,EAAYjjG,KAChG3Q,EAAAC,EAAAC,cAAC+hB,EAAAhiB,EAAD,CAAYd,MAAO,CAAE3B,MAAO,WAE9BwC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAE+6B,UAAW,UAAYj7B,QAAQ,MACjD,IACA+jB,EAAQ,EAAG,KAGdhjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAE+6B,UAAW,UAAYj7B,QAAQ,MACjD,IACA0R,EAAI+jG,QAAU,QAAU,GAAI,SAMrC10G,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJra,MAAO,CACLhD,MAAO,QACPs4G,UAAW,YACX/3G,OAAQ,QACRN,QAAS,MACT4c,OAAQ,IACRxC,OAAQ,UACR0jB,UAAW,SACXtI,SAAU,YAEZ5yB,UAAU,aAGRgB,EAAAC,EAAAC,cAAA,SAAOlB,UAAU,qBAAqBG,MAAO,CAAElB,QAAS,SACtD+B,EAAAC,EAAAC,cAAA,KACElB,UAAU,aACV21G,cAAY,OACZx1G,MAAO,CACL3B,MAAO,qBACPiB,SAAU,OACVua,OAAQ,UAGZhZ,EAAAC,EAAAC,cAAA,SAAOkY,KAAK,OAAOpZ,UAAU,oBAAoBqa,SAAU,SAACoB,GAAD,OAAOs5F,EAAqBt5F,WAOnGza,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAM5Z,EAASoiB,iBAAkB,IAAMvI,QAASyF,GACxDhd,EAAAC,EAAAC,cAACuf,GAAA,EAAD,CAAOlI,QAASyF,GAAhB,4FC/PFjf,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CACrC+B,KAAM,CACJ7B,MAAO,KAET0Z,OAAQ,CACNzZ,QAASH,EAAMI,QAAQ,GACvB8Z,SAAU,IACV6C,OAAQ,UAEV3C,QAAS,CACPja,QAASH,EAAMI,QAAQ,EAAG,GAC1B8Z,SAAU,IACV6C,OAAQ,UAEV4mB,WAAY,CACV1F,UAAW,QACXzkB,YAAa,GAEfoqB,OAAQ,CACN7mB,OAAQ/c,EAAMI,QAAQ,EAAG,GACzB4B,QAAS,QAEXb,OAAQ,CACNqY,YAAaxZ,EAAMI,QAAQ,IAE7B8a,QAAS,CACP9Z,gBAAiBiD,IAAOC,KAAK,KAC7BnE,QAASH,EAAMI,QAAQ,GACvB4B,QAAS,OACTE,eAAgB,UAElB2hC,YAAa,CACXtiC,MAAOvB,EAAMwB,QAAQsiC,MACrB1iC,gBAAiBiD,IAAO+8B,MAAM,KAC9BjN,UAAW,CACT/yB,gBAAiBiD,IAAO+8B,MAAM,UA0LrBu3E,GArLG,SAAA91G,GAChB,IAAQmhC,EAAwDnhC,EAAxDmhC,QAAS3oB,EAA+CxY,EAA/CwY,KAAMC,EAAyCzY,EAAzCyY,QAAS2oB,EAAgCphC,EAAhCohC,QAASlhC,EAAuBF,EAAvBE,UAAcI,EAAvDC,OAAAC,EAAA,EAAAD,CAAgEP,EAAhE+1G,IACMl9F,EAAgB,CACpBzM,GAAK+0B,EAAQ/0B,GACbkhB,cAAc6T,EAAQ7T,cACtBI,iBAAkByT,EAAQzT,iBAC1BH,iBAAiB4T,EAAQ5T,iBACzBI,oBAAoBwT,EAAQxT,oBAC5BH,gBAAiB2T,EAAQ3T,gBACzBI,mBAAqBuT,EAAQvT,mBAC7BH,kBAAmB0T,EAAQ1T,kBAC3BI,qBAAsBsT,EAAQtT,sBAEhClZ,EAA0BL,mBAAS,IAAnCM,EAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,EAAA,GACA6kB,GADA5kB,EAAA,GAAAA,EAAA,GACqCX,IAAMwB,WAAWka,KACtDtb,GADAmlB,EAAQrP,WAARqP,EAAoB9J,cACkBzb,IAAMK,SAAN/T,OAAAQ,EAAA,EAAAR,CAAA,GACjCsY,KADLtE,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO+f,EAAP7f,EAAA,GAAoB8f,EAApB9f,EAAA,GAIM7T,EAAUzB,KAKV02B,EAAoB,SAAArc,GAAI,OAAI,SAAAqC,GAChC0Y,EAAe9zB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK6zB,GAAN,GAAA7zB,OAAAM,EAAA,EAAAN,CAAA,GAAoB+Y,EAAOqC,EAAEC,OAAOzP,WAUpD,OAHA8H,IAAMkK,UAAU,aACd,CAACiW,IAGDlzB,EAAAC,EAAAC,cAACud,GAAA,EAAD,CACEtH,SAAS,KACToB,QAASA,EACTD,KAAMA,GAENtX,EAAAC,EAAAC,cAAA,MAAAb,OAAAe,OAAA,GACMhB,EADN,CAEEJ,UAAWU,kBAAKF,EAAQxB,KAAMgB,KAE9BgB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQqW,QACtB7V,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE8mB,MAAM,SACNjoB,UAAWQ,EAAQ8L,MACnBq2B,cAAY,EACZ1iC,QAAQ,MAJV,kBAUFe,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ6W,SACxBrW,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY9G,cACnB5R,YAAa,YACb5Y,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,mBAElCz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACN6Y,YAAY,eACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,oBAC5BxpB,MAAOioB,EAAY1G,mBAErBxsB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY7G,iBACnB7R,YAAa,gBACb5Y,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,sBAElCz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,mBACN6Y,YAAY,mBACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,uBAC5BxpB,MAAOioB,EAAYzG,sBAGlBzsB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACDta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY5G,gBACnB9R,YAAa,eACb5Y,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,qBAElCz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACN6Y,YAAY,mBACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,sBAC5BxpB,MAAOioB,EAAYxG,qBAGlB1sB,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACDta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACP/N,MAAOioB,EAAY3G,kBACnB/R,YAAa,iBACb5Y,KAAK,OACLm7B,aAAa,OACb1jB,SAAUob,EAAkB,uBAElCz0B,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACMta,QAAQ,WACRga,WAAS,EACT/N,GAAG,OACH8N,OAAO,QACPrX,MAAM,aACN6Y,YAAY,qBACZ5Y,KAAK,OACLwW,KAAK,SACL2kB,aAAa,OACb1jB,SAAUob,EAAkB,wBAC5BxpB,MAAOioB,EAAYvG,wBAMzB3sB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2X,SACtBnX,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEvW,UAAWQ,EAAQsgC,YACnB/pB,QAAS,kBAAMmqB,EAAQhN,IACvBj0B,QAAQ,aAHV,YCpKJmwG,GAAapzG,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAI9B,SAASgzG,GAAuBvwG,GAC9B,IAAMU,EAAU4vG,KACVnzG,EAAQ6tE,eACN9hD,EAA2ClpB,EAA3CkpB,MAAOzB,EAAoCznB,EAApCynB,KAAME,EAA8B3nB,EAA9B2nB,YAAawB,EAAiBnpB,EAAjBmpB,aAkBlC,OACEjoB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAnBN,SAAoCtB,GAClCwT,EAAaxT,EAAO,IAmBhBe,SAAmB,IAAT+Q,EACV/kB,aAAW,cAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,MAAmBD,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,OAElDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAtBN,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAsBvB/Q,SAAmB,IAAT+Q,EACV/kB,aAAW,iBAEU,QAApBvF,EAAM4f,UACL7b,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,MAEAD,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,OAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QA7BN,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IA6BvB/Q,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UACL7b,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,MAEAD,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,OAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QApCN,SAAmCtB,GACjCwT,EAAaxT,EAAO8iD,KAAK/0B,IAAI,EAAG+0B,KAAKm4C,KAAK1nF,EAAQvB,GAAe,KAoC7DjR,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,MAAoBD,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,QAiBzD,IAAMujB,GAAaxnB,YAAW,SAACC,GAAD,IAAAqU,EAAA,OAAAA,EAAA,CAC5BtS,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbuZ,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,KAdeiD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OAiBtB,CACJhU,UAAWL,EAAMI,QAAQ,KAlBCgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QAoBrB,IApBqBjR,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,SAuBpB,CACN0I,OAAQ/c,EAAMI,QAAQ,KAxBIgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QA0BrB,CACLlU,QAASH,EAAMI,QAAQ,GACvBF,MAAO,SA5BmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA8BjB,CACTlU,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,SAjCmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,WAmClB,CACRmF,YAAaxZ,EAAMI,QAAQ,KApCDgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAsCjB,CACT9T,WAAYP,EAAMI,QAAQ,KAvCAgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAyCjB,CACT7R,SAAU,KA1CgB6R,IA8Cf,SAASwkG,GAASh2G,GAC/B,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GACA2I,EAAsCjJ,IAAMK,SAAS,GAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAqc,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACZne,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR8L,EAAgCpJ,IAAMK,UAAS,GAA/CgJ,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAOgnB,EAAP/mB,EAAA,GAAiBgnB,EAAjBhnB,EAAA,GACAC,EAAsCtJ,IAAMK,SAAS,MAArDkJ,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAO6W,EAAP5W,EAAA,GAAoB6W,EAApB7W,EAAA,GACAG,EAA8B1J,IAAMK,SAAS,CAC3C2gB,QAAQ,EACRghF,UAAU,EACV7pG,GAAI,KAHNwR,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOwX,EAAPvX,EAAA,GAAgBwX,EAAhBxX,EAAA,GAKA4V,EAA0Bvf,IAAMK,SAAS,CACvC00F,UAAU,EACVC,UAAU,IAFZx1E,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAoDA,IAAMw3E,EACJtjF,EACA8wC,KAAKyyC,IACHvjF,EACA3nB,EAAMyrB,UAAYzrB,EAAMyrB,SAAS/Y,OAAS+U,EAAOE,GASrD,IAAM29B,EAAoB,SAAChsC,GAAD,OAAU,SAACqC,GAGnC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAjFZ,SA2FvB+pG,EA3FuBviG,GAAA,OAAAwiG,EAAAriG,MAAAC,KAAA1B,WAAA,SAAA8jG,IAAA,OAAAA,EAAA51G,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KA2FtC,SAAAC,EAA4B81C,GAA5B,IAAAzwB,EAAA,OAAAvlB,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACE2iB,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAY1U,aAAcijE,UAAU,KAE7Dh/E,EAAW,CACb0rC,eAAgBjb,EAAY5iC,UAC5BkuB,aAAc0U,EAAY1U,cAE5BpgC,QAAQyR,IAAIhR,KAAKC,UAAU2jB,IAP7B1kB,EAAAE,KAAA,EAQQlB,EAAmB,sBAAuB,GAAI0lB,GARtD,OASE7B,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6pG,UAAU,KAT7C,wBAAA1jG,EAAAmB,SAAA9B,OA3FsCkC,MAAAC,KAAA1B,WAiItC,SAAS6+F,EAAYkF,GACnB,IAAIn/E,EAAW,GACCj3B,EAAMyrB,SACQxf,IAAI,SAACoqG,EAAanyF,GAC9C,OAAIkyF,EAAShqG,KAAOiqG,EAAYrjE,cAC9BqjE,EAAYruD,UAAYouD,EAAS9oF,cACjC+oF,EAAYC,aAAeF,EAAS1oF,iBACpC2oF,EAAYpuD,aAAemuD,EAAS7oF,iBACpC8oF,EAAYE,gBAAkBH,EAASzoF,oBACvC0oF,EAAYjsB,YAAcgsB,EAAS5oF,gBACnC6oF,EAAYhsB,eAAiB+rB,EAASxoF,mBACtCyoF,EAAYG,cAAgBJ,EAAS3oF,kBACrC4oF,EAAYI,iBAAmBL,EAASvoF,qBAExCoJ,EAAQ,UAAgB4W,WAAWuoE,EAAS9oF,eAC5C2J,EAAQ,aAAmB4W,WAAWuoE,EAAS1oF,kBAC/CuJ,EAAQ,aAAmB4W,WAAWuoE,EAAS7oF,kBAC/C0J,EAAQ,gBAAsB4W,WAAWuoE,EAASzoF,qBAClDsJ,EAAQ,YAAkB4W,WAAWuoE,EAAS5oF,iBAC9CyJ,EAAQ,eAAqB4W,WAAWuoE,EAASxoF,oBACjDqJ,EAAQ,cAAoB4W,WAAWuoE,EAAS3oF,mBAChDwJ,EAAQ,iBAAuB4W,WAC7BuoE,EAASvoF,sBAEXoJ,EAAQ,uBAA6B4W,WACnCuoE,EAASM,wBAGXz/E,EAAQ,aAAmBm/E,EAAShqG,GAC7BiqG,GAEFA,IAETjzE,MAAM/vB,KAAKC,UAAU2jB,IAGrB7B,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KAY3C,OACE/zB,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC+6C,GAAD,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAEzBonD,EAAOlkD,UAMhB5B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMyrB,UACLzrB,EAAMyrB,SACHnD,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1b,IAAI,SAACsc,GAAD,OACHrnB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IACjBlL,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIyqB,cAENhzC,EAAM22G,cAAch8E,QAAQ,eAAiB,EAC5Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACP7Z,MAAO,CAAEhD,MAAO,IAChB8O,MAAOge,EAAWmD,cAClBlhB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,aACN0X,SAAU+qC,EAAkB,mBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B,IACA7+B,EAAIy/B,WAEN,KAEH,KACHhoD,EAAM22G,cAAch8E,QAAQ,mBAAqB,EAChDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWuD,iBAClBthB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,iBACN0X,SAAU+qC,EAAkB,sBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B,IACA7+B,EAAI+tF,aAAc,KAEpB,KAEH,KACHt2G,EAAM22G,cAAch8E,QAAQ,kBAAoB,EAC/Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWoD,iBAClBnhB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,gBACN0X,SAAU+qC,EAAkB,sBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI0/B,aAAc,KAEpB,KAEH,KAEHjoD,EAAM22G,cAAch8E,QAAQ,sBAAwB,EACnDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWwD,oBAClBvhB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,oBACN0X,SAAU+qC,EAAkB,yBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIguF,gBAAiB,KAEvB,KAEH,KAEHv2G,EAAM22G,cAAch8E,QAAQ,iBAAmB,EAC9Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWqD,gBAClBphB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,eACN0X,SAAU+qC,EAAkB,qBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI6hE,YAAa,KAEnB,KAEH,KAEHpqF,EAAM22G,cAAch8E,QAAQ,qBAAuB,EAClDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWyD,mBAClBxhB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,mBACN0X,SAAU+qC,EAAkB,wBAQ9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI8hE,eAAgB,KAEtB,KAEH,KAEHrqF,EAAM22G,cAAch8E,QAAQ,mBAAqB,EAChDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAWsD,kBAClBrhB,GAAG,cACHmO,SAAU+qC,EAAkB,qBAC5Bn0C,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,mBAOR3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIiuF,cAAe,KAErB,KAEH,KACHx2G,EAAM22G,cAAch8E,QAAQ,uBAAyB,EACpDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACThO,MAAOge,EAAW0D,qBAClBtT,SAAU+qC,EAAkB,wBAC5Bl5C,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,uBAOR3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAIkuF,iBAAkB,KAExB,KAEH,KAEHz2G,EAAM22G,cAAch8E,QAAQ,mBAAqB,EAChDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL3P,EAAImuF,wBAEL,KACH12G,EAAM22G,cAAch8E,QAAQ,aAAe,EAC1Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL3P,EAAIswC,UAEL,KACH74D,EAAM22G,cAAch8E,QAAQ,SAAW,EACtCz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACEniB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAENh3B,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEtW,QAAQ,WACRzB,MAAM,UACNuY,QAAS,SAAC0E,GAAD,OAAO3b,EAAM42G,OAAOruF,EAAIyqB,gBAHnC,WAMU,KAEV,KACH7d,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OAAOu6F,EAAa3tF,IAC7B1R,KAAK,QACL1W,QAAQ,WACRzB,MAAM,WAJR,cAQAwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAAOu1F,EAAY3oF,EAAIyqB,gBACtC9xC,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GApatCyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OAqanB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACpCgN,EAAQ8gF,UAAY9gF,EAAQ/oB,IAAMmc,EAAIyqB,aACrC9xC,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkBC,KAAM,KAExB3V,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAAD,OAAOu6F,EAAa3tF,IAC7B1R,KAAK,QACL1W,QAAQ,WACRzB,MAAM,WAJR,cASFwC,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAzalB+rC,EAyaqCn/B,EAxaxDmH,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAEXmD,cAAeo6B,EAAYM,UAC3Bt6B,iBAAkBg6B,EAAY4uD,aAC9B/oF,iBAAkBm6B,EAAYO,aAC9Bt6B,oBAAqB+5B,EAAY6uD,gBACjC/oF,gBAAiBk6B,EAAY0iC,YAC7Bx8D,mBAAoB85B,EAAY2iC,eAChC58D,kBAAmBi6B,EAAY8uD,cAC/B3oF,qBAAsB65B,EAAY+uD,oBAEpCpiF,EAAe,CACbjoB,GAAIs7C,EAAY1U,aAChB1lB,cAAeo6B,EAAYM,UAC3Bt6B,iBAAkBg6B,EAAY4uD,aAC9B/oF,iBAAkBm6B,EAAYO,aAC9Bt6B,oBAAqB+5B,EAAY6uD,gBACjC/oF,gBAAiBk6B,EAAY0iC,YAC7Bx8D,mBAAoB85B,EAAY2iC,eAChC58D,kBAAmBi6B,EAAY8uD,cAC/B3oF,qBAAsB65B,EAAY+uD,wBAIpCrhF,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAY1U,aAAc/d,QAAQ,KAzBjE,IAAqByyB,IA0aGxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,WAMA,GAAb8pG,GACC/pG,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUjiB,MAAO,CAAEzC,OAAQ,EAAIqtG,IAC7B/pG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,MAI1BnxC,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAOlpB,EAAMyrB,UAAYzrB,EAAMyrB,SAAS/Y,OACxCiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA5dd,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,IA4dIC,oBApdd,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,IAmdIyqF,iBAAkB5B,QAKzBn8E,GACClzB,EAAAC,EAAAC,cAACy1G,GAAD,CACE11E,QAAS/M,EACTgN,QAAS8vE,EACTz4F,QA7hBqB,WAC7B4b,EAAe,MACfiQ,GAAY,IA4hBJ9rB,KAAM6rB,MCltBlB,IAyBMisE,GAAapzG,YAAW,SAACC,GAAD,MAAY,CACxC+B,KAAM,CACJK,WAAY,EACZb,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,UAC1BtB,WAAYP,EAAMI,QAAQ,SAI9B,SAASgzG,GAAuBvwG,GAC9B,IAAMU,EAAU4vG,KACVnzG,EAAQ6tE,eACN9hD,EAA2ClpB,EAA3CkpB,MAAOzB,EAAoCznB,EAApCynB,KAAME,EAA8B3nB,EAA9B2nB,YAAawB,EAAiBnpB,EAAjBmpB,aAkBlC,OACEjoB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQxB,MACtBgC,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAnBN,SAAoCtB,GAClCwT,EAAaxT,EAAO,IAmBhBe,SAAmB,IAAT+Q,EACV/kB,aAAW,cAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,MAAmBD,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,OAElDD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QAtBN,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IAsBvB/Q,SAAmB,IAAT+Q,EACV/kB,aAAW,iBAEU,QAApBvF,EAAM4f,UACL7b,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,MAEAD,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,OAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QA7BN,SAA+BtB,GAC7BwT,EAAaxT,EAAO8R,EAAO,IA6BvB/Q,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UACL7b,EAAAC,EAAAC,cAACuvG,GAAAxvG,EAAD,MAEAD,EAAAC,EAAAC,cAACsvG,GAAAvvG,EAAD,OAGJD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACEj5B,QApCN,SAAmCtB,GACjCwT,EAAaxT,EAAO8iD,KAAK/0B,IAAI,EAAG+0B,KAAKm4C,KAAK1nF,EAAQvB,GAAe,KAoC7DjR,SAAU+Q,GAAQgxC,KAAKm4C,KAAK1nF,EAAQvB,GAAe,EACnDjlB,aAAW,aAEU,QAApBvF,EAAM4f,UAAsB7b,EAAAC,EAAAC,cAACqvG,GAAAtvG,EAAD,MAAoBD,EAAAC,EAAAC,cAACovG,GAAArvG,EAAD,QAiBzD,IAAMujB,GAAaxnB,YAAW,SAACC,GAAD,IAAAqU,EAAA,OAAAA,EAAA,CAC5BtS,KAAM,CACJ7B,MAAO,OACPG,UAAWL,EAAMI,QAAQ,IAE3B6jB,MAAO,CACLxhB,SAAU,KAEZyhB,aAAc,CACZC,UAAW,QAEbuZ,SAAU,CACRv9B,QAAS,EACTw2C,2BAA4B,CAC1Bx2C,QAAS,KAdeiD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,OAiBtB,CACJhU,UAAWL,EAAMI,QAAQ,KAlBCgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QAoBrB,CACLnU,MAAO,SArBmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,SAwBpB,CACN0I,OAAQ/c,EAAMI,QAAQ,KAzBIgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,QA2BrB,CACLlU,QAASH,EAAMI,QAAQ,GACvBF,MAAO,SA7BmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA+BjB,CACTlU,QAASH,EAAMI,QAAQ,GACvBC,UAAWL,EAAMI,QAAQ,GACzBF,MAAO,SAlCmBkD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,WAoClB,CACRmF,YAAaxZ,EAAMI,QAAQ,KArCDgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YAuCjB,CACT9T,WAAYP,EAAMI,QAAQ,KAxCAgD,OAAAM,EAAA,EAAAN,CAAAiR,EAAA,YA0CjB,CACT7R,SAAU,KA3CgB6R,IA+Cf,SAASwkG,GAASh2G,GAC/B,IAAMU,EAAUgkB,KAChBrQ,EAAwBJ,IAAMK,SAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOoT,EAAPlT,EAAA,GAAamT,EAAbnT,EAAA,GAEA2I,EAAsCjJ,IAAMK,SAAS,GAArD6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOyK,EAAPxK,EAAA,GAAoByK,EAApBzK,EAAA,GACAqc,EAAsCvlB,IAAMwB,WAAWka,IAA/CxF,EAARqP,EAAQrP,WAAYuF,EAApB8J,EAAoB9J,cACpBrS,EAA8BpJ,IAAMK,SAAS,CAC3C2gB,QAAQ,EACR7oB,GAAI,KAFNkR,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO8X,EAAP7X,EAAA,GAAgB8X,EAAhB9X,EAAA,GAOA,IAAQ/L,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBAERgM,EAA0BtJ,IAAMK,SAAS,CACvC00F,UAAU,EACVC,UAAU,IAFZzrF,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAMA,IAAMs5F,EAAqB,SAACh0G,GAAD,OAAU,SAAC6S,GACpC+Z,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmBuC,EAAO6S,EAAMiG,OAAOyD,aA4CtD,IAAM4rF,EACJtjF,EACA8wC,KAAKyyC,IACHvjF,EACA3nB,EAAMyrB,UAAYzrB,EAAMyrB,SAAS/Y,OAAS+U,EAAOE,GAMrD,IAAM29B,EAAoB,SAAChsC,GAAD,OAAU,SAACqC,GACnC+T,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,GAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAgDlD,OACEjL,EAAAC,EAAAC,cAACia,GAAA,EAAD,CAAOnb,UAAWQ,EAAQxB,MACxBgC,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQ2gB,cACtBngB,EAAAC,EAAAC,cAACyiB,GAAA,EAAD,CACE3jB,UAAWQ,EAAQ0gB,MACnBpgB,OAAQ,EACR8iB,YAAa,OACbjN,KAAK,QACLkN,cAAY,GAEZ7iB,EAAAC,EAAAC,cAAC4iB,GAAA,EAAD,KACE9iB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACGtiB,EAAMunB,QAAQtb,IAAI,SAAC+6C,GAAD,OACjB9lD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACErM,IAAK6wC,EAAO56C,GACZ+b,MAAO6+B,EAAO7+B,MACd9nB,MAAO,CAAET,SAAUonD,EAAOpnD,WAET,gBAAhBonD,EAAOlkD,KAAyB,eAAiBkkD,EAAOlkD,UAMjE5B,EAAAC,EAAAC,cAAC6iB,GAAA,EAAD,KACGjkB,EAAMyrB,UACLzrB,EAAMyrB,SACHnD,MAAMb,EAAOE,EAAaF,EAAOE,EAAcA,GAC/C1b,IAAI,SAACsc,GAAD,OACHrnB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUnM,IAAKoS,EAAInc,IAChBpM,EAAM22G,cAAch8E,QAAQ,QAAU,EACrCz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW7f,UAAU,KAAKu1B,MAAM,OAC7B3P,EAAIyqB,cAEL,KACHhzC,EAAM22G,cAAch8E,QAAQ,iBAAmB,EAC9Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChB66B,MAAM,OAEL3P,EAAIwuF,YAEL,KACH/2G,EAAM22G,cAAch8E,QAAQ,iBAAmB,EAC9Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL3P,EAAI7Z,QAEL,KACH1O,EAAM22G,cAAch8E,QAAQ,gBAAkB,EAC7Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL3P,EAAIyuF,WAEL,KAIHh3G,EAAM22G,cAAch8E,QAAQ,SAAW,EACtCz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL3P,EAAI0uF,SAEL,KACHj3G,EAAM22G,cAAch8E,QAAQ,qBAAuB,EAClDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACP7Z,MAAO,CAAEhD,MAAO,IAChB8O,MAAOge,EAAW+C,aAClB9gB,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,mBAEN0X,SAAU+qC,EAAkB,kBAK9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI2uF,oBAEN,KAEH,KAEHl3G,EAAM22G,cAAch8E,QAAQ,aAAe,EAC1Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAEL/C,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACoa,GAAA,EAAD,CACEtb,UAAWQ,EAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACP7Z,MAAO,CAAEhD,MAAO,IAChB8O,MAAOge,EAAW0uC,SAClBzsD,GAAG,cACH+E,MACEgZ,GACAA,EAAWoF,eACXpF,EAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,WAEN0X,SAAU+qC,EAAkB,cAK9BpkD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYnB,UAAWQ,EAAQ0mD,SAC5B7+B,EAAI4uF,cAEN,KAEH,KACHn3G,EAAM22G,cAAch8E,QAAQ,kBAAoB,EAC/Cz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAENh3B,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QACE8V,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC7oB,EAAWgD,gBACX5E,EAAI6uF,cAGVjrG,MAAM,WAENoO,SACE4a,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC8jE,EAAmB,mBACnB,KAENxwF,WAAY,CAAE5jB,aAAc,yBAG9B,KACH1C,EAAM22G,cAAch8E,QAAQ,YAAc,EACzCz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CACE2F,MAAM,SACN9nB,MAAO,CAAEhD,MAAO,IAChBsF,UAAU,KACVu1B,MAAM,OAENh3B,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QACE8V,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC7oB,EAAWiD,cACX7E,EAAIktF,UAEVtpG,MAAM,WACNoO,SACE4a,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC8jE,EAAmB,iBACnB,KAENxwF,WAAY,CAAE5jB,aAAc,yBAG9B,KACH1C,EAAM22G,cAAch8E,QAAQ,WAAa,EACxCz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CAEEC,QACE8V,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC7oB,EAAWkD,aACX9E,EAAIxD,SAEVxK,SACE4a,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC8jE,EAAmB,gBACnB,KAEN3qG,MAAM,WACNma,WAAY,CAAE5jB,aAAc,yBAG9B,KACH1C,EAAM22G,cAAch8E,QAAQ,sBAAwB,EACnDz5B,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS8K,EAAWqF,iBACpBjV,SACE4a,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aAChC8jE,EAAmB,oBACnB,KAEN3qG,MAAM,WACNma,WAAY,CAAE5jB,aAAc,yBAG9B,KAEHyyB,EAAQF,QAAUE,EAAQ/oB,IAAMmc,EAAIyqB,aACnC9xC,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAWniB,MAAO,CAAEhD,MAAO,IAAM8qB,MAAM,UACrCjnB,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAlQvC,SAAqBvP,GACnB,IAAI6qB,EAAW,GAECj3B,EAAMyrB,SACQxf,IAAI,SAACoqG,EAAanyF,GAC9C,OAAI9X,IAAOiqG,EAAYrjE,cACrBqjE,EAAYa,mBAAqB/sF,EAAW+C,aAC5CmpF,EAAYZ,UAAYtrF,EAAWiD,cACnCipF,EAAYtxF,SAAWoF,EAAWkD,aAClCgpF,EAAYe,cAAgBjtF,EAAWgD,gBACvCkpF,EAAYc,aAAehtF,EAAW0uC,SACtC5hC,EAAQ,mBAAyB9M,EAAW+C,aAC5C+J,EAAQ,UAAgB9M,EAAWiD,cACnC6J,EAAQ,SAAe9M,EAAWkD,aAClC4J,EAAQ,SAAe9M,EAAW0uC,SAClC5hC,EAAQ,cAAoB9M,EAAWgD,gBACvC8J,EAAQ,aAAmB7qB,EAC3B6qB,EAAQ,iBAAuB9M,EAAWqF,iBAEnC6mF,GAEFA,IAET9kG,EAAmB,iBAAkB,GAAI0lB,GAEzC7B,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,KAyOGi8E,CAAY3oF,EAAIyqB,gBACtC9xC,EAAAC,EAAAC,cAAC42B,GAAA72B,EAAD,OAEFD,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GA3VtCyZ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAI,GAAI6oB,QAAQ,OA4VnB/zB,EAAAC,EAAAC,cAAC62B,GAAA92B,EAAD,QAIJD,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW2F,MAAM,SAAS9nB,MAAO,CAAEhD,MAAO,KACxC6D,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CAAQQ,QAAS,SAAC0E,GAAD,OAxRlB+rC,EAwRqCn/B,EAvRxD3V,QAAQyR,IAAIqjC,GAEZh4B,EAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,GADQ,IAEX+C,aAAcw6B,EAAYwvD,mBAC1Br+C,SAAUnR,EAAYyvD,aACtBhqF,gBAAiBu6B,EAAY0vD,cAC7BhqF,cAAes6B,EAAY+tD,UAC3BpoF,aAAcq6B,EAAY3iC,iBAE5BqQ,EAAW70B,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK40B,GAAN,IAAe/oB,GAAIs7C,EAAY1U,aAAc/d,QAAQ,KAXjE,IAAqByyB,IAyRGxmD,EAAAC,EAAAC,cAAC8hB,GAAA/hB,EAAD,WAMA,GAAb8pG,GACC/pG,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,CAAUjiB,MAAO,CAAEzC,OAAQ,EAAIqtG,IAC7B/pG,EAAAC,EAAAC,cAACohB,GAAA,EAAD,CAAW6vB,QAAS,MAI1BnxC,EAAAC,EAAAC,cAAC2nB,GAAA,EAAD,KACE7nB,EAAAC,EAAAC,cAACkhB,GAAA,EAAD,KACEphB,EAAAC,EAAAC,cAAC4nB,GAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,MAAOlpB,EAAMyrB,UAAYzrB,EAAMyrB,SAAS/Y,OACxCiV,YAAaA,EACbF,KAAMA,EACNgR,YAAa,CACXnS,WAAY,CAAE5jB,aAAc,iBAC5Bg2B,QAAQ,GAEVvP,aA3Td,SAA0BxT,EAAOyT,GAC/B1B,EAAQ0B,IA2TIC,oBArTd,SAAiC1T,GAC/BiS,EAAe+Q,SAAShjB,EAAMiG,OAAOzP,MAAO,KAC5Cub,EAAQ,IAoTIyqF,iBAAkB5B,UCxhBlC,SAAS7vF,GAAM1gB,GACb,OAAOkB,EAAAC,EAAAC,cAACuf,GAAA,EAADpgB,OAAAe,OAAA,CAAUga,UAAW,EAAGnb,QAAQ,UAAaH,IAGtD,IAAMgpD,GAAW9rD,YAAW,SAACC,GAAD,MAAY,CACtCqqD,YAAa,CACXwgB,4BAA6B,CAC3BtpE,MAAO,YAGX0oD,QAAS,CACPznD,SAAUxC,EAAM6E,WAAWq1G,QAAQ,KAErCC,iBAAkB,CAChB33G,SAAUxC,EAAM6E,WAAWq1G,QAAQ,IACnC34G,MAAOvB,EAAMwB,QAAQ4yB,KAAKvyB,WAE5B+D,KAAM,CACJw0G,cAAe,SACf35G,OAAQ,GACRP,MAAO,IAETm6G,QAAS,CACPp4G,WAAY,UAEd4nD,OAAQ,CACNrnC,UAAW,UAEb83F,OAAQ,CACNC,WAAU,aAAAz2G,OAAe9D,EAAMwB,QAAQq6B,SACvC17B,QAASH,EAAMI,QAAQ,EAAG,IAE5BgkB,KAAM,CACJ7iB,MAAOvB,EAAMwB,QAAQ8zB,QAAQ3zB,KAC7BoY,eAAgB,OAChBoa,UAAW,CACTpa,eAAgB,iBAKf,SAASsxB,GAAUxoC,GAAO,IAAA23G,EAAAC,EAAAC,EAC/BxjG,EAAwBJ,IAAMK,UAAS,GAAvCC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAOmE,EAAPjE,EAAA,GAAa0I,EAAb1I,EAAA,GACA2I,EAA4BjJ,IAAMK,UAAS,GAA3C6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GACAG,GADAF,EAAA,GAAAA,EAAA,GAC4ClJ,IAAMK,SAChDi7F,GAAYuI,kBADdx6F,EAAA/c,OAAAiU,EAAA,EAAAjU,CAAA8c,EAAA,GAAO06F,EAAPz6F,EAAA,GAAuB06F,EAAvB16F,EAAA,GAGAC,EAA0CtJ,IAAMK,SAC9Ci7F,GAAY0I,qBADdz6F,EAAAjd,OAAAiU,EAAA,EAAAjU,CAAAgd,EAAA,GAAOo5F,EAAPn5F,EAAA,GAAsB06F,EAAtB16F,EAAA,GAGAG,EAA4C1J,IAAMK,SAChDi7F,GAAY4I,SADdv6F,EAAArd,OAAAiU,EAAA,EAAAjU,CAAAod,EAAA,GAAOy6F,EAAPx6F,EAAA,GAAuBy6F,EAAvBz6F,EAAA,GAGA4V,EAAwDvf,IAAMK,SAC5Di7F,GAAY+I,gBADd7kF,EAAAlzB,OAAAiU,EAAA,EAAAjU,CAAAizB,EAAA,GAAO+kF,EAAP9kF,EAAA,GAA6B+kF,EAA7B/kF,EAAA,GAGAC,EAAkDzf,IAAMK,SACtDi7F,GAAYkJ,qBADd9kF,EAAApzB,OAAAiU,EAAA,EAAAjU,CAAAmzB,EAAA,GAAOglF,EAAP/kF,EAAA,GAA0BglF,EAA1BhlF,EAAA,GAGAE,EAAoD5f,IAAMK,UAAS,GAAnEwf,EAAAvzB,OAAAiU,EAAA,EAAAjU,CAAAszB,EAAA,GAAO+kF,EAAP9kF,EAAA,GAA2B+kF,EAA3B/kF,EAAA,GACAE,EAAmD/f,IAAMK,SAAS,IAAlE2f,EAAA1zB,OAAAiU,EAAA,EAAAjU,CAAAyzB,EAAA,GAAO8kF,EAAP7kF,EAAA,GAA2B8kF,EAA3B9kF,EAAA,GAEAC,EAAgCjgB,IAAMK,UAAS,GAA/C6f,EAAA5zB,OAAAiU,EAAA,EAAAjU,CAAA2zB,EAAA,GAAO8kF,EAAP7kF,EAAA,GAAiB8kF,EAAjB9kF,EAAA,GAEQ5iB,EAAuB0C,IAAMwB,WAAWzB,IAAxCzC,mBACR+iB,EAAwCrgB,IAAMK,SAAS,CACrDuU,QAAS,GACTxM,SAAU,KAFZkY,EAAAh0B,OAAAiU,EAAA,EAAAjU,CAAA+zB,EAAA,GAAOihD,EAAPhhD,EAAA,GAAqBu8E,EAArBv8E,EAAA,GAIMo3C,GAAc,WAClB1uD,GAAQ,IAQJiB,GAAc,SAACvI,EAAOkL,GACX,cAAXA,GAGJ5D,GAAQ,IAGVi8F,GAAsCzjG,qBAAWka,IAAzCxF,GAAR+uF,GAAQ/uF,WAAYuF,GAApBwpF,GAAoBxpF,cAEpB9c,QAAQyR,IAAI8F,IACZ,IAAAxV,GAA0BL,mBAAS,CACjC6kG,gBAAgB,EAChBC,sBAAuB,KAFzBxkG,GAAArU,OAAAiU,EAAA,EAAAjU,CAAAoU,GAAA,GAAO6+C,GAAP5+C,GAAA,GAAcykG,GAAdzkG,GAAA,GAKImoB,GAAU/8B,EAAMogB,SAASC,SAAS2c,MAAM,KAAK,GAE3Ct8B,GAAUsoD,KAUhB,IAAMzuB,GAAqB,SAACjhB,GAAD,OAAU,SAAC3D,EAAOxJ,GAC3CujB,GAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,IAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOnN,OAGnCm5C,GAAoB,SAAChsC,GAAD,OAAU,SAACqC,GAGnC+T,GAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,IAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmB+Y,EAAOqC,EAAEC,OAAOzP,WAMlD,SAASyjG,GAAeL,EAAaE,GACnC,IAAIkH,EAAgB,GAChB+B,EAAoB,GAExBnJ,EAAY90E,QAAQ,SAACC,GACnBg+E,EAAkBniG,KAAKmkB,EAAQ53B,MAC/B6zG,EAAcpgG,KAAKmkB,KAEF,IAAf+0E,GACFyI,EAAiBQ,GACjBV,EAAkBzI,KAElB8I,EAAkB9I,GAClBiJ,EAAwB7B,GACxBgC,EAAqBD,IAIzB,IAAI36F,GAASC,eA/FkB,SAAAs7F,KAAA,OAAAA,GAAA/4G,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAoI/B,SAAAsV,IAAA,IAAAsyF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAjuG,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAA4U,GAAA,cAAAA,EAAA1U,KAAA0U,EAAAzU,MAAA,cACEG,QAAQyR,IAAI8F,GAAW9d,cACnBytG,EAAkB,CACpBh1F,UAAWiY,GACXrxB,gBAAiBye,GAAWC,gBAC5BtD,YAAaqD,GAAWG,YACxBnd,OAAQgd,GAAWhd,OACnBG,OAAQ6c,GAAWuE,YACnBC,WAAYxE,GAAWwE,WACvB/gB,YAAauc,GAAWvc,YACxBQ,WAAY+b,GAAW/b,WACvBwgB,YAAazE,GAAWyE,YACxBjiB,OAAQwd,GAAWY,eACnBhb,SAAUoa,GAAWpa,SACrBwa,YAAaJ,GAAWI,YACxBC,YAAaL,GAAWK,YACxBC,YAAaN,GAAWM,YACxB/X,OAAQyX,GAAWzX,OACnB9U,OAAQusB,GAAWvsB,OAEnB6f,YAAW,QAAA87F,EAAA,OAAEpvF,SAAF,IAAEA,QAAF,UAAAqvF,EAAErvF,GAAY9d,oBAAd,IAAAmtG,OAAA,EAAEA,EAA0B32G,aAA5B,IAAA02G,IAAqC,KAChD3tF,kBAAiB,QAAA6tF,EAAA,OAAEtvF,SAAF,IAAEA,QAAF,EAAEA,GAAYyB,yBAAd,IAAA6tF,IAAmC,KACpDvyD,WAAU,QAAAwyD,EAAA,OAAEvvF,SAAF,IAAEA,QAAF,UAAAwvF,EAAExvF,GAAYtd,kBAAd,IAAA8sG,OAAA,EAAEA,EAAwB72G,YAA1B,IAAA42G,IAAkC,KAC5CK,cAAa,QAAAH,EAAA,OAAEzvF,SAAF,IAAEA,QAAF,UAAA0vF,EAAE1vF,GAAY1a,sBAAd,IAAAoqG,OAAA,EAAEA,EAA4Bh3G,aAA9B,IAAA+2G,IAAuC,MAvBxD1yF,EAAAzU,KAAA,EA0BuBlB,EACnB,eACA,GACAuoG,GA7BJ,OA0BMjuG,EA1BNqb,EAAA3T,KA+BE4M,OAAOC,SAASwF,SAChBhT,QAAQyR,IAAI,gBACZzR,QAAQyR,IAAIhR,KAAKC,UAAUwmG,IACvBjuG,GACFilG,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,6BACTxM,SAAU,aAGZsvD,KACA/4D,QAAQyR,IAAIhR,KAAKC,UAAUwmG,MAE3BhJ,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,2BACTxM,SAAU,UAEZsvD,MAjDJ,wBAAAzkD,EAAAxT,SAAAuT,OApI+BnT,MAAAC,KAAA1B,WAyL/B,IAA8BvP,GAzLC,SAAAk3G,KAAA,OAAAA,GAAAz5G,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAkO/B,SAAA6T,EAAgCy0F,GAAhC,IAAApuG,EAAAquG,EAAAC,EAAAC,EAAA,OAAA1oG,GAAAvQ,EAAAmR,KAAA,SAAAoT,GAAA,cAAAA,EAAAlT,KAAAkT,EAAAjT,MAAA,cAAAiT,EAAAjT,KAAA,EACuBlB,EACnB,wBAA0B0oG,EAC1B,GACA,MAJJ,OACMpuG,EADN6Z,EAAAnS,KAMM2mG,EAAgB,GAChBC,EAAWtuG,EAASquG,cAAcC,SAErBtuG,EAASquG,cAAcjqG,OAC7BwqB,QAAQ,SAACC,GAClB,IAAI0/E,EAAM,CACRz3G,UAAW+3B,EAAQ2/E,cACnBzuE,WAAYlR,EAAQkR,WACpBC,cAAenR,EAAQmR,cACvB+sB,aAAcl+B,EAAQ0qB,OACtBuT,eAAgBj+B,EAAQi+B,gBAE1BuhD,EAAc3jG,KAAK6jG,KAGFvuG,EAASquG,cAAc9pG,UAC7BqqB,QAAQ,SAACC,GACpB,IAAI0/E,EAAM,CACRz3G,UAAW+3B,EAAQ2/E,cACnBzuE,WAAYlR,EAAQkR,WACpBC,cAAenR,EAAQmR,cACvB+sB,aAAcl+B,EAAQ0qB,OACtBuT,eAAgBj+B,EAAQi+B,gBAE1BuhD,EAAc3jG,KAAK6jG,KAEjBA,EAAM,CACRz3G,UAAW,YACXipC,WAAYuuE,EAASvuE,WACrBC,cAAesuE,EAAStuE,cACxB+sB,aAAcuhD,EAASvhD,aACvBD,eAAgBwhD,EAASxhD,gBAE3BuhD,EAAc3jG,KAAK6jG,GAEnBrB,EAAqBmB,GACrBrB,GAAsB,GA1CxB,yBAAAnzF,EAAAhS,SAAA8R,OAlO+B1R,MAAAC,KAAA1B,WA4d/B,OA9LA8L,oBAAU,WACRJ,GACGpS,MAAM,CAAEA,MAAOrD,GAAaqd,UAAW,CAAEb,UAAWiY,MACpD1e,KAAK,SAACC,GAAQ,IAAAg8F,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACbjC,GAAY,GAEZ,IAAMpyF,EAA2BvI,EAAIrN,KAA/B4V,uBACFs0F,EAAUt0F,EAAuBla,OACjCyuG,EAAev0F,EAAuBpJ,YACtC49F,EAAkBx0F,EAAuBy0F,eACzCC,EAAW10F,EAAuB20F,YAClCC,EAAc50F,EAAuBqgC,WAgBrCw0D,EAAY,GACZH,GACUA,EAASv+E,MAAM,KACrBvC,QAAQ,SAACC,GACbghF,EAAUnlG,KAAKmkB,KAGnB,IAAIihF,EAAa,GACbR,IACFA,EAAUA,EAAQn+E,MAAM,MAChBvC,QAAQ,SAACC,GACf,IAAIkhF,EAAa,CACf/4G,MAAO63B,GAETihF,EAAWplG,KAAKqlG,KAGpB,IAAIvvG,EAAe,KACE,OAAjB+uG,QAA0CzoG,IAAjByoG,IAC3BA,EAAeA,EAAap+E,MAAM,MACrBvC,QAAQ,SAACC,GACpBruB,EAAe,CACbxJ,MAAO63B,KAKb,IAAImhF,EAAkB,KACE,OAApBR,QAAgD1oG,IAApB0oG,IAC9BQ,EAAkB,CAChBh5G,MAAOw4G,IAIX,IAAIn3C,EAAc,KACE,OAAhBu3C,QAAwC9oG,IAAhB8oG,IAC1BA,EAAcA,EAAYz+E,MAAM,MACpBvC,QAAQ,SAACC,GACnBwpC,EAAc,CACZphE,KAAM43B,KAIZ,IAAIohF,EAAgB,GACHj1F,EAAuBE,yBAAyB/a,MACtDyuB,QAAQ,SAACC,GACdA,EAAQ+6E,YACVqG,EAAgBphF,EAAQnsB,gBAG5B,IAAIwtG,EAAc,GAClBj3E,MAAMC,UAAUC,OAAS,SAAU9gB,EAAOxJ,GACxC3G,KAAKkxB,OAAO/gB,EAAO,EAAGxJ,IAGxB,IAAIshG,EAAkB,QAAA1B,EAAA,OACpBzzF,QADoB,IACpBA,OADoB,UAAA0zF,EACpB1zF,EAAwBkoF,sCADJ,IAAAwL,OAAA,EACpBA,EAAwDvuG,aADpC,IAAAsuG,IAC6C,KAC/DvD,EAAaiF,OAMOrpG,WALpBokG,EAAaiF,EAAmBz9F,OAAO,SAAUkqC,GACnD,OAA0B,MAAnBA,EAAGl6C,iBAKK,OAAfwoG,QACepkG,IAAfokG,IAGAA,EAAa,IAIblwF,EAAuBkoF,+BAA+B/iG,MAC7CyuB,QAAQ,SAACozE,GACdA,EAASt/F,eAAiButG,GAC5BjO,EAAQ,WAAgB,EACxBkO,EAAY/2E,OAAO,EAAG6oE,KAEtBA,EAAQ,WAAgB,EACxBkO,EAAYxlG,KAAKs3F,MAIrBn+E,GAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACT4pB,IADQ,IAEXG,YAAazD,EAAuBC,YACpCwE,SAAUzE,EAAuByE,SACjCjf,aAAcA,EACd+d,gBAAiBvD,EAAuBnb,gBACxC6f,aACE1E,EAAuBo1F,6BAA6BjwG,MACtDwf,YAAa3E,EAAuBq1F,4BAA4BlwG,MAChEyf,SAAU5E,EAAuBs1F,yBAAyBnwG,MAC1DigB,cAAepF,EAAuBE,yBAAyB/a,MAC/D4f,kBAAmBmrF,EAEnBlrF,mBACEhF,EAAuBmoF,2BAA2BhjG,MACpD2f,sBACE9E,EAAuBmoF,2BAA2BhjG,MACpD0gB,aAAcgvF,EACdtvF,iBACEvF,EAAuBu1F,6BAA6BpwG,MACtDa,WAAYq3D,EACZn5C,eAAgB4wF,EAChBxuG,OAAQ0Z,EAAuBw1F,yBAAyBrwG,MACxD0iB,YAAa7H,EAAuBy1F,yBAAyBtwG,MAC7D2iB,WAAY9H,EAAuB01F,6BAA6BvwG,MAChE4B,YACEiZ,EAAuB21F,8BAA8BxwG,MACvDoC,WACEyY,EAAuB41F,8BAA8BzwG,MACvD4iB,YACE/H,EAAuB61F,8BAA8B1wG,MACvDue,YAAW,OACT1D,QADS,IACTA,OADS,UAAA2zF,EACT3zF,EAAwBs1F,gCADf,IAAA3B,OAAA,UAAAC,EACTD,EAAkDxuG,MAAM,UAD/C,IAAAyuG,OAAA,UAAAC,EACTD,EACIkC,mCAFK,IAAAjC,OAAA,UAAAC,EACTD,EACiC1uG,MAAM,UAF9B,IAAA2uG,OAAA,EACTA,EAC2CiC,eAC7CpyF,YAAW,OACT3D,QADS,IACTA,OADS,UAAA+zF,EACT/zF,EAAwBs1F,gCADf,IAAAvB,OAAA,UAAAC,EACTD,EAAkD5uG,MAAM,UAD/C,IAAA6uG,OAAA,EACTA,EACIrwF,YACNC,YAAW,OACT5D,QADS,IACTA,OADS,UAAAi0F,EACTj0F,EAAwBs1F,gCADf,IAAArB,OAAA,UAAAC,EACTD,EAAkD9uG,MAAM,UAD/C,IAAA+uG,OAAA,EACTA,EACItwF,YACN7sB,OAAM,OAAEipB,QAAF,IAAEA,OAAF,EAAEA,EAAwBjpB,OAChC8U,OAAM,OAAEmU,QAAF,IAAEA,OAAF,EAAEA,EAAwBnU,OAChCjD,eAAgBosG,EAChB9rG,SAAQ,OAAE8W,QAAF,IAAEA,OAAF,UAAAm0F,EAAEn0F,EAAwBg2F,kCAA1B,IAAA7B,OAAA,EAAEA,EAAoDhvG,MAC9DwjB,iBAAgB,OACd3I,QADc,IACdA,OADc,UAAAo0F,EACdp0F,EAAwBs1F,gCADV,IAAAlB,OAAA,UAAAC,EACdD,EAAkDjvG,MAAM,UAD1C,IAAAkvG,OAAA,EACdA,EACI1rF,oBAKR6pF,GAAS94G,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACJizD,IADG,IAEN4lD,sBAAuB/lG,KAAKsP,MAC1BtP,KAAKC,UAAUuT,EAAuBC,mBAI3CrI,MAAM7L,QAAQzB,QAChB,IAqBIqiD,GAAM2lD,eACXj4G,EAAAC,EAAAC,cAAC07G,GAAD,CACElxF,kBAAmBzB,GAAWyB,kBAC9BC,mBAAoB1B,GAAW0B,mBAC/BkxF,cAnaJ,WACE1D,GAAS94G,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKizD,IAAN,IAAa2lD,gBAAgB,MAmanCr0F,UAAWiY,KAGb77B,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,GACb5Y,EAAAC,EAAAC,cAAC+hE,GAAD,CAAY32D,MAAM,0BAA0Bu/C,OAAQitD,IACpD93G,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,KACEtV,EAAAC,EAAAC,cAAC0f,GAAA,EAAD,CAAUtI,KAAMA,EAAMwI,iBAAkB,IAAMvI,QAASyF,IACrDhd,EAAAC,EAAAC,cAAC47G,GAAD,CAAOvkG,QAASyF,GAAa7B,SAAUk5D,EAAal5D,UACjDk5D,EAAa1sD,WAIpB3nB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,EAACZ,WAAS,EAACvc,QAAS,GAC5B2D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJX,GAAI,GACJmM,GAAI,GACJmyC,GAAI,EACJv4B,GAAI,EACJviC,QAAS,EACT8C,MAAO,CAAE/C,QAAS,OAAQiB,gBAAiB,YAE3C2C,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EACTwtB,QAAQ,YACRx7B,MAAOge,GAAWG,YAClBle,GAAG,cACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAcjF,YAE3BxnB,KAAK,cACLD,MAAM,eAEN0X,SAAU+qC,GAAkB,iBAsB9BpkD,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,GAAQ8mD,YACnBr7C,MAAOge,GAAWC,gBAElB7P,SAAUggB,GAAmB,mBAC7BtgB,QAASkQ,GAAWsF,WAAW3jB,SAASG,IAAI,SAACuS,GAAD,OAAOA,EAAE1b,OACrDk4B,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,mBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EAEThO,MAAOge,GAAWI,YAClBne,GAAG,cACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAchF,YAE3BznB,KAAK,cACLD,MAAM,cAEN0X,SAAU+qC,GAAkB,iBAI9BpkD,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAW9d,aAClBgO,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC0X,SAAUggB,GAAmB,gBAC7BtgB,QAASkQ,GAAWsF,WAAWpjB,aAC/B2uB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEtD,UAAQ,EACRtK,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWtd,WAClBwN,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC2wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OAAmBmO,EAAOxX,OAASqJ,EAAMrJ,MAC5DyX,SAAUggB,GAAmB,cAC7BtgB,QAAO,OAAEkQ,SAAF,IAAEA,QAAF,UAAAwtF,EAAExtF,GAAYsF,kBAAd,IAAAkoF,OAAA,EAAEA,EAAwB9qG,WACjCmuB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIX,cAA1B,OAAV6Q,SAAU,IAAVA,QAAA,UAAAytF,EAAAztF,GAAY9d,oBAAZ,IAAAurG,OAAA,EAAAA,EAA0B/0G,QACS,cAA1B,OAAVsnB,SAAU,IAAVA,QAAA,UAAA0tF,EAAA1tF,GAAY9d,oBAAZ,IAAAwrG,OAAA,EAAAA,EAA0Bh1G,OACxB3B,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACE5N,GAAG,oBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAW1a,eAClB4K,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC0X,SAAUggB,GAAmB,kBAC7BtgB,QAASkQ,GAAWsF,WAAWhgB,eAC/BurB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,kBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAKhD,GA+BFpY,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EAEThO,MAAOge,GAAWvsB,OAClBwO,GAAG,SACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAc3xB,OAE3BkF,KAAK,SACLD,MAAM,UAEN0X,SAAU+qC,GAAkB,YAI9BpkD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EAEThO,MAAOge,GAAWzX,OAClBtG,GAAG,SACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAc7c,OAE3B5P,KAAK,SACLD,MAAM,QAEN0X,SAAU+qC,GAAkB,YAG3B,IACHpkD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EAEThO,MAAOge,GAAWK,YAClBpe,GAAG,cACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAc/E,YAE3B1nB,KAAK,cACLD,MAAM,yBAEN0X,SAAU+qC,GAAkB,iBAG3B,IACHpkD,EAAAC,EAAAC,cAACqZ,GAAA,EAAD,CACEva,UAAWQ,GAAQ8mD,YACnBrnD,QAAQ,WACR+Z,OAAO,QACPC,WAAS,EAEThO,MAAOge,GAAWM,YAClBre,GAAG,cACH+E,MACEgZ,IACAA,GAAWoF,eACXpF,GAAWoF,cAAc9E,YAE3B3nB,KAAK,cACLD,MAAM,yBAEN0X,SAAU+qC,GAAkB,iBAI9BpkD,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHsK,UAAQ,EACRuD,QAAS,GACT/Z,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWiC,iBAClB4O,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO2iG,cACVhiF,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,oBACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACLuR,EAAO6hC,YADF,IAER+R,UAAU,EACVpsC,KAAM,iBAKdpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHiO,eAAgB,SAACC,GAAD,OAAYA,EAAO/L,cACnCklC,kBAAmB,SAACn5B,EAAQnO,GAAT,OACjBmO,EAAO/L,eAAiBpC,EAAMoC,cAEhCgM,SAAUggB,GAAmB,qBAC7BtgB,QAASkQ,GAAWsF,WAAWphB,YAC/BnO,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWyB,kBAClBoP,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO/L,cACV0sB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHsK,UAAQ,EACRuD,QAAS,GACT/Z,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAW0B,mBAClBmP,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO5L,QACVusB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWY,eAClB1Q,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC4wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OAAmBmO,EAAOzX,QAAUsJ,EAAMtJ,OAC7D0X,SAAUggB,GAAmB,kBAC7BtgB,QAASkQ,GAAWsF,WAAW9iB,OAC/BquB,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOzX,OACVo4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC4wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OACjBmO,EAAOzX,QAAUsJ,EAAMkB,WAEzBmuC,aAAcrxB,GAAWhd,OACzB8M,QAASkQ,GAAWsF,WAAWtiB,OAC/BhB,MAAOge,GAAWhd,OAClBoN,SAAUggB,GAAmB,UAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOjN,WACV4tB,EAAY,CAAE/W,eAIxB7jB,MAAO,CAAElB,QAAS,QAClBqb,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnBxgB,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC4wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OACjBmO,EAAOzX,QAAUsJ,EAAMqB,WAEzBguC,aAAcrxB,GAAWuE,YACzBzU,QAASkQ,GAAWsF,WAAWniB,OAC/BiN,SAAUggB,GAAmB,eAC7BpuB,MAAOge,GAAWuE,YAClBsM,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO9M,WACVytB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,SACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWwE,WAClBtU,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC4wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OACjBmO,EAAOzX,QAAUsJ,EAAMwB,eAEzB6tC,aAAcrxB,GAAWwE,WACzB1U,QAASkQ,GAAWsF,WAAWhiB,UAC/B8M,SAAUggB,GAAmB,cAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAO3M,eACVstB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWvc,YAClByM,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC4wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OACjBmO,EAAOzX,QAAUsJ,EAAM2B,gBAEzB0tC,aAAcrxB,GAAWvc,YACzBqM,QAASkQ,GAAWsF,WAAW7hB,YAC/B2M,SAAUggB,GAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxM,gBACVmtB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,cACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,WACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWpa,SAClBsK,eAAgB,SAACC,GAAD,OAAYA,EAAOxX,MACnC2wC,kBAAmB,SAACn5B,EAAQnO,GAAT,OAAmBmO,EAAOxX,OAASqJ,EAAMrJ,MAC5DmX,QAASkQ,GAAWsF,WAAW1f,SAC/BwK,SAAUggB,GAAmB,YAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOxX,MACVm4B,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,YACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAW/b,WAClBiM,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC24C,aAAcrxB,GAAW/b,WACzB6L,QAASkQ,GAAWsF,WAAWvhB,OAC/BqM,SAAUggB,GAAmB,cAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOlM,YACV6sB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC4Y,GAAA,EAAD,CACEkhB,UAAQ,EACR9uB,GAAG,mBACHlM,UAAWQ,GAAQm6B,SACnB1uB,MAAOge,GAAWyE,YAClBvU,eAAgB,SAACC,GAAD,OAAYA,EAAOzX,OACnC24C,aAAcrxB,GAAWyE,YACzB3U,QAASkQ,GAAWsF,WAAW1hB,cAC/BwM,SAAUggB,GAAmB,eAC7BS,WAAY,SAAC7uB,EAAO8uB,GAAR,OACV9uB,EAAMF,IAAI,SAACqO,EAAQ4J,GAAT,OACRhjB,EAAAC,EAAAC,cAACmB,EAAA,EAADhC,OAAAe,OAAA,CACEnB,QAAQ,WACR0W,KAAK,QACLhU,MAAOyX,EAAOrM,YACVgtB,EAAY,CAAE/W,eAIxB1J,YAAa,SAAC1I,GAAD,OACX5Q,EAAAC,EAAAC,cAACqZ,GAAA,EAADla,OAAAe,OAAA,GACMwQ,EADN,CAEEjP,MAAM,eACNqX,OAAO,QACP/Z,QAAQ,WACRga,WAAS,EACTw5B,WAAUpzC,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAOuR,EAAO6hC,YAAd,IAA0Br6B,KAAM,iBAIhDpY,EAAAC,EAAAC,cAAC8d,GAAA,EAAD,CACErc,MACEsnB,GAAWmB,SACP,uBACA,sBAENnM,QACEje,EAAAC,EAAAC,cAACge,GAAA,EAAD,CACEC,QAAS8K,GAAWmB,SACpB/Q,UA97BgBzX,GA87Be,WA97BhB,eAAA0O,EAAAjR,OAAAkR,GAAA,EAAAlR,CAAAmR,GAAAvQ,EAAAwQ,KAAU,SAAAC,EAAO+D,GAAP,IAAAmsC,EAAAo7D,EAAAC,EAAAtxG,EAAA,OAAA6F,GAAAvQ,EAAAmR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrCid,GAAcnvB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAK4pB,IAAN,GAAA5pB,OAAAM,EAAA,EAAAN,CAAA,GAAmBuC,GAAO6S,EAAMiG,OAAOyD,WAChDyiC,EAAc,CAChB4hB,UAAW3mC,GACXzR,SAAU3V,EAAMiG,OAAOyD,SAErB69F,EAAS,CACX16E,WAAYzF,IAEVogF,EAAW,WACXxnG,EAAMiG,OAAOyD,UACf89F,EAAW,uBAXwB5qG,EAAAE,KAAA,EAchBlB,EAAmB,kBAAmB,GAAIuwC,GAd1B,cAcjCj2C,EAdiC0G,EAAAgB,KAAAhB,EAAAE,KAAA,GAgBdlB,EAAmB4rG,EAAU,GAAID,GAhBnB,eAAA3qG,EAAAgB,KAAAhB,EAAAE,KAAA,GAiBPlB,EAC5B,0BACA,GACA2rG,GApBmC,QAAA3qG,EAAAgB,KAuBrCX,QAAQyR,IAAI,gBACZzR,QAAQyR,IAAIhR,KAAKC,UAAUwuC,IACvBj2C,GACFilG,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,6BACTxM,SAAU,aAEZsvD,OAEAmlC,EAAgBvwG,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACXg1E,GADU,IAEb1sD,QAAS,2BACTxM,SAAU,UAEZsvD,MAtCmC,yBAAAp5D,EAAAmB,SAAA9B,MAAV,gBAAA+B,GAAA,OAAAnC,EAAAsC,MAAAC,KAAA1B,YAAA,IA+7BflG,MAAM,eAIZjL,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJZ,WAAS,EACTzZ,MAAO,CACLlB,QAAS,OACTE,eAAgB,SAChB7B,UAAW,SAGb0D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMa,MAAI,GACRxZ,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACE/X,MAAM,UACNyB,QAAQ,YACR8W,QAAS,SAAC0E,GAAD,OAzoCQ,kBAAA29F,GAAAxlG,MAAAC,KAAA1B,WAyoCD+qG,KAHlB,aAcNl8G,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACEa,MAAI,EACJX,GAAI,GACJmM,GAAI,GACJmyC,GAAI,EACJv4B,GAAI,EACJviC,QAAS,EACT8C,MAAO,CAAE/C,QAAS,SAElB4D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMC,WAAS,EAACY,MAAI,EAAC29C,GAAI,IACzBn3D,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAEV,SAAU,QAASrC,QAAS,QAA3C,iBAGA4D,EAAAC,EAAAC,cAACyvG,GAAD,CAAgB1vE,QAAShX,GAAWqB,cACnCrB,GAAWoB,aAAa7Y,OAAS,EAChCxR,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG,IACDtV,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACExZ,MAAO,CAAEV,SAAU,QAASrC,QAAS,MAAOE,UAAW,SADzD,kBAKA0D,EAAAC,EAAAC,cAAC4xG,GAAD,CAAiBG,SAAUhpF,GAAWoB,eAAiB,KAEvD,KAEJrqB,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,KACba,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACExZ,MAAO,CAAEV,SAAU,QAASrC,QAAS,MAAOE,UAAW,SAEvD0D,EAAAC,EAAAC,cAACi8G,GAAD,CACE9N,YAAaA,GAAY+N,SACzB1N,eAAgBA,GAChBH,WAAY,IACX,KAGLvuG,EAAAC,EAAAC,cAACm8G,GAAD,CACE9xF,SAAUtB,GAAWsB,SACrBlE,QAASwwF,EACTpB,cAAeA,IAGjBz1G,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CACExZ,MAAO,CAAEV,SAAU,QAASrC,QAAS,MAAOE,UAAW,SAEvD0D,EAAAC,EAAAC,cAACi8G,GAAD,CACE7wG,MAAO,gBACP+iG,YAAa6I,EACbzB,cAAe4B,EACf3I,eAAgBA,GAChBH,WAAY,IAEdvuG,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GAx7BpBpK,EAAmB,oBAAqB,GAHzB,CACbmmD,YAAa,CA07BwB36B,OAC7BlmB,KAAK,QACL1W,QAAQ,WACRzB,MAAM,WAJR,8BAQAwC,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAACqV,GAAA,EAAD,CACEQ,QAAS,SAAC0E,GA17BpBpK,EAAmB,sBAAuB,GAJ3B,CACboxD,eA67BsC5lC,GA57BtCgmC,iBAAkB,oBA67BVlsD,KAAK,QACL1W,QAAQ,WACRzB,MAAM,UACNgY,UAAU,GALZ,gCAUDkiG,EACC13G,EAAAC,EAAAC,cAACgzG,GAAD,CACE37F,QAppCZ,WACEogG,GAAsB,IAopCZ1/F,OAAQ2/F,IAER,KACJ53G,EAAAC,EAAAC,cAAC40G,GAAD,CACEvqF,SAAUtB,GAAWsB,SACrBmrF,OApuCqB,SAAAhjG,GAAA,OAAAomG,GAAAlmG,MAAAC,KAAA1B,YAquCrBkV,QAASgxF,EACT5B,cAAe+B,IAEjBx3G,EAAAC,EAAAC,cAACyY,EAAA,EAAD,CAAMxZ,MAAO,CAAEV,SAAU,QAASrC,QAAS,QAA3C,kBAIA4D,EAAAC,EAAAC,cAACozG,GAAD,CAGErnC,WAAYhjD,GAAW8B,mBASnC,IAAMvH,GAAaxnB,YAAW,SAACC,GAAD,MAAY,CACxCoiC,SAAU,CACRrlB,OAAQ,WAICsjG,GAAoBhiF,YAAW,SAACx7B,GAC3C,IAAMU,EAAUgkB,KAEhB+a,EAAiCC,aAASh0B,GAAgBC,OAAlDsF,EAARwuB,EAAQxuB,KAAMC,EAAduuB,EAAcvuB,QAASC,EAAvBsuB,EAAuBtuB,MAEvB,OAAID,EAEAhQ,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,aACbgB,EAAAC,EAAAC,cAACwV,GAAA,EAAD,CAAkB1W,UAAWQ,EAAQ6+B,YAGvCpuB,EAAcjQ,EAAAC,EAAAC,cAAA,oBAGhBF,EAAAC,EAAAC,cAACovE,GAAD,CACErkE,MAAO,CAAE8E,OAAMrF,OAAQF,GAAgBE,OAAQkkB,WAAY,eAE3D5uB,EAAAC,EAAAC,cAACq8G,GAAcz9G,MCjvCN09G,IDsvCAliF,YAAWgiF,IC71CZ,CACZG,MAAO,SACPC,UAAW,aACXC,QAAS,WACTC,cAAe,iBACfC,cAAe,iBACft0D,OAAQ,cACRu0D,YAAa,eACbC,UAAW,aACXC,aAAc,oBACdC,mBAAoB,0BACpBC,WAAY,qBACZC,aAAc,wBACdlmF,QAAS,mBACTmmF,QAAS,WAET34D,aAAc,YACd44D,eAAgB,kBAChBC,aAAc,gBACd3xE,eAAgB,kBAChB4xE,iBAAkB,oBAClBC,oBAAqB,uBAErBv3D,aAAc,gBACds6B,gBAAiB,mBACjBk9B,aAAc,gBACdC,YAAa,eACbC,YAAa,gBACbjiF,kBAAmB,sBACnBkiF,eAAgB,mBAChBC,gBAAiB,oBACjBtzF,SAAU,YACVuzF,OAAQ,UACRlQ,cAAe,kBACfmQ,iBAAkB,eAClBC,aAAc,gBACdC,YAAa,oBACb/0B,YAAa,oBACbg1B,SAAU,YACVC,aAAc,oBACdC,YAAa,uBACbC,aAAc,gBACdC,aAAc,gBACdC,iBAAkB,oBAClBC,oBAAqB,iBACrBC,kBAAmB,eACnBC,cAAe,WACfC,kBAAmB,eACnBC,cAAe,SACfC,iBAAkB,mBAClBC,mBAAoB,sBACpBC,eAAgB,YAChBlzG,gBAAiB,mBACjBE,cAAe,iBACfwC,eAAgB,kBAChBywG,sBAAuB,yBACvBC,iBAAkB,oBAClBC,kBAAmB,qBACnBznE,YAAa,eACb0nE,iBAAkB,oBAClBC,gBAAiB,mBAEjBC,YAAa,eAEb7zD,YAAa,eAEb8zD,YAAa,oBACbC,UAAW,kBACXC,SAAU,iBACV/zG,OAAQ,WACRg0G,IAAK,eACLC,YAAa,eACbC,iBAAkB,oBAClB5nC,gBAAiB,aACjB6nC,eAAgB,oBAEhBC,aAAc,gBACdC,kBAAmB,qBACnBC,kBAAmB,qBACnBC,QAAS,WACTC,gBAAiB,uBAEjBr1G,SAAU,cAEV4nC,UAAW,aACX0tE,gBAAiB,mBACjBC,UAAW,aAEXC,aAAc,gBACdC,oBAAqB,eACrBp6F,gBAAiB,mBAEjB2oC,SAAU,YACV0xD,WAAY,cACZl/D,iBAAkB,oBAClBm/D,cAAe,iBACfC,eAAgB,gBAChBC,UAAW,cACXC,YAAY,eAEZC,cAAc,qMCjGH5iH,GAAY/B,YAAW,SAAAC,GAAK,MAAK,CAC1C+B,KAAM,CACJC,QAAS,QAEXglE,OAAQ,CACNhqB,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9BpZ,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS6jH,iBAGzCC,YAAa,CACXvkH,WAdc,IAedL,MAAK,eAAA4D,OAfS,IAeT,OACLjD,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS+jH,kBAGzCC,WAAY,CACVxrG,YAAa,IAGfyrG,KAAM,CACJjjH,QAAS,QAEXiY,OAAQ,CACN/Z,MA7Bc,IA8BdkC,WAAY,EACZM,WAAY,UAEdwiH,WAAW9hH,OAAAM,EAAA,EAAAN,CAAA,CACTlD,MAlCc,IAmCdW,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5C4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS+jH,kBAEtC/kH,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B7jB,KAAM,WACN/0B,OAAQ,OACRuB,QAAS,OACTmjH,QAAS,EACTnoE,OAAQ,KACRrnB,SAAU,QACVw2E,UAAW,OACXnyF,cAAe,WAInB63D,OAAQ,CACN58C,YAAaj1B,EAAMI,QAAQ,IAE7BglH,YAAYhiH,OAAAM,EAAA,EAAAN,CAAA,CACVvC,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5C4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS6jH,gBAEvC1gG,UAAW,SACXjkB,MAAOF,EAAMI,QAAQ,GAAK,GACzBJ,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5BxxE,MAAOF,EAAMI,QAAQ,GAAK,IAG9Bs3D,QAAQt0D,OAAAQ,EAAA,EAAAR,CAAA,CACNpB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChB/B,QAAS,SACNH,EAAMqlH,OAAO3tD,SAElBt9C,QAAS,CACPjY,SAAU,EACVhC,QAASH,EAAMI,QAAQ,IAEzBsgH,QAAS,CACP1+G,QAAS,OACTgY,cAAe,SACf/X,WAAY,SACZm1G,UAAW,eAEbj2G,OAAQ,CACNjB,MAAO,GACPO,OAAQ,IAEVkF,KAAM,CACJtF,UAAWL,EAAMI,QAAQ,IAE3By7B,QAAS,CACPx7B,UAAWL,EAAMI,QAAQ,OCsQhBi+B,mBA3Uf,WAAmB,IAAAv7B,EAAAwiH,EACX/hH,EAAUzB,KACV9B,EAAQ6tE,eACdxxC,EAAoCvlB,IAAMwB,WAAWuU,IAA7CR,EAARgQ,EAAQhQ,UAAWO,EAAnByP,EAAmBzP,aACnBgtB,EAAsC9iC,IAAMwB,WAAWka,IAEvDtb,GAFA0iC,EAAQ5sB,WAAR4sB,EAAoBrnB,cACWzb,IAAMwB,WAAWzB,IAAxCzC,mBAC0B0C,IAAMK,UAAS,IAC7CouG,GADJruG,EAAQsuG,SAARtuG,EAAkBuuG,YACA5vG,aAAaC,QAAQ,gBAKjC04D,EAAc,SAACryD,GAAD,OAAU,SAACqC,GAO3BoO,EALS,YAATzQ,GACQ,8BAARA,GACQ,yBAARA,GACS,WAATA,EAEa/Y,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACRipB,GADO,IAEVq5F,WAAYvpG,EACZuQ,cAAe,EACfD,UAAWJ,EAAUI,WAGVrpB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKipB,GAAN,IAAiBq5F,WAAYvpG,EAAMsQ,UAAU,OAsC7D,OAfA3V,IAAMkK,UAAU,WASdvL,QAAQyR,IAAI,SAAUmF,IACrB,IAMDtoB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACmY,GAAA,EAAD,CACEpZ,QAAQ,YACRD,UAAWU,kBAAKF,EAAQ0W,QAATnX,EAAA,GAAAM,OAAAM,EAAA,EAAAN,CAAAN,EACZS,EAAQ2hH,WAAa74F,EAAUG,aADnBppB,OAAAM,EAAA,EAAAN,CAAAN,EAEZS,EAAQ6hH,aAAe/4F,EAAUG,aAFrB1pB,IAIfS,QAAS,CACP+Y,MAAO7Y,mBAAI6hH,EAAA,GAAAliH,OAAAM,EAAA,EAAAN,CAAAkiH,EACR/hH,EAAQ2hH,WAAa74F,EAAUG,aADvBppB,OAAAM,EAAA,EAAAN,CAAAkiH,EAER/hH,EAAQ6hH,aAAe/4F,EAAUG,aAFzB84F,KAKbjqG,KAAMgR,EAAUG,aAEhBzoB,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQm0D,SACtB3zD,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CAAYj5B,QAxEC,WACnB8S,EAAaxpB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKipB,GAAN,IAAiBG,aAAcH,EAAUG,iBAwExB,QAApBxsB,EAAM4f,UACL7b,EAAAC,EAAAC,cAAC0hH,GAAA3hH,EAAD,MAEAD,EAAAC,EAAAC,cAAC2hH,GAAA5hH,EAAD,QAIND,EAAAC,EAAAC,cAACq9B,GAAA,EAAD,MAEAv9B,EAAAC,EAAAC,cAACkoF,GAAA,EAAD,KACGr4E,GAAK+xG,MAAM/2G,IAAI,SAACg3G,EAAS/+F,GAAV,OACdhjB,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAK+N,GAClB++F,EAAQC,QACPhiH,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACGksG,GAAeA,EAAY/nF,QAAQsoF,EAAQpxG,MAAQ,EAClD3Q,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC2oF,GAAA,EAAD,CAAU14D,QAAM,EAACpa,QAAS00D,EAAYs3C,EAAQngH,OAC5C5B,EAAAC,EAAAC,cAACmpF,GAAA,EAAD,KAEErpF,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEhD,MAAO,QAChB2lB,IAAKigG,EAAQlgH,KACbggB,IAAI,iBAGR7hB,EAAAC,EAAAC,cAAC+oF,GAAA,EAAD,CAAc13D,QAASwwF,EAAQngH,OAE9B0mB,EAAUI,UACXJ,EAAUq5F,aAAeI,EAAQngH,KAC/B5B,EAAAC,EAAAC,cAAC+hH,GAAAhiH,EAAD,MAEAD,EAAAC,EAAAC,cAACgiH,GAAAjiH,EAAD,OAGJD,EAAAC,EAAAC,cAACiiH,GAAA,EAAD,CACEC,GACE95F,EAAUI,UACVJ,EAAUq5F,aAAeI,EAAQngH,KAEnCygH,QAAQ,OACRC,eAAa,GAEbtiH,EAAAC,EAAAC,cAACkoF,GAAA,EAAD,CAAM3mF,UAAU,MAAM0lB,gBAAc,GACjC46F,EAAQC,QAAQj3G,IAAI,SAACw3G,EAAYC,GAAb,OACnBxiH,EAAAC,EAAAC,cAACF,EAAAC,EAAMqV,SAAP,CAAgBL,IAAKutG,GAClBhB,GACDA,EAAY/nF,QAAQ8oF,EAAW5xG,MAAQ,EACrC3Q,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEC,UAAU,OACVr9B,UAAWs9B,IACXC,GAAIujF,EAAW5xG,KAEf3Q,EAAAC,EAAAC,cAAC2oF,GAAA,EAAD,CACE14D,QAAM,EACNnxB,UAAWQ,EAAQsuE,OACnBzqD,SACEiF,EAAUK,gBAAkB65F,EAE9BzsG,QAAS,SAACtB,GAAD,OAhFPuO,EAiF2Bw/F,OAhF7D35F,EAAaxpB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKipB,GAAN,IAAiBK,cAAe3F,KAD9C,IAAoCA,IAoFFhjB,EAAAC,EAAAC,cAACmpF,GAAA,EAAD,KACErpF,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEhD,MAAO,QAChB2lB,IAAKygG,EAAWE,MAChB5gG,IAAI,iBAGR7hB,EAAAC,EAAAC,cAAC+oF,GAAA,EAAD,CAAc13D,QAASgxF,EAAW3gH,SAGpC,UAIA,KAEZ,MAGN5B,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACG,IACAksG,GAAeA,EAAY/nF,QAAQsoF,EAAQpxG,MAAQ,EAClD3Q,EAAAC,EAAAC,cAAC2+B,GAAA,EAAD,CACEC,UAAU,OACVr9B,UAAWs9B,IACXC,GAAI+iF,EAAQpxG,KAEZ3Q,EAAAC,EAAAC,cAAC2oF,GAAA,EAAD,CACE14D,QAAM,EACNlb,IAAK,eACLoO,SAAUiF,EAAUq5F,aAAeI,EAAQngH,KAC3CmU,QAAS00D,EAAYs3C,EAAQngH,OAE7B5B,EAAAC,EAAAC,cAACmpF,GAAA,EAAD,KACErpF,EAAAC,EAAAC,cAAA,OACEf,MAAO,CAAEhD,MAAO,QAChB2lB,IAAKigG,EAAQlgH,KACbggB,IAAI,cAGR7hB,EAAAC,EAAAC,cAAC+oF,GAAA,EAAD,CAAc13D,QAASwwF,EAAQngH,SAGjC,KAAM,aC9Mf7D,YAAY/B,YAAW,SAAAC,GAAK,MAAK,CAC1CymH,KAAM,CACJtkH,SAAU,GAEZ6iH,WAAY,CACVxrG,YAAaxZ,EAAMI,QAAQ,IAG7BiP,MAAMjM,OAAAM,EAAA,EAAAN,CAAA,CACJpB,QAAS,OACTT,MAAO,OACNvB,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5B1vE,QAAS,UAGbyb,OAAOra,OAAAM,EAAA,EAAAN,CAAA,CACLuyB,SAAU,WACVtzB,aAAcrC,EAAMsC,MAAMD,aAC1BjB,gBAAiBslH,YAAK1mH,EAAMwB,QAAQgiE,OAAO1/B,MAAO,KAClD3P,UAAW,CACT/yB,gBAAiBslH,YAAK1mH,EAAMwB,QAAQgiE,OAAO1/B,MAAO,MAEpDtqB,YAAaxZ,EAAMI,QAAQ,GAC3BG,WAAY,EACZL,MAAO,QACNF,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5BnxE,WAAYP,EAAMI,QAAQ,GAC1BF,MAAO,SAGXwd,WAAY,CACVxd,MAAOF,EAAMI,QAAQ,GACrBK,OAAQ,OACRk1B,SAAU,WACVi3C,cAAe,OACf5qE,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBykH,UAAW,CACTplH,MAAO,WAETqlH,WAAWxjH,OAAAM,EAAA,EAAAN,CAAA,CACTjD,QAASH,EAAMI,QAAQ,EAAG,EAAG,EAAG,GAChCS,WAAYb,EAAMc,YAAYC,OAAO,SACrCb,MAAO,QACNF,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5BxxE,MAAO,MAGX2mH,eAAezjH,OAAAM,EAAA,EAAAN,CAAA,CACbpB,QAAS,QACRhC,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5B1vE,QAAS,SAGb8kH,cAAc1jH,OAAAM,EAAA,EAAAN,CAAA,CACZpB,QAAS,QACRhC,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5B1vE,QAAS,SAGbD,KAAM,CACJC,QAAS,QAEXglE,OAAQ,CACNhqB,OAAQh9C,EAAMg9C,OAAO/iC,OAAS,EAC9BpZ,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS6jH,iBAGzCC,YAAY1hH,OAAAM,EAAA,EAAAN,CAAA,CACV7C,WA3Ec,IA4EdL,MAAK,eAAA4D,OA5ES,IA4ET,OACLjD,WAAYb,EAAMc,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxD4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS+jH,kBAEtC/kH,EAAMo5C,YAAYC,KAAK,MAAQ,CAC9B94C,WAAY,MACZL,MAAM,SAIV+kH,KAAM,CACJjjH,QAAS,QAEXiY,OAAQ,CACN/Z,MA3Fc,IA4FdkC,WAAY,EACZM,WAAY,UAEdwiH,WAAY,CACVhlH,MAhGc,IAiGdW,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5C4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS+jH,kBAGzCK,YAAYhiH,OAAAM,EAAA,EAAAN,CAAA,CACVvC,WAAYb,EAAMc,YAAYC,OAAO,QAAS,CAC5C4jH,OAAQ3kH,EAAMc,YAAY6jH,OAAOC,MACjC5jH,SAAUhB,EAAMc,YAAYE,SAAS6jH,gBAEvC1gG,UAAW,SACXjkB,MAAOF,EAAMI,QAAQ,GAAK,GACzBJ,EAAMo5C,YAAYs4B,GAAG,MAAQ,CAC5BxxE,MAAOF,EAAMI,QAAQ,GAAK,IAG9Bs3D,QAAQt0D,OAAAQ,EAAA,EAAAR,CAAA,CACNpB,QAAS,OACTC,WAAY,SACZC,eAAgB,WAChB/B,QAAS,SACNH,EAAMqlH,OAAO3tD,SAElBt9C,QAAS,CACPjY,SAAU,EACVjC,MAAM,OACNw1B,SAAS,OACTv1B,QAASH,EAAMI,QAAQ,yBCqD7B,IAAM2mH,GAAgB1oF,YAhKtB,WAAmB,IAAAgmB,EACX9gD,EAAUzB,KAChBoV,EAAgCJ,IAAMK,SAAS,MAA/CC,EAAAhU,OAAAiU,EAAA,EAAAjU,CAAA8T,EAAA,GAAO08C,EAAPx8C,EAAA,GAAiBy8C,EAAjBz8C,EAAA,GACA2I,EAAoDjJ,IAAMK,SAAS,MAAnE6I,EAAA5c,OAAAiU,EAAA,EAAAjU,CAAA2c,EAAA,GAAOinG,EAAPhnG,EAAA,GAA2BinG,EAA3BjnG,EAAA,GACAqc,EAAoCvlB,IAAMwB,WAAWuU,IAA7CR,EAARgQ,EAAQhQ,UAAWO,EAAnByP,EAAmBzP,aAEbs6F,EAAapxE,QAAQ8d,GACrBuzD,EAAmBrxE,QAAQkxE,GAEjC,SAASI,EAAsB5uG,GAC7Bq7C,EAAYr7C,EAAM2+C,eAGpB,SAASkwD,IACPJ,EAAsB,MAGxB,SAASK,IACPzzD,EAAY,MACZwzD,IAeF,IAAME,EAAS,8BACTC,EACJzjH,EAAAC,EAAAC,cAACozD,GAAA,EAAD,CACEzD,SAAUA,EACVhwC,aAAc,CAAEjF,SAAU,MAAOG,WAAY,SAC7C7P,GAAIs4G,EACJ7lG,aAAW,EACXwrF,gBAAiB,CAAEvuF,SAAU,MAAOG,WAAY,SAChDzD,KAAM6rG,EACN5rG,QAASgsG,GAETvjH,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUzkC,QAASwtG,GAAnB,WACAvjH,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUzkC,QAASwtG,GAAnB,cACAvjH,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUzkC,QA1Bd,WACEjE,aAAa4xG,WAAW,eACxBzkG,OAAOC,SAAW,MAwBhB,WAKEykG,EACJ3jH,EAAAC,EAAAC,cAACozD,GAAA,EAAD,CACEzD,SAAUozD,EACVpjG,aAAc,CAAEjF,SAAU,MAAOG,WAAY,SAC7C7P,GALiB,qCAMjByS,aAAW,EACXwrF,gBAAiB,CAAEvuF,SAAU,MAAOG,WAAY,SAChDzD,KAAM8rG,EACN7rG,QAAS+rG,GAkBTtjH,EAAAC,EAAAC,cAACs6C,GAAA,EAAD,CAAUzkC,QAASstG,GACjBrjH,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,0BACXoiH,gBAAc,8BACdC,gBAAc,OACdrmH,MAAM,WAENwC,EAAAC,EAAAC,cAAC4jH,GAAA7jH,EAAD,OAEFD,EAAAC,EAAAC,cAAA,sBAKN,OACEF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAAC0kE,GAAA,EAAD,CACEhzC,SAAS,QACT5yB,UAAWU,kBAAKF,EAAQyjE,OAAT5jE,OAAAM,EAAA,EAAAN,CAAA,GACZG,EAAQuhH,YAAcz4F,EAAUG,eAGnCzoB,EAAAC,EAAAC,cAAC2kE,GAAA,EAAD,KACE7kE,EAAAC,EAAAC,cAAC8uC,EAAA,GAADsR,EAAA,CACEthD,UAAU,OACV8lE,KAAK,SAFPzlE,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,YAGa9gD,EAAQ0hH,MAHrB7hH,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,YAIa5gD,kBAAKF,EAAQyhH,WAAT5hH,OAAAM,EAAA,EAAAN,CAAA,GACZG,EAAQ0hH,KAAO54F,EAAUG,eAL9BppB,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,UA3ER,WACEz3B,EAAaxpB,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GAAKipB,GAAN,IAAiBG,aAAcH,EAAUG,iBA0E/CppB,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,QAQQ,WARRjhD,OAAAM,EAAA,EAAAN,CAAAihD,EAAA,aASa,eATbA,GAWEtgD,EAAAC,EAAAC,cAAC6jH,GAAA9jH,EAAD,OAEFD,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYhB,MAAO,CAAE3B,MAAO,QAAUyB,QAAQ,KAAK+kH,QAAM,GAAzD,iBAIAhkH,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQkjH,OACxB1iH,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQsjH,gBAWtB9iH,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACE81B,KAAK,MACLtjE,aAAW,0BACXoiH,gBAAeJ,EACfK,gBAAc,OACd9tG,QAASstG,EACT7lH,MAAM,WAENwC,EAAAC,EAAAC,cAAC4jH,GAAA7jH,EAAD,QAGJD,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQujH,eACtB/iH,EAAAC,EAAAC,cAAC8uC,EAAA,EAAD,CACExtC,aAAW,YACXoiH,gBA7FS,qCA8FTC,gBAAc,OACd9tG,QApHZ,SAA8BtB,GAC5ByuG,EAAsBzuG,EAAM2+C,gBAoHlB51D,MAAM,WAENwC,EAAAC,EAAAC,cAAC+jH,GAAAhkH,EAAD,UAKP0jH,EACAF,KAODS,GAAc,SAACplH,GACnB,IAAMU,EAAUzB,KACCupC,EAAuBxoC,EAAlC2C,UAAyBrC,EAA/BC,OAAAC,EAAA,EAAAD,CAAwCP,EAAxCqlH,IAEA,OACEnkH,EAAAC,EAAAC,cAAA,QAAMlB,UAAWQ,EAAQ6W,SACvBrW,EAAAC,EAAAC,cAAA,OAAKlB,UAAWQ,EAAQm0D,UACxB3zD,EAAAC,EAAAC,cAAConC,EAAcloC,sBC7JNglH,GAxBM,SAACtlH,GACpB,IAAQ2C,EAAuB3C,EAAvB2C,UAAcrC,EAAtBC,OAAAC,EAAA,EAAAD,CAA+BP,EAA/BulH,IAYA,OAToBvyG,aAAaC,QAAQ,eAUzB,MAAd3S,EAAKklH,MAA8B,WAAdllH,EAAKklH,KACxBtkH,EAAAC,EAAAC,cAACqkH,EAAA,EAAD,CAAUvlF,GAAIw9E,GAAMM,cAEpB98G,EAAAC,EAAAC,cALc,SAACpB,GAAD,OD8KM,SAAC2C,EAAW3C,GACpC,OACEkB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAqV,SAAA,KACEtV,EAAAC,EAAAC,cAACskH,GAAA,EAAD,MACAxkH,EAAAC,EAAAC,cAAC8iH,GAAkBlkH,GACnBkB,EAAAC,EAAAC,cAACukH,GAAY3lH,GACbkB,EAAAC,EAAAC,cAACwkH,GAAD,CAAajjH,UAAWA,KCpLCkjH,CAAWljH,EAAW3C,IAKhCM,GAGjBY,EAAAC,EAAAC,cAACqkH,EAAA,EAAD,CAAUvlF,GAAIw9E,GAAMC,SC0STmI,GAvOC,WACd,IAAQt8F,EAAcvV,IAAMwB,WAAWuU,IAA/BR,UAEFzL,GADiB9J,IAAMwB,WAAWka,IAAhCxF,WACO,IAAI47F,IAAa,CAAEC,IAAKx8F,EAAUM,aAEjD,OACE5oB,EAAAC,EAAAC,cAAC6kH,EAAA,EAAD,CAAgBloG,OAAQA,GAEtB7c,EAAAC,EAAAC,cAAC8kH,GAAD,KACEhlH,EAAAC,EAAAC,cAACqkH,EAAA,EAAD,KACEvkH,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcC,OAAK,EAACZ,KAAK,IAAI7iH,UAAWu1C,KACxCh3C,EAAAC,EAAAC,cAACqkH,EAAA,EAAD,CAAOD,KAAM9H,GAAMC,MAAOh7G,UAAWu1C,KACrCh3C,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAME,UAAWj7G,UAAW8lC,KAChDvnC,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMI,cAAen7G,UAAWssE,KACpD/tE,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMK,cAAep7G,UAAWi9B,KACpD1+B,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMj0D,OAAQ9mD,UAAWw4E,KAC7Cj6E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMM,YAAar7G,UAAW6kE,KAClDtmE,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM/3D,aAAchjD,UAAW68B,KACnDt+B,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMwB,aAAcv8G,UAAWomG,KACnD7nG,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMuB,iBAAkBt8G,UAAW0jH,KACvDnlH,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMY,QAAS37G,UAAW27G,KAC9Cp9G,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMv2D,aACZxkD,UAAWyoD,KAEblqD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMp7D,iBACZ3/C,UAAW2/C,KAEbphD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMj8B,gBACZ9+E,UAAWwhF,KAEbjjF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMiE,UAAWh/G,UAAWyuF,KAChDlwF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMkB,YAAaj8G,UAAW2gE,KAClDpiE,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMO,UAAWt7G,UAAWqtD,KAChD9uD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMU,WAAYz7G,UAAWqtD,KACjD9uD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMvlF,QAASx1B,UAAW63E,KAC9Ct5E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMkE,YAAaj/G,UAAWkxF,KAElD3yF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMyB,YAAax8G,UAAWm9E,KAClD5+E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMtzB,YAAaznF,UAAWumD,KAClDhoD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMiB,aAAch8G,UAAW40E,KACnDr2E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM0B,SAAUz8G,UAAWw3E,KAC/Cj5E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMkD,YAAaj+G,UAAWq3E,KAClD94E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM5xG,SAAUnJ,UAAWknD,KAC/C3oD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMmD,iBACZl+G,UAAW+mD,KAEbxoD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMqD,aAAcp+G,UAAW8qD,KACnDvsD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMsD,kBACZr+G,UAAW6qD,KAEbtsD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMuD,kBACZt+G,UAAW+qD,KAEbxsD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMwD,QAASv+G,UAAWqrD,KAC9C9sD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM+B,iBACZ98G,UAAWooD,KAEb7pD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM/kE,YAAah2C,UAAW4pD,KAClDrrD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMhxD,YAAa/pD,UAAW0qD,KAClDnsD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM2C,iBACZ19G,UAAW+1C,KAEbx3C,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM4C,gBACZ39G,UAAW8oC,KAEbvqC,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM6C,YAAa59G,UAAWi/C,KAClD1gD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMyD,gBACZx+G,UAAWgkC,KAEbzlC,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMW,aAAc17G,UAAWo4E,KACnD75E,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMQ,aACZv7G,UAAWo2D,KAGb73D,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMS,mBACZx7G,UAAWs7D,KAGb/8D,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM0C,kBACZz9G,UAAWi4E,KAGb15E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM6B,aAAc58G,UAAWkrD,KACnD3sD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM8B,aAAc78G,UAAWorD,KAEnD7sD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMa,eACZ57G,UAAWurD,KAEbhtD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMc,aACZ77G,UAAWmoD,KAEb5pD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM7wE,eACZlqC,UAAW2oD,KAEbpqD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMe,iBACZ97G,UAAWgoC,KAEbzpC,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMgB,oBACZ/7G,UAAWiiF,KAEb1jF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM4B,YAAa38G,UAAWwhF,KAClDjjF,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMiC,kBACZh9G,UAAWonD,KAEb7oD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMkC,cAAej9G,UAAWsnD,KACpD/oD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMuC,eACZt9G,UAAWwnD,KAEbjpD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM3wG,gBACZpK,UAAWynD,KAEblpD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMzwG,cACZtK,UAAW0nD,KAEbnpD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMjuG,eACZ9M,UAAWooC,KAEb7pC,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM8C,YACZ79G,UAAW4nD,KAEbrpD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM+C,UAAW99G,UAAW8nD,KAChDvpD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMgC,oBACZ/8G,UAAWuoD,KAEbhqD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMmC,kBACZl9G,UAAWqoD,KAEb9pD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMoC,cAAen9G,UAAWq2E,KACpD93E,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMsC,mBACZr9G,UAAWk2E,KAEb33E,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMwC,sBACZv9G,UAAW44B,KAEbr6B,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMyC,iBACZx9G,UAAWg7B,KAGbz8B,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM/wG,OAAQhK,UAAWkoD,KAC7C3pD,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMiD,IAAKh+G,UAAW+0E,KAE1Cx2E,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMgD,SAAU/9G,UAAWgoD,KAE/CzpD,EAAAC,EAAAC,cAAC+kH,GAAD,CACEC,OAAK,EACLZ,KAAM9H,GAAM2B,aACZ18G,UAAW40E,KAGbr2E,EAAAC,EAAAC,cAAC+kH,GAAD,CACEC,OAAK,EACLZ,KAAI,GAAAvkH,OAAKy8G,GAAM9gF,kBAAX,QACJj6B,UAAW66G,KAEbt8G,EAAAC,EAAAC,cAAC+kH,GAAD,CACEC,OAAK,EACLZ,KAAI,GAAAvkH,OAAKy8G,GAAM5O,eACfnsG,UAAWgrG,KAEbzsG,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMqC,iBACZp9G,UAAWs1E,KAEb/2E,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM0D,gBACZz+G,UAAWguC,KAEbzvC,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMhqE,UAAW/wC,UAAWsiF,KAChD/jF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM2D,UAAW1+G,UAAW8xC,KAChDvzC,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM4D,aAAc3+G,UAAWwqG,KACnDjsG,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM+D,cAAe9+G,UAAW25C,KACpDp7C,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAM6D,oBACZ5+G,UAAW6qG,KAEbtsG,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMv2F,gBACZxkB,UAAWwkB,KAEbjmB,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM5tD,SAAUntD,UAAWooE,KAC/C7pE,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAM8D,WAAY7+G,UAAW6+G,KACjDtgH,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMgE,eAAgB/+G,UAAWipF,KACrD1qF,EAAAC,EAAAC,cAAC+kH,GAAD,CAAcX,KAAM9H,GAAMmB,YAAal8G,UAAWgtF,KAClDzuF,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMzkC,gBACZt2E,UAAWwtF,KAEbjvF,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMoD,eACZn+G,UAAWmuF,KAEb5vF,EAAAC,EAAAC,cAAC+kH,GAAD,CACEX,KAAM9H,GAAMmE,cACZl/G,UAAW4iG,SC7QR+gB,uDAzCb,SAAAA,EAAYtmH,GAAO,IAAA25F,EAAA,OAAAp5F,OAAAg4C,GAAA,EAAAh4C,CAAAwT,KAAAuyG,IACjB3sB,EAAAthD,EAAAuhD,KAAA7lF,KAAM/T,IAURo7C,MAAQ,WACNu+C,EAAKlR,SAAS,CACZjwE,MAAM,EACN6D,SAAUR,GAAWQ,SAASzd,QAC9B4d,IAAK,GACLV,SAAUD,GAAWC,SAASC,IAC9BE,WAAYJ,GAAWI,WAAWG,UAjBnBu9E,EAqBnBnoD,IAAM,SAACxxC,GACL25F,EAAKlR,SAALloF,OAAAQ,EAAA,EAAAR,CAAA,GAAmBP,KApBnB25F,EAAKnmC,MAAQ,CACXh7C,MAAM,EACN6D,SAAUR,GAAWQ,SAASzd,QAC9B4d,IAAK,GACLV,SAAUD,GAAWC,SAASC,IAC9BE,WAAYJ,GAAWI,WAAWG,QAPnBu9E,6CAyBnB,WACE,OACEz4F,EAAAC,EAAAC,cAACmb,GAAa9H,SAAd,CACEtI,MAAK5L,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAA,GACAwT,KAAKy/C,OADL,IAEH/2C,QAAS1I,KAAKqnC,MACd1+B,SAAU3I,KAAKy9B,OAGhBz9B,KAAKy/C,MAAMh7C,KAAOtX,EAAAC,EAAAC,cAACmlH,GAADhmH,OAAAe,OAAA,GAAWyS,KAAKy/C,MAAhB,CAAuB/2C,QAAS1I,KAAKqnC,SAAY,GACnErnC,KAAK/T,MAAMI,iBApCG6T,IAAMu0B,qBCqCdg+E,OAjBf,WACE,OACEtlH,EAAAC,EAAAC,cAACqlH,GAAD,KACEvlH,EAAAC,EAAAC,cAACslH,GAAA,EAAD,CAAkBvpH,MAAOA,IACvB+D,EAAAC,EAAAC,cAAA,OAAKlB,UAAU,OACbgB,EAAAC,EAAAC,cAACskH,GAAA,EAAD,MACAxkH,EAAAC,EAAAC,cAACulH,EAAA,EAAD,KACEzlH,EAAAC,EAAAC,cAACwlH,GAAD,KACE1lH,EAAAC,EAAAC,cAACylH,GAAD,YCpBM5zE,QACW,cAA7B9yB,OAAOC,SAAS0mG,UAEe,UAA7B3mG,OAAOC,SAAS0mG,UAEhB3mG,OAAOC,SAAS0mG,SAAS3/E,MACvB,2DCZN4/E,IAASC,OAAO9lH,EAAAC,EAAAC,cAAC6lH,GAAD,MAASn1E,SAASo1E,eAAe,SD2H3C,kBAAmB9yB,WACrBA,UAAU+yB,cAAcC,MAAM/oG,KAAK,SAAAgpG,GACjCA,EAAaC","file":"static/js/main.1551c4ed.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\r\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\r\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const APP_URL = \"https://staging.nacjewellers.net\";\r\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\r\nexport const URL = \"https://console-staging.nacjewellers.net\";\r\nexport const BASE_IMAGE_URL = \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\";\r\n//  export const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\"\r\n//  export const API_URL = \"https://api-staging.nacjewellers.net\"\r\n//  export const BASE_URL = \"http://localhost:8000\"\r\n//  export const URL = \"https://localhost:3000\"\r\n","import React from \"react\";\r\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { URL } from \"../../config\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href={\"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterGenders {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColor\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondsShapes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterThemes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n\r\n    allMasterStyles {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterOccasions {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections {\r\n      nodes {\r\n        id\r\n        alias\r\n        name\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondClarities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterVendors {\r\n      nodes {\r\n        id\r\n        name\r\n        shortCode\r\n        vendorDelivaryDays\r\n      }\r\n    }\r\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n      nodes {\r\n        productSeries\r\n        id\r\n      }\r\n    }\r\n    allMasterGemstonesTypes {\r\n      nodes {\r\n        alias\r\n        colorCode\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterGemstonesShapes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterEarringBackings {\r\n      nodes {\r\n        name\r\n        createdAt\r\n        alias\r\n        id\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n    allMasterGemstonesSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterHashTags {\r\n      nodes {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTFILTERMASTER = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n        displayOrder\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\n  query {\r\n    allProductLists(first: 500) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\n  query ($Veiw: Int!, $Offset: Int!) {\r\n    allProductLists(first: $Veiw, offset: $Offset) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLISTS = gql`\r\n  query {\r\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n      nodes {\r\n        vendorDelivaryDays\r\n        updatedAt\r\n        state\r\n        shortCode\r\n        partnerCategory\r\n        name\r\n        organization\r\n        gstNo\r\n        currency\r\n        createdAt\r\n        city\r\n        address\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\n  query {\r\n    allMasterTaxSettings {\r\n      nodes {\r\n        hsnNumber\r\n        taxName\r\n        taxValue\r\n        updatedAt\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`; /*********** configuration query */\r\n\r\nconst TaxList = `\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList = `\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL = `\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS = `\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES = `\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER = `\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER = `\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER = `\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER = `\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER = `\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER = `\r\nquery  {\r\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    diamondClarity\r\n    diamondColor\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER = `\r\n{\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  }\r\n  allPaymentStatusMasters(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DIAMONDSETTINGS = `\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES = `\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES = `\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES = `\r\nquery{\r\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPAGES = `\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER = `\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING = `\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONES = `\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES = `\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES = `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst ACTIVESHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS = `\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS = `\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES = `\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERATTRIBUTES = `\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS = `\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES = `\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES = `\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER = `\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES = `\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        purity\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        sellingPrice\r\n        material\r\n        id\r\n        createdAt\r\n        costPrice\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allPricingMarkups(\r\n      condition: { material: $vendorCode }\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        costPrice\r\n        createdAt\r\n        diamondClarity\r\n        diamondColour\r\n        id\r\n        sellingPrice\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\nconst CATGORYLIST = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTTYPEMASTER = gql`\r\n  query {\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MATERIALMASTER = gql`\r\n  query {\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERCOLORS = gql`\r\n  query {\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SALEDISCOUNTS = gql`\r\n  query {\r\n    allSaleDiscounts {\r\n      nodes {\r\n        id\r\n        discountName\r\n        discountType\r\n        discountValue\r\n        components\r\n        attributes\r\n        isActive\r\n        productAttributes\r\n        productAttributesText\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERDISCOUNTS = gql`\r\n  query {\r\n    allVouchers {\r\n      nodes {\r\n        id\r\n        name\r\n        code\r\n        uses\r\n        maxUses\r\n        isActive\r\n        voucherCodes\r\n        description\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERPURITIES = gql`\r\n  query {\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLIST = `\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER = `\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCATEGORY = `\r\nquery {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst GEMSTONEMASTER = `\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allMakingChargeSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        weightStart\r\n        weightEnd\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        rateType\r\n        purity\r\n        priceType\r\n        price\r\n        material\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst GEMPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        price\r\n        rateType\r\n        priceType\r\n        sellingPriceType\r\n        vendorCode\r\n        weightEnd\r\n        weightStart\r\n        updatedAt\r\n        id\r\n        createdAt\r\n        gemstoneType\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\r\n    __typename\r\n    updateProductListByProductId(\r\n      input: {\r\n        productId: $productId\r\n        productListPatch: { isactive: $isActive }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n      productList {\r\n        isactive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst REVIEWQUERY = `\r\n  query {\r\n    allCustomerReviews {\r\n      nodes {\r\n        customerName\r\n        id\r\n        isActive\r\n        isPublish\r\n        message\r\n        nodeId\r\n        productSku\r\n        rating\r\n        title\r\n        updatedAt\r\n        userprofileId\r\n        productId\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CREATETAXSETUP = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $updatedAt: Date!\r\n    $createdAt: Date!\r\n    $taxValue: Double!\r\n    $taxName: String!\r\n    $hsnNumber: String!\r\n  ) {\r\n    __typename\r\n    createMasterTaxSetting(\r\n      input: {\r\n        masterTaxSetting: {\r\n          id: $id\r\n          updatedAt: $updatedAt\r\n          createdAt: $createdAt\r\n          taxValue: $taxValue\r\n          taxName: $taxName\r\n          hsnNumber: $hsnNumber\r\n        }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateVoucherById(\r\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      voucher {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateSaleDiscountById(\r\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      saleDiscount {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deletePricingMarkupById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteSaleDiscountById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteVoucherById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = gql`\r\n  query MyQuery($productId: String!) {\r\n    productListByProductId(productId: $productId) {\r\n      productMetalcoloursByProductId {\r\n        nodes {\r\n          productColor\r\n          id\r\n        }\r\n      }\r\n      productName\r\n      productType\r\n      vendorCode\r\n      gender\r\n      earringBacking\r\n      isactive\r\n      prodDescription\r\n      productMaterialsByProductSku(condition: { isActive: true }) {\r\n        nodes {\r\n          materialName\r\n        }\r\n      }\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          diamondClarity\r\n          diamondColour\r\n          diamondSettings\r\n          diamondShape\r\n          diamondType\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productGemstonesByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          gemstoneSetting\r\n          gemstoneShape\r\n          gemstoneSize\r\n          gemstoneType\r\n          gemstonsSize\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          id\r\n          imagePosition\r\n          productId\r\n          imageUrl\r\n          ishover\r\n          isdefault\r\n          productColor\r\n        }\r\n      }\r\n      productPuritiesByProductId {\r\n        nodes {\r\n          purity\r\n          id\r\n        }\r\n      }\r\n      productThemesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          themeName\r\n          id\r\n        }\r\n      }\r\n      productStonecolorsByProductId {\r\n        nodes {\r\n          id\r\n          stonecolor\r\n        }\r\n      }\r\n      productStylesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          styleName\r\n          id\r\n        }\r\n      }\r\n      productCollectionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          collectionName\r\n          id\r\n        }\r\n      }\r\n      productOccassionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          occassionName\r\n          id\r\n        }\r\n      }\r\n      productStonecountsByProductId {\r\n        nodes {\r\n          id\r\n          stonecount\r\n        }\r\n      }\r\n      productHashTagsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          id\r\n          name: hashTag\r\n        }\r\n      }\r\n      transSkuListsByProductId {\r\n        nodes {\r\n          skuSize\r\n          diamondType\r\n          metalColor\r\n          purity\r\n          productId\r\n          skuWeight\r\n          generatedSku\r\n          costPrice\r\n          costPriceTax\r\n          discountPrice\r\n          discountPriceTax\r\n          markupPrice\r\n          marginOnSalePercentage\r\n          markupPriceTax\r\n          marginOnSalePercentage\r\n          sellingPrice\r\n          discountDesc\r\n          sellingPriceTax\r\n          isReadyToShip\r\n          discount\r\n          isActive\r\n          isdefault\r\n          vendorDeliveryTime\r\n          id\r\n          isActive\r\n          showPriceBreakup\r\n          calcType\r\n          transSkuDescriptionsBySkuId {\r\n            nodes {\r\n              skuDescription\r\n              certificate\r\n              ringsizeImage\r\n            }\r\n          }\r\n          maxOrderQty\r\n          minOrderQty\r\n        }\r\n      }\r\n      productCategory\r\n      sizeVarient\r\n      height\r\n      length\r\n      width\r\n\r\n      productVendorCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLMASTERRINGSIZE = `\r\n  query {\r\n    allMasterRingsSizes {\r\n      nodes {\r\n        gender\r\n        productType\r\n        name\r\n        size\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HOLIDAYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\r\n    allHolidayManagers(\r\n      first: $first\r\n      offset: $offset\r\n      filter: $filter\r\n      orderBy: DATE_ASC\r\n    ) {\r\n      nodes {\r\n        id\r\n        holiday\r\n        date\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst WAREHOUSELIST = gql`\r\n  query {\r\n    allWarehouses(orderBy: ID_ASC) {\r\n      nodes {\r\n        id\r\n        name\r\n        shippingInDays\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst INVENTORYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\r\n    allInventories(first: $first, offset: $offset, filter: $filter) {\r\n      nodes {\r\n        id\r\n        generatedSku\r\n        numberOfItems\r\n        createdAt\r\n        updatedAt\r\n        warehouse: warehouseByWarehouseId {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VALIDATEGENERATEDSKU = gql`\r\n  query ($generatedSku: String!) {\r\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst STOCKSTATUS = gql`\r\n  query {\r\n    allWarehouses {\r\n      nodes {\r\n        name\r\n        isActive\r\n        inventoriesByWarehouseId {\r\n          aggregates {\r\n            sum {\r\n              numberOfItems\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VERIFYTAGNO = gql`\r\n  query ($tagno: String!) {\r\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLBANNERSCOMPLETE = `\r\nquery MyQuery {\r\n  allBanners\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"landing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATEALLBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLLISTINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"listing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATELISTINGBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"listing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLSPECIFICLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners\r\n  (condition: {url: \"specificListingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESPECIFICLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $urlParam :String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: \"specificListingPage\"\r\n        web: $web\r\n        urlParam : $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEALLBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteBannerById(input: {id: $id}) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLMASTERPRODUCTSIZE = gql`\r\n  query allproductsizes($productType: String) {\r\n    allMasterRingsSizes(condition: { productType: $productType }) {\r\n      nodes {\r\n        name\r\n        nodeId\r\n        id\r\n        size\r\n        updatedAt\r\n        productType\r\n        gender\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IMAGEDELETE = `\r\nmutation MyMutation($productimageid: UUID!) {\r\n  deleteProductImageById(input: { id: $productimageid }) {\r\n    productListByProductId {\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"bottom\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLANDINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"landing\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"listingPage\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERROUTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: {url: \"#\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam :\"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"bottom\"\r\n        position: $position\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst CREATESILVERLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"listingPage\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ABANDONEDCART = gql`\r\n  query (\r\n    $first: Int\r\n    $offset: Int\r\n    $orderBy: [ShoppingCartsOrderBy!]\r\n    $condition: ShoppingCartCondition\r\n    $filter: ShoppingCartFilter\r\n  ) {\r\n    allShoppingCarts(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: $orderBy\r\n      condition: $condition\r\n      filter: $filter\r\n    ) {\r\n      nodes {\r\n        id\r\n        isActive\r\n        netAmount\r\n        status\r\n        taxAmount\r\n        userprofileId\r\n        user: userProfileByUserprofileId {\r\n          id\r\n          firstName\r\n          lastName\r\n          username\r\n          email\r\n          mobile\r\n        }\r\n        cart_items: shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            productSku\r\n            qty\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              skuId\r\n              productListByProductId {\r\n                productName\r\n              }\r\n            }\r\n          }\r\n        }\r\n        grossAmount\r\n        discountedPrice\r\n        discount\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CARTBYID = gql`\r\n  query ($id: UUID!) {\r\n    cart: shoppingCartById(id: $id) {\r\n      id\r\n      isActive\r\n      netAmount\r\n      status\r\n      taxAmount\r\n      userprofileId\r\n      grossAmount\r\n      discountedPrice\r\n      discount\r\n      createdAt\r\n      updatedAt\r\n      address: cartAddressesByCartId {\r\n        nodes {\r\n          id\r\n          addressline1\r\n          addressline2\r\n          city\r\n          contactNumber\r\n          country\r\n          countryCode\r\n          createdAt\r\n          firstname\r\n          lastname\r\n          pincode\r\n          salutation\r\n          state\r\n          updatedAt\r\n          addressType\r\n        }\r\n      }\r\n      user: userProfileByUserprofileId {\r\n        id\r\n        firstName\r\n        lastName\r\n        username\r\n        email\r\n        mobile\r\n        isemailverified\r\n        ismobileverified\r\n      }\r\n      cart_items: shoppingCartItemsByShoppingCartId {\r\n        nodes {\r\n          productSku\r\n          qty\r\n          transSkuListByProductSku {\r\n            markupPrice\r\n            markupPriceTax\r\n            discountPrice\r\n            discountPriceTax\r\n            generatedSku\r\n            skuId\r\n            productListByProductId {\r\n              productName\r\n              productImagesByProductId(\r\n                condition: { isdefault: true, imagePosition: 1 }\r\n              ) {\r\n                nodes {\r\n                  productId\r\n                  imageUrl\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      follow_ups: communicationLogsByCartId {\r\n        nodes {\r\n          type\r\n          messageType\r\n          senderResponseId\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATESTYLORISILVERROUTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n  $urlParam: String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: \"S\"\r\n        web: $web\r\n        urlParam: $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLANDINGBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLFEATUREDPRODUCT = `query MyQuery {\r\n  allFeaturedProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: { ishover: true }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId {\r\n              nodes {\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createFeaturedProduct(\r\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateFeaturedProductByProductId(\r\n    input: {\r\n      featuredProductPatch: { isActive: $isActive }\r\n      productId: $ProductId\r\n    }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\r\n    featuredProduct {\r\n      productId\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CREATENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createNewArrivalProduct(\r\n    input: { newArrivalProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLNEWARRIVALPRODUCT = `query MyQuery{\r\n  allNewArrivalProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: {ishover: false}) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId{\r\n          nodes{\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId{\r\n              nodes{\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateNewArrivalProductByProductId(\r\n    input: {newArrivalProductPatch: {isActive: $isActive}, productId: $ProductId}\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteNewArrivalProductByProductId(input: {productId: $ProductId}) {\r\n    clientMutationId\r\n    deletedNewArrivalProductId\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst MUTATE_STATUS = `\r\nmutation($id: Int!, $status: String) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { status: $status } }\r\n  ) {\r\n    clientMutationId\r\n  }\r\n}\r\n`\r\n\r\nconst MUTATE_MEETING = `\r\nmutation($id :Int!,$meetingLink: String!) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { meetingLink: $meetingLink } }\r\n  ) {\r\n    appointment {\r\n      id\r\n      meetingLink\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst GETORDERCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: UUID!) {\r\n  orderById(id: $id) {\r\n    awbNumber\r\n    cartId\r\n    comments\r\n    createdAt\r\n    id\r\n    paymentId\r\n    paymentMode\r\n    paymentStatus\r\n    updatedAt\r\n    userProfileId\r\n    communicationLogsByOrderId(orderBy: UPDATED_AT_DESC) {\r\n      nodes {\r\n        createdAt\r\n        id\r\n        messageType\r\n        orderId\r\n        senderResponseId\r\n        type\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst GETAPPLICATIONCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: Int!) {\r\n  appointmentById(id: $id) {\r\n    storeLocationByLocationId {\r\n      id\r\n      address\r\n      name\r\n    }\r\n    appointmentCommunicationLogsByAppointmentId {\r\n      nodes {\r\n        id\r\n        appointmentId\r\n        communicationType\r\n        createdAt\r\n        senderResponseId\r\n        type\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_DATE = `\r\n  query MyQuery {\r\n    allAppointmentDates(\r\n      orderBy: START_DATE_TIME_ASC\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        createdBy\r\n        endDate\r\n        id\r\n        isActive\r\n        startDate\r\n        startDateTime\r\n        endDateTime\r\n        updatedAt\r\n        updatedBy\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CHECK_APPOINTMENT = `\r\nquery($startDate: Date!,$endDate: Date!){\r\n  allAppointmentDates(\r\n    condition: {\r\n      startDate: $startDate,\r\n      endDate: $endDate\r\n    }\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nconst FILTER_APPOINTEMENTS = gql`\r\nquery($startDate: Date!, $endDate: Date!) {\r\n  allAppointmentDates(\r\n    filter: {\r\n      startDate: {\r\n        greaterThanOrEqualTo: $startDate\r\n        lessThanOrEqualTo: $endDate\r\n      }\r\n    }\r\n    orderBy: START_DATE_ASC\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_TIMESLOT =(appointmentDateId,appointmentTypeId) => gql`\r\n query{  \r\n   allAppointmentDateTimeSlots(\r\n    condition: {\r\n      appointmentDateId: \"${appointmentDateId}\"\r\n      appointmentTypeId: ${appointmentTypeId}\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n }\r\n`\r\n\r\nconst CHECK_TIMESLOT=gql`\r\nquery($startTime: Time,$endTime: Time){\r\n  allAppointmentDateTimeSlots(\r\n    filter: {\r\n      startTime: {\r\n        greaterThanOrEqualTo: $startTime\r\n        lessThanOrEqualTo: $endTime\r\n      }\r\n      endTime:{\r\n       greaterThanOrEqualTo: $startTime\r\n       lessThanOrEqualTo:$endTime \r\n      }\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst APPOINTMENTS_TYPE = `\r\n  query MyQuery {\r\n    allAppointmentTypeMasters {\r\n      nodes {\r\n        id\r\n        name\r\n        isActive\r\n        appointmentsByAppointmentTypeId{\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst SHOW_APPOINMENT_DETAILS = gql`\r\nquery(\r\n  $limit: Int\r\n  $offset: Int\r\n  $appointment_filter: AppointmentFilter!\r\n  $order_by: [AppointmentsOrderBy!]\r\n){\r\n  allAppointments(\r\n    first: $limit\r\n    offset: $offset\r\n    filter: $appointment_filter\r\n    orderBy: $order_by\r\n    ) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      mobileCountryCode\r\n      customerName\r\n      email\r\n      isActive\r\n      status\r\n      type: appointmentTypeMasterByAppointmentTypeId {\r\n        name\r\n      }\r\n      appointmentDateTimeSlotBySlotId{\r\n        startTime\r\n        startDateTime\r\n        endDateTime\r\n        createdBy\r\n        appointmentDateId\r\n        endTime\r\n      }\r\n      storeLocationByLocationId {\r\n        address\r\n        name\r\n      }\r\n      locationId\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst SHOW_ALL_PPOINMENT_DETAILS = gql`\r\nquery(\r\n  $id: Int\r\n){\r\n  allAppointments(filter: {id: {equalTo: $id}}) {\r\n    nodes {\r\n      isVerified\r\n      isActive\r\n      email\r\n      customerName\r\n      status\r\n      locationId\r\n      storeLocationByLocationId {\r\n        address\r\n      }\r\n      specialRequests\r\n      productCategory\r\n      meetingLink\r\n      metalType\r\n      mobile\r\n      isOnline\r\n      isItRequired\r\n      id\r\n      areMoreMembersJoining\r\n      appointmentDateTimeSlotBySlotId {\r\n        appointmentTypeId\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst PRICE_RUN_LOGS = gql`\r\n  query ($first: Int, $offset: Int) {\r\n    allPriceRunningHistories(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        id\r\n        completedProductCount\r\n        pricingComponent\r\n        logs: pricingLogsByPriceRunningHistoryId {\r\n          nodes {\r\n            requestedProducts\r\n            successfullyExecutedProducts\r\n            failedProducts\r\n          }\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  ALLBANNERS,\r\n  ALLLISTINGBANNERS,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  CREATEALLBANNERS,\r\n  CREATELISTINGBANNERS,\r\n  CREATESPECIFICLISTINGPAGE,\r\n  DELETEALLBANNER,\r\n  PRODUCTCATEGORY,\r\n  PRODUCTLIST,\r\n  PRODUCTEDIT,\r\n  PRODUCTLISTSTATUSEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  GOLDPRICELIST,\r\n  DIAMONDPRICELIST,\r\n  GEMPRICELIST,\r\n  MAKINGCHARGEPRICELIST,\r\n  VENDORLIST,\r\n  ALLPRODUCTLIST,\r\n  DIAMONDMARKUP,\r\n  PRODUCTFILTERMASTER,\r\n  METALMASTER,\r\n  GEMSTONEMASTER,\r\n  MASTERCATEGORY,\r\n  DELETEMARKUPPRICE,\r\n  DELETEMAKINGCHARGE,\r\n  DELETEGEMCHARGE,\r\n  DELETEGOLDPRICE,\r\n  DELETESALEDISCOUNT,\r\n  CATGORYLIST,\r\n  DELETEDIAMONDCHARGE,\r\n  VENDORLISTS,\r\n  TaxList,\r\n  PRODUCTTYPEMASTER,\r\n  MATERIALMASTER,\r\n  MASTERCOLORS,\r\n  MASTERPURITIES,\r\n  SALEDISCOUNTS,\r\n  VOUCHERDISCOUNTS,\r\n  DELETEVOUCHERDISCOUNT,\r\n  VOUCHERSTATUSEDIT,\r\n  DISCOUNTSTATUSEDIT,\r\n  MASTERMATERIAL,\r\n  MASTERMATERIALCOLORS,\r\n  MASTERPRODUCTPURITIES,\r\n  COLLECTIONMASTER,\r\n  DESIGNMASTER,\r\n  DIAMONDMASTER,\r\n  DIAMONDSETTINGS,\r\n  DIAMONDSHAPES,\r\n  MASTERPRODUCTTYPES,\r\n  MASTERGEMSETTINGS,\r\n  MASTERGEMSHAPES,\r\n  MASTERGEMTYPES,\r\n  MASTERGENDER,\r\n  SEOPRIORITIES,\r\n  CREATETAXSETUP,\r\n  TaxSettingList,\r\n  MASTERCATEGORIES,\r\n  EARRINGBACKING,\r\n  MASTERATTRIBUTES,\r\n  MASTERSTONESHAPES,\r\n  MASTERSTONECOLORS,\r\n  MASTERSTONES,\r\n  MASTERWEIGHTS,\r\n  THEMEMASTER,\r\n  STYLEMASTER,\r\n  OCCASSIONSMASTER,\r\n  PAYMENTSTATUSMASTER,\r\n  SHIPPINGZONES,\r\n  MASTERCOUNTRIES,\r\n  SHIPPINGCHARGES,\r\n  ACTIVESHIPPINGZONES,\r\n  MASTERPAGES,\r\n  GOLDPRICESETUPMASTER,\r\n  ALLMASTERRINGSIZE,\r\n  HOLIDAYLIST,\r\n  WAREHOUSELIST,\r\n  INVENTORYLIST,\r\n  VALIDATEGENERATEDSKU,\r\n  STOCKSTATUS,\r\n  VERIFYTAGNO,\r\n  ALLMASTERPRODUCTSIZE,\r\n  IMAGEDELETE,\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESILVERLANDINGBANNER,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  CREATESILVERLISTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  REVIEWQUERY,\r\n  CREATENEWARRIVALPRODUCT,\r\n  ALLNEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n  ABANDONEDCART,\r\n  CARTBYID,\r\n  ALL_APPOINTMENTS_DATE,\r\n  SHOW_APPOINMENT_DETAILS,\r\n  PRICE_RUN_LOGS,\r\n  APPOINTMENTS_TYPE,\r\n  ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS,\r\n  SHOW_ALL_PPOINMENT_DETAILS,\r\n  MUTATE_STATUS,\r\n  GETAPPLICATIONCOMMUNICATIONLOGS,\r\n  CHECK_APPOINTMENT,\r\n  CHECK_TIMESLOT,\r\n  MUTATE_MEETING\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\n\r\n  export const USERORDERS = gql`query($userid: UUID!) {\r\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n          \r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }`\r\n\r\n\r\n  export const ORDERS = gql`\r\n  query (\r\n    $order_filter: OrderFilter!\r\n    $limit: Int\r\n    $offset: Int\r\n    $order_by: [OrdersOrderBy!]\r\n  ) {\r\n    allOrders(\r\n      filter: $order_filter\r\n      first: $limit\r\n      offset: $offset\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        \r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n            userAddressesByUserProfileId {\r\n              nodes {\r\n                contactNumber\r\n              }\r\n            }\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MATERIALMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const VOUCHERMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      \r\n      \r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport {\r\n  MATERIALMASTER,\r\n  ORDERS,\r\n  USERORDERS,\r\n  VOUCHERMASTER,\r\n} from \"../services/queries\";\r\nimport apidata from \"../screens/Productupload/data.json\";\r\n\r\nexport const productCategory = {\r\n  query: PRODUCTCATEGORY,\r\n  mapper: (response) => {\r\n    const category = response.allMasterProductCategories.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const product_type = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n      title: _.name,\r\n    }));\r\n    const material = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const gender = response.allMasterGenders.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const vendorcode = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      display: _.name + \" (\" + _.shortCode + \" )\",\r\n    }));\r\n\r\n    const diamondsettings = response.allMasterDiamondsSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const diamondshapes = response.allMasterDiamondsShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      themeName: _.name,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      styleName: _.name,\r\n    }));\r\n\r\n    const occasions = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      occassionName: _.name,\r\n    }));\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      collectionName: _.name,\r\n    }));\r\n    const gemstonecolor = response.allMasterStonesColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecolor: _.name,\r\n    }));\r\n    const stones = response.allMasterStones.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecount: _.name,\r\n    }));\r\n    const metalcolour = response.allMasterMetalsColors.nodes.map((_) => ({\r\n      ..._,\r\n      productColor: _.name,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const metalpurity = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      purity: _.name,\r\n    }));\r\n    const diamondcolors = response.allMasterDiamondsColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondclarities = response.allMasterDiamondClarities.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const productseries = response.allProductLists.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.productSeries,\r\n    }));\r\n    const gemstontypes = response.allMasterGemstonesTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n    }));\r\n\r\n    const gemstonshapes = response.allMasterGemstonesShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n    const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.alias,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const earringbacking = response.allMasterEarringBackings.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.diamondColor + _.diamondClarity,\r\n      label: _.diamondColor + _.diamondClarity,\r\n    }));\r\n    const hashtags = response.allMasterHashTags.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.name,\r\n      label: _.name,\r\n    }));\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._,\r\n    //     name: _.name,\r\n    //     size:_.size,\r\n    //     productType : _.productType ,\r\n    // }))\r\n\r\n    const metals = apidata.metals;\r\n\r\n    return {\r\n      category,\r\n      product_type,\r\n      material,\r\n      gender,\r\n      vendorcode,\r\n      metalcolour,\r\n      metals,\r\n      diamondsettings,\r\n      diamondshapes,\r\n      themes,\r\n      styles,\r\n      occasions,\r\n      collections,\r\n      gemstonecolor,\r\n      stones,\r\n      metalpurity,\r\n      diamondcolors,\r\n      diamondtypes,\r\n      diamondclarities,\r\n      productseries,\r\n      gemstontypes,\r\n      gemstonshapes,\r\n      gemstonesettings,\r\n      earringbacking,\r\n      // metalSizeMinToMax\r\n      hashtags,\r\n    };\r\n  },\r\n};\r\n\r\nexport const orderList = {\r\n  query: ORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const userOders = {\r\n  query: USERORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const materialMaster = {\r\n  query: VOUCHERMASTER,\r\n  mapper: (response) => {\r\n    const materials = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const vendors = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const product_categories = response.allMasterProductCategories.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const product_types = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const pricing_components = response.allMasterPricingComponents.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const purities = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const occations = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      alias: _.shortCode,\r\n      diamondtype: _.diamondColor + _.diamondClarity,\r\n    }));\r\n\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._\r\n    // }))\r\n\r\n    // alert(JSON.stringify(product_types))\r\n    return {\r\n      vendors,\r\n      product_categories,\r\n      product_types,\r\n      materials,\r\n      pricing_components,\r\n      collections,\r\n      purities,\r\n      styles,\r\n      themes,\r\n      occations,\r\n      diamondtypes,\r\n      // metalSizeMinToMax\r\n    };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { productCategory } from \"../services/mapper\";\r\nimport { API_URL } from \"../config\";\r\nimport { isString } from \"util\";\r\n\r\nconst TOKEN = \"accesstoken\";\r\n\r\nconst initialNetworkCtx = {\r\n  networkCtx: {\r\n    mapper: productCategory,\r\n    status: {\r\n      called: false,\r\n      data: [],\r\n      loading: true,\r\n      error: false,\r\n      parsedData: [],\r\n    },\r\n    notRequested: true,\r\n  },\r\n  setNetworkCtx: () => null,\r\n  sendNetworkRequest: () => null,\r\n};\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n  url = API_URL + url;\r\n  console.info(\"URL\", url, data);\r\n  const method = data ? \"POST\" : \"GET\",\r\n    headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n  let resdata = null;\r\n  if (auth) {\r\n    const token = localStorage.getItem(TOKEN);\r\n    if (token) headers[\"x-access-token\"] = token;\r\n    // else window.location = '/'\r\n  }\r\n  const response = await fetch(\r\n    url,\r\n    method === \"GET\"\r\n      ? { method }\r\n      : {\r\n          method,\r\n          body: isString(data) ? data : JSON.stringify(data),\r\n          headers,\r\n        }\r\n  );\r\n\r\n  if (response.status < 400) {\r\n    resdata = await response.json();\r\n  } else {\r\n    resdata = await response.json();\r\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n    // {\r\n    //    if(!resdata.auth)\r\n    //    {\r\n    //     //alert(resdata.message)\r\n    //    }\r\n    // }else{\r\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n    // }\r\n  }\r\n  resdata[\"statuscode\"] = response.status;\r\n\r\n  return resdata;\r\n};\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n  const [networkCtx, setNetworkCtx] = React.useState(\r\n    initialNetworkCtx.networkCtx\r\n  );\r\n\r\n  return (\r\n    <NetworkContext.Provider\r\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\r\n    >\r\n      {props.children}\r\n    </NetworkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst DownloadCsv = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [showdownload, setShowDownload] = useState(false);\r\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const fetchCSVdata = async (event, done) => {\r\n    setLoader(true);\r\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n    let responseData = responseCSV.res_json;\r\n\r\n    if (responseCSV.statuscode === 200) {\r\n      let keyData = [];\r\n\r\n      for (const [key] of Object.entries(responseData[0])) {\r\n        keyData.push({ label: key, key: key });\r\n      }\r\n\r\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n      setLoader(false);\r\n      setShowDownload(true);\r\n    }\r\n  };\r\n\r\n  const clearCsv = () => {\r\n    setDataCSV({ keyCSV: [], valueCSV: [] });\r\n    setShowDownload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n          <CircularProgress size={20} />\r\n        </Button>\r\n      ) : showdownload ? (\r\n        <CSVLink\r\n          header={dataCSV.keyCSV}\r\n          data={dataCSV.valueCSV}\r\n          filename={\"product-details.csv\"}\r\n          onClick={() => {\r\n            clearCsv();\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n            Download CSV\r\n          </Button>\r\n        </CSVLink>\r\n      ) : (\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\r\n          Load CSV\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadCsv;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nexport let AlertProps = {\r\n  vertical: {\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n  },\r\n  horizontal: {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    center: \"center\",\r\n  },\r\n  severity: {\r\n    success: \"success\",\r\n    error: \"error\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n  },\r\n};\r\n\r\n/**\r\n * AlertContext store the props which are neccessary to show the Alert component,\r\n * which is provided at the /src/App.js using the /src/App.alert.js.\r\n */\r\nexport let AlertContext = React.createContext({\r\n  open: false,\r\n  severity: AlertProps.severity.success,\r\n  msg: \"\",\r\n  vertical: AlertProps.vertical.top,\r\n  horizontal: AlertProps.horizontal.center,\r\n  onclose: () => null,\r\n  setSnack: () => null,\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AlertContext } from \"../../../context/AlertContext\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst FullCSVData = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [productType, setProductType] = React.useState(\"\");\r\n  const [include, setInclude] = React.useState(false);\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((res) => {\r\n        setOptions(\r\n          res.data.type.nodes.filter((i) => i.name).map((i) => i.name)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const onDownload = () => {\r\n    if (productType == null) {\r\n      return snack.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Please choose a product type!\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType, include })\r\n      .then((data) => {\r\n        exportFromJSON({\r\n          data,\r\n          fileName: `${productType}`,\r\n          exportType: \"xls\",\r\n        });\r\n        setOpen(false);\r\n        setLoader(false);\r\n        setProductType(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setOpen(false);\r\n        setLoader(false);\r\n        return snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occurred while downloading, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ marginRight: \"8px\" }}\r\n      >\r\n        Full Data Download\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Choose Product Type to download data?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"type\"\r\n            options={options}\r\n            value={productType}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={(e, value) => {\r\n              setProductType(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product Type\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={include}\r\n                onChange={() => {\r\n                  setInclude(!include);\r\n                }}\r\n                color=\"primary\"\r\n                name=\"include\"\r\n              />\r\n            }\r\n            label={\"Include disabled products\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {loader && <CircularProgress size={28} />}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onDownload} color=\"primary\">\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FullCSVData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DownloadCsv from \"./components/downloadcsv\";\r\nimport { Search, Filter } from \"./components\";\r\nimport FullCSVData from \"./components/FullCSVData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Grid container>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\r\n          <Grid>\r\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\r\n              <FilterListIcon className={classes.filterIcon} /> Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n//MuiAlert component which is shown inside the Snackbar component\r\nlet Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport const Alerts = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.onclose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      id=\"main_alert_snackbar\"\r\n      anchorOrigin={{\r\n        vertical: props.vertical,\r\n        horizontal: props.horizontal,\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\r\n        {props.msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\",\r\n    marginBottom:\"60px\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { TableCell, TableRow, Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport parse from \"html-react-parser\";\r\nimport moment from \"moment\";\r\n\r\nconst getComponent = (data) => {\r\n  switch (data.type) {\r\n    case \"TEXT\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: data?.customWidth ? data?.customWidth : \"\",\r\n            lineBreak: data?.customWidth ? \"anywhere\" : \"unset\",\r\n          }}\r\n        >\r\n          {data.rowData}\r\n        </div>\r\n      );\r\n    }\r\n    case \"HTMLTEXT\": {\r\n      return <div>{parse(data.rowData)}</div>;\r\n    }\r\n    case \"INCREMENT\": {\r\n      return <div>{data.rowIndex + 1}</div>;\r\n    }\r\n    case \"TOTAL_STORES\": {\r\n      return <div>{data?.rowData?.length}</div>;\r\n    }\r\n    case \"VIEW_STORES\": {\r\n      return (\r\n        <div\r\n          style={{ color: \"blue\", cursor: \"pointer\", textDecoration: \"underline\" }}\r\n          onClick={data?.handleViewStores}\r\n        >\r\n          {data?.customText ?? \"View Details\"}\r\n        </div>\r\n      );\r\n    }\r\n    case \"MBL_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"WEB_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"ACTION\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 6,\r\n          }}\r\n        >\r\n          <EditIcon onClick={data?.handleEdit} style={{ cursor: \"pointer\" }} />\r\n          <DeleteIcon onClick={data?.handleDelete} style={{ color: \"red\", cursor: \"pointer\" }} />\r\n        </div>\r\n      );\r\n    }\r\n    case \"EDIT\": {\r\n      return (\r\n        <EditIcon style={{ cursor: \"pointer\" }} onClick={data?.handleEdit} />\r\n      );\r\n    }\r\n    case \"BUTTON_ARRAY\": {\r\n      return (\r\n        <div>\r\n          {data.rowData.map((val) => (\r\n            <div style={{ paddingBottom: \"4px\" }}>\r\n              <div>{val.name}</div>\r\n              {val.url.length > 0 && (\r\n                <div style={{ color: \"blue\" }}>{val.url}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      );\r\n    }\r\n    case \"DATE_PICKER\": {\r\n      return (\r\n        <div>\r\n          <Typography>\r\n            {data.rowData ? moment(data.rowData).format(\"MMMM DD, YYYY\") : \"-\"}\r\n          </Typography>\r\n        </div>\r\n      );\r\n    }\r\n    case \"ARRAYTEXT\": {\r\n      return (\r\n        data?.rowData?.map((_) => {\r\n          return <Typography>\r\n            <div>{_.name}</div>\r\n            {_.url.length > 0 && <div style={{ color: \"blue\" }}>{_.url}</div>}\r\n          </Typography>\r\n        })\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nconst TableBodyRow = ({\r\n  tableData = [],\r\n  rowData = {},\r\n  rowIndex = null,\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      {tableData.map((val, i) => (\r\n        <TableCell>\r\n          {getComponent({\r\n            type: val.type,\r\n            rowData: rowData[val.name],\r\n            rowIndex: rowIndex,\r\n            handleViewStores: (e) => {\r\n              handleViewStores(e, rowData, rowIndex);\r\n            },\r\n            handleDelete: (e) => {\r\n              handleDelete(e, rowData, rowIndex);\r\n            },\r\n            handleEdit: (e) => {\r\n              handleEdit(e, rowData, rowIndex);\r\n            },\r\n            customWidth: val?.width,\r\n            customText:val?.customName\r\n          })}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableBodyRow;\r\n","import {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Link,\r\n  Button,\r\n  Table,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport TableBodyRow from \"./TableBodyRow\";\r\n\r\nconst TableComp = ({\r\n  header = [],\r\n  tableData = [],\r\n  data = [],\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tableWrapper}>\r\n      <Table\r\n        className={classes.table}\r\n        border={1}\r\n        borderColor={\"#ddd\"}\r\n        size=\"small\"\r\n        stickyHeader\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {header?.map((val) => (\r\n              <TableCell>{val}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ?\r\n          <TableBody>\r\n            {data.map((val, index) => (\r\n              <TableBodyRow\r\n                tableData={tableData}\r\n                rowData={val}\r\n                rowIndex={index}\r\n                handleViewStores={handleViewStores}\r\n                handleDelete={handleDelete}\r\n                handleEdit={handleEdit}\r\n              />\r\n            ))}\r\n          </TableBody> :\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              padding: \"10px 0px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\"> No data Found </Typography>\r\n          </div>}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComp;\r\n","import React, { useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n// CSS Modules, react-datepicker-cssmodules.css\r\n// import 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\n\r\nexport const DatePickerComp = (props) => {\r\n  console.log(props?.value , \"ll\")\r\n  return (\r\n    <DatePicker selected={props?.value ? new Date(props?.value):null} onChange={(date) => props?.onChange(date)} />\r\n  );\r\n};\r\n\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLFEATUREDPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\r\n\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEFEATUREDPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETEFEATUREDPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATEFEATUREDPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Featured Product\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\n\r\nimport { Breadcrumbs } from \"../index\";\r\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <FeaturedProductComponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLNEWARRIVALPRODUCT,\r\n  CREATENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLNEWARRIVALPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allNewArrivalProducts.nodes;\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVENEWARRIVALPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETENEWARRIVALPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATENEWARRIVALPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - New Arrival\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./component/NewarrivalComponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { REVIEWQUERY } from \"../../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_sku\", label: \"Product Sku\" },\r\n  { id: \"customerName\", label: \"customer Name\" },\r\n  { id: \"rating\", label: \"Rating\" },\r\n  { id: \"title\", label: \"Title\" },\r\n  { id: \"message\", label: \"Message\" },\r\n  { id: \"ispublish\", label: \"Publish\" },\r\n  { id: \"isactive\", label: \"Active\" },\r\n];\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\r\n    updateCustomerReviewById(\r\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\r\n    ) {\r\n      customerReview {\r\n        id\r\n        isActive\r\n        message\r\n        productId\r\n        title\r\n        customerName\r\n        productSku\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\r\n  updateCustomerReviewById(\r\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\r\n  ) {\r\n    customerReview {\r\n      id\r\n      isPublish\r\n      message\r\n      productId\r\n      title\r\n      customerName\r\n      productSku\r\n      rating\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CustomerReview = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [allReview, setAllReview] = useState([]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: REVIEWQUERY }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allCustomerReviews.nodes;\r\n        console.log(data);\r\n        setAllReview(data);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleChangeIsPublish = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISPUBLISHREVIEW,\r\n        variables: { id: Id, isPublish: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChangeIsActive = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEREVIEW,\r\n        variables: { id: Id, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allReview\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\r\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\r\n                  <TableCell align=\"left\">{row.rating}</TableCell>\r\n                  <TableCell align=\"left\">{row.title}</TableCell>\r\n                  <TableCell align=\"left\">{row.message}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isPublish ?? false}\r\n                      onChange={handleChangeIsPublish(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isActive ?? false}\r\n                      onChange={handleChangeIsActive(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={allReview.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CustomerReview;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst productuploadCtxInitial = {\r\n  productCtx: {\r\n    product_categoy: \"\",\r\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\r\n    product_type: [],\r\n    productname: \"\",\r\n    material: \"\",\r\n    description: \"\",\r\n    minOrderQty: \"\",\r\n    maxOrderQty: \"\",\r\n    height: \"\",\r\n    length: \"\",\r\n    earringbacking: [],\r\n    product_type_shortcode: \"\",\r\n    category: [],\r\n    metalColour: \"\",\r\n    metalpurities: \"\",\r\n    isExpand: false,\r\n    selectedgender: \"\",\r\n    selected_metal_colour: {},\r\n    gender: {},\r\n    product_gender: [],\r\n    vendorcode: [],\r\n    productseries: [],\r\n    size: 0,\r\n    sizes: [],\r\n    selected_sizes: [],\r\n    productSize: [],\r\n    masterProductSize: [],\r\n    metal: {\r\n      value: 1,\r\n      label: \"Diamond\",\r\n    },\r\n    materials: [\r\n      \"Diamond\",\r\n      \"Gold\",\r\n      \"Gemstone\",\r\n      \"Solitaire\",\r\n      \"Silver\",\r\n      \"Platinum\",\r\n    ],\r\n    gemstontypes: \"\",\r\n    gemstonshapes: \"\",\r\n    product_code: \"\",\r\n    isactive: false,\r\n    gemstonelist: [],\r\n    diamondlist: [],\r\n    variants: [],\r\n    oldproductMetalColor: [],\r\n    oldproductMetalPurity: [],\r\n    productMetalColor: [],\r\n    productMetalPurity: [],\r\n    productDiamondColor: [],\r\n    productDiamondClarity: [],\r\n    productDiamondTypes: [],\r\n    productImages: [],\r\n    productDiamondTypesArray: [],\r\n    oldproductDiamondTypesArray: [],\r\n    productmaterials: [],\r\n    createVariantList: [],\r\n    editVariants: [],\r\n    editDiamondLists: [],\r\n    editGemstoneLists: [],\r\n    productVariantSize: [\r\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\r\n    ],\r\n    variant_size: [],\r\n    gemstonetype: \"\",\r\n    gemstoneshape: \"\",\r\n    gemstonesettings: \"\",\r\n    gemstonesize: \"\",\r\n    gemstonecount: \"\",\r\n    gemstoneweight: \"\",\r\n    stonetype: \"\",\r\n    isactiveVariant: \"\",\r\n    editleadtime: \"\",\r\n    editreadytoship: false,\r\n    editisdefault: false,\r\n    editisactive: null,\r\n\r\n    editcostprice: 0,\r\n    editsellingprice: 0,\r\n    editmarkupprice: 0,\r\n    editdiscountprice: 0,\r\n    editcostpricetax: 0,\r\n    editsellingpricetax: 0,\r\n    editmarkuppricetax: 0,\r\n    editdiscountpricetax: 0,\r\n\r\n    diamondclarity: \"\",\r\n    diamondcolor: \"\",\r\n    diamondsettings: \"\",\r\n    diamondshape: \"\",\r\n    diamondcount: \"\",\r\n    diamondweight: \"\",\r\n    diamonditemname: \"\",\r\n    diamondsubitemname: \"\",\r\n    diamonddescription: \"\",\r\n    gemstoneitemname: \"\",\r\n    gemstonesubitemname: \"\",\r\n    gemstonedescription: \"\",\r\n    metalindex: -1,\r\n    themes: [],\r\n    prod_styles: [],\r\n    occassions: [],\r\n    collections: [],\r\n    hashtags: [],\r\n    stonecount: [],\r\n    stonecolour: [],\r\n    product_images: {},\r\n    metalcolour: [],\r\n    metal_purity: [],\r\n    metalpurity: [],\r\n    metal_color: 0,\r\n    metal_weight: 0,\r\n    diamond_colour: 0,\r\n    diamond_clarity: 0,\r\n    metal_height: 0,\r\n    metal_width: 0,\r\n    metal_length: 0,\r\n    metal_object: 0,\r\n    diamondtype: 0,\r\n    metals: [],\r\n    error_message: {},\r\n    showPriceBreakup: null,\r\n  },\r\n  masterData: {},\r\n  setProductCtx: () => null,\r\n};\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n  return productuploadCtxInitial.productCtx;\r\n};\r\n\r\nexport const ProductProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [productCtx, setProductCtx] = React.useState(\r\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\r\n  );\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"productCtx s\", productCtx);\r\n  }, [productCtx.material]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        productCtx,\r\n        setProductCtx,\r\n        masterData: mapDataToCtx(\r\n          props.value.data,\r\n          props.value.mapper,\r\n          props.value.mappertype\r\n        ),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst voucherCtxInitial = {\r\n    voucherCtx: {\r\n        voucher:\"\",\r\n        attrobj:{}\r\n    },\r\n    voucherMaster: {\r\n        materials: []\r\n    },\r\n    setVoucherCtx: () => null\r\n}\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n\r\n    return voucherCtxInitial.voucherCtx;\r\n}\r\n\r\nexport const VoucherProvider = props => {\r\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',voucherCtx);\r\n    },[voucherCtx.voucher])\r\n\r\n    return(\r\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </VoucherContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst orderCtxInitial = {\r\n  orderCtx: {},\r\n  orderMaster: {\r\n    orders: [],\r\n  },\r\n  setOrderCtx: () => null,\r\n};\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\r\n\r\n  return orderCtxInitial.orderCtx;\r\n};\r\n\r\nexport const OrderProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"orderCtx s\", orderCtx);\r\n  }, [orderCtx.order]);\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\r\n    >\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { CATGORYLIST } from \"../../../../graphql/query\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  const [editcontent, setEditcontent] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias: vendordata.alias,\r\n      name: vendordata.name,\r\n      isedit: true,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\r\n  }\r\n  async function Savevendor(refetch) {}\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    props.onCancel();\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card>\r\n        <CardHeader title=\"Category\" />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n\r\n                  <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                  <TableCell align=\"left\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={(data) =>\r\n                      setPageCount(data.allMasterProductCategories.totalCount)\r\n                    }\r\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\r\n                  >\r\n                    {({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                        // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>;\r\n                        // return false\r\n                      }\r\n                      if (data) {\r\n                        return (\r\n                          <>\r\n                            {data.allMasterProductCategories.nodes.map(\r\n                              (row, index) => (\r\n                                <>\r\n                                  {index == 0 && props.isadd ? (\r\n                                    <TableRow key={row.name}>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => Cancelcreate()}>\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  ) : null}\r\n                                  <TableRow key={row.name}>\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"categoryname\"\r\n                                          name=\"categoryname\"\r\n                                          value={editcontent.name}\r\n                                          onChange={handleInputChange(\"name\")}\r\n                                          label=\"Name\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.name}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"alias\"\r\n                                          name=\"alias\"\r\n                                          value={editcontent.alias}\r\n                                          onChange={handleInputChange(\"alias\")}\r\n                                          label=\"alias\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.shortCode}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button\r\n                                          onClick={(e) => CancelEdit(row)}\r\n                                        >\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        onClick={(e) => Editvendor(row)}\r\n                                        style={{ width: 20 }}\r\n                                      >\r\n                                        <Button>\r\n                                          <EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                </>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return <div>{\"Fetch Products\"}</div>;\r\n                      }\r\n                    }}\r\n                  </Query>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Configuration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Daily Metal Rate\",\r\n    \"Countries & Fx Rates\",\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"daily_metal_rate\",\r\n    \"countries\",\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Configure\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {master_options.map((text, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link\r\n            underline=\"none\"\r\n            component={RouterLink}\r\n            to={master_options_url[index]}\r\n          >\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {text}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Configuration;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n \r\n  console.log(props);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label ? headCell.label : headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  colors, Dialog,\r\n\r\n\r\n  FormControlLabel,\r\n  Grid, Switch,\r\n\r\n\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\nimport \"../../tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  },\r\n}));\r\n\r\nconst EditContent = (props) => {\r\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond,\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  function previewimage(url) {\r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const toggleChecked = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\r\n  };\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => { }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          {attributes.map((columnname, index) => (\r\n            <>\r\n              {showpreview && (\r\n                <Lightbox\r\n                  class=\"fade\"\r\n                  mainSrc={previewurl}\r\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\r\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                  onCloseRequest={() => setShowpreview(false)}\r\n                  onMovePrevRequest={() => alert(\"prev\")}\r\n                  onMoveNextRequest={() => alert(\"next\")}\r\n                />\r\n              )}\r\n              <Grid container xs={12} spacing={2}>\r\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n\r\n                {columnname.key == \"email\" && !diamond.isedit ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.type === 2 && (\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      label={columnname.key}\r\n                      labelPlacement=\"start\"\r\n                      control={\r\n                        <Switch\r\n                          checked={editcontent[columnname.key]}\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                          onChange={toggleChecked(columnname.key)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {columnname.type === 3 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"combo-box-demo\"\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 4 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography> {diamond[columnname.key]}</Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 5 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"combo-box-demo\"\r\n                      // options={props.masters[columnname.mastervaluekey]}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 6 && (\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                      {columnname.controllabel}\r\n                    </Button>{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 9 && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={12}>\r\n                      <AvatarGroup max={2}>\r\n                        {diamond[columnname.key]\r\n                          ? diamond[columnname.key]\r\n                            .split(\",\")\r\n                            .map((diamond, index) => (\r\n                              <Avatar\r\n                                alt=\"Remy Sharp\"\r\n                                src={diamond}\r\n                                onClick={() => previewimage(diamond)}\r\n                                className={classes.small}\r\n                              />\r\n                            ))\r\n                          : null}\r\n                      </AvatarGroup>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FilePond\r\n                        style={{ height: \"100\", width: \"100\" }}\r\n                        oninit={() => handleInit()}\r\n                        labelIdle=\"Add Banner Image\"\r\n                        onaddfile={(error, fileItem) => {\r\n                          if (!error) {\r\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\r\n                          } else {\r\n                            // alert(row[columnname.key])\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => onClose()} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditContent;\r\n","import { Button, Grid, Paper, Switch, TextField } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditContent from \"./components/EditContent\";\r\nimport \"./tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Vendor = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [masterlist, setMasterlist] = React.useState(props.values);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editEmail, setEditEmail] = React.useState(false);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [isedit, setIsedit] = React.useState(false);\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const [aliasName, setaliasName] = React.useState(\"\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function addnewvendor() {\r\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\r\n    setaliasName(props.prefix + sort_id);\r\n\r\n    setEditcontent({\r\n      alias: aliasName,\r\n      ...editcontent,\r\n      isedit: false,\r\n    });\r\n\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n    setIsadd(true);\r\n    setOpenedit(true);\r\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n  }\r\n  Array.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditEmail(true);\r\n    delete vendordata[\"action\"];\r\n\r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit: true,\r\n    });\r\n    setOpenedit(true);\r\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n  }\r\n  async function Savevendor(content) {\r\n    props.onCreate(content);\r\n    setIsadd(false);\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n    // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function searrchcontent() {\r\n    props.onSearch(\r\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\r\n    );\r\n  }\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n  function removeimage(imagename, keyvalue) {\r\n    let previmagenames = editcontent[keyvalue];\r\n    let newimages = [];\r\n    let previmages = previmagenames.split(\",\");\r\n    previmages.forEach((element) => {\r\n      if (element == imagename) {\r\n      } else {\r\n        newimages.push(element);\r\n      }\r\n    });\r\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    if (isadd) {\r\n      let masters = masterlist;\r\n\r\n      masters.splice(0, 1);\r\n      setMasterlist(masterlist);\r\n    }\r\n    setIsadd(false);\r\n    setEditcontent({});\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleSearchChange = (type) => (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  const handleChange = (type) => (event) => {\r\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl =\r\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  useEffect(() => {\r\n    setMasterlist(props.values);\r\n  }, [props.values]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  }\r\n  function previewimage(url) {\r\n    setpreviewurl(url);\r\n    setShowpreview(true);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showpreview && (\r\n        <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n          // nextSrc={images[(photoIndex + 1) % images.length]}\r\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={() => setShowpreview(false)}\r\n          onMovePrevRequest={() => alert(\"prev\")}\r\n          onMoveNextRequest={() => alert(\"next\")}\r\n        />\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={3} sm={3}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\r\n            <Grid fullwidth item xs={9} sm={9}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                id=\"vendordeliverydays\"\r\n                name=\"vendordeliverydays\"\r\n                //  /  value={editcontent.searchcontent}\r\n                onChange={handleInputChange(\"searchcontent\")}\r\n                label=\"Search text\"\r\n              />\r\n            </Grid>\r\n            <Grid fullwidth item xs={3} sm={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => searrchcontent()}\r\n                color=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            {props?.fxSyncAPI && (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => props.fxSyncAPI()}\r\n                color=\"primary\"\r\n              >\r\n                Sync Latest Fx Rate\r\n              </Button>\r\n            )}\r\n            {props.button_title ? (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => addnewvendor()}\r\n                color=\"primary\"\r\n              >\r\n                {props.button_title}\r\n              </Button>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n            <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {masterlist.map((row, index) => (\r\n                <>\r\n                  <TableRow>\r\n                    {props.columns.map((columnname, index) => (\r\n                      <>\r\n                        {columnname.key === \"action\" ? (\r\n                          <TableCell align=\"center\" style={{ width: 20 }}>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <>\r\n                                <Button onClick={(e) => Savevendor()}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <Button onClick={(e) => Editvendor(row)}>\r\n                                <EditIcon />\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                        ) : (\r\n                          <>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell align=\"left\">\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    onChange={handleChange(columnname.key)}\r\n                                    checked={editcontent[columnname.key]}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button variant=\"outlined\" color=\"primary\">\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type == 3 ? (\r\n                                  <Autocomplete\r\n                                    multiple\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 9 ? (\r\n                                  <>\r\n                                    <FilePond\r\n                                      oninit={() => handleInit()}\r\n                                      labelIdle=\"Add Banner Image\"\r\n                                      onaddfile={(error, fileItem) => {\r\n                                        if (!error) {\r\n                                          uploadimagetoserver(\r\n                                            fileItem,\r\n                                            columnname.key,\r\n                                            \"add\"\r\n                                          );\r\n                                        } else {\r\n                                          // alert(row[columnname.key])\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <div className={classes.imagecontainer}>\r\n                                      {editcontent[columnname.key]\r\n                                        ? editcontent[columnname.key]\r\n                                            .split(\",\")\r\n                                            .map((row, index) => (\r\n                                              <Badge\r\n                                                overlap=\"circle\"\r\n                                                anchorOrigin={{\r\n                                                  vertical: \"top\",\r\n                                                  horizontal: \"right\",\r\n                                                }}\r\n                                                badgeContent={\r\n                                                  <HighlightOffIcon\r\n                                                    fontSize=\"small\"\r\n                                                    onClick={() =>\r\n                                                      removeimage(\r\n                                                        row,\r\n                                                        columnname.key\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                }\r\n                                              >\r\n                                                <Avatar\r\n                                                  alt=\"Remy Sharp\"\r\n                                                  src={row}\r\n                                                  className={classes.small}\r\n                                                />\r\n                                              </Badge>\r\n                                            ))\r\n                                        : null}\r\n                                    </div>\r\n                                  </>\r\n                                ) : null}\r\n                                {columnname.type == 5 ? (\r\n                                  <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    // options={\r\n                                    //   props.masters[columnname.mastervaluekey]\r\n                                    // }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 4 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {!columnname.type || columnname.type == 1 ? (\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    id={columnname.key}\r\n                                    name={columnname.key}\r\n                                    value={editcontent[columnname.key]}\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    label={columnname.label}\r\n                                  />\r\n                                ) : null}{\" \"}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>\r\n                                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n\r\n                                {columnname.type === 9 ? (\r\n                                  <AvatarGroup max={2}>\r\n                                    {row[columnname.key]\r\n                                      ? row[columnname.key]\r\n                                          .split(\",\")\r\n                                          .map((row, index) => (\r\n                                            <Avatar\r\n                                              alt=\"Remy Sharp\"\r\n                                              src={row}\r\n                                              onClick={() => previewimage(row)}\r\n                                              className={classes.small}\r\n                                            />\r\n                                          ))\r\n                                      : null}{\" \"}\r\n                                    {/* className={classes.small} />)) : null } */}\r\n                                  </AvatarGroup>\r\n                                ) : null}\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    checked={row[columnname.key]}\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type != 2 &&\r\n                                columnname.type != 6 &&\r\n                                columnname.type != 8 &&\r\n                                columnname.type != 9 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ))}\r\n                  </TableRow>\r\n                </>\r\n              ))}\r\n\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 200, 500]}\r\n                  count={[props.values.length]}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  // ActionsComponent={TablePaginationActions}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          {editcontent && (\r\n            <EditContent\r\n              diamond={editcontent}\r\n              attributes={props.columns}\r\n              title={props.title}\r\n              masters={props.masters}\r\n              onApply={Savevendor}\r\n              onClose={handleApplicationClose}\r\n              open={openedit}\r\n              prefix={aliasName}\r\n              editemail={editEmail}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import gql from \"graphql-tag\";\r\n\r\nlet CREATE_HOLIDAY = gql`\r\n  mutation ($item: HolidayManagerInput!) {\r\n    createHolidayManager(input: { holidayManager: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_HOLIDAY = gql`\r\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\r\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_HOLIDAY = gql`\r\n  mutation ($id: Int!) {\r\n    deleteHolidayManagerById(input: { id: $id }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_WAREHOUSE = gql`\r\n  mutation ($item: WarehouseInput!) {\r\n    createWarehouse(input: { warehouse: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_WAREHOUSE = gql`\r\n  mutation ($id: Int!, $item: WarehousePatch!) {\r\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_WAREHOUSE = gql`\r\n  mutation ($id: Int!) {\r\n    deleteWarehouseById(input: { id: $id }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_INVENTORY = gql`\r\n  mutation ($item: InventoryInput!) {\r\n    createInventory(input: { inventory: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_INVENTORY = gql`\r\n  mutation ($id: UUID!, $item: InventoryPatch!) {\r\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_INVENTORY = gql`\r\n  mutation ($id: UUID!) {\r\n    deleteInventoryById(input: { id: $id }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_ORDER = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $awbNumber: String\r\n    $comments: String\r\n    $orderStatus: String\r\n    $paymentStatus: String\r\n  ) {\r\n    updateOrderById(\r\n      input: {\r\n        orderPatch: {\r\n          awbNumber: $awbNumber\r\n          comments: $comments\r\n          orderStatus: $orderStatus\r\n          paymentStatus: $paymentStatus\r\n        }\r\n        id: $id\r\n      }\r\n    ) {\r\n      order {\r\n        id\r\n        paymentStatus\r\n        awbNumber\r\n        paymentMode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $updatedAt: Datetime!\r\n    $isActive: Boolean\r\n    $date: Datetime\r\n    $startDate: Date\r\n  ) {\r\n    createAppointmentDate(\r\n      input: {\r\n        appointmentDate: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          startDateTime: $date\r\n          endDateTime: $date\r\n          isActive: $isActive\r\n          startDate: $startDate\r\n          endDate: $startDate\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDate {\r\n        createdAt\r\n        createdBy\r\n        isActive\r\n        updatedBy\r\n        startDateTime\r\n        id\r\n        endDateTime\r\n        isUnavailable\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $startDateTime: Datetime\r\n    $endDateTime: Datetime\r\n    $appointmentDateId: UUID\r\n    $updatedAt: Datetime!\r\n    $startTime: Time\r\n    $endTime: Time\r\n    $appointmentTypeId : Int!\r\n  ) {\r\n    createAppointmentDateTimeSlot(\r\n      input: {\r\n        appointmentDateTimeSlot: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          endDateTime: $endDateTime\r\n          startDateTime: $startDateTime\r\n          isActive: true\r\n          appointmentDateId: $appointmentDateId\r\n          startTime: $startTime\r\n          endTime: $endTime\r\n          appointmentTypeId : $appointmentTypeId\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDateTime\r\n        endDateTime\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateTimeSlotById(input: { id: $id }) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDate\r\n        endDate\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DELETE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateById(input: { id: $id }) {\r\n      appointmentDate {\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREATE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  CREATE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  CREATE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_ORDER,\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HolidayModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Holiday\"}\r\n              name=\"holiday\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.holiday}\r\n              onChange={props.editItem}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className={classes.inputField}\r\n                label={\"Date\"}\r\n                name=\"date\"\r\n                fullWidth\r\n                inputVariant=\"outlined\"\r\n                value={props.item.date}\r\n                onChange={(_, value) => props.editItem(value, \"date\")}\r\n                format={\"yyyy-MM-dd\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HolidayModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n} from \"../../graphql/mutation\";\r\nimport { HOLIDAYLIST } from \"../../graphql/query\";\r\nimport HolidayModal from \"./HolidayModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const HolidayManager = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    HOLIDAYLIST,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\r\n\r\n  const editItem = (event, type) => {\r\n    var name, value;\r\n    if (type == \"date\") {\r\n      name = type;\r\n      value = event;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ holiday: \"\", date: null });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type == \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_HOLIDAY,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    // console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addholidays\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully added holidays!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Holiday Manager</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Holidays\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/holidays.csv\";\r\n            a.setAttribute(\"download\", \"holidays.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Holiday\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Holiday</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Holidays found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allHolidayManagers?.nodes.length > 0 &&\r\n                data?.allHolidayManagers?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.holiday}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allHolidayManagers?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <HolidayModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InventoryModal = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n\r\n  const client = useApolloClient();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const validateGeneratedSku = (generatedSku) => {\r\n    client\r\n      .mutate({\r\n        mutation: VALIDATEGENERATEDSKU,\r\n        variables: { generatedSku },\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\r\n          setError(\"Tag No doesn't exists!\");\r\n        } else {\r\n          setError(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              label={\"Tag No\"}\r\n              name=\"generatedSku\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.generatedSku}\r\n              onChange={props.editItem}\r\n              error={Boolean(error)}\r\n              helperText={error}\r\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              type={\"Number\"}\r\n              label={\"Quantity\"}\r\n              name=\"numberOfItems\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.numberOfItems}\r\n              onChange={props.editItem}\r\n            />\r\n            <Autocomplete\r\n              loading={loading}\r\n              options={data?.allWarehouses?.nodes}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name}\r\n              value={props.item.warehouse}\r\n              onChange={props.editItem}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Warehouse\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InventoryModal;\r\n","import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n} from \"../../graphql/mutation\";\r\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\r\nimport InventoryModal from \"./InventoryModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StockStatus = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery(STOCKSTATUS);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allWarehouses.nodes.length > 0 &&\r\n        data.allWarehouses.nodes.map((item, index) => (\r\n          <Badge\r\n            badgeContent={\r\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\r\n            }\r\n            max={99999999}\r\n            color={\"error\"}\r\n            key={index}\r\n            component=\"div\"\r\n            className={classes.iconButton}\r\n            overlap=\"circle\"\r\n          >\r\n            <IconButton\r\n              disableRipple\r\n              className={classes.icon}\r\n              onClick={() => {\r\n                props.setWarehouse(item?.name);\r\n              }}\r\n            >\r\n              <StoreIcon\r\n                style={{ fontSize: 35 }}\r\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\r\n          </Badge>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Inventory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [search, setSearch] = React.useState(null);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    INVENTORYLIST,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        filter: {\r\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\r\n          warehouseByWarehouseId: {\r\n            name: {\r\n              includesInsensitive: warehouse,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({\r\n    generatedSku: \"\",\r\n    numberOfItems: \"\",\r\n    warehouse: { id: \"\", name: \"\" },\r\n  });\r\n\r\n  const editItem = (event, newValue) => {\r\n    var name, value;\r\n    if (newValue) {\r\n      console.log(newValue);\r\n      name = \"warehouse\";\r\n      value = newValue;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_INVENTORY,\r\n          variables: {\r\n            id,\r\n            item: {\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n              updatedAt: new Date(),\r\n            },\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_INVENTORY,\r\n          variables: {\r\n            item: {\r\n              id: uuid(),\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_INVENTORY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addinventories\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Inventory</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Inventory\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/inventory.csv\";\r\n            a.setAttribute(\"download\", \"inventory.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n            setItem({\r\n              generatedSku: \"\",\r\n              numberOfItems: \"\",\r\n              warehouse: { id: \"\", name: \"\" },\r\n            });\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Inventory\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          name=\"tagno\"\r\n          placeholder=\"Search Tag No.\"\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Tag No</TableCell>\r\n                <TableCell align={\"center\"}>Quantity</TableCell>\r\n                <TableCell align={\"center\"}>Warehouse</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allInventories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No items in inventory!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allInventories?.nodes.length > 0 &&\r\n                data?.allInventories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.generatedSku}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.numberOfItems}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.warehouse.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={6}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allInventories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <InventoryModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport gradients from '../../../../utils/gradients';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { GlobalContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n   \r\n  },\r\n  card: {\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n   const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(formState.isValid)\r\n    {\r\n      //alert(JSON.stringify(formState.values))\r\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\r\n   \r\n   if(signinobj.statuscode === 200)\r\n   {\r\n    localStorage.setItem('accesstoken', signinobj.accessToken);\r\n\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      // pagepermissions[element.pageurl] = {\r\n      //   isread : element.is_view,\r\n      //   iswrite : element.is_write\r\n      // }\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n    localStorage.setItem('accesspages', pages);\r\n    localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    \r\n    props.history.push('/productlist')\r\n\r\n\r\n   }else\r\n   {\r\n\r\n    setShowmessage(signinobj.message)\r\n    setOpen(true);\r\n   }\r\n  \r\n    }else{\r\n      alert(\"has some error\")\r\n    }\r\n\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n        Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n        {/* Sign in on the internal platform */}\r\n        </Typography>\r\n        \r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError('email')}\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              \r\n              onChange={handleChange}\r\n              value={formState.values.email || ''}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError('password')}\r\n              fullWidth\r\n              helperText={\r\n                hasError('password') ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || ''}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n        Log in\r\n          </Button>\r\n          <Snackbar open={open} autoHideDuration={6000}\r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n          onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n             {showmessage}\r\n            </Alert>\r\n      </Snackbar>\r\n        </form>\r\n       \r\n      </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Input} from '../../components/Input.js'\r\nimport Page from '../../components/Page'\r\n\r\nimport \"./Login.css\"\r\nimport { LoginForm } from './components';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n   \r\n  render() {\r\n  return (\r\n    <Page\r\n    className='root'\r\n      title=\"Login\"\r\n    >\r\n    <LoginForm />\r\n        </Page>\r\n         \r\n  );\r\n}\r\n}\r\n\r\n\r\n  \r\n  export default (withRouter(Login));","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Manageadminusers = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [masterroles, setMasterroles] = React.useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let roles = [];\r\n    taxcontent.roles.forEach((element) => {\r\n      roles.push(element.name);\r\n    });\r\n    let bodydata = {\r\n      username: taxcontent.username,\r\n      password: \"123456789\",\r\n      email: taxcontent.email,\r\n      roles: roles,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  async function getmasterroles() {\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n\r\n    setMasterroles(response.roles);\r\n\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\r\n    let adminusers = response.users;\r\n    let users = [];\r\n    adminusers.forEach((element) => {\r\n      let userobj = {};\r\n      userobj[\"id\"] = element.id;\r\n      userobj[\"username\"] = element.username;\r\n      userobj[\"password\"] = element.password;\r\n      userobj[\"email\"] = element.email;\r\n      userobj[\"mobile\"] = element.mobile;\r\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\r\n      let roles = [];\r\n      let rolesnames = [];\r\n\r\n      let userroles = element.user_roles;\r\n      userroles.forEach((userroleobj) => {\r\n        let roleobj = {};\r\n        roleobj[\"id\"] = userroleobj.master_role.id;\r\n        roleobj[\"name\"] = userroleobj.master_role.name;\r\n        roles.push(roleobj);\r\n        rolesnames.push(userroleobj.master_role.name);\r\n      });\r\n      userobj[\"roles\"] = roles;\r\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\r\n      users.push(userobj);\r\n    });\r\n\r\n    setFiltervalue(users);\r\n    setMastervalue(users);\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Admin Users\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          masters={masterroles}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Manageadminusers;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst SheduleModal = (props) => {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Schedule-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Shedule-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`Add Schedule Date`}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.inputField}\r\n            name=\"date\"\r\n            placeholder=\"Select a date\"\r\n            fullWidth\r\n            inputVariant=\"outlined\"\r\n            value={props.date ?? null}\r\n            onChange={(_, value) => props.editItem(value)}\r\n            minDate={new Date()}\r\n            format={\"yyyy-MM-dd\"}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          Save\r\n        </Button>\r\n\r\n        <Button onClick={props.onClose} variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModal;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  datecard: {\r\n    backgroundColor: \"white\",\r\n    padding: \"15px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px #c1c1c1\",\r\n    position:\"relative\"\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    fontSize: \"22px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  available: {\r\n    fontSize: \"20px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  availableTitle:{\r\n    fontSize: \"20px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  time: {\r\n    fontSize: \"16px\",\r\n  },\r\n  notchedOutline:{\r\n   width:\"20%\"\r\n  },\r\n  day:{\r\n    fontSize:\"14px\"\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst SheduleModalShow = (props) => {\r\n  const classes = useStyles();\r\n  const {appointmentTypes} = props;\r\n\r\n  const getTime=(time)=>{\r\n    let x = time;\r\n    const [ hour,minute,second] = x.split(\":\");\r\n    let d = new Date();\r\n    d.setHours(hour);\r\n    d.setMinutes(minute);\r\n    d.setSeconds(second)\r\n    return moment(d).format('hh:mm a');\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.close}\r\n      maxWidth=\"md\"\r\n      fullWidth={true}\r\n    >\r\n       <Backdrop className={classes.backdrop} open={props.loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <DialogTitle id=\"Schedule-Modal\">\r\n      <div style={{display:\"flex\",justifyContent:\"space-between\",}}>\r\n           <Typography className={classes.availableTitle}>\r\n            Available Timing - ({moment(props.date).format(\"MMM\")} -\r\n          {moment(props.date).format(\"DD\")} -\r\n          {moment(props.date).format(\"YYYY\")})\r\n          </Typography>\r\n          <Select\r\n                className={classes.notchedOutline}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                defaultValue={1}\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.filterType(e.target.value)}\r\n           >\r\n         {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n        </Select>\r\n        </div>\r\n        <br/>\r\n        <Divider/>\r\n        \r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        {props.timing && props.timing.length > 0 ? (\r\n          <Typography className={classes.available}>\r\n           \r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.available}>No Data</Typography>\r\n        )}\r\n\r\n       <Grid container spacing={1}>\r\n          <Grid item xs={7} container spacing={1}>\r\n          {props.timing &&\r\n          props.timing.length > 0 &&\r\n          props.timing.map((val) => {\r\n            return (  \r\n              <Grid item xs={6}>\r\n                <div\r\n                  className={\r\n                    classes.datecard\r\n                  }\r\n                >\r\n                  <div  style={{ position: 'absolute',\r\n                    right: '5px',\r\n                    top: '30px',}}>\r\n                      <IconButton  onClick={() => props.deleteTime(val.id)}>\r\n                         <DeleteOutline style={{color:\"red\"}}/>\r\n                      </IconButton>\r\n                  </div>\r\n                \r\n\r\n                <div style={{paddingTop:\"20px\"}}>\r\n                  \r\n                 <Typography className={classes.day}>\r\n                  {`Start Time : ${getTime(val?.startTime)}`}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                  {`End Time : ${getTime(val?.endTime)}`}\r\n                  </Typography>\r\n                  \r\n                </div>\r\n                 \r\n                </div>       \r\n              </Grid>              \r\n            );\r\n          })}\r\n          </Grid>\r\n          <Grid item xs={1} style={{display: 'flex',\r\n              justifyContent: 'center',}}>\r\n            <Divider variant=\"vertical\"/>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <>\r\n            {\" \"}\r\n            <Typography className={classes.available}>Start Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"startTime\"\r\n                placeholder=\"Select Start Time\"\r\n                inputVariant=\"outlined\"\r\n                value={props?.timeValue?.startTime ?? null}\r\n                fullWidth\r\n                onChange={(value) => props.handleTimeValue(value, \"startTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            <Typography className={classes.available}>End Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"endTime\"\r\n                placeholder=\"Select End Time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                value={props?.timeValue?.endTime ?? null}\r\n                onChange={(value) => props.handleTimeValue(value, \"endTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>{\" \"}\r\n            {/* <Typography className={classes.available}>Type :</Typography>\r\n            <Select\r\n               className={classes.inputField}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.handleTimeValue(e.target.value, \"type\")}\r\n             >\r\n            {appointmentTypes?.map((_)=>{\r\n              return(\r\n                <MenuItem value={_.id}>{_.name}</MenuItem>\r\n              )\r\n             })}\r\n             </Select> */}\r\n\r\n                     <Button\r\n                      onClick={() => props.handleSubmitTime(props.appointmentDateId,props.date,props.endDate)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                     >\r\n                      Add Time\r\n                    </Button>\r\n          </>\r\n      \r\n          </Grid>\r\n        </Grid>\r\n\r\n       \r\n        <br />\r\n        <Divider />\r\n        <br />\r\n        \r\n      </DialogContent>\r\n      <DialogActions>\r\n  \r\n          {/* <Button\r\n            onClick={() => props.handleSubmitTime(props.appointmentDateId)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit Time\r\n          </Button> */}\r\n        <Button onClick={props.close} variant=\"contained\">\r\n          {\" \"}\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => props.deleteDate(props.appointmentDateId)}\r\n        >\r\n          Delete Date\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModalShow;\r\n","import {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport uuid from \"uuid/v1\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport SheduleModal from \"./shedulemodal\";\r\nimport SheduleModalShow from \"./shedulemodalshow\";\r\nimport { ALL_APPOINTMENTS_DATE,APPOINTMENTS_TYPE,ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS ,CHECK_APPOINTMENT,CHECK_TIMESLOT} from \"../../graphql/query\";\r\nimport {\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n} from \"../../graphql/mutation\";\r\nimport { TimePicker, MuiPickersUtilsProvider,DatePicker,KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\n\r\nexport const ManageShedule = (props) => {\r\n  // States\r\n  const [open, setOpen] = React.useState(false);\r\n  const [appointmentDateId, setAppointmentDateId] = React.useState(null);\r\n  const [type, setType] = React.useState();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [modalloading, setModalLoading] = React.useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [appointmentDate, setAppointmentDate] = useState([]);\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [appointmentSlots, setAppointmentSlots] = useState([]);\r\n  const [openAppointmentTime, setOpenAppointmentTime] = useState(false);\r\n  const [showTime, setShowTime] = useState(false);\r\n  const [timeValue, setTimeValue] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n    type: 1\r\n  });\r\n  const [filterDate, setFilterDate] = useState({\r\n    startTime: moment(new Date()).startOf('month').format(\"YYYY-MM-DD\"),\r\n    endTime: moment(new Date()).endOf('month').format(\"YYYY-MM-DD\"),\r\n    date: new Date()\r\n  });\r\n\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const useStyles = makeStyles((theme) => ({\r\n    datecard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid #3F51B5\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    calenderCard:{\r\n      display:\"flex\",flexWrap:\"wrap\",marginLeft:\"14px\"\r\n    },\r\n    inputField: {\r\n      marginBottom: theme.spacing(1),\r\n      \"& .MuiOutlinedInput-input\":{\r\n        padding: \"12.5px 14px\"\r\n      }\r\n    },\r\n    closedCard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid red\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n\r\n    date: {\r\n      fontSize: \"22px\",\r\n      padding: \"10px 0px\",\r\n    },\r\n    day: {\r\n      fontSize: \"14px\",\r\n    },\r\n  }));\r\n\r\n \r\n  // LifeCycles\r\n  useEffect(() => {\r\n    GetAllAppointmentTypes();\r\n    FilterDates(filterDate.startTime,filterDate.endTime)\r\n  }, []);\r\n\r\n  // Handle Funcs\r\n  const editItem = (value) => {\r\n    setDate(value);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n  const handlemodalshow = (id) => {  \r\n    GetAllAppointment_TimeSlots(id,1)\r\n  };\r\n\r\n  const handleTimeValue = (value, name) => {\r\n    setTimeValue({ ...timeValue, [name]: value });\r\n  };\r\n\r\n  // Query Func\r\n  const GetAllAppointment = async () => {\r\n    setLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_DATE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n        setLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const CheckAppointment = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CHECK_APPOINTMENT,\r\n        variables:{ startDate: moment(date).format('YYYY-MM-DD'), endDate: moment(date).format('YYYY-MM-DD')}\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then(async(res) => {\r\n        if(res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0){\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: 'warning',\r\n            msg: \"Date already available!\",\r\n          });   \r\n        }\r\n        else{\r\n         await handleSave();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointment_TimeSlots = async (id,type) => {\r\n    setModalLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_TIMESLOT(id ? id : appointmentDateId,type).loc.source.body,\r\n      })\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n         setAppointmentSlots(res.data.allAppointmentDateTimeSlots.nodes)\r\n         setOpenAppointmentTime(true);\r\n         setAppointmentDateId(id);\r\n         setModalLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleSave = async () => {  \r\n    setLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          date: date,\r\n          startDate: moment(date).format(\"YYYY-MM-DD\"),\r\n          isActive: true,\r\n        },\r\n      })\r\n      .then((res) => {         \r\n          FilterDates(filterDate.startTime,filterDate.endTime);\r\n          onClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const CheckTimeslot = async (id,date,endDate)=>{\r\n    await client.query({\r\n      query : CHECK_TIMESLOT,\r\n      variables:{\r\n        startTime: moment(timeValue.startTime).format(\"HH:mm\"),\r\n        endTime: moment(timeValue.endTime).format(\"HH:mm\"),\r\n      },\r\n      fetchPolicy:\"no-cache\"\r\n    }).then((res)=>{\r\n      if(res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0){\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: 'warning',\r\n          msg: \"TimeSlot already available!\",\r\n        });   \r\n      }\r\n      else{\r\n        handleSubmitTime(id,date,endDate);\r\n      }\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const handleSubmitTime = async (id,date,endDate) => {\r\n    if(timeValue.type !== ''){\r\n      setModalLoading(true)\r\n      await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          startDateTime: new Date(date),\r\n          endDateTime: new Date(endDate) ,\r\n          appointmentTypeId: timeValue.type,\r\n          appointmentDateId: id,\r\n          startTime: moment(timeValue.startTime).format(\"HH:mm:ss\"),\r\n          endTime: moment(timeValue.endTime).format(\"HH:mm:ss\"),\r\n        },\r\n        fetchPolicy:\"no-cache\"\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          setModalLoading(false)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n\r\n    setShowTime(!showTime);\r\n    }   \r\n  };\r\n  \r\n  const deleteTime = async (id) => {\r\n    setModalLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          onClose();\r\n          setModalLoading(false)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const deleteDate = async (id) => {\r\n    setOpenAppointmentTime(false);\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleDateChange= async (date) =>{\r\n    var start = moment(date).startOf('month').format(\"YYYY-MM-DD\");\r\n    var end = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n    setFilterDate({...filterDate,date:date,startTime:start,endTime:end}) \r\n    FilterDates(start,end)   \r\n  }\r\n\r\n  const FilterDates = async (start,end) =>{\r\n    setLoading(true)\r\n    await client\r\n    .query({\r\n      query: FILTER_APPOINTEMENTS,\r\n      variables:{\r\n        startDate:start,\r\n        endDate:end \r\n      },\r\n      fetchPolicy:'no-cache'\r\n    })\r\n    .then((res) => {\r\n      setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n      setLoading(false)  \r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/appointment/upload_schedule\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const FilterTimeSlotes=(type)=>{\r\n    GetAllAppointment_TimeSlots(appointmentDateId,type)\r\n    setTimeValue({...timeValue,type:type})\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Manage Schedule</Typography>\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Dates\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item xs={5}>\r\n        <Typography className={classes.available}>Month and Year :</Typography>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"MM/yyyy\"\r\n              margin=\"normal\"\r\n              views={['year', 'month']}\r\n              value={filterDate.date}\r\n              onChange={(date) => handleDateChange(date)}\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n        </Grid>\r\n\r\n      </Grid>\r\n      <div className={classes.calenderCard}>\r\n     \r\n        {appointmentDate && appointmentDate.length > 0 ? (\r\n          appointmentDate.map((val) => {\r\n            return (\r\n              <Box  key={val.id}>\r\n                <div\r\n                  className={\r\n                    moment(\r\n                      moment(val.startDateTime).format(\"YYYY-MM-DD\")\r\n                    ).isSameOrAfter(\r\n                      moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      \"day\"\r\n                    )\r\n                      ? classes.datecard\r\n                      : classes.closedCard\r\n                  }\r\n                  onClick={() => {\r\n                    handlemodalshow(val.id);\r\n                  }}\r\n                >\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"MMM\")}\r\n                  </Typography>\r\n                  <Typography className={classes.date}>\r\n                    {moment(val.startDateTime).format(\"DD\")}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"YYYY\")}\r\n                  </Typography>\r\n                </div>\r\n                {appointmentDateId === val.id && openAppointmentTime && (\r\n                  <SheduleModalShow\r\n                    open={openAppointmentTime}\r\n                    date={val.startDateTime}\r\n                    endDate={val.endDateTime}\r\n                    appointmentDateId={appointmentDateId}\r\n                    timing={\r\n                      appointmentSlots ? appointmentSlots : []\r\n                    }\r\n                    close={() => setOpenAppointmentTime(false)}\r\n                    showTime={showTime}\r\n                    timeValue={timeValue}\r\n                    handleTimeValue={handleTimeValue}\r\n                    handleSubmitTime={CheckTimeslot}\r\n                    filterType={FilterTimeSlotes}\r\n                    deleteTime={deleteTime}\r\n                    deleteDate={deleteDate}\r\n                    appointmentTypes={appointmentTypes}\r\n                    loading={modalloading}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No Data</p>\r\n        )}\r\n      </div>\r\n      <SheduleModal\r\n        open={open}\r\n        type={type}\r\n        date={date}\r\n        editItem={editItem}\r\n        handleSave={CheckAppointment}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { TableContainer ,IconButton,Grid,TextField,InputAdornment, Select, MenuItem,LinearProgress,Backdrop,CircularProgress } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport moment from \"moment\";\r\nimport { SHOW_APPOINMENT_DETAILS,MUTATE_STATUS,APPOINTMENTS_TYPE } from \"../../graphql/query\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst columns = [\r\n  { id: \"user_id\", label: \"Id\" },\r\n  { id: \"name\", label: \"Name\" },\r\n  { id: \"email\", label: \"Email\" },\r\n  { id: \"mobile\", label: \"Mobile\" },\r\n  { id: \"date\", label: \"Date\" },\r\n  // { id: \"location\", label: \"Location\" },\r\n  { id: \"StartTime\", label: \"Start Time\" },\r\n  { id: \"EndTime\", label: \"End Time\" },\r\n  { id: \"Type\", label: \"Type\" },\r\n  { id: \"Status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\" },\r\n];\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor:\"white\"\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px\",\r\n  },\r\n  select:{\r\n    \"& .MuiInputBase-root\":{\r\n      height:\"85%\"\r\n    }\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nlet filterData = {};\r\n\r\nexport const Manageappoinment = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [startDate, setStartDate] = React.useState(null);\r\n  const [endDate, setEndDate] = React.useState(null);\r\n  const [appointmentFilter, setAppointmentFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = React.useState(\"\");\r\n  const [selectedType, setSelectedType] = React.useState(\"\");\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(SHOW_APPOINMENT_DETAILS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      appointment_filter: { ...appointmentFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  React.useEffect(()=>{\r\n    GetAllAppointmentTypes();\r\n  },[])\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  let rowData = data?.allAppointments?.nodes;\r\n\r\n  const handleDateChange = (date, value) => {\r\n    if (value === \"start\") {\r\n      setStartDate(date);\r\n    }\r\n    if (value === \"end\") {\r\n      if (date > startDate && startDate) {\r\n        setEndDate(date);\r\n        setAppointmentFilter({\r\n          ...appointmentFilter,\r\n          appointmentDateTimeSlotBySlotId: {\r\n            appointmentDateByAppointmentDateId: {\r\n              startDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"),lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")},\r\n              endDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"), lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")}\r\n            }\r\n          },   \r\n        });\r\n      } else alert(\"the To date must be higher than from\");\r\n    }\r\n  };\r\n\r\n  const ActionIcon = (props) => {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            window.open(`appointmentdetails/${props.id}`);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleSelect = async (value,id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: id,status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  function tConvert(time) {\r\n    // Check correct time format and split into components\r\n    time = time\r\n      .toString()\r\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \"AM\" : \"PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(\"\"); // return adjusted time or original string\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n             \r\n        <Typography className={classes.title}>Manage Appointment</Typography>\r\n        <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setAppointmentFilter({\r\n                  ...appointmentFilter,\r\n                  or: [ {mobile: { includesInsensitive: event.target.value }} , {customerName: { includesInsensitive: event.target.value }}, {email: { includesInsensitive: event.target.value } }]\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"Start Date\"\r\n          value={startDate}\r\n          onChange={(date) => handleDateChange(date, \"start\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"End Date\"\r\n          value={endDate}\r\n          onChange={(date) => handleDateChange(date, \"end\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Status\"\r\n        value={selectedStatus}\r\n        onChange={(event) => {\r\n          setSelectedStatus(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            status: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedStatus !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedStatus(\"\");\r\n                    delete appointmentFilter.status;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Type\"\r\n        value={selectedType}\r\n        onChange={(event) => {\r\n          setSelectedType(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            appointmentTypeId: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedType !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedType(\"\");\r\n                    delete appointmentFilter.appointmentTypeId;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                            {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n        <TableContainer component={Paper}>\r\n        <Table      \r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rowData &&\r\n                rowData.length > 0 ?\r\n                rowData.map((row, index) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell align=\"left\">{row?.id ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.customerName ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row?.email ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">{row?.mobile ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startDateTime\r\n                          ? moment(\r\n                              row?.appointmentDateTimeSlotBySlotId\r\n                                ?.startDateTime\r\n                            ).format(\"Do MMM YYYY\")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">\r\n                        {row?.storeLocationByLocationId?.name ?? \"\"}\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.type?.name ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.status ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <ActionIcon id={row.id}/>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              : <p style={{position:'absolute',right:\"50%\"}}>{\"No Data\"}</p>}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={data?.allAppointments?.totalCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                onPageChange={() => {}}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        </TableContainer>\r\n        \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup, props.refetch);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setMarkup({\r\n      ...markup,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"category\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.category}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose category\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"producttype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.producttype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose product type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"materiallist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.materiallist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Material type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"puritylist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.puritylist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Purity type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Min\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemin\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Selling Price Min\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Max\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemax\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={handleoptionChange(\"markuptype\")}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Markup Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Markup Value \"\r\n                onChange={handleinputChange(\"markup\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport {\r\n  DELETEMARKUPPRICE, DIAMONDMARKUP\r\n} from \"../../../graphql/query\";\r\nimport Addmarkup from \"./Addmarkup\";\r\n\r\nconst columns = [\r\n  { id: \"Component\", label: \"Components\" },\r\n  { id: \"Product Category\", label: \"product Category\" },\r\n  { id: \"Product Type\", label: \"Product Type\" },\r\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\r\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\r\n  { id: \"Markup Type\", label: \"Markup Type\" },\r\n  { id: \"Markup value\", label: \"Markup value\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editmarkup, setEditmarkup] = React.useState({});\r\n  const [goldpricelist, setGoldpricelist] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [refetch, setRefetch] = React.useState(null);\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    setIsdelete(true);\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id);\r\n\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function updatemarkup(markupcontent, refetch) {\r\n    let product_type = markupcontent.producttype\r\n      ? markupcontent.producttype\r\n      : [];\r\n    let material_list = markupcontent.materiallist\r\n      ? markupcontent.materiallist\r\n      : [];\r\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\r\n\r\n    var bodydata = {};\r\n    bodydata[\"category\"] = markupcontent.category.name;\r\n    bodydata[\"producttype\"] = product_type;\r\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\r\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\r\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\r\n    bodydata[\"material_list\"] = material_list;\r\n    bodydata[\"purity_list\"] = purity_list;\r\n    bodydata[\"markupValue\"] = markupcontent.markup;\r\n    bodydata[\"material\"] = pricecomponent;\r\n    console.log(\"XXXXXXXX\");\r\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      markupid: diamondData.id,\r\n      sellingPriceMin: diamondData.sellingPriceMin,\r\n      sellingPriceMax: diamondData.sellingPriceMax,\r\n      markupValue: diamondData.markupValue,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n\r\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value });\r\n  };\r\n  const handlecomponentChange = (type) => (event, value) => {\r\n    setPriceomponent(value);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid\r\n          container\r\n          justify=\"left\"\r\n          alignItems=\"center\"\r\n          className={classes.cardroot}\r\n          spacing={4}\r\n        >\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              defaultValue={pricecomponent}\r\n              options={[\"Diamond\", \"Gemstone\", \"Gold\", \"Making Charge\", \"All\"]}\r\n              onChange={handlecomponentChange(\"earringbacking\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Pricing Components\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  // error = {productCtx.error_message.earringbacking}\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDMARKUP}\r\n                onCompleted={(data) =>\r\n                  setPageCount(data.allPricingMarkups.totalCount)\r\n                }\r\n                variables={{ vendorCode: pricecomponent }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    setGoldpricelist(data);\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Addmarkup\r\n                            isadd={open}\r\n                            material={pricecomponent}\r\n                            refetch={refetch}\r\n                            actionSave={updatemarkup}\r\n                            category={props.categories}\r\n                            producttype={props.producttypes}\r\n                            materiallist={props.materiallist}\r\n                            puritylist={props.puritylist}\r\n                            title={props.title}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allPricingMarkups.nodes.map((row, index) => (\r\n                          <>\r\n                            <TableRow key={row.category}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.material}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.productType ? row.productType : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMin}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMax}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"center\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Autocomplete\r\n                                    id=\"free-solo-2-demo\"\r\n                                    fullWidth\r\n                                    disableClearable\r\n                                    className={classes.fixedTag}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    onChange={handleoptionChange(\r\n                                      \"sellingPriceType\"\r\n                                    )}\r\n                                    options={[\r\n                                      { label: 1, name: \"Flat\" },\r\n                                      { label: 2, name: \"Percentage\" },\r\n                                    ]}\r\n                                    renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                        <Chip\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          label={option.name}\r\n                                          {...getTagProps({ index })}\r\n                                        />\r\n                                      ))\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label=\"Price Type\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                          ...params.InputProps,\r\n                                          readOnly: true,\r\n                                          type: \"search\",\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupType === 1\r\n                                        ? \"Flat\"\r\n                                        : \"Percentage\"}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value={editmarkup.markupValue}\r\n                                    onChange={handleinputChange(\"markupValue\")}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupValue}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {btnEdit.action && btnEdit.id == row.id\r\n                                    ? editmarkup.updatedAt\r\n                                    : row.updatedAt}\r\n                                </Moment>\r\n                              </TableCell>\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <TableCell\r\n                                  style={{ width: 170 }}\r\n                                  align=\"center\"\r\n                                >\r\n                                  <Button\r\n                                    onClick={(e) => handleSave(row.id, refetch)}\r\n                                  >\r\n                                    <SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}>\r\n                                    <CancelIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              ) : (\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 170 }}\r\n                                  >\r\n                                    <Button onClick={(e) => handleEdit(row)}>\r\n                                      <EditIcon />\r\n                                    </Button>\r\n                                    <Button\r\n                                      onClick={(e) => handleDelete(row, refetch)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                          </>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import { Button, Chip, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                        <TableRow key={row.diamondClarity}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondClarity}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondColour}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.costPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.costPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.sellingPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import {\r\n  Button, Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GEMPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount(data.allGemstonePriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.gemstoneType}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.gemstoneType}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.price}</TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import { Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.material}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.material}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.purity}</TableCell>\r\n                          <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 100, 200, 500]}\r\n\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport {\r\n  VENDORLIST,\r\n  MASTERCATEGORY,\r\n  PRODUCTDIAMONDTYPES,\r\n} from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Markupprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [materiallist, setMateriallist] = React.useState([]);\r\n  const [puritylist, setPuritylist] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\r\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n        // setVendorlist({\r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <Product\r\n          categories={categorylist}\r\n          producttypes={producttypes}\r\n          materiallist={materiallist}\r\n          puritylist={puritylist}\r\n          vendor={\"Gold\"}\r\n        />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n      {/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterattribute = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function Masterattribute(taxcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/managemasterattributes\",\r\n      {},\r\n      taxcontent\r\n    );\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Material List\"}\r\n          button_title=\"Add New\"\r\n          onCreate={Masterattribute}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterattribute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Mastercategories = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    alert(JSON.stringify(taxcontent));\r\n    // let response = await sendNetworkRequest(\r\n    //   \"/managecategories\",\r\n    //   {},\r\n    //   taxcontent\r\n    // );\r\n    // getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          prefix={data.prefix}\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Mastercategories;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterroles = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\r\n  const [masterpages, setMasterpages] = React.useState([]);\r\n  const [editroleid, setEditroleid] = React.useState(\"\");\r\n  const [editpermissons, setEditpermissions] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n    setMastervalue(response.roles);\r\n    setFiltervalue(response.roles);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n  async function showpermissions(rowcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getrolepermissions\",\r\n      {},\r\n      { role_id: rowcontent.id }\r\n    );\r\n    setEditpermissions(response.permissions);\r\n    setEditroleid(rowcontent.id);\r\n    setIsshowpermissions(true);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent) {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id: editroleid,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    setIsshowpermissions(false);\r\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  function cancelpermissions(rowcontent) {\r\n    setIsshowpermissions(false);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? (\r\n          <Addpermissions\r\n            role_id={editroleid}\r\n            isopen={isshowpermissions}\r\n            permissions={editpermissons}\r\n            pages={masterpages}\r\n            onClose={cancelpermissions}\r\n            onSave={updatepermissions}\r\n          />\r\n        ) : null}\r\n        <Mastercontent\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onPermissionadd={showpermissions}\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterroles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterscreens = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x?.name?.toLowerCase()\r\n        ? x?.name?.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Master Screens\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterscreens;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ORDERS } from \"./../../services/queries\";\r\nimport { PAYMENTSTATUSMASTER } from \"./../../graphql/query\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport { gql } from \"apollo-boost\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\n\r\nlet getAddress = (data) => {\r\n  if (!data) return \"\";\r\n  return (\r\n    data?.addressline1 +\r\n    \",\" +\r\n    data?.addressline2 +\r\n    \",\" +\r\n    data?.city +\r\n    \",\" +\r\n    data?.state +\r\n    \",\" +\r\n    data?.pincode\r\n  );\r\n};\r\n\r\nlet getGiftMessage = (data) => {\r\n  if (!data) return \"\";\r\n  return data?.message + \"  from:\" + data?.giftFrom + \"  to:\" + data?.giftTo;\r\n};\r\n\r\nlet getPaymentStatus = (data) => {\r\n  if (data?.paymentMode === \"COD\") {\r\n    return data.paymentStatus;\r\n  }\r\n  if (!data?.paymentResponse) return data.paymentStatus;\r\n  let payment_response = JSON.parse(data?.paymentResponse);\r\n  return (\r\n    <div>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.APTRANSACTIONID}\r\n      </p>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.MESSAGE ||\r\n          payment_response?.TRANSACTIONPAYMENTSTATUS}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet defaultColumns = {\r\n  \"Order ID\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"id\",\r\n  },\r\n  \"Order Date\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"order_date\",\r\n  },\r\n  \"Customer Name\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"customer_name\",\r\n  },\r\n  SKUs: { is_active: false, identifier: \"SKUs\" },\r\n  Email: { is_active: true, identifier: \"email\" },\r\n  \"Phone Number\": { is_active: true, identifier: \"phone_number\" },\r\n  \"Shipping Address\": { is_active: true, identifier: \"shipping_address\" },\r\n  \"Gift Message\": { is_active: false, identifier: \"gift_message\" },\r\n  \"Order Status\": { is_active: false, identifier: \"order_status\" },\r\n  \"Payment Mode\": { is_active: true, identifier: \"payment_mode\" },\r\n  \"Payment Status\": { is_active: true, identifier: \"payment_status\" },\r\n  \"Waybill No\": { is_active: false, identifier: \"waybill\" },\r\n  Comments: { is_active: false, identifier: \"comments\" },\r\n \r\n  Actions: {\r\n    is_active: true,\r\n    is_default: true,\r\n  },\r\n};\r\n\r\nconst ActionIcon = (props) => {\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          window.open(`orderdetails/${props.id}`);\r\n        }}\r\n      >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nlet filterData = {};\r\n\r\nexport const OrderList = withRouter((props) => {\r\n  \r\n  let user_id = props.location.pathname.split(\"/\")[2];\r\n  if (user_id) {\r\n    filterData = {\r\n      userProfileId: {\r\n        equalTo: user_id,\r\n      },\r\n    };\r\n  }\r\n  const [columnName, setColumnName] = React.useState(defaultColumns);\r\n  const [orderFilter, setOrderFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [masterData, setMasterData] = React.useState({\r\n    orderMaster: [],\r\n    paymentMaster: [\r\n      { name: \"SUCCESS\" },\r\n      { name: \"FAIL\" },\r\n      { name: \"TRANSACTION CANCELLED\" },\r\n    ],\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    orderStatus: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = React.useState(null);\r\n  const [ToDate, setToDate] = React.useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateChange = (date, value) => {\r\n    let createdAt = orderFilter?.createdAt;\r\n    if (value === \"from\") {\r\n      setFromDate(date);\r\n      setOrderFilter({\r\n        ...orderFilter,\r\n        createdAt: {\r\n          ...createdAt,\r\n          greaterThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n        },\r\n      });\r\n    }\r\n    if (value === \"to\") {\r\n      if (date > fromDate) {\r\n        setToDate(date);\r\n        setOrderFilter({\r\n          ...orderFilter,\r\n          createdAt: {\r\n            ...createdAt,\r\n            lessThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n          },\r\n        });\r\n      } else alert(\"the To date must be higher thean from\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          ${PAYMENTSTATUSMASTER}\r\n        `,\r\n      })\r\n      .then(({ data: { allOrderStatusMasters, allPaymentStatusMasters } }) => {\r\n        setMasterData({\r\n          orderMaster: allOrderStatusMasters?.nodes || [],\r\n          paymentMaster: [\r\n            ...masterData.paymentMaster,\r\n            ...allPaymentStatusMasters?.nodes,\r\n          ],\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(ORDERS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      order_filter: { ...orderFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  let rowData = data?.allOrders?.nodes;\r\n  if (rowData) {\r\n    rowData = rowData.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        order_date: moment(item?.createdAt).format(\"DD MMM YYYY HH:mm:ss\"),\r\n        SKUs: item?.shoppingCartByCartId?.shoppingCartItemsByShoppingCartId?.nodes\r\n          .map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n          .join(\", \"),\r\n        customer_name:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.firstname,\r\n        email: item?.shoppingCartByCartId?.userProfileByUserprofileId?.email,\r\n        phone_number:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.contactNumber,\r\n        shipping_address: getAddress(\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n        ),\r\n        gift_message: getGiftMessage(item?.shoppingCartByCartId?.nodes?.[0]),\r\n        payment_mode: item?.paymentMode,\r\n        order_status: item?.orderStatus,\r\n        payment_status: getPaymentStatus({\r\n          paymentMode: item?.paymentMode,\r\n          paymentResponse:\r\n            item?.paymentDetailsByOrderId?.nodes?.[0]?.paymentResponse,\r\n        }),\r\n        emailMessageId: item?.emailMessageId,\r\n        smsDeliveredId: item?.smsDeliveredId?.replace(\"otp-nacjotp-\", \"\"),\r\n        waybill: item?.awbNumber,\r\n        comments: item?.comments,\r\n      };\r\n    });\r\n  }\r\n  let colSpan = Object.keys(columnName).filter(\r\n    (item) => columnName[item].is_active\r\n  ).length;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Orders</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setOrderFilter({\r\n                shoppingCartByCartId: {\r\n                  or: [\r\n                    {\r\n                      userProfileByUserprofileId: {\r\n                        email: { includesInsensitive: event.target.value },\r\n                      },\r\n                    },\r\n                    {\r\n                      cartAddressesByCartId: {\r\n                        some: {\r\n                          or: [\r\n                            {\r\n                              firstname: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                            {\r\n                              contactNumber: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.orderStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                orderStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                orderStatus: { includesInsensitive: event.target.value },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Order Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.orderStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          orderStatus: \"\",\r\n                        });\r\n                        delete orderFilter.orderStatus;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.orderMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.paymentStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                paymentStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                paymentDetailsByOrderId: {\r\n                  some: {\r\n                    paymentResponse: {\r\n                      includesInsensitive: event.target.value,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Payment Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.paymentStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          paymentStatus: \"\",\r\n                        });\r\n                        delete orderFilter.paymentDetailsByOrderId;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.paymentMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"From\"\r\n              value={fromDate}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"from\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"To\"\r\n              value={ToDate}\r\n              disableFuture={true}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"to\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={1}>\r\n          <IconButton onClick={handleClick}>\r\n            <ViewColumnIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                height:\r\n                  Object.keys(columnName).filter((item) => !item?.is_default)\r\n                    .length * 20,\r\n                width: \"50ch\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid container style={{ padding: 10 }}>\r\n              {Object.keys(columnName).map(\r\n                (item) =>\r\n                  !columnName[item]?.is_default && (\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name={item}\r\n                            color=\"primary\"\r\n                            checked={columnName[item].is_active}\r\n                            onClick={(_) => {\r\n                              columnName[item].is_active =\r\n                                !columnName[item].is_active;\r\n                              setColumnName({ ...columnName });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(columnName).map(\r\n                  (item) =>\r\n                    columnName[item].is_active && (\r\n                      <TableCell key={item} align={\"center\"}>\r\n                        {item}\r\n                      </TableCell>\r\n                    )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {rowData &&\r\n                rowData.length > 0 &&\r\n                rowData.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    {Object.keys(columnName).map(\r\n                      (column) =>\r\n                        columnName[column].is_active && (\r\n                          <TableCell key={column} align={\"center\"}>\r\n                            {column !== \"Actions\" &&\r\n                              item[columnName[column]?.identifier]}\r\n                            {column === \"Actions\" && (\r\n                              <ActionIcon id={item.id} />\r\n                            )}\r\n                          </TableCell>\r\n                        )\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              {rowData && rowData.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>No Orders found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={colSpan}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allOrders?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  onPageChange={() => {}}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n} from \"../../../../graphql/query\";\r\nimport { UPDATE_ORDER } from \"../../../../graphql/mutation\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [updateOrder, setUpdateOrder] = useState({\r\n    waybillNum: null,\r\n    paymentStatus: null,\r\n    orderStatus: null,\r\n    comments: null,\r\n  });\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n  const handleChange = (event) => {\r\n    setUpdateOrder({ ...updateOrder, [event.target.name]: event.target.value });\r\n    if (updateOrder?.comments?.length > 0) {\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n\r\n        setUpdateOrder({\r\n          waybillNum: order?.awb_number ?? null,\r\n          paymentStatus: order?.payment_status ?? null,\r\n          orderStatus: order?.order_status ?? null,\r\n          comments: order?.comments ?? null,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const getOrderCommunicationLogs = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order?.id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  React.useEffect(() => {\r\n    getmaster();\r\n    getOrderCommunicationLogs();\r\n  }, []);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Send Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (updateOrder?.comments?.length > 0) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_ORDER,\r\n          variables: {\r\n            id: order?.id,\r\n            awbNumber: updateOrder?.waybillNum ?? \"\",\r\n            comments: updateOrder?.comments ?? \"\",\r\n            orderStatus: updateOrder?.orderStatus,\r\n            paymentStatus: updateOrder?.paymentStatus,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } else {\r\n      setErrorMsg(\"Enter Comments\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order.shopping_cart.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"waybillNum\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.waybillNum}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"paymentStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.paymentStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"orderStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.orderStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"comments\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.comments}\r\n                  variant=\"outlined\"\r\n                />\r\n                <span style={{ color: \"red\" }}>{errorMsg}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Grid>\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"order\")}\r\n              >\r\n                Order Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"payment\")}\r\n              >\r\n                Payment Confirmation Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Shipped\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Delivered\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"rate\")}\r\n              >\r\n                Rate Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"4px 0px\" }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst OrderItems = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Image</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order.shopping_cart.shopping_cart_items.map(item => (\r\n                  <TableRow key={item.id}>\r\n                     <TableCell>\r\n                      {item.product_sku}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.qty}\r\n                    </TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order.shopping_cart.shopping_cart_items.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\r\n                      </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <p className={classes.final_total_text}>\r\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\r\n            </p>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { GETORDERCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    console.log(response);\r\n    setOrder(response.orders);\r\n    setProductDetails(response.product_detail);\r\n  }\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order_id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n       \r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n\r\n    fetchorderdetails(com_id);\r\n    getOrderCommunicationLogs(com_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} productDetails={productDetails} />\r\n          <OrderDetails\r\n            order={order}\r\n            productDetails={productDetails}\r\n            style={{ marginTop: 30 }}\r\n          />\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Appointment Info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={2}>\r\n           <Grid item xs={4} >\r\n             <Typography>Name :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.customerName ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Email :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.email ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Mobile :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.mobile ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Type :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 1 ? \"Alive\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 2 ? \"Lotus\" :order?.allAppointments?.nodes[0]?.appointmentTypeId === 3 ? \"Piercing\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 4 ? \"Stones\" : order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5 ? \"Enquiry\" :\"no Data\" }</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Category :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n              {order?.allAppointments?.nodes[0]?.productCategory?.length > 0  ? order?.allAppointments?.nodes[0]?.productCategory?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>              \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Metal Type :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n             {order?.allAppointments?.nodes[0]?.metalType?.length > 0 ? order?.allAppointments?.nodes[0]?.metalType?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>     \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>isOnline :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>is IT required :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>Are more Members Joining :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}> \r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? null : true}/>} label=\"No\" />\r\n             </div>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Special Requests :</Typography>\r\n             <p style={{width:\"80%\",overflowWrap:'break-word'}}>{order?.allAppointments?.nodes[0]?.specialRequests ?? 'no data'}</p>\r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,Switch, Input,MenuItem,Select\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { API_URL } from \"../../../config\";\r\nimport { MUTATE_STATUS,MUTATE_MEETING } from \"../../../graphql/query\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentExtra= (props) => {\r\n  const { order, className,id, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [selected,setSelected] = React.useState('')\r\n  const [meetingLink,setmeetingLink] = React.useState('');\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  React.useEffect(()=>{\r\n   setSelected(order?.allAppointments?.nodes[0]?.status)\r\n   setmeetingLink(order?.allAppointments?.nodes[0]?.meetingLink)\r\n  },[order])\r\n\r\n\r\n  const handleMeeting = async ()=>{\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_MEETING,\r\n        variables: { id: parseInt(id), meetingLink:meetingLink },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Meeting Link Send Successfully!\",\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  const handleSelect = async (value) => {\r\n    setSelected(value)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: parseInt(id), status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        props.refetch()\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleLinkchange=(val)=>{\r\n     setmeetingLink(val)\r\n  }\r\n\r\n  const sendEmail = () => {\r\n    if(meetingLink !== ''){\r\n      const url = API_URL + \"/trigger_mail\";\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ appointment_id: parseInt(id),\r\n        meeting_link: meetingLink }),\r\n      };\r\n      fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          handleMeeting()\r\n        })\r\n        .catch((err) => {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader/>\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={1}>\r\n           <Grid item xs={6} >\r\n             <Typography>MeetingLink :</Typography>   \r\n             <TextField fullWidth variant=\"outlined\" onChange={(event)=>handleLinkchange(event.target.value)} value={meetingLink} disabled={order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5}/>       \r\n           </Grid>\r\n           <Grid item xs={6} >\r\n             <Typography>Status :</Typography>\r\n             <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        value={selected}\r\n        onChange={(event)=>handleSelect(event.target.value)}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>      \r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>   \r\n      <CardActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={sendEmail}>Send Invite</Button>\r\n      </CardActions> \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentExtra;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n  Typography,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport AppointmentInfo from \"./components/AppointmentInfo\";\r\nimport AppointmentExtra from \"./components/AppointmentExtra\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { GETORDERCOMMUNICATIONLOGS,SHOW_ALL_PPOINMENT_DETAILS,GETAPPLICATIONCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport const AppointmentManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETAPPLICATIONCOMMUNICATIONLOGS,\r\n        variables: {\r\n          id: parseInt(order_id),\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.appointmentById?.appointmentCommunicationLogsByAppointmentId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus,refetch } = useQuery(SHOW_ALL_PPOINMENT_DETAILS, {\r\n    variables: {\r\n      id: parseInt(order)\r\n    },\r\n    notifyOnNetworkStatusChange:true,\r\n    fetchPolicy:\"network-only\"\r\n  });\r\n \r\n  useEffect(() => {\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n    getOrderCommunicationLogs(com_id);\r\n    setOrder(com_id)\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  const handleStatusChange=()=>{\r\n    refetch()\r\n  }\r\n\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Appointment Management Details\">\r\n\r\n       <Backdrop className={classes.backdrop} open={loading || NetworkStatus.refetch === networkStatus}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n       <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Appointments\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Appointment #{order}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className={classes.container} container spacing={3}>\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                   <AppointmentInfo order={data}/>\r\n            </Grid>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                 <AppointmentExtra order={data} id={order} refetch={refetch}/>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default AppointmentManagementDetails;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\",\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [status, setStatus] = useState({});\r\n\r\n  function handleAdd(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.update(e);\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.resumeupdate(e);\r\n  }\r\n\r\n  function handledownload(e) {\r\n    props.downloadlog();\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: e.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatus({ ...status, [e.id]: response.message });\r\n  }\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card style={{ marginTop: 16 }}>\r\n        <CardContent className={classes.content}>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Components</TableCell>\r\n\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n\r\n                  <TableCell align=\"center\">Status</TableCell>\r\n                  <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                  <TableCell align=\"center\">Log</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.pricingrows.map((order) => (\r\n                  <TableRow>\r\n                    <TableCell>{order.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={(e) => handleAdd(order)}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                      >\r\n                        ₹ Run\r\n                      </Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"center\">\r\n                      {status[order.id] ? status[order.id] : \"\"}\r\n\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => handlestatus(order)}\r\n                        color=\"primary\"\r\n                      >\r\n                        <RefreshIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleupdate(order)}\r\n                        size=\"small\"\r\n                      >\r\n                        Re Run\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handledownload()}\r\n                        size=\"small\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}></CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = ((length, prefix,couponcount) => {\r\n  var count = 1;\r\n  var codes = []\r\n  if(couponcount)\r\n  {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var charactersLength = characters.length;\r\n  generatecode(0)\r\n  function generatecode(generatedcount)\r\n  {\r\n  for ( var i = 0; i < codelength; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  result = prefix.toUpperCase() + result.toUpperCase();\r\n  codes.push(result)\r\n  result = \"\"\r\n  generatedcount = generatedcount + 1\r\n  if(count > generatedcount)\r\n  {\r\n    generatecode(generatedcount);\r\n  }\r\n  }\r\n  return codes;\r\n});","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from \"../../../../utils/commonmethod\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  Chip,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst AboutVoucher = (props) => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\r\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\r\n  const [producttypelist, setProducttypelist] = useState(\r\n    props.masterData.product_type\r\n  );\r\n  const [productids, setProductids] = useState(props.productids);\r\n\r\n  const [updatestatus, setUpdatestatus] = useState(\"\");\r\n\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n\r\n  const handleproducttypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, producttypes: vendorsarray });\r\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\r\n  };\r\n  const handlecategorychange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, categories: vendorsarray });\r\n\r\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\r\n  };\r\n  const hangeoptionchange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.shortCode);\r\n    });\r\n    setFormData({ ...formData, vendorid: vendorsarray });\r\n\r\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\r\n  };\r\n\r\n  const handleClick = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/updatepricelist\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n    } else {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n  const handleuploadstatus = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/getpriceupdatestatus\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n      setUpdatestatus(response.message);\r\n    } else {\r\n    }\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setVouchercode(e.target.value.toUpperCase());\r\n  };\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n  const generateCoupon = (event) => {\r\n    // alert(JSON.stringify(voucherCtx))\r\n    setVouchercode(makeid(10));\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist || []}\r\n              getOptionLabel={(option) => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange(\"vendorcode\")}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Selct Vendor\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlecategorychange(\"category\")}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Category\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handleproducttypechange(\"product_type\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              disabled={props.isdisabled}\r\n              className={classes.fixedTag}\r\n              value={props.productids}\r\n              options={productids}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    props.productids.length > 0\r\n                      ? \"Products (\" + props.productids.length + \") \"\r\n                      : \"Products\"\r\n                  }\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleClick}\r\n        color=\"primary\">\r\n        Update Price\r\n      </Button>\r\n      </Grid>\r\n      \r\n      <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Update Status\r\n      </Button>\r\n      <Typography variant=\"subtitle1\">\r\n                {updatestatus}\r\n      </Typography>\r\n\r\n      </Grid> */}\r\n          {/* <Grid item xs={6} sm={3} >\r\n      <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Price Update\r\n      </Button>\r\n       \r\n      </Grid> */}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction FullLoader(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <div className={classes.loader}>\r\n\r\n      <CircularProgress />\r\n\r\n      </div>\r\n\r\n      </DialogContent>\r\n      \r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default FullLoader;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { Button, Link } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"../../components/Page\";\r\nimport { Results, AboutVoucher } from \"./components\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\nconst rows = [\r\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n  const [products, setProducts] = useState([]);\r\n  const [, setCategories] = useState([]);\r\n  const [, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component) {\r\n    if (products.length) {\r\n      setOpen(true);\r\n      var bodydata = {};\r\n      bodydata = {\r\n        component: component.label,\r\n        req_product_id: products,\r\n      };\r\n      setStartrun(true);\r\n      let response = await sendNetworkRequest(\r\n        \"/price_run_new\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      if (response.statuscode == 200) {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: response.message || \"Started Successfully!\",\r\n        });\r\n      } else {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Something went wrong, Please try later!\",\r\n        });\r\n      }\r\n      setOpen(false);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Apply filter to load products!\",\r\n      });\r\n    }\r\n  }\r\n  async function rerun(component) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      component: component.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getincompletepricerun\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let history_id = response.id;\r\n    let update_products = response.products;\r\n    if (response.products && response.products.length > 0) {\r\n      setOpen(true);\r\n\r\n      var bodydata = {};\r\n      bodydata = {\r\n        pricingcomponent: component.label,\r\n        req_product_id: update_products,\r\n        history_id: history_id,\r\n      };\r\n      setStartrun(true);\r\n      let response1 = await sendNetworkRequest(\r\n        \"/productpriceupdate\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      setOpen(false);\r\n    } else {\r\n      alert(\" Doesn't have any incomplete products\");\r\n    }\r\n  }\r\n\r\n  async function filterapllied(filterdata, categories, producttypes) {\r\n    var bodydata = {};\r\n\r\n    bodydata = {\r\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\r\n      product_category: categories && categories.length > 0 ? categories : \"\",\r\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/getdistinctproduct\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setCategories(response.category);\r\n    setVendors(response.vendorlist);\r\n  }\r\n  async function downloadlog() {\r\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <FullLoader title={\"Running Price Update\"} isopen={open}></FullLoader>\r\n        <AboutVoucher\r\n          isdisabled={startrun}\r\n          className={classes.aboutvoucher}\r\n          apply={filterapllied}\r\n          productids={products.length > 0 ? products : []}\r\n          categorylist={masters.category}\r\n          producttypelist={masters.product_type}\r\n          vendorlist={masters.vendorcode}\r\n          masterData={masters}\r\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\r\n        />\r\n        <Results\r\n          products={products}\r\n          pricingrows={rows}\r\n          downloadlog={downloadlog}\r\n          update={updateprices}\r\n          resumeupdate={rerun}\r\n        />\r\n        <div\r\n          style={{\r\n            padding: \"12px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Link href=\"/price-logs\">\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Price History Logs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Page>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { productCategory } from '../../services/mapper';\r\nimport Component from './PriceupdateContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Priceupdate = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} data={data} />\r\n    // </VoucherProvider>\r\n\r\n)});\r\nexport default Priceupdate;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_id\", label: \"product id\" },\r\n  { id: \"product_name\", label: \"product name\" },\r\n  { id: \"product_type\", label: \"product type\" },\r\n  { id: \"vendor_code\", label: \"vendor code\" },\r\n  { id: \"product_category\", label: \"product category\" },\r\n  { id: \"isactive\", label: \"active\" },\r\n  { id: \"createdAt\", label: \"Created on\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\r\n  }\r\n  useEffect(() => {\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\r\n  }, []);\r\n  useEffect(() => {\r\n    getproductlist(\r\n      props.filterparams.searchtext,\r\n      props.filterparams.categoryname,\r\n      props.filterparams.product_type,\r\n      \"\",\r\n      \"\",\r\n      order,\r\n      orderBy\r\n    );\r\n  }, [props.filterparams]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\r\n  }\r\n  async function showproductdetails(prod_id) {\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\r\n    console.log(response);\r\n    //setProductlists(response.products.rows)\r\n    window.open(response.url, \"_blank\");\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype) {\r\n    let products = allproductlists.filter((l) => {\r\n      return (\r\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\r\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\r\n      );\r\n    });\r\n    setProductlists(products);\r\n  }\r\n  async function getproductlist(\r\n    searchtext,\r\n    productcategory,\r\n    producttype,\r\n    pagesize,\r\n    offsetvalue,\r\n    sort,\r\n    orderby\r\n  ) {\r\n    let bodydata = {\r\n      size: pagesize ? pagesize : rowsPerPage,\r\n      offset: offsetValue,\r\n      searchtext: searchtext,\r\n      productcategory: productcategory,\r\n      producttype: producttype,\r\n      order: sort ? sort : order,\r\n      orderby: orderby ? orderby : orderBy,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\r\n\r\n    console.log(response);\r\n    setProductlists(response.products.rows);\r\n    setPageCount(response.products.count);\r\n  }\r\n  function applyfilter(searchtext, categoryname, typename) {\r\n    getproductlist(searchtext, categoryname, typename);\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n          />\r\n          <TableBody>\r\n            {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                  \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n            {stableSort(productlists, getComparator(order, orderBy)).map(\r\n              (row, index) => (\r\n                <TableRow key={row.product_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row?.trans_sku_lists?.[0].sku_id}\r\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                      <EditIcon />\r\n                    </Button>\r\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                      <VisibityIcon />\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => showproductdetails(row)}\r\n                  >\r\n                    {/* <Link variant=\"body2\">  */}\r\n                    {row.product_name}\r\n\r\n                    {/* </Link>   */}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      label={row.isactive ? \"\" : \"\"}\r\n                      control={\r\n                        <Switch checked={row.isactive} value=\"checkedA\" />\r\n                      }\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.createdAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )}\r\n            {/* </> */}\r\n            {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Dialog,\r\n  IconButton,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TextField,\r\n  LinearProgress,\r\n  Box,\r\n  CircularProgress,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Backdrop,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { isEmpty } from \"validate.js\";\r\nimport axios from \"axios\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    width: \"90%\",\r\n    margin: theme.spacing(5),\r\n  },\r\n  textarea: {\r\n    resize: \"both\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  errorTable: {\r\n    margin: 10,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  customWidth: {\r\n    maxWidth: 420,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ChooseWareHouse = (props) => {\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n  return (\r\n    <Autocomplete\r\n      id={\"warehouse-id\"}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={data?.allWarehouses?.nodes ?? []}\r\n      value={props.warehouse || null}\r\n      onChange={(event, newValue) => {\r\n        props.setWarehouse(newValue);\r\n      }}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Warehouse\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProductSync = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  var [data, setData] = React.useState({\r\n    action_type: \"price_sync\",\r\n    sync_url: \"\",\r\n    new_tagno: [],\r\n  });\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\r\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\r\n    status: false,\r\n    errors: {},\r\n  });\r\n  const [backDrop, setBackDrop] = React.useState(false);\r\n  var handleChange = (event) => {\r\n    var { name, value } = event.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  var handleAddChip = (chip) => {\r\n    var _ = data;\r\n    chip.split(\",\").forEach((item) => {\r\n      _.new_tagno.push(item);\r\n      setData({ ..._ });\r\n      client\r\n        .query({ query: VERIFYTAGNO, variables: { tagno: item } })\r\n        .then(({ data }) => {\r\n          if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\r\n            setErrorTagNo([...errorTagNo, item]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  var handleDeleteChip = (chip, index) => {\r\n    var _ = data;\r\n    _.new_tagno.splice(index, 1);\r\n    setData({ ..._ });\r\n  };\r\n\r\n  var { open, handleClose } = props;\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"sync_data\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setData({\r\n          action_type: \"price_sync\",\r\n          sync_url: \"\",\r\n          new_tagno: [],\r\n        });\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleRun = () => {\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Warehouse is mandatory!\",\r\n      });\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    var Product_lists = data.Product_lists;\r\n    delete data.Product_lists;\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\r\n      \"/product_sync\",\r\n      {},\r\n      {\r\n        ...data,\r\n        warehouse: warehouse?.id,\r\n      }\r\n    )\r\n      .then((res) => {\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"success\",\r\n          msg: res.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured while processing!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const validatePreSync = () => {\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\r\n      .then((response) => {\r\n        let errorStatus = true;\r\n        data.new_tagno.forEach((tagno) => {\r\n          if (response[tagno] && !isEmpty(response[tagno])) {\r\n            errorStatus = false;\r\n          }\r\n        });\r\n        setBackDrop(false);\r\n        setValidatedTagNo({\r\n          status: errorStatus,\r\n          errors: !errorStatus ? response : {},\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n\r\n    axios\r\n      .post(API_URL + \"/file_upload_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n            Product Sync\r\n          </Typography>\r\n          {data.action_type !== \"price_sync\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={validatePreSync}\r\n              disabled\r\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\r\n            >\r\n              {\"Validate Product Sync\"}\r\n            </Button>\r\n          )}\r\n          <Button\r\n            autoFocus\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            onClick={handleRun}\r\n            startIcon={<SyncIcon />}\r\n            // disabled={\r\n            //   data.action_type !== \"price_sync\" && !validatedTagNo?.status\r\n            // }\r\n          >\r\n            {data.action_type === \"price_sync\"\r\n              ? \"Run Price Sync\"\r\n              : \"Run Product Sync\"}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        className={classes.content}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\" fullWidth required>\r\n            <Typography variant=\"h4\">Choose action type</Typography>\r\n            <RadioGroup\r\n              aria-label=\"action-type\"\r\n              name=\"action_type\"\r\n              value={data.action_type}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value={\"price_sync\"}\r\n                control={<Radio />}\r\n                label={\"Price Sync\"}\r\n              />\r\n              <FormControlLabel\r\n                value={\"new_uploads\"}\r\n                control={<Radio />}\r\n                label={\"Product Sync\"}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ padding: \"9px\" }}>\r\n          <TextField\r\n            value={data.sync_url}\r\n            onChange={handleChange}\r\n            rows={15}\r\n            fullWidth\r\n            label={\"Sync Data URL\"}\r\n            name=\"sync_url\"\r\n            variant=\"outlined\"\r\n            required\r\n            inputProps={{ className: classes.textarea }}\r\n          />\r\n        </Grid>\r\n        {data.action_type === \"new_uploads\" && (\r\n          <>\r\n            <Grid item xs={12}>\r\n              <ChooseWareHouse\r\n                warehouse={warehouse}\r\n                setWarehouse={setWarehouse}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ChipInput\r\n                value={data.new_tagno}\r\n                onAdd={handleAddChip}\r\n                onDelete={handleDeleteChip}\r\n                fullWidth\r\n                newChipKeyCodes={[13, 32]}\r\n                newChipKeys={[\",\"]}\r\n                variant=\"outlined\"\r\n                label={\"TAG Number\"}\r\n                error={errorTagNo.length > 0}\r\n                helperText={\r\n                  errorTagNo.length > 0\r\n                    ? `${errorTagNo.join(\r\n                        \",\"\r\n                      )} already exists syncing again could cause loss of data. Please proceed with caution and validate the same in product edit!`\r\n                    : ``\r\n                }\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {!isEmpty(validatedTagNo?.errors) && (\r\n          <Grid item xs={12} className={classes.errorTable}>\r\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\r\n              {\r\n                \"Below masters are missing respectively, Please add them before syncing products\"\r\n              }\r\n            </Typography>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Tag No.</TableCell>\r\n                  <TableCell align=\"center\">Master Type</TableCell>\r\n                  <TableCell align=\"center\">Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.new_tagno.map(\r\n                  (element, index) =>\r\n                    !isEmpty(validatedTagNo.errors[element]) && (\r\n                      <React.Fragment key={index}>\r\n                        {console.log(\r\n                          Object.keys(validatedTagNo.errors[element]).length\r\n                        )}\r\n                        <TableRow>\r\n                          <TableCell\r\n                            rowSpan={\r\n                              Object.keys(validatedTagNo.errors[element]).length\r\n                            }\r\n                            align=\"center\"\r\n                          >\r\n                            {element}\r\n                          </TableCell>\r\n                          {Object.keys(validatedTagNo.errors[element]).map(\r\n                            (item, i) =>\r\n                              i == 0 && (\r\n                                <React.Fragment key={i}>\r\n                                  <TableCell align=\"center\">{item}</TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {validatedTagNo.errors[element][item]}\r\n                                  </TableCell>\r\n                                </React.Fragment>\r\n                              )\r\n                          )}\r\n                        </TableRow>\r\n                        {Object.keys(validatedTagNo.errors[element]).map(\r\n                          (item, i) =>\r\n                            i > 0 && (\r\n                              <TableRow key={i}>\r\n                                <TableCell align=\"center\">{item}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  {validatedTagNo.errors[element][item]}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                        )}\r\n                      </React.Fragment>\r\n                    )\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        )}\r\n        {progress > 0 && (\r\n          <Grid item xs={12}>\r\n            <LinearProgressWithLabel value={progress} />\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h5\"\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              borderBottom: \"1px solid #000\",\r\n              lineHeight: \"0.1em\",\r\n              margin: \"10px 0 20px\",\r\n            }}\r\n          >\r\n            <span style={{ background: \"#fff\", padding: \"0 10px\" }}>OR</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <div className={classes.root}>\r\n            <input\r\n              className={classes.input}\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              id=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                const files = event.target.files;\r\n                if (files) {\r\n                  handleUpload(files[0]);\r\n                }\r\n              }}\r\n            />\r\n            <label htmlFor=\"file\">\r\n              <Tooltip\r\n                title={\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"normal\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                  >\r\n                    1.Please make sure data is in sample file format.\r\n                    <br />\r\n                    2.materials,collections,occasions,themes,styles,stone_color,stone_count,hashtags\r\n                    should be comma seperated and already existing in respective\r\n                    masters.\r\n                    <br />\r\n                    3.Diamonds and Gemstones to be added in separate sheets, if\r\n                    multiple entries add each row with same tag no.\r\n                  </div>\r\n                }\r\n                classes={{ tooltip: classes.customWidth }}\r\n                arrow\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload Excel file\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </div>\r\n          <IconButton\r\n            onClick={() => {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `sample_upload.xlsx`;\r\n              link.href =\r\n                \"https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_upload.xlsx\";\r\n              link.click();\r\n            }}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Backdrop className={classes.backdrop} open={backDrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProductSync;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ProductFilter } from \"../../components\";\r\nimport ProductSync from \"./ProductSync\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\">\r\n              <Button variant=\"contained\" color=\"primary\" disabled>\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\r\n              Product Sync\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\r\n        <Product filterparams={filterparams} />\r\n        <ProductSync open={open} handleClose={handleClose} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { ProductContext } from \"../../context\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport \"./Productupload.css\";\r\nimport Select from \"react-select\";\r\nimport \"./floating_dropdown.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\r\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  dropdownlayout: {\r\n    \"& .menu\": {\r\n      position: \"Relative !important\",\r\n    },\r\n  },\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  fieldGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  dateField: {\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddressForm(props) {\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [initailRingSize, updateRingSize] = useState([]);\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  React.useEffect(async () => {\r\n    fetch(GRAPHQL_DEV_CLIENT, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\r\n  }, []);\r\n\r\n  React.useEffect(() => {}, [productCtx]);\r\n  // const handleChange = selectedOption => {\r\n\r\n  // };\r\n  const handlesizeChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\r\n  };\r\n  const handlevendorChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\r\n  };\r\n\r\n  const changeproducttype = (type) => (event, newvalue) => {\r\n    setProductCtx({ ...productCtx, product_type: newvalue });\r\n  };\r\n  const handlechange = (type) => (selectedOption) => {\r\n    if (type === \"product_type\") {\r\n      if (selectedOption) {\r\n        var size = \"\";\r\n        var minvalue = 0;\r\n        var maxvalue = 0;\r\n        var selected_sizes = [];\r\n        var default_size = 0;\r\n        if (selectedOption.shortCode === \"K\") {\r\n          selected_sizes.push({\r\n            value: \"XS\",\r\n            label: \"XS\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"S\",\r\n            label: \"S\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"M\",\r\n            label: \"M\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"L\",\r\n            label: \"L\",\r\n          });\r\n        } else {\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Male\"\r\n          // ) {\r\n          //   minvalue = 13;\r\n          //   maxvalue = 25;\r\n          //   default_size = 15;\r\n          // }\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Female\"\r\n          // ) {\r\n          //   minvalue = 8;\r\n          //   maxvalue = 23;\r\n          //   default_size = 12;\r\n          // }\r\n          // for (var i = minvalue; i < maxvalue; i++) {\r\n          //   selected_sizes.push({\r\n          //     value: i,\r\n          //     label: \"\" + i,\r\n          //   });\r\n          // }\r\n        }\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: selectedOption.shortCode,\r\n          product_type: selectedOption,\r\n          size,\r\n          default_size,\r\n          selected_sizes,\r\n        });\r\n      } else {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: \"\",\r\n          product_type: \"\",\r\n          size,\r\n          selected_sizes: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: selectedOption });\r\n    }\r\n  };\r\n  const handleTextChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"vendorcode\") {\r\n      setProductCtx({\r\n        ...productCtx,\r\n        [type]: value,\r\n        vendorleadtime: value.vendorDelivaryDays,\r\n      });\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: value });\r\n    }\r\n  };\r\n\r\n  const switchisorderable = (event) => {\r\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\r\n  };\r\n\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n\r\n  const handleGenderChange = (type) => (event, value) => {\r\n    var minvalue = 0;\r\n    var maxvalue = 0;\r\n    var selected_sizes = [];\r\n    var sizes = [];\r\n    var default_size = 0;\r\n    // if (productCtx.product_type.shortCode === \"K\") {\r\n    //   default_size = \"XS\";\r\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    // } else {\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n\r\n    // for (var i = minvalue; i < maxvalue; i++) {\r\n    // selected_sizes.push(\"\" + i);\r\n    // sizes.push(\"\" + i);\r\n    // }\r\n\r\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\r\n     \r\n      // updateRingSize(\r\n      //   initailRingSize.sort(\r\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\r\n      //   )\r\n      // );\r\n    \r\n\r\n    initailRingSize.forEach((e) => {\r\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\r\n        selected_sizes.push(\"\" + e.sizeValue);\r\n        sizes.push(\"\" + e.sizeValue);\r\n      }\r\n    });\r\n    // }\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n      sizes,\r\n      selected_sizes,\r\n      default_size,\r\n    });\r\n  };\r\n\r\n  const handleMaterialChange = (type) => (event, value) => {\r\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\r\n    if (value) {\r\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\r\n        if (steps.indexOf(\"Step3\") === -1) {\r\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n        }\r\n      }\r\n    }\r\n    setProductCtx({ ...productCtx, [type]: value, steps });\r\n  };\r\n\r\n  const handleInputChange = (type) => (e) => {\r\n    var size = productCtx.size;\r\n    var materials = productCtx.materials;\r\n    var selected_sizes = productCtx.selected_sizes;\r\n\r\n    if (type === \"selectedgender\") {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      selected_sizes = [];\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n\r\n      // for (var i = minvalue; i < maxvalue; i++) {\r\n      //   selected_sizes.push({\r\n      //     value: i,\r\n      //     label: \"\" + i,\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    if (type === \"product_categoy\") {\r\n      if (e.target.value === \"Platinum Jewellery\") {\r\n        materials.push(\"Platinum Jewellery\");\r\n        var index = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (index >= 0) {\r\n          materials.splice(index, 1);\r\n        }\r\n      } else if (e.target.value === \"Silver Jewellery\") {\r\n        materials.push(\"Silver Jewellery\");\r\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\r\n        if (index1 >= 0) {\r\n          materials.splice(index1, 1);\r\n        }\r\n      } else {\r\n        var indexval = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n        indexval = materials.indexOf(\"Platinum Jewellery\");\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      size,\r\n      [type]: e,\r\n      materials,\r\n      selected_sizes,\r\n    });\r\n  };\r\n\r\n  const materialChange = (type) => (selectedOption) => {\r\n    //   let material = { ...productCtx.material, [type]: selectedOption }\r\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\r\n    //   if(material.material)\r\n    //   {\r\n    //   material.material.forEach(element => {\r\n    let material_names = [];\r\n    if (selectedOption) {\r\n      selectedOption.forEach((element) => {\r\n        material_names.push(element.name);\r\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\r\n          if (steps.indexOf(\"Step3\") === -1) {\r\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    //   });\r\n    // }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: selectedOption,\r\n      steps,\r\n      material_names,\r\n    });\r\n  };\r\n  const keyPress = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <FullLoader /> */}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n            <Card {...rest} className={clsx(classes.root, className)}>\r\n              <CardHeader title=\"Product Information 1\" />\r\n              <Divider />\r\n              <CardContent className={classes.cardcontent}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={12} spacing={1}>\r\n                    <Input\r\n                      className={classes.helperinput}\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={productCtx.productname}\r\n                      id=\"productname\"\r\n                      error={productCtx.error_message.productname}\r\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                      name=\"productname\"\r\n                      label=\"Product Name\"\r\n                      onChange={keyPress(\"productname\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\r\n                    <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange(\"product_categoy\")}\r\n                      options={productCtx.masterData.category.map(\r\n                        (option) => option.label\r\n                      )}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Category\"\r\n                          margin=\"dense\"\r\n                          error={productCtx.error_message.product_categoy}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Autocomplete\r\n                      id=\"product_type\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={(option) => option.label}\r\n                      defaultValue={productCtx.product_type}\r\n                      options={productCtx.masterData.product_type}\r\n                      onChange={handleoptionChange(\"product_type\")}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Type\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          error={productCtx.error_message.product_type}\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Product Information 2\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      {productCtx.product_type ? (\r\n                        <>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Autocomplete\r\n                              id=\"free-solo-2-demo\"\r\n                              multiple\r\n                              className={classes.fixedTag}\r\n                              defaultValue={productCtx.material_names}\r\n                              options={productCtx.masterData.material.map(\r\n                                (option) => option.label\r\n                              )}\r\n                              onChange={handleMaterialChange(\"material_names\")}\r\n                              renderTags={(value, getTagProps) =>\r\n                                value.map((option, index) => (\r\n                                  <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={option}\r\n                                    {...getTagProps({ index })}\r\n                                  />\r\n                                ))\r\n                              }\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Select Product Materials\"\r\n                                  margin=\"dense\"\r\n                                  variant=\"outlined\"\r\n                                  error={\r\n                                    productCtx.error_message.material_names\r\n                                  }\r\n                                  fullWidth\r\n                                  InputProps={{\r\n                                    ...params.InputProps,\r\n                                    type: \"search\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      ) : null}\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.selectedgender}\r\n                          options={productCtx.masterData.gender.map(\r\n                            (option) => option.label\r\n                          )}\r\n                          onChange={handleGenderChange(\"selectedgender\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Gender\"\r\n                              margin=\"dense\"\r\n                              error={productCtx.error_message.selectedgender}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalpurity}\r\n                          options={productCtx.masterData.metalpurity}\r\n                          onChange={handleoptionChange(\"metalpurity\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Purity\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={productCtx.error_message.metalpurity}\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalcolour}\r\n                          options={productCtx.masterData.metalcolour}\r\n                          onChange={handleoptionChange(\"metalcolour\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Colour\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.metalcolour}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Vendor Information\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.vendorcode}\r\n                          getOptionLabel={(option) => option.label}\r\n                          options={productCtx.masterData.vendorcode}\r\n                          onChange={handleoptionChange(\"vendorcode\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Vendor Code\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.vendorcode}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Product Code\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          value={productCtx.productvendorcode}\r\n                          error={productCtx.error_message.productvendorcode}\r\n                          id=\"productvendorcode\"\r\n                          name=\"productvendorcode\"\r\n                          onChange={handleTextChange(\"productvendorcode\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Lead Time\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          error={productCtx.error_message.vendorleadtime}\r\n                          value={productCtx.vendorleadtime}\r\n                          InputLabelProps={{\r\n                            shrink: productCtx.vendorleadtime,\r\n                          }}\r\n                          id=\"vendorleadtime\"\r\n                          name=\"vendorleadtime\"\r\n                          onChange={handleTextChange(\"vendorleadtime\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">\r\n                            IsReorderable\r\n                          </FormLabel>\r\n                          <RadioGroup\r\n                            aria-label=\"position\"\r\n                            name=\"position\"\r\n                            value={productCtx.isreorderable}\r\n                            onChange={switchisorderable}\r\n                            row\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Yes\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"Yes\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"No\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"No\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>{\" \"}\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={12}>\r\n                {productCtx.product_type ? (\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader\r\n                      title=\"Default SKU For Display\r\n  \"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_colour}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_colour\"\r\n                            )}\r\n                            options={productCtx.metalcolour.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Colour\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={\r\n                                  productCtx.error_message.default_metal_colour\r\n                                }\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_purity}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_purity\"\r\n                            )}\r\n                            options={productCtx.metalpurity.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Purity\"\r\n                                margin=\"dense\"\r\n                                error={\r\n                                  productCtx.error_message.default_metal_purity\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              (productCtx.product_type.shortCode === \"K\" ||\r\n                productCtx.product_type.shortCode === \"R\" ||\r\n                productCtx.product_type.shortCode === \"BA\") &&\r\n              productCtx.sizes.length > 0 ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Size Information\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            multiple\r\n                            freeSolo\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.selected_sizes}\r\n                            options={productCtx.sizes}\r\n                            onChange={handleoptionChange(\"selected_sizes\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Ring Sizes\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.selected_sizes}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_type\"\r\n                            className={classes.fixedTag}\r\n                            freeSolo\r\n                            defaultValue={productCtx.default_size}\r\n                            options={productCtx.selected_sizes}\r\n                            onChange={handleoptionChange(\"default_size\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Select Default Size\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_size}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              productCtx.product_type.alias === \"Earrings\" ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Type of Fit\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.earringbacking}\r\n                            options={productCtx.masterData.earringbacking.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            onChange={handleoptionChange(\"earringbacking\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Earring Backing\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.earringbacking}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}></Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\nCardContent} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Select from 'react-select';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { ProductContext } from '../../context';\r\nimport Box from '@material-ui/core/Box';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\n\r\nimport \"./Productupload.css\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const materialChange = type => e => {\r\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\r\n    setProductCtx({ ...productCtx, selected_metal_colour })\r\n    }\r\n  const purityChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]:selectedOption })\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n  \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n<Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={6}>\r\n      <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>\r\n      <Grid item container xs={12} sm={12}>\r\n      <Grid item xs={6} sm={3}>\r\n\r\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                  <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange('product_code')}\r\n                      name=\"size\"\r\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\r\n                      \r\n                      />\r\n                      </Grid>\r\n     </Grid>\r\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\r\n      <>\r\n     <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Height\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_height')}\r\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\r\n          \r\n          />\r\n     </Grid> \r\n\r\n    <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Width\"\r\n          name=\"size\"\r\n          onChange = {handleInputChange('metal_width')}\r\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\r\n\r\n          autoComplete=\"size\"\r\n          \r\n          />\r\n    </Grid>\r\n    </>\r\n     }\r\n      \r\n   \r\n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Length\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_length')}\r\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\r\n\r\n          />\r\n    </Grid> : null }\r\n  \r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Enter weights for different Purity\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container spacing={1}>\r\n\r\n    <Grid item xs={12}>\r\n\r\n    </Grid>\r\n    {productCtx.metalpurity.map(row => (\r\n  \r\n  <Grid item container xs={12} spacing={2} >\r\n    \r\n    <Grid item xs={6} >\r\n\r\n      <Input\r\n    variant=\"outlined\"\r\n    disabled\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Purity\"\r\n    name=\"size\"\r\n    autoComplete=\"size\"\r\n    value={row.name}\r\n    />\r\n</Grid>\r\n    <Grid item xs={6} >\r\n\r\n<Input\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Weight\"\r\n    name=\"size\"\r\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\r\n    autoComplete=\"size\"\r\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\r\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\r\n    />\r\n</Grid>\r\n    </Grid> ))}\r\n\r\n      </Grid>\r\n      </CardContent>\r\n</Card>\r\n</Grid>\r\n<Grid item xs={12} sm={6}>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={6} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={6}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.prod_styles}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.occassions}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.collections}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n              </Grid>\r\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\r\n              <>\r\n               <Grid item xs={12} sm={6} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"No of Stones\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Stone Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    </> : null }\r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n\r\n</Grid>\r\n</Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\nimport React from 'react';\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n// Register the plugins\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'contain'\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Review() {\r\n  let count = 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images, setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = []\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach(element => {\r\n      if (element.name === productCtx.default_metal_colour) {\r\n        product_images[element.name] = []\r\n        if (metalcolour.length > 0) {\r\n          metalcolour.unshift(element);\r\n        } else {\r\n          metalcolour.push(element)\r\n        }\r\n\r\n      } else {\r\n        metalcolour.push(element)\r\n        product_images[element.name] = []\r\n      }\r\n    })\r\n    setMetalcolour(metalcolour)\r\n\r\n  }, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n\r\n    //alert(JSON.stringify(bodaydata))\r\n\r\n    let prodimages = productCtx.product_images;\r\n    if (prodimages) {\r\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n      let imagecolourobj = productCtx.product_images[imagecolor];\r\n      var imagecount = 1;\r\n      if (imagecolourobj) {\r\n        imagecount = imagecolourobj.length + 1;\r\n      }\r\n\r\n      let imagename = (prodid + \"-\" + (imagecount) + imagecolor.charAt(0));\r\n      let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\r\n      var returnData = responsedata.data.returnData;\r\n      var signedRequest = returnData.signedRequest;\r\n      var url = returnData.url;\r\n      console.log(\"responseurl\" + url);\r\n      var filepathname = returnData.filepath\r\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n      var options = {\r\n        headers: {\r\n          'Content-Type': bodaydata.fileExtension,\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      };\r\n\r\n      if (imagecolourobj) {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\r\n          \"position\": (imagecolourobj.length + 1),\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        if (uploadtype === 'edit') {\r\n          imagecolourobj[imageposition] = imageobj;\r\n\r\n        } else {\r\n          imagecolourobj.push(imageobj)\r\n\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n\r\n      } else {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\r\n          \"position\": imageposition,\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        imagecolourobj = [];\r\n        imagecolourobj.push(imageobj)\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      // setFiles([])\r\n    }\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n\r\n\r\n\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor) {\r\n\r\n\r\n    let prodimages = productCtx.product_images;\r\n\r\n    if (prodimages) {\r\n      let imagecolourobj = prodimages[imagecolor];\r\n\r\n      if (imagecolourobj) {\r\n        if (imagecolourobj.length > imageposition) {\r\n          let removedfile = imagecolourobj[imageposition]\r\n\r\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" }\r\n\r\n        }\r\n\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      //alert(JSON.stringify(productCtx.product_images))\r\n    }\r\n  }\r\n\r\n  const handleInit = () => {\r\n    // alert(\"initialized\")\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={2}>\r\n\r\n        <Grid item direction=\"row\" xs={12}>\r\n          <Grid container justify=\"left\" spacing={2}>\r\n\r\n            {metalcolour === undefined ? null : metalcolour.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.name}\r\n                  </Typography>\r\n                </Grid>\r\n                {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\r\n                      console.log(file);\r\n                      console.log('filepond property');\r\n\r\n                    })}\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={fileItem => {\r\n                      // Set currently active file objectsfiles to this.state\r\n\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {\r\n\r\n                    }}\r\n                    fileRenameFunction={\r\n                      (file) => new Promise(resolve => {\r\n                        var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n                        let imagecolourobj = productCtx.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\r\n                        resolve(imagename)\r\n\r\n                      })\r\n                    }\r\n                  >\r\n                  </FilePond>\r\n                  {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n                </Grid>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport Step4 from \"./Step4\";\r\nimport Step5 from \"./Step5\";\r\nimport Step6 from \"./Step6\";\r\nimport Step7 from \"./Step7\";\r\nimport Step8 from \"./Step8\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n      return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;\r\n    case \"Step6\":\r\n      return <Step6 />;\r\n\r\n    case \"Step7\":\r\n      return <Step7 />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var error_content = {};\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if (activeStep === 0) {\r\n      if (!productCtx.product_type) {\r\n        isvalid = false;\r\n        error_content[\"product_type\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productname) {\r\n        isvalid = false;\r\n        error_content[\"productname\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.product_categoy) {\r\n        isvalid = false;\r\n        error_content[\"product_categoy\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.metalcolour) {\r\n        isvalid = false;\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.material_names) {\r\n        isvalid = false;\r\n        error_content[\"material_names\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalpurity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.vendorcode) {\r\n        isvalid = false;\r\n        error_content[\"vendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.vendorleadtime) {\r\n        isvalid = false;\r\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.default_metal_colour) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.default_metal_purity) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productvendorcode) {\r\n        isvalid = false;\r\n        error_content[\"productvendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        !productCtx.earringbacking &&\r\n        productCtx.product_type.alias === \"Earrings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"earringbacking\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.selectedgender) {\r\n        isvalid = false;\r\n        error_content[\"selectedgender\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        (!productCtx.selected_sizes ||\r\n          productCtx.selected_sizes.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"selected_sizes\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (\r\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"default_size\"] = \"Error messsage\";\r\n      }\r\n      // isvalid = true;\r\n    }\r\n\r\n    if (activeStep === 1) {\r\n      productCtx.metalpurity.forEach((element) => {\r\n        const keyvalue = element.name + \"_metal_weight\";\r\n\r\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\r\n          isvalid = false;\r\n\r\n          error_content[keyvalue] = \"Error messsage\";\r\n        }\r\n      });\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\") {\r\n        if (!productCtx.metal_height) {\r\n          isvalid = false;\r\n          error_content[\"metal_height\"] = \"Error messsage\";\r\n        }\r\n        if (!productCtx.metal_width) {\r\n          isvalid = false;\r\n          error_content[\"metal_width\"] = \"Error messsage\";\r\n        }\r\n      }\r\n\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"prod_styles\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"occassions\"] = \"Error messsage\";\r\n      }\r\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n      // {\r\n      //   isvalid = false\r\n      //   error_content['collections'] = \"Error messsage\"\r\n      // }\r\n\r\n      //  isvalid = true;\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, error_message: error_content });\r\n    if (activeStep === productCtx.steps.length - 1) {\r\n      console.info(\"HANDLE\", sendNetworkRequest);\r\n      const productseries =\r\n        productCtx.masterData.productseries[0].productSeries;\r\n\r\n      delete productCtx[\"masterData\"];\r\n\r\n      var formdata = productCtx;\r\n      formdata[\"productseries\"] = productseries;\r\n\r\n      setLoading(true);\r\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      await sleep(500);\r\n      window.location.replace(\"/productlist\");\r\n    } else {\r\n      if (isvalid) {\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    }\r\n\r\n    //else\r\n    //  {\r\n    //  }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  async function sleep(millis) {\r\n    return new Promise((resolve) => setTimeout(resolve, millis));\r\n  }\r\n  console.log(productCtx, \"Component Samir\");\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {productCtx.steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Paper>\r\n\r\n      <React.Fragment>\r\n        {activeStep === productCtx.steps.length ? (\r\n          <React.Fragment>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Product Added Successfully\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"></Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {getStepContent(productCtx.steps[activeStep])}\r\n            <div className={classes.buttons}>\r\n              {activeStep !== 0 && (\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === productCtx.steps.length - 1\r\n                  ? \"Product Upload\"\r\n                  : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from \"./Component\";\r\nimport { ProductProvider } from \"../../context\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const Productupload = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n});\r\nexport default Productupload;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  \r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CategoryComponents } from \"./../../components\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nconst tabs = [\r\n  { value: \"Category\", label: \"Category\" },\r\n  { value: \"Producttype\", label: \"Product type\" },\r\n  { value: \"Material\", label: \"Material\" },\r\n  { value: \"Collections\", label: \"Collections\" },\r\n  { value: \"Occations\", label: \"Occations\" },\r\n  { value: \"Styles\", label: \"Styles\" },\r\n  { value: \"Themes\", label: \"Themes\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200],\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst VoucherComponent = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\r\n    React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const myFunction = () => {\r\n    props.onAdded(attrobj);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"materials\") {\r\n      let elements_arr = [];\r\n      value.forEach((element) => {\r\n        elements_arr.push(element.name);\r\n      });\r\n      if (elements_arr.indexOf(\"Gold\") > -1) {\r\n        setIsgold(true);\r\n      } else {\r\n        setIsgold(false);\r\n      }\r\n\r\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\r\n        setIsdiamond(true);\r\n      } else {\r\n        setIsdiamond(false);\r\n      }\r\n    }\r\n    setAttrobj({\r\n      ...attrobj,\r\n      [type]: value,\r\n    });\r\n\r\n    // props.onAdded(type,value)\r\n  };\r\n  const handleTabsChange = (event, value) => {\r\n    if (value == \"Material\") {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if (tabnames.indexOf(\"Purity\") === -1) {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n      }\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <div className={classes.content}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.category}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              getOptionLabel={(option) => option.name}\r\n              options={voucherCtx.voucherMaster.product_categories}\r\n              onChange={handleoptionChange(\"category\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Category\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.product_types}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.product_types}\r\n              onChange={handleoptionChange(\"product_types\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.product_types}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Types\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.materials}\r\n              onChange={handleoptionChange(\"materials\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.materials}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Materials\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {isgold ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                options={voucherCtx.voucherMaster.purities}\r\n                onChange={handleoptionChange(\"purities\")}\r\n                getOptionLabel={(option) => option.name}\r\n                value={attrobj.purities}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          {isdiamond ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.diamondtype}\r\n                options={voucherCtx.voucherMaster.diamondtypes}\r\n                onChange={handleoptionChange(\"diamondtype\")}\r\n                value={attrobj.diamondtype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.diamondtype}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.collections}\r\n              onChange={handleoptionChange(\"collections\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.collections}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Collections\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.occations}\r\n              onChange={handleoptionChange(\"occations\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.occations}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Occassions\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.styles}\r\n              onChange={handleoptionChange(\"styles\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.styles}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Styles\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.themes}\r\n              onChange={handleoptionChange(\"themes\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.themes}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Themes\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n            <Button\r\n              onClick={() => props.onAdded(attrobj)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Check Applicable Products\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired,\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Viewsku from \"../Viewsku\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Products = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = (event) => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map((order) => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel() {\r\n    setOpen(false);\r\n  }\r\n  function handleOpen(prodskus) {\r\n    setOpen(true);\r\n    setSelectskus(prodskus);\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      {open ? (\r\n        <Viewsku\r\n          isadd={open}\r\n          products={selectskus}\r\n          actionclose={handlecancel}\r\n        />\r\n      ) : null}\r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader title={props.title} />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product ID</TableCell>\r\n\r\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.products\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((order) => (\r\n                    <TableRow\r\n                    // key={order.id}\r\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      <TableCell>{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { VoucherContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Chip, IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport uuid from \"uuid/v1\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { palette } from \"../../theme\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Header,\r\n  Results,\r\n  Products,\r\n  AboutVoucher,\r\n  VoucherComponent,\r\n} from \"./components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  productcontent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor: theme.palette.white,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"Created Successfully\",\r\n    severity: \"Success\",\r\n  });\r\n\r\n  const { voucherCtx, setVoucherCtx, materialMaster } =\r\n    React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  async function getdiscountvalue(discount_id) {\r\n    let bodydata = {\r\n      discountid: discount_id,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getdiscount\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach((comp) => {\r\n      comparr.push({\r\n        name: comp,\r\n      });\r\n    });\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids);\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname: response.discunt.discount_name,\r\n      discountvalue: response.discunt.discount_value,\r\n      discounttype: response.discunt.discount_type,\r\n      discounttitle: response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes),\r\n    });\r\n    setIsloaded(true);\r\n  }\r\n  async function creatediscount(ispricerun) {\r\n    let skuarray = [];\r\n    while (skus.length > 0) {\r\n      let sku_content = skus.splice(0, 25000);\r\n      skuarray.push(sku_content);\r\n    }\r\n    if (errorskus.length > 0) {\r\n      alert(\"Some skus are overlapping\");\r\n    } else {\r\n      let discount_count = 0;\r\n      setIsloading(true);\r\n      updatediscount(discount_count);\r\n      async function updatediscount() {\r\n        let bodydata = {\r\n          discountvalue: parseFloat(attributeobj.discountvalue),\r\n          discounttype: attributeobj.discounttype,\r\n          componenets: attributeobj.componenets,\r\n          discountname: attributeobj.discountname,\r\n          discounttitle: attributeobj.discounttitle,\r\n          product_attributes: productattr,\r\n          product_attributes_text: productattrtext,\r\n          skus: skuarray[discount_count],\r\n        };\r\n        console.log(JSON.stringify(productattr));\r\n        let response = await sendNetworkRequest(\r\n          \"/creatediscount\",\r\n          {},\r\n          bodydata,\r\n          false\r\n        );\r\n\r\n        discount_count = discount_count + 1;\r\n        if (skuarray.length > discount_count) {\r\n          setLoadingtitle(skus.length + \" Left\");\r\n          updatediscount(discount_count);\r\n        } else {\r\n          setIsloading(false);\r\n          setOpen(true);\r\n          setIsshowpriceupdate(false);\r\n\r\n          window.location = \"/salediscountlist\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //setProducts([])\r\n    let errorindex = errorskus.indexOf(chipToDelete);\r\n    if (errorindex > -1) {\r\n      errorskus.splice(errorindex, 1);\r\n      var erroritems = [];\r\n      errorskus.forEach((itemname) => {\r\n        erroritems.push(itemname);\r\n      });\r\n      setErrorskus(erroritems);\r\n    }\r\n    let index = products.indexOf(chipToDelete);\r\n    products.splice(index, 1);\r\n    var items = [];\r\n    products.forEach((itemname) => {\r\n      items.push(itemname);\r\n    });\r\n    setProducts(items);\r\n\r\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  async function filterapllied(value) {\r\n    var bodydata = {};\r\n\r\n    let product_ids = [];\r\n    let response = await sendNetworkRequest(\r\n      \"/getaliasproduct\",\r\n      {},\r\n      value,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setSkus(response.skus);\r\n    setErrorskus(response.eror_skus);\r\n    setIsloading(false);\r\n    setTitlecontent(response.title);\r\n  }\r\n  async function updateprices() {\r\n    alert(\"i am here\");\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id: products,\r\n    };\r\n    setIsshowpriceupdate(true);\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/productpriceupdate\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: \"updateskuprice\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatusmessage(response.message);\r\n  }\r\n  function attributeadded(value) {\r\n    let componentsstring = {};\r\n    let attrs = [];\r\n    let display_arr = [];\r\n    let keys = Object.keys(value);\r\n    keys.forEach((key) => {\r\n      let values = [];\r\n      let alias_arr = [];\r\n      value[key].forEach((valueobj) => {\r\n        values.push(valueobj.name);\r\n        alias_arr.push(valueobj.alias);\r\n        attrs.push(valueobj.name);\r\n      });\r\n      componentsstring[key] = {\r\n        values: values,\r\n        alias: alias_arr,\r\n      };\r\n      let displaytext = key + \" : \" + attrs.join(\" , \");\r\n      display_arr.push(displaytext);\r\n    });\r\n    setProductattr(componentsstring);\r\n    setProductattrtext(display_arr.join(\" | \"));\r\n    //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true);\r\n    //setAttributeobj(value)\r\n    filterapllied(value);\r\n  }\r\n  function valuechange(type, value) {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {};\r\n    fetchOrders();\r\n    if (\r\n      props.location.pathname &&\r\n      props.location.pathname.split(\"/\").length > 2\r\n    ) {\r\n      let discount_id = props.location.pathname.split(\"/\")[2];\r\n      setDiscount_id(discount_id);\r\n      getdiscountvalue(discount_id);\r\n    } else {\r\n      setIsloaded(true);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FullLoader title={loadingtitle} isopen={isloading} />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Page className={classes.root} title=\"Orders Management List\">\r\n          {!discount_id ? (\r\n            <>\r\n              <VoucherComponent\r\n                onAdded={attributeadded}\r\n                className={classes.aboutvoucher}\r\n              />\r\n              {products.length > 0 ? (\r\n                <Products title={titlecontent} products={errorskus} />\r\n              ) : null}\r\n              {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n              {isloaded || !discount_id ? (\r\n                <AboutVoucher\r\n                  discountcontent={attributeobj}\r\n                  className={classes.aboutvoucher}\r\n                  onAdded={valuechange}\r\n                  categories={[\"Fixed Amount\", \"percentage\"]}\r\n                />\r\n              ) : null}\r\n\r\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                spacing={2}\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ marginTop: 16, textAlign: \"center\" }}\r\n                  spacing={2}\r\n                >\r\n                  {!isshowpriceupdate ? (\r\n                    <>\r\n                      <Button\r\n                        onClick={() => creatediscount(false)}\r\n                        color=\"primary\"\r\n                        style={{ margin: 16 }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n\r\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n                    </>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Name\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discountname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Title\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttitle}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttype == 2\r\n                      ? attributeobj.discountvalue + \"%\"\r\n                      : attributeobj.discountvalue}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Pricing Compponent\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.displaycomp}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {attributeobj.allkeys ? (\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  {attributeobj.allkeys.map((row, index) => (\r\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                      <Typography variant=\"body2\" component=\"body2\">\r\n                        {row}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h5\">\r\n                        {attributeobj.attributes[row].values}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                    <Typography variant=\"body2\" component=\"body2\">\r\n                      Total Sku\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {attributeobj.skucount}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n                {!isshowpriceupdate ? (\r\n                  <>\r\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    {statusmessage}\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={(e) => handlestatus()}\r\n                      color=\"primary\"\r\n                    >\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Page>\r\n      </MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from \"../../context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\nimport { materialMaster } from \"../../services/mapper\";\r\nimport Component from \"./Salediscountcontent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport const Salediscount = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(materialMaster.query);\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <VoucherProvider\r\n      value={{\r\n        data,\r\n        mapper: materialMaster.mapper,\r\n        mappertype: \"voucherMaster\",\r\n      }}\r\n    >\r\n      <Component {...props} />\r\n    </VoucherProvider>\r\n  );\r\n});\r\nexport default Salediscount;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":2  ,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipment Settings\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport data from \"./data.json\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          User and Roles Management\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {data.options.map((menu, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {menu.title}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Userconfiguration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGOLDPRICE, GOLDPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmetalprice from './Addmetalprice';\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [goldpricelist, setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEGOLDPRICE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      material: metalcontent.metal.name,\r\n      purity: metalcontent.purity.shortCode,\r\n      costprice: metalcontent.costPrice,\r\n      sellingprice: metalcontent.sellingPrice,\r\n      pricetype: metalcontent.pricetype.label,\r\n      vendor: props.vendor,\r\n      isadd: true\r\n    }\r\n    console.log(\"--------\")\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setOpen(false)\r\n    refetch()\r\n    //  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n\r\n  function handleEdit(diamondData) {\r\n    let pricetypes = [{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]\r\n    let selectedsellingPriceType = {}\r\n    pricetypes.forEach(element => {\r\n\r\n      if (element.label == diamondData.sellingPriceType) {\r\n        selectedsellingPriceType = element\r\n      }\r\n    })\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      selectedsellingPriceType: selectedsellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Gold Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={GOLDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allGoldPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      setGoldpricelist(data)\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          data={deleteid}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Addmetalprice isadd={open} refetch={refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.purity}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"center\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  value={editdiamond.selectedsellingPriceType}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEDIAMONDCHARGE, DIAMONDPRICELIST, PRODUCTDIAMONDTYPES, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Adddiamondprice from './Adddiamondprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEDIAMONDCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent, refetch) {\r\n    alert(\"i am here\")\r\n    let bodydata = {}\r\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\r\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\r\n    bodydata['costprice'] = metalcontent.costPrice\r\n    bodydata['pricetype'] = metalcontent.pricetype.label\r\n    bodydata['sellingprice'] = metalcontent.sellingprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['isadd'] = true\r\n\r\n\r\n\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n    setOpen(false)\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        // alert(JSON.stringify(fatchvalue))\r\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Diamond Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          data={deleteid}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.diamondClarity}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondClarity}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondColour}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(gemstonedata)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setGemstonedata({ ...gemstonedata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setGemstonedata({\r\n    ...gemstonedata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('gemstone')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.gems}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Gemstone\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {props.viewtype == 1 ? \r\n          <>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              onChange={handleinputChange('weightend')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          </> : null }\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              onChange={handleinputChange('costprice')}\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGEMCHARGE, GEMSTONEMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addgemstoneprice from './Addgemstoneprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'From weight', label: 'From weight' },\r\n  { id: 'To Weight', label: 'To Weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\nconst stonecountcolumns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editgem, setEditgem] = React.useState({})\r\n  const [gemlist, setgemlist] = React.useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(diamondcontent) {\r\n    if (deleteid.length > 0) {\r\n      let variables = {\r\n        elementId: deleteid[0]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    if (deleteid.length > 1) {\r\n      let variables = {\r\n        elementId: deleteid[1]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    setgemlist([])\r\n\r\n    setDeleteid([])\r\n    getgemlist()\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n\r\n    let deleteids = [];\r\n    deleteids.push(diamondData.costprice.id)\r\n    deleteids.push(diamondData.sellprice.id)\r\n\r\n    setDeleteid(deleteids)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata) {\r\n    var bodydata = {}\r\n    bodydata['gemstone_type'] = gemstonedata.name\r\n    bodydata['weight_start'] = gemstonedata.weightstart\r\n    bodydata['weight_end'] = gemstonedata.weightend\r\n    bodydata['cost_price'] = gemstonedata.costprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['selling_price_type'] = gemstonedata.pricetype.label\r\n    bodydata['selling_price'] = gemstonedata.sellingprice\r\n    bodydata['isadd'] = true\r\n\r\n    // alert(JSON.stringify(gemstonedata))\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\r\n    setOpen(false)\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditgem({\r\n      ...editgem,\r\n      cost_price_id: diamondData.costprice.id,\r\n      weight_start: diamondData.costprice.weight_start,\r\n      weight_end: diamondData.costprice.weight_end,\r\n      cost_price: diamondData.costprice.price,\r\n      selling_price: diamondData.sellprice.price,\r\n      selling_price_id: diamondData.sellprice.id,\r\n\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.costprice.id, action: true })\r\n\r\n  }\r\n\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, editgem)\r\n\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  async function getgemlist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n      ratetype: props.viewtype\r\n    }\r\n    let response = await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\r\n    // setProductlists(response.products)\r\n    setgemlist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    getgemlist()\r\n  }, [vendorid])\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleinputChange = type => e => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        onSuccess={handledelete}\r\n        data={deleteid}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              {props.viewtype == 1 ?\r\n                <TableRow>\r\n\r\n                  {columns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow> : <TableRow>\r\n\r\n                  {stonecountcolumns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>}\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n              {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\r\n                <TableRow key={row.gemstoneType}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.costprice.gemstone_type}\r\n\r\n                  </TableCell>\r\n                  {props.viewtype == 1 ?\r\n                    <>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_start}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_end}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                    </> : null}\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.cost_price}\r\n                        onChange={handleinputChange('cost_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.selling_price}\r\n                        onChange={handleinputChange('selling_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.sellprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        fullWidth\r\n                        disableClearable\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={option => option.name}\r\n                        options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Price Type\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                          />\r\n                        )}\r\n                      /> : <Typography className={classes.heading}>\r\n                          {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.updatedAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                  {\r\n                    btnEdit.action && btnEdit.id == row.costprice.id ?\r\n                      <TableCell style={{ width: 170 }} align=\"center\">\r\n                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                        </Button>\r\n                      </TableCell> :\r\n                      <TableCell align=\"center\" style={{ width: 170 }}>\r\n                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                  }\r\n                </TableRow>\r\n              ))}\r\n              {/* </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      } \r\n                  }}*/}\r\n              {/* </Query> */}\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Grid, Input } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEMAKINGCHARGE, MAKINGCHARGEPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmakingchargeprice from './Addmakingchargeprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'From Weight', label: 'From Weight' },\r\n  { id: 'To weight', label: 'To weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n\r\n  { id: 'updated On', label: 'updated On' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [editmc, setEditmc] = React.useState({})\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [mchargelist, setMchargelist] = React.useState([])\r\n  const [deleteid, setDeleteid] = React.useState('')\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: '',\r\n    add: false\r\n  })\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEMAKINGCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        //refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false, add: true })\r\n\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata = {}\r\n    bodydata['material'] = makingcontent.metal.name;\r\n    bodydata['weight_start'] = makingcontent.weightstart;\r\n    bodydata['weight_end'] = makingcontent.weightend;\r\n    bodydata['price_type'] = makingcontent.pricetype.label;\r\n    bodydata['vendor_code'] = props.vendor;\r\n    bodydata['purity'] = makingcontent.purity.shortCode;\r\n    bodydata['cost_price'] = makingcontent.costPrice;\r\n    bodydata['selling_price'] = makingcontent.sellingprice;\r\n    bodydata['isadd'] = true\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    setOpen(false)\r\n    getmclist()\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmc({\r\n      ...editmc,\r\n      price: diamondData.price,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function getmclist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor\r\n    }\r\n\r\n    let response = await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\r\n    setMchargelist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getmclist()\r\n  }, [vendorid])\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, editmc)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    getmclist()\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange = type => e => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\" : column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={MAKINGCHARGEPRICELIST}\r\n                onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightStart}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightEnd}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editmc.price}\r\n                                  onChange={handleinputChange('selling_price')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.price}\r\n                                  </Typography>}\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"left\">\r\n                                  <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"left\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster} isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Vendorprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n\r\n        setVendorlist({ \r\n          ...vendorlist,\r\n          vendors : fatchvalue.data.allMasterVendors.nodes\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n         <Grid container  spacing={1}>  \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Choose Vendor\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid>\r\n         \r\n         {vendorcode ? <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={vendorcode} />\r\n          </Grid>\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds vendor={vendorcode}/>\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \r\n    </Grid>\r\n\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n    </Grid>\r\n          </> : null }\r\n    </Grid>\r\n\r\n    \r\n  )\r\n});\r\n\r\nexport default withRouter(Vendorprice);","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst WarehouseModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Warehouse-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Warehouse-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Name\"}\r\n              name=\"name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.name}\r\n              onChange={props.editItem}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Shipping In Days\"}\r\n              name=\"shippingInDays\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.shippingInDays}\r\n              onChange={props.editItem}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WarehouseModal;\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport {\r\n  CREATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n} from \"../../graphql/mutation\";\r\nimport { WAREHOUSELIST } from \"../../graphql/query\";\r\nimport WarehouseModal from \"./WarehouseModal\";\r\n\r\nexport const Warehouse = (props) => {\r\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\r\n\r\n  const editItem = (event) => {\r\n    var { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ name: \"\", shippingInDays: \"\" });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_WAREHOUSE,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_WAREHOUSE,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setOpen(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_WAREHOUSE,\r\n          variables: {\r\n            id: item.id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (id, isActive) => {\r\n    client\r\n      .mutate({\r\n        mutation: UPDATE_WAREHOUSE,\r\n        variables: {\r\n          id,\r\n          item: { isActive: !isActive, updatedAt: new Date() },\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Warehouse</Typography>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Name</TableCell>\r\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Status</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allWarehouses?.nodes.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No Warehouses found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allWarehouses?.nodes.length > 0 &&\r\n                data?.allWarehouses?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.shippingInDays}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <Switch\r\n                        checked={item.isActive}\r\n                        onChange={() => handleSwitch(item.id, item.isActive)}\r\n                        name=\"active\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <WarehouseModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Slide,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { CARTBYID } from \"../../graphql/query\";\r\nimport Image from \"material-ui-image\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport SmsIcon from \"@material-ui/icons/Sms\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport moment from \"moment\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  fieldset: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    gridArea: \"1 / 1\",\r\n    width: \"inherit\",\r\n  },\r\n  legend: {\r\n    font: \"15pt/0\",\r\n    //margin: \"auto\" /* to center */,\r\n    padding: \"0 4px\",\r\n  },\r\n  textfield: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inline: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"inline\",\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport default function CartDetails(props) {\r\n  const classes = useStyles();\r\n  let { open, handleClose } = props;\r\n  const [state, setState] = React.useState({});\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Sent Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.id) {\r\n      client\r\n        .query({\r\n          query: CARTBYID,\r\n          variables: {\r\n            id: props.id,\r\n          },\r\n          fetchPolicy: \"network-only\",\r\n        })\r\n        .then((res) => {\r\n          setState(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, [props.id]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      maxWidth={\"lg\"}\r\n      fullWidth\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Cart Details</Typography>\r\n        {handleClose && (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {(state?.loading == undefined || state?.loading) && (\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {state?.data && (\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={6}>\r\n              {/* <Typography variant=\"h6\">User Details</Typography> */}\r\n              <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>User Details</legend>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  defaultValue={state?.data?.cart?.user?.firstName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  defaultValue={state?.data?.cart?.user?.lastName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"User Name\"\r\n                  defaultValue={state?.data?.cart?.user?.username}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  defaultValue={state?.data?.cart?.user?.email}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Mobile No.\"\r\n                  defaultValue={state?.data?.cart?.user?.mobile}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.isemailverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"Email Verified\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.ismobileverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\" Mobile Verified\"\r\n                  />\r\n                </FormGroup>\r\n                {state?.data?.cart?.address?.nodes.length > 0 ? (\r\n                  <div style={{ padding: 5 }}>\r\n                    {state?.data?.cart?.address?.nodes.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment key={item?.id}>\r\n                          <Typography variant=\"h6\">\r\n                            Cart Address #{index + 1} :{\" \"}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {`${item?.salutation ?? ``}${item?.firstname} ${\r\n                              item?.lastname\r\n                            }`.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline1.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline2.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.city.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.state.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.country.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.pincode.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Contact No.{\" \"}\r\n                            {`${item?.countryCode} - ${item?.contactNumber}`}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </fieldset>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Status</legend>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Status :{\" \"}\r\n                        <Chip\r\n                          className={classes.chip}\r\n                          label={state?.data?.cart?.status.toUpperCase()}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Gross Price : &#8377;\r\n                        {`${state?.data?.cart?.grossAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Discounted Price : &#8377;\r\n                        {`${state?.data?.cart?.discountedPrice ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Tax Amount : &#8377;\r\n                        {`${state?.data?.cart?.taxAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Items</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.cart_items?.nodes.map((item) => {\r\n                      var skuDetails = item?.transSkuListByProductSku;\r\n                      var product =\r\n                        item?.transSkuListByProductSku?.productListByProductId;\r\n                      var image = product?.productImagesByProductId?.nodes[0];\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.productSku}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemAvatar\r\n                              style={{\r\n                                width: \"30%\",\r\n                                height: \"30%\",\r\n                              }}\r\n                            >\r\n                              <Image src={`${image?.imageUrl}`} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography variant=\"h5\">\r\n                                  {\r\n                                    item?.transSkuListByProductSku\r\n                                      ?.productListByProductId?.productName\r\n                                  }\r\n                                </Typography>\r\n                              }\r\n                              secondary={\r\n                                <Grid container>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      SKU : {item?.productSku}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Quantity : {item?.qty}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Price : &#8377;\r\n                                      {skuDetails?.markupPrice}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                      style={{}}\r\n                                    >\r\n                                      Tax : &#8377;\r\n                                      {skuDetails?.markupPriceTax}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Follow ups</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.follow_ups?.nodes.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.senderResponseId}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemIcon>\r\n                              {item.type == \"email\" && <MailIcon />}\r\n                              {item.type == \"sms\" && <SmsIcon />}\r\n                              {item.type == \"phone\" && <CallIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={item?.senderResponseId}\r\n                              secondary={moment(item?.createdAt).format(\r\n                                \"DD/MMM/YYYY HH:mm A\"\r\n                              )}\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            sendEmail(props?.id, \"abandoned_cart\");\r\n          }}\r\n        >\r\n          Send Follow up Email\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  LinearProgress,\r\n  TableFooter,\r\n  TablePagination,\r\n  Chip,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { ABANDONEDCART } from \"../../graphql/query\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CartDetails from \"./cart_details\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nlet Headers = {\r\n  \"Cart ID\": {},\r\n  \"User Details\": {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_DESC\",\r\n    ],\r\n  },\r\n  \"Total Products in cart\": {\r\n    asc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_ASC\"],\r\n    desc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_DESC\"],\r\n  },\r\n  Contact: {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_DESC\",\r\n    ],\r\n  },\r\n  Status: {},\r\n  \"Created On\": {\r\n    asc: [\"CREATED_AT_ASC\"],\r\n    desc: [\"CREATED_AT_DESC\"],\r\n  },\r\n  \"Last Updated On\": {\r\n    asc: [\"UPDATED_AT_ASC\"],\r\n    desc: [\"UPDATED_AT_DESC\"],\r\n  },\r\n  Actions: {},\r\n};\r\n\r\nlet filterVariables = {\r\n  default: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n    },\r\n  },\r\n  withoutContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: true,\r\n      },\r\n    },\r\n  },\r\n  withContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: false,\r\n      },\r\n    },\r\n  },\r\n  emptyCart: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      shoppingCartItemsByShoppingCartId: {\r\n        every: {\r\n          productSku: {\r\n            isNull: true,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport const AbandonedCart = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"default\");\r\n  const [sort, setSort] = React.useState({\r\n    by: \"Created On\",\r\n    direction: \"desc\",\r\n  });\r\n  const client = useApolloClient();\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    ABANDONEDCART,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        orderBy: Headers[sort.by][sort.direction] ?? Headers[\"Created On\"].desc,\r\n        condition: { status: \"pending\" },\r\n        filter: filterVariables[filter]?.filter ?? null,\r\n      },\r\n    }\r\n  );\r\n  const handleClickFilter = (value) => {\r\n    setFilter(value);\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: [\"CREATED_AT_ASC\"],\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[value]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const applySort = (column) => {\r\n    var { by, direction } = sort;\r\n    if (by == column) {\r\n      if (direction && direction == \"asc\") {\r\n        direction = \"desc\";\r\n      } else {\r\n        direction = \"asc\";\r\n      }\r\n    } else {\r\n      direction = \"asc\";\r\n    }\r\n    setSort({ by: column, direction });\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: Headers[by][direction] ?? Headers[\"Created On\"].desc,\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[filter]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen();\r\n  };\r\n\r\n  const downloadAbandonedCart = () => {\r\n    client\r\n      .query({\r\n        query: ABANDONEDCART,\r\n        variables: {\r\n          orderBy: [\"CREATED_AT_ASC\"],\r\n          condition: { status: \"pending\" },\r\n          filter: { ...filterVariables[\"withContact\"]?.filter },\r\n        },\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n      .then(\r\n        ({\r\n          data: {\r\n            allShoppingCarts: { nodes: cartDetails },\r\n          },\r\n        }) => {\r\n          exportFromJSON({\r\n            data: cartDetails.map((item) => {\r\n              return {\r\n                cart_id: item.id,\r\n                created_at: moment(item.createdAt).format(\"DD/MM/YYYY hh:mm a\"),\r\n                gross_amount: item.grossAmount,\r\n                discount_amount: item.discountAmount,\r\n                first_name: item.user?.firstName,\r\n                last_name: item.user?.lastName,\r\n                email: item.user?.email,\r\n                mobile_no: item.user?.mobile,\r\n                sku_ids: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.skuId)\r\n                  ?.join(\",\"),\r\n                generated_skus: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n                  ?.join(\",\"),\r\n                product_names: item?.cart_items?.nodes\r\n                  ?.map(\r\n                    (i) =>\r\n                      i?.transSkuListByProductSku?.productListByProductId\r\n                        ?.productName\r\n                  )\r\n                  ?.join(\",\"),\r\n              };\r\n            }),\r\n            fileName: `abandoned_cart_${moment().format(\"YYYY-MM-DD\")}`,\r\n            exportType: \"xls\",\r\n          });\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Abandoned Cart</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withoutContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withoutContact\")}\r\n          >\r\n            Without Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withContact\")}\r\n          >\r\n            With Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"emptyCart\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"emptyCart\")}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"default\")}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"download abandoned cart\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={filter != \"withContact\"}\r\n            onClick={() => downloadAbandonedCart()}\r\n          >\r\n            <CloudDownloadOutlinedIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(Headers).map((item) => {\r\n                  return (\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      key={item}\r\n                      sortDirection={\r\n                        sort?.by === item ? sort?.direction : false\r\n                      }\r\n                    >\r\n                      {Headers[item]?.asc ? (\r\n                        <TableSortLabel\r\n                          active={sort?.by === item}\r\n                          direction={\r\n                            sort?.by === item ? sort?.direction : \"asc\"\r\n                          }\r\n                          onClick={() => applySort(item)}\r\n                        >\r\n                          {item}\r\n                          {sort?.by === item ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {sort?.direction === \"desc\"\r\n                                ? \"sorted descending\"\r\n                                : \"sorted ascending\"}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                    padding=\"none\"\r\n                  >\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allShoppingCarts?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>No Cart Data Found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allShoppingCarts?.nodes.length > 0 &&\r\n                data?.allShoppingCarts?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align=\"center\">{item.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {item?.user?.firstName\r\n                        ? `${item.user.firstName}${\r\n                            item.user?.lastName ? ` ${item.user.lastName}` : ``\r\n                          }`\r\n                        : item?.user?.userName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className={classes.root}>\r\n                      <Tooltip\r\n                        arrow\r\n                        title={item?.cart_items?.nodes\r\n                          .map((i) => i.productSku)\r\n                          .join(\",\")}\r\n                      >\r\n                        <Chip\r\n                          label={item?.cart_items?.nodes.length}\r\n                          color={\"primary\"}\r\n                          size=\"small\"\r\n                        />\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" padding=\"none\">\r\n                      {item?.user?.email && (\r\n                        <Button\r\n                          startIcon={<EmailIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          href={`mailto:${item?.user?.email}`}\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.email}\r\n                        </Button>\r\n                      )}\r\n                      {item?.user?.mobile && (\r\n                        <Button\r\n                          startIcon={<CallIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.mobile}\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        className={classes.chip}\r\n                        label={item.status.toUpperCase()}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {/* <IconButton size=\"small\">\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleClickOpen(item.id)}\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={Object.keys(Headers).length}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allShoppingCarts?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <CartDetails open={Boolean(open)} handleClose={handleClose} id={open} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BackupOutlinedIcon from \"@material-ui/icons/BackupOutlined\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const PriceUpload = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"price_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleUpload = (event) => {\r\n    let files = event.target.files;\r\n    if (files) {\r\n      files = files[0];\r\n    } else {\r\n      return;\r\n    }\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", files);\r\n    axios\r\n      .post(API_URL + \"/file_upload_price_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <input\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={handleUpload}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"error\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <BackupOutlinedIcon style={{ fontSize: 200 }} />\r\n            </IconButton>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">UPLOAD EXCEL FILE</Typography>\r\n        </Grid>\r\n        {progress !== 0 && (\r\n          <Grid item xs={12}>\r\n            <CircularProgressWithLabel size={100} value={progress} />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet fetchMasterCountries = gql`\r\n  query ($name: String) {\r\n    allMasterCountries(filter: { name: { includesInsensitive: $name } }) {\r\n      nodes {\r\n        id\r\n        name\r\n        nicename\r\n        numcode\r\n        phonecode\r\n        currency\r\n        currencyAlias\r\n        currencySymbol\r\n        fxConversionRate\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: MasterCountryInput!) {\r\n    createMasterCountry(input: { masterCountry: $input }) {\r\n      masterCountry {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $masterCountryPatch: MasterCountryPatch!) {\r\n    updateMasterCountryById(\r\n      input: { id: $id, masterCountryPatch: $masterCountryPatch }\r\n    ) {\r\n      masterCountry {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const MasterCountry = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [search, setSearch] = React.useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const addMasterCountry = (data) => {\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          masterCountryPatch: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const syncFXAPI = () => {\r\n    sendNetworkRequest(\"/fxSynclatest\", null, {})\r\n      .then((res) => {\r\n        snack.setSnack({ open: true, msg: res.message });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some Error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchMasterCountries, {\r\n    variables: {\r\n      name: search,\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Page title={\"Country List\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          title={\"Country & Fx Rate\"}\r\n          button_title=\"Add New\"\r\n          fxSyncAPI={syncFXAPI}\r\n          onCreate={addMasterCountry}\r\n          onSearch={setSearch}\r\n          columns={tableData.columns}\r\n          values={data?.allMasterCountries?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nlet fetchDailyMetalPrices = gql`\r\n  query {\r\n    allDailyMetalPrices {\r\n      nodes {\r\n        id\r\n        metalName\r\n        displayName\r\n        displayPrice\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: DailyMetalPriceInput!) {\r\n    createDailyMetalPrice(input: { dailyMetalPrice: $input }) {\r\n      dailyMetalPrice {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $dailyMetalPricePatch: DailyMetalPricePatch!) {\r\n    updateDailyMetalPriceById(\r\n      input: { id: $id, dailyMetalPricePatch: $dailyMetalPricePatch }\r\n    ) {\r\n      dailyMetalPrice {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const DailyMetalRate = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const addDailyMetalPrice = (data) => {\r\n    console.log(data);\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          dailyMetalPricePatch: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchDailyMetalPrices);\r\n\r\n  return (\r\n    <Page title={\"Daily MetalRate\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          button_title=\"Add New\"\r\n          onCreate={addDailyMetalPrice}\r\n          columns={tableData.columns}\r\n          values={data?.allDailyMetalPrices?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nimport { PRICE_RUN_LOGS } from \"../../graphql/query\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const PriceLogs = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    PRICE_RUN_LOGS,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Price Run History Logs </Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Completed Product</TableCell>\r\n                <TableCell align={\"center\"}>Pricing Component</TableCell>\r\n                <TableCell align={\"center\"}>Requested </TableCell>\r\n                <TableCell align={\"center\"}>Succeed</TableCell>\r\n                <TableCell align={\"center\"}>Failed</TableCell>\r\n                <TableCell align={\"center\"}>Updated</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allPriceRunningHistories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Price Run Logs found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allPriceRunningHistories?.nodes.length > 0 &&\r\n                data?.allPriceRunningHistories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {item?.completedProductCount ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {\" \"}\r\n                      {item?.pricingComponent ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.requestedProducts &&\r\n                      item?.logs?.nodes[0]?.requestedProducts.length\r\n                        ? item?.logs?.nodes[0]?.requestedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.successfullyExecutedProducts &&\r\n                      item?.logs?.nodes[0]?.successfullyExecutedProducts.length\r\n                        ? item?.logs?.nodes[0]?.successfullyExecutedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.failedProducts &&\r\n                      item?.logs?.nodes[0]?.failedProducts.length\r\n                        ? item?.logs?.nodes[0]?.failedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allPriceRunningHistories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { API_URL } from \"../config\";\r\nimport Axios from \"axios\";\r\n\r\nexport const UploadImage = (file) => {\r\n  var bodyFormData = new FormData();\r\n  bodyFormData.set(\"web_img\", file);\r\n\r\n  return Axios.post(API_URL + \"/banner_image_upload\", bodyFormData, {\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Content-Type\": `multipart/form-data; boundary=${bodyFormData._boundary}`,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { UploadImage } from \"../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../context/AlertContext\";\r\nconst useStyles = makeStyles({\r\n  Card: {\r\n    height: \"500px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n        setDisableButton(true);\r\n        setImgLink(res?.data?.web ?? \"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ResetFunc = () => {\r\n    setImgLink(\"\");\r\n    setDisableButton(false);\r\n  };\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Image upload\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"button-files\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"button-files\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                disabled={disableButton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <Typography\r\n              style={{ textAlign: \"center\", marginTop: 2 }}\r\n              component=\"h4\"\r\n              variant=\"h4\"\r\n            >\r\n              {imgLink\r\n                ? \"Click image to copy link :\"\r\n                : \"Upload image to get link here\"}\r\n            </Typography>\r\n\r\n            {imgLink && (\r\n              <div\r\n                onClick={() => {\r\n                  alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Link Copied Successfully\",\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Tooltip title=\"Click to Copy Link\"> */}\r\n                <img\r\n                  style={{ cursor: \"copy\", width: \"100%\", height: \"auto\" }}\r\n                  src={imgLink}\r\n                  alt=\"imag\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                />\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: 6,\r\n                    cursor: \"copy\",\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                >\r\n                  {imgLink}\r\n                </Typography>\r\n                {/* </Tooltip> */}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        style={{\r\n          margin: \"auto\",\r\n          paddingTop: \"8px\",\r\n        }}\r\n      >\r\n        <Button variant=\"outlined\" onClick={ResetFunc}>\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  dialogPaper: {\r\n    minWidth: \"1200px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"800px\",\r\n  },\r\n  dialogHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  blogInnerImage: {\r\n    marginBottom: \"20px\",\r\n    \"& img\": {\r\n      width: \"30%\",\r\n    },\r\n  },\r\n\r\n  border: {\r\n    width: \"100%\",\r\n    marginBottom: \"20px\",\r\n  },\r\n\r\n  imageText: {\r\n    marginBottom: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      fontWeight: 600,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  alignText: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    marginBottom: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      fontWeight: 600,\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  contentText: {\r\n    marginBottom: \"20px\",\r\n    \"& p\": {\r\n      fontSize: \"14px\",\r\n      [theme.breakpoints.down(\"md\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n      [theme.breakpoints.down(\"xs\")]: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  },\r\n\r\n  datePicker: {\r\n    \"& .react-datepicker-wrapper\": {\r\n      \"& .react-datepicker__input-container\": {\r\n        \"& input\": {\r\n          width: \"100% !important\",\r\n          padding: \"8.5px 12px !important\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n\r\n  textFields: {\r\n    \"& .rdw-editor-main\": {\r\n      borderRadius: \"4px\",\r\n    },\r\n    \"& .public-DraftStyleDefault-ltr\": {\r\n      padding: \"0px 12px\",\r\n    },\r\n  },\r\n\r\n  headerBottom: {\r\n    marginTop: \"15px\",\r\n    \"& p\": {\r\n      fontSize: \"12px\",\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n  dialogTitle: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n  }\r\n}));\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TableHeaderComp(props) {\r\n    const classes = useStyles();\r\n    const {name,handleAddNew = () => null,noAddNew = false} = props\r\n  return (\r\n    <div className={classes.dialogHeader} style={{ padding: \"8px\" }}>\r\n      <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n        {name}\r\n      </Typography>\r\n      {!noAddNew && <Button variant=\"contained\" color=\"primary\" onClick={handleAddNew}>\r\n        Add New\r\n      </Button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableHeaderComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst header = [\r\n  \"Position\",\r\n  \"Link to Check\",\r\n  \"Mobile Image\",\r\n  \"Desktop Image\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"position\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst BannerCMS = (props) => {\r\n  console.log(\"hfjdskalSDJBSK\", props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    position: \"\",\r\n    urlParam: null,\r\n    mobile: \"\",\r\n    web: \"\",\r\n    url: \"\",\r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.position && state.url && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Banner Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.banners}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"position\"\r\n            label=\"Position\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.position}\r\n            name=\"position\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Banner's Redirect Link (Routes Only)\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.url}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Mobile Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.web}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {(state.mobile.length > 0 || state.web.length > 0) && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.mobile.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.mobile}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {state.web.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.web}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BannerCMS;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CDNPAGES = `\r\n    query ($page: String!){\r\n        cdnByPage(page: $page) {\r\n          data\r\n          id\r\n          page\r\n        }\r\n      }\r\n    `;\r\n\r\nexport const ALLCDNPAGES = `query MyQuery {\r\n  allCdns {\r\n    nodes {\r\n      page\r\n      data\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CMS_UPDATE = `\r\nmutation updateStore( $stringifyState: JSON!,$page: String!) {\r\n  updateCdnByPage(input: { cdnPatch: { data: $stringifyState }, page: $page }) {\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_CMS = `\r\nmutation createNew($cloneData: JSON!, $page: String!){\r\n  createCdn(input: {cdn: {data: $cloneData, page: $page}}) {\r\n    cdn {\r\n      data\r\n      page\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const UPDATE_STATUS_CMS = `\r\nmutation updateStatus($isActive: Boolean!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {isActive: $isActive}, page: $page}){\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"City\", \"Total Stores\", \"View Stores\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"city\" },\r\n  { type: \"TOTAL_STORES\", name: \"stores\" },\r\n  { type: \"VIEW_STORES\", name: \"stores\",customName:\"View Stores\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst storeHeader = [\"S.No\", \"Title\", \"Address\",\"Store Id\", \"Location\", \"Image\", \"Button\",\"Action\"];\r\nconst viewStoreHeader = [\"S.No\", \"Title\", \"Address\",\"Store Id\", \"Location\", \"Image\", \"Button\"];\r\n\r\nconst tableStoreData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst tableStoreView = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n];\r\n\r\nconst initialStoreDetails = {\r\n  title: \"\",\r\n  button: \"\",\r\n  para: \"\",\r\n  location: \"\",\r\n  img: \"\",\r\n  key: \"\",\r\n  href: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction StoreLocatorCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openStores, setOpenStores] = useState(false);\r\n  const [stores, setStores] = useState([]);\r\n  const [addStoresOpens, setAddStores] = useState(false);\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    stores: [],\r\n  });\r\n  const [showStoreFields, setShowStoreFields] = useState(false);\r\n  const [storeState, setStoreState] = useState(initialStoreDetails);\r\n  const [editData, setEditData] = useState(initialEdit);\r\n  const [storesEdit, setStoresEdit] = useState(initialEdit);\r\n\r\n  const handleViewStores = (e, data, index) => {\r\n    setOpenStores(true);\r\n    setStores(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenStores(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddStores(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddStores(false);\r\n    setState({\r\n      city: \"\",\r\n      stores: [],\r\n    });\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setStoreState({\r\n      ...storeState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleShowStoreField = () => {\r\n    setShowStoreFields(true);\r\n  };\r\n\r\n  const validationHead = [\"title\", \"button\", \"para\", \"location\", \"img\", \"key\"];\r\n  const storeDetailsValidate = () => {\r\n    let err = [];\r\n    validationHead.map((val) => {\r\n      if (storeState[val].length === 0) err.push(val);\r\n    });\r\n    return err;\r\n  };\r\n\r\n  const addStoreDetails = () => {\r\n    const validate = storeDetailsValidate();\r\n    if (validate.length === 0) {\r\n      if (storesEdit.isEdit) {\r\n        const editStores = state.stores;\r\n        editStores.splice(storesEdit.editIndex, 1, storeState);\r\n        const newState = {\r\n          city: state.city,\r\n          stores: editStores,\r\n        };\r\n        setShowStoreFields(false);\r\n        setState(newState);\r\n      } else {\r\n        setShowStoreFields(false);\r\n        const newStore = [...state.stores, storeState];\r\n        setState({\r\n          ...state,\r\n          stores: newStore,\r\n        });\r\n        setStoreState(initialStoreDetails);\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill the mandatory details\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setStoreState({\r\n            ...storeState,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (state.city.length > 0 && state.stores.length > 0) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.storeData;\r\n        storeDataEdit.splice(editData.editIndex, 1, state);\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      } else {\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...props?.data?.props?.storeData, state],\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please add both the State and the Store\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = props?.data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleStoresEdit = (e, rowData, rowIndex) => {\r\n    setShowStoreFields(true);\r\n    setStoresEdit({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setStoreState(rowData);\r\n  };\r\n\r\n  const handleDeleteStore = (e, rowData, rowIndex) => {\r\n    const deleteStores = state.stores;\r\n    deleteStores.splice(rowIndex, 1);\r\n    const newState = {\r\n      city: state.city,\r\n      stores: deleteStores,\r\n    };\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Store Locator Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.storeData}\r\n        handleViewStores={handleViewStores}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openStores}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Stores in {stores?.city}</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableComp\r\n            header={viewStoreHeader}\r\n            tableData={tableStoreView}\r\n            data={stores?.stores}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addStoresOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add new data</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          >\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              label=\"Add New State\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeData}\r\n              value={state.city.toUpperCase()}\r\n              name=\"city\"\r\n              required\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            {!showStoreFields && (\r\n              <Button onClick={handleShowStoreField}>Add New Store</Button>\r\n            )}\r\n          </div>\r\n\r\n          {showStoreFields && (\r\n            <div>\r\n              <Typography variant=\"h6\">Add Store Details</Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"title\"\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.title}\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"button\"\r\n                    label=\"Button\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.button}\r\n                    name=\"button\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"key\"\r\n                label=\"Store Id\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.key}\r\n                name=\"key\"\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.location}\r\n                name=\"location\"\r\n                required\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"para\"\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.para}\r\n                name=\"para\"\r\n                required\r\n              />\r\n              <Grid container style={{ paddingTop: \"8px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Add Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {storeState.img.length > 0 && (\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={storeState.img}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              <div\r\n                className={classes.dialogHeader}\r\n                style={{ justifyContent: \"center\" }}\r\n                onClick={addStoreDetails}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Store Details\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Stores Added\r\n          </Typography>\r\n          <TableComp\r\n            header={storeHeader}\r\n            tableData={tableStoreData}\r\n            data={state?.stores}\r\n            handleEdit={handleStoresEdit}\r\n            handleDelete={handleDeleteStore}\r\n          />\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StoreLocatorCMS;\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parentState = this.props.parentState;\r\n    console.log(\"parentState-1\", parentState);\r\n    const contentBlock = htmlToDraft(parentState);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    // if (editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    const data = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    console.log(\"data-00\", data);\r\n    this.props.handleChangeState(data);\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            fontFamily: {\r\n              options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana','Noto Serif,serif', ],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\"; \r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"HTMLTEXT\", name: \"richEditor\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleDescriptionCMS = (props) => {\r\n  console.log(\"7871\",props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    richEditor: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  console.log(\"richEditorState\",state);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.description.length < 1 || state.title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: state,\r\n      };\r\n      setTitleDesc([getData.props]);\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"TitleAndData\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,richEditor:data\r\n    })\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <div style={{border:\"1px solid #c0c0c0\",padding:\"8px\", borderRadius:\"8px\"}}>\r\n            <EditorConvertToHTML handleChangeState={handleChangeState} parentState={state.richEditor} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleDescriptionCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst QueryFormCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    image: \"\",\r\n  });\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setImage([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let getData = [];\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setImage([getData.props])\r\n    setOpen(false);\r\n    props.handleSubmit(getData, \"QueryForm\", \"\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Query Form Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={image}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Edit Query Form</DialogTitle>\r\n        <DialogContent>\r\n          <Grid>\r\n            <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n            />\r\n            <label htmlFor=\"button-file\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                startIcon={<CloudUploadIcon />}\r\n                // disabled={disableButton.mobile}\r\n              >\r\n                Store Image\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default QueryFormCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Image\",\r\n  \"SkuUrl\",\r\n  \"Price\",\r\n  \"Offer Price\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"skuUrl\", width: \"250px\" },\r\n  { type: \"TEXT\", name: \"price\" },\r\n  { type: \"TEXT\", name: \"offerPrice\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  price: null,\r\n  offerPrice: null,\r\n  title: null,\r\n  save: 0,\r\n  image: {\r\n    placeImage: {\r\n      img: null,\r\n    },\r\n    hoverImage: {\r\n      img: null,\r\n    },\r\n  },\r\n  productId: null,\r\n  diamondType: \"\",\r\n  purity: \"\",\r\n  productType: \"\",\r\n  skuId: null,\r\n  skuID: null,\r\n  skuUrl: null,\r\n  description: null,\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst SlidingImageCardCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [constructedData, setConstructedData] = React.useState([]);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  React.useEffect(() => {\r\n    const dataConstruct = props?.data?.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    if (event.target.name === \"skuId\") {\r\n      setState({\r\n        ...state,\r\n        skuID: event.target.value,\r\n        skuId: event.target.value,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.skuUrl &&\r\n      state.image.hoverImage.img &&\r\n      state.image.placeImage.img &&\r\n      state.price &&\r\n      state.offerPrice &&\r\n      state.productId &&\r\n      state.skuID &&\r\n      state.skuId\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const listingProducts = props?.data?.props?.listingProducts;\r\n        listingProducts.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: listingProducts,\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: [...props?.data?.props?.listingProducts, state],\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            image: {\r\n              placeImage: {\r\n                img: res?.data?.web,\r\n              },\r\n              hoverImage: {\r\n                img: res?.data?.web,\r\n              },\r\n            },\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const listingProducts = props?.data?.props?.listingProducts;\r\n    listingProducts.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        listingProducts: listingProducts,\r\n      },\r\n    };\r\n    const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n    props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Sliding Image Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={constructedData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Edit Sliding Image Card Component\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"skuUrl\"\r\n            label=\"SKU Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.skuUrl}\r\n            name=\"skuUrl\"\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            style={{ padding: \"16px 0px\" }}\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                >\r\n                  Image Upload\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.image.placeImage.img && <Grid item>\r\n              <img\r\n                alt=\"nacimages\"\r\n                src={state.image.placeImage.img}\r\n                style={{ width: \"100px\", height: \"auto\" }}\r\n              />\r\n            </Grid>}\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"skuId\"\r\n                label=\"SKU ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.skuId}\r\n                name=\"skuId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"productId\"\r\n                label=\"Product ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.productId}\r\n                name=\"productId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.price}\r\n                name=\"price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"offerPrice\"\r\n                label=\"Offer Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.offerPrice}\r\n                name=\"offerPrice\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SlidingImageCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useContext } from \"react\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Content\",\r\n  \"Mobile Image\",\r\n  \"Web Image\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerBannerCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    content: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.content && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Banner Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.banners}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={onChangeData}\r\n              name=\"title\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n\r\n            {/* Image Upload */}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {(state.mobile.length > 0 || state.web.length > 0) && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.mobile.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.mobile}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {state.web.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.web}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerBannerCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Job Role\",\r\n  \"Location\",\r\n  \"Description\",\r\n  \"Button Text\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"job_Role\" },\r\n  { type: \"TEXT\", name: \"location\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerCardCMS = (props) => {\r\n  console.log(\"textt\", props);\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    job_Role: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    button_Text: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.job_Role &&\r\n      state.location &&\r\n      state.description &&\r\n      state.button_Text\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.cardContent;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"job_Role\"\r\n              label=\"Job_Role\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.job_Role}\r\n              onChange={onChangeData}\r\n              name=\"job_Role\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.location}\r\n              onChange={onChangeData}\r\n              name=\"location\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.description}\r\n              onChange={onChangeData}\r\n              name=\"description\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Description\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCollectionHeaderCMS = (props) => {\r\n  console.log(\"prop123\", props);\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.description) {\r\n      if (editData.isEdit) {\r\n        const editHeader = props?.data?.props?.header;\r\n        editHeader.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: editHeader,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: [...props?.data?.props?.header, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const header = props?.data?.props?.header;\r\n    header.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        header: header,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Header Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.header}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      </Paper>\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Header Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionHeaderCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Content\", \"Buttons\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"BUTTON_ARRAY\", name: \"buttons\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst innerHeader = [\"S.No\", \"Buttons\", \"Link\", \"Action\"];\r\nconst innerTableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"name\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialButtonState = {\r\n  name: \"\",\r\n  url: \"\",\r\n};\r\n\r\nconst initialState = {\r\n  img: \"\",\r\n  content: \"\",\r\n  buttons: [],\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst CustomCollectionCardsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [state, setState] = React.useState(initialState);\r\n    console.log(\"stateHandle\",state);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n  const [buttonState, setButtonState] = React.useState(initialButtonState);\r\n  const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.content) {\r\n      if (editData.isEdit) {\r\n        const editCard = props?.data?.props?.cardContent;\r\n        editCard.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editCard,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleInnerDelete = (e, rowData, rowIndex) => {\r\n    const deleteButton = state.buttons;\r\n    deleteButton.splice(rowIndex,1);\r\n    setState({\r\n      ...state, buttons: deleteButton\r\n    })\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const handleInnerEdit = (e, rowData, rowIndex) => {\r\n    setButtonState(rowData);\r\n    setButtonEditState({\r\n      ...buttonEditState,\r\n      isEdit: true,\r\n      editIndex: rowIndex,\r\n    });\r\n  };\r\n\r\n  const onChangeButtonData = (event) => {\r\n    setButtonState({\r\n      ...buttonState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddButtonUrl = () => {\r\n    if (buttonEditState.isEdit) {\r\n      const editButton = state.buttons;\r\n      editButton.splice(buttonEditState.editIndex,1,buttonState);\r\n      setState({\r\n        ...state, buttons: editButton\r\n      })\r\n    } else {\r\n      if (buttonState.name.length > 0) {\r\n        setState({\r\n          ...state,\r\n          buttons: [...state.buttons, buttonState],\r\n        });\r\n        setButtonState(initialButtonState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please add the button\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Cards Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.img}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid style={{ borderTop: \"1px solid #e0e0e0\" }}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"button\"\r\n                label=\"Button\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.name}\r\n                onChange={onChangeButtonData}\r\n                name=\"name\"\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Link\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.url}\r\n                onChange={onChangeButtonData}\r\n                name=\"url\"\r\n              />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  style={{ margin: \"8px 0px 12px\" }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleAddButtonUrl}\r\n                >\r\n                  Add Button and Url\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <TableComp\r\n              header={innerHeader}\r\n              tableData={innerTableData}\r\n              data={state.buttons}\r\n              handleDelete={handleInnerDelete}\r\n              handleEdit={handleInnerEdit}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionCardsCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Description\", \"Button Text\", \"Url\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomNewsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"News Room Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New News Room Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Add Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {state.img.length > 0 && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.img.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomNewsCMS;\r\n","import React from \"react\";\r\nimport { DialogContent, DialogTitle, Paper, TextField, Button, Dialog, DialogActions } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Description\",\r\n    \"Action\"\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"Title\" },\r\n    { type: \"TEXT\", name: \"Description\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n];\r\nconst initialState = {\r\n    Title: \"\",\r\n    Description: \"\"\r\n}\r\nconst SpclTitleDescr = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [spclTitleDescr, setSpclTitleDescr] = React.useState([])\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    React.useEffect(() => {\r\n        setSpclTitleDescr([data?.props?.storeData]);\r\n        setState(data?.props?.storeData);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.Description.length < 1 || state.Title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            const storeData = data?.props?.storeData;\r\n            getData = {\r\n\r\n                component: data?.component,\r\n                props: {\r\n                    storeData: state,\r\n                },\r\n            };\r\n            setSpclTitleDescr([getData.props?.storeData]);\r\n\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"SpclTitleDescr\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Special Title and Description Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={spclTitleDescr}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Special Title and Description Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"Title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state?.Title}\r\n                            name=\"Title\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"Description\"\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state?.Description}\r\n                            name=\"Description\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default SpclTitleDescr","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Image\",\r\n    \"Content\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    title: \"\",\r\n    image: null,\r\n    content: \"\",\r\n}\r\n\r\nconst BookYourAppointmentCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n    console.log(data?.props, \"data?.props\")\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        image: res?.data?.web\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title &&\r\n            state.image &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: values,\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            } else {\r\n                console.log(editData, \"isaddd\")\r\n\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props:\r\n                        [...data?.props, state],\r\n\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Book Your Appointment Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Book Your Appointment Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"flex-start\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                            spacing={3}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-file\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                />\r\n                                <label htmlFor=\"button-file\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    // disabled={disableButton.mobile}\r\n                                    >\r\n                                        Image Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state.image && <Grid item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.image}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"Details\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default BookYourAppointmentCMS","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Name\",\r\n    \"Image\",\r\n    \"Address\",\r\n    \"Feed\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"name\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"address\" },\r\n    { type: \"TEXT\", name: \"feed\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    name: \"\",\r\n    img: null,\r\n    address: \"\",\r\n    feed: \"\",\r\n}\r\nconst TestimonialCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        handleClickOpen();\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setState(initialState)\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.name &&\r\n            state.img &&\r\n            state.address &&\r\n            state.feed\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const storeData = data?.props?.storeData;\r\n                storeData.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: storeData,\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: [...props?.data?.props?.storeData, state],\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        let getData = [];\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(rowIndex, 1);\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                storeData: storeData,\r\n            },\r\n        };\r\n\r\n        props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Testimonial Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.storeData}\r\n                    handleDelete={handleDelete}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Testimonial Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.name}\r\n                            name=\"name\"\r\n                        />\r\n                            <Grid\r\n                                container\r\n                                justifyContent=\"flex-start\"\r\n                                style={{ padding: \"16px 0px\" }}\r\n                                spacing={3}\r\n                            >\r\n                                <Grid item>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: \"none\" }}\r\n                                        id=\"button-file\"\r\n                                        multiple\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                    />\r\n                                    <label htmlFor=\"button-file\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon />}\r\n                                        >\r\n                                            Image Upload\r\n                                        </Button>\r\n                                    </label>\r\n                                </Grid>\r\n                                {state?.img && <Grid item>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.img}\r\n                                        style={{ width: \"100px\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"feed\"\r\n                            label=\"Feed\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.feed}\r\n                            name=\"feed\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.address}\r\n                            name=\"address\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default TestimonialCMS","import React, { useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Image\", \"Name\", \"Details\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"sub\" },\r\n  { type: \"TEXT\", name: \"sub2\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst initialState = {\r\n  title: \"\",\r\n  img: null,\r\n  type: \"\",\r\n  sub: \"\",\r\n  sub2: \"\",\r\n};\r\n\r\nconst AboutCollection = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            img: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setState(state);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.title && state.img && state.type && state.sub && state.sub2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeData,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      } else {\r\n        debugger\r\n        console.log(editData, \"isaddd\")\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...data?.props?.storeData, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n\r\n    props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"About Collection Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props?.storeData}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit About Collection Component\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.title}\r\n              name=\"title\"\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.type}\r\n              name=\"type\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                  >\r\n                    Image Upload\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"sub\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.sub}\r\n              name=\"sub\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"sub2\"\r\n              label=\"Details\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              onChange={onChangeData}\r\n              value={state.sub2}\r\n              name=\"sub2\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default AboutCollection;\r\n","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\n\r\nconst TitleComp = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [title, setTitle] = React.useState([])\r\n    const [state, setState] = React.useState({\r\n        title: \"\"\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        setTitle([data?.props]);\r\n        setState(data?.props);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            getData = {\r\n                component: props?.data?.component,\r\n                props: state,\r\n            };\r\n            setTitle([getData.props]);\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"titleComp\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableHeaderComp\r\n                name={\" Title Component\"}\r\n                noAddNew\r\n            />\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={title}\r\n                handleEdit={handleEdit}\r\n            />\r\n            <Dialog\r\n                classes={{ paper: classes.dialogPaperMid }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Edit Title Component\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"title\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={onChangeData}\r\n                        value={state?.title}\r\n                        name=\"title\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\nexport default TitleComp","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleWithDescription = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    const getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setOpen(false);\r\n    setTitleDesc([state])\r\n    props.handleSubmit(getData,\"TitleAndDescription\",\"\")\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows={10}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleWithDescription;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Description\",\r\n  \"Italic Text\",\r\n  \"Button Text\",\r\n  \"Url\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"italic_text\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomAdvertisementCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    italic_text: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Advertisement Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Advertisement Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"italic_text\"\r\n            label=\"Italic_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.italic_text}\r\n            onChange={onChangeData}\r\n            name=\"italic_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid container style={{ padding: \"16px 0px\" }}>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n\r\n            {state.img.length > 0 && (\r\n              <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                <img\r\n                  alt=\"nacimages\"\r\n                  src={state.img}\r\n                  style={{ width: \"100px\", height: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomAdvertisementCMS;\r\n","import React, { useState } from \"react\";\r\nimport { Box, Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField, Typography } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Category Heading\",\r\n    \"Category List\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"categoryHeading\" },\r\n    { type: \"ARRAYTEXT\", name: \"categoryList\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\n\r\nconst initialData = {\r\n    categoryHeading: \"\",\r\n    categoryList: []\r\n};\r\nconst initialStateRow = {\r\n    url: \"\",\r\n    name: \"\"\r\n}\r\nconst SiteMapCMS = (props) => {\r\n    const { data } = props\r\n    console.log(\"categoryLIST\", data?.props);\r\n    const classes = useStyles();\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n    // \r\n    const [stateRow, setStateRow] = React.useState(initialStateRow)\r\n    const [data1, setData1] = React.useState(initialData)\r\n\r\n    const handleChange = (key, val, i, parentKey) => {\r\n        let tempState = data1\r\n        tempState[parentKey][i][key] = val\r\n        setData1({ ...tempState })\r\n    }\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setData1({\r\n            ...data1,\r\n            categoryHeading: rowData?.categoryHeading,\r\n            categoryList: rowData?.categoryList\r\n        });\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setData1(initialData)\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            data1.categoryHeading &&\r\n            data1.categoryList\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props;\r\n                values.splice(editData.editIndex, 1, data1);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: values\r\n                };\r\n                setOpen(false);\r\n                setData1(initialData);\r\n                setEditData(initialEdit);\r\n                props.handleSubmit(getData, \"siteMap\", \"props\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: [...data?.props, data1],\r\n                };\r\n                setOpen(false);\r\n                setData1(initialData);\r\n                props.handleSubmit(getData, \"siteMap\", \"props\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    const handleDeleteItem = (val, i, data1) => {\r\n        const delRow = [...data1?.categoryList]\r\n        delRow.splice(i, 1);\r\n        setData1({ ...data1, categoryList: delRow })\r\n\r\n    }\r\n\r\n    const handleAddItem = (key, value) => {\r\n        setStateRow({ ...stateRow, [key]: value })\r\n    }\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        let getData = [];\r\n        const categoryItems = data?.props;\r\n        categoryItems.splice(rowIndex, 1);\r\n        getData = {\r\n            component: data?.component,\r\n            props: categoryItems\r\n        };\r\n        props.handleSubmit(getData, \"siteMap\", \"props\");\r\n    }\r\n\r\n    const handleClickOpen = () => {\r\n        setEditData({ ...editData, isEdit: false })\r\n        setOpen(true)\r\n    }\r\n\r\n\r\n    const addItems = () => {\r\n        const data = [...data1?.categoryList, stateRow]\r\n        updateState(\"categoryList\", data)\r\n        setStateRow(initialStateRow)\r\n    }\r\n\r\n    const updateState = (key, value) => {\r\n        setData1({ ...data1, [key]: value })\r\n    }\r\n\r\n\r\n\r\n    console.log(data1, 'data1')\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Site Map Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props}\r\n                    handleEdit={handleEdit}\r\n                    handleDelete={handleDelete}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}>\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        <div className={classes.dialogTitle} style={{ display: \"flex\" }}>\r\n                            <Typography>Edit Site Map Component</Typography>\r\n                            {/* {editData?.isEdit && <Button variant=\"contained\" color=\"primary\" onClick={handleAddItem}>\r\n                                Add\r\n                            </Button>} */}\r\n                        </div>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"categoryHeading\"\r\n                            label=\"Category Heading\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={(e) => updateState('categoryHeading', e.target.value)}\r\n                            value={data1.categoryHeading}\r\n                        />\r\n                        <Grid xs={12} item alignContent={\"start\"}\r\n                            justifyContent={\"space-between\"}>\r\n                            <Grid container spacing={1} alignItems={\"center\"}\r\n                                justifyContent={\"space-between\"}>\r\n                                <>\r\n                                    <Grid Item xs={5}>\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"name\"\r\n                                            label=\"name\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            rows={3}\r\n                                            onChange={(val) => handleAddItem(\"name\", val.target.value)}\r\n                                            value={stateRow?.name}\r\n                                            name=\"name\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid Item xs={5} >\r\n                                        <TextField\r\n                                            margin=\"dense\"\r\n                                            id=\"url\"\r\n                                            label=\"url\"\r\n                                            variant=\"outlined\"\r\n                                            fullWidth\r\n                                            rows={3}\r\n                                            onChange={(val) => handleAddItem(\"url\", val.target.value)}\r\n                                            value={stateRow?.url}\r\n                                            name=\"url\"\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid Item xs={1}\r\n                                        style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                        <Button variant=\"contained\" color=\"primary\" onClick={addItems}>\r\n                                            Add\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </>\r\n                                {\r\n                                    data1?.categoryList?.length > 0 && data1?.categoryList?.map((e, i) => {\r\n                                        return <>\r\n                                            <Grid Item xs={5}>\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"name\"\r\n                                                    label=\"Name\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    rows={3}\r\n                                                    onChange={(val) => handleChange(\"name\", val.target.value, i, \"categoryList\")}\r\n                                                    value={e?.name}\r\n                                                    name=\"Name\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid Item xs={5} >\r\n                                                <TextField\r\n                                                    margin=\"dense\"\r\n                                                    id=\"url\"\r\n                                                    label=\"URL\"\r\n                                                    variant=\"outlined\"\r\n                                                    fullWidth\r\n                                                    rows={3}\r\n                                                    onChange={(val) => handleChange(\"url\", val.target.value, i, \"categoryList\")}\r\n                                                    value={e?.url}\r\n                                                    name=\"URL\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid Item xs={1}\r\n                                                style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                                                <DeleteIcon onClick={(val) => handleDeleteItem(val, i, data1)}\r\n                                                    style={{ color: \"red\", cursor: \"pointer\" }} />\r\n                                            </Grid>\r\n                                        </>\r\n                                    })\r\n\r\n\r\n                                }\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>{editData.isEdit ? \"Update \" : \"Add\"}</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default SiteMapCMS","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { useContext } from \"react\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  \r\n  const header = [\r\n    \"S.No\",\r\n    \"Mobile Image\",\r\n    \"Web Image\",\r\n    \"Action\",\r\n  ];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n    { type: \"WEB_IMAGE\", name: \"web\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceBannerCMS = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const alert = useContext(AlertContext);\r\n    const initialState = {\r\n      mobile: \"\",\r\n      web: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState);\r\n    const [disableButton, setDisable] = React.useState({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            // setDisable({ ...disableButton, [name]: true });\r\n  \r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.mobile && state.web) {\r\n        if (editData.isEdit) {\r\n          const editBanner = props?.data?.props?.banners;\r\n          editBanner.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: editBanner,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: [...props?.data?.props?.banners, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Banner Component\"}\r\n            handleAddNew={handleClickOpen}\r\n            noAddNew\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.banners}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n            <DialogContent>\r\n  \r\n              {/* Image Upload */}\r\n  \r\n              <Grid\r\n                container\r\n                justifyContent=\"space-around\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                      disabled={disableButton.mobile}\r\n                    >\r\n                      Mobile Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.web}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n              {(state.mobile.length > 0 || state.web.length > 0) && (\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"flex-start\"\r\n                  style={{ padding: \"16px 0px\" }}\r\n                >\r\n                  {state.mobile.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.mobile}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {state.web.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.web}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onsubmitvalue}>Add</Button>\r\n              <Button onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceBannerCMS;\r\n  ","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nconst header = [\r\n  \"S.No\",\r\n  \"Background Image\",\r\n  \"Header Image\",\r\n  \"Description\",\r\n  \"Form Title\",\r\n  \"Submit Text\",\r\n  \"Button Text\",\r\n  \"Type\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"background_Image\" },\r\n  { type: \"WEB_IMAGE\", name: \"header_Image\" },\r\n  { type: \"HTMLTEXT\", name: \"description\" },\r\n  { type: \"HTMLTEXT\", name: \"form_Title\" },\r\n  { type: \"TEXT\", name: \"submit_Content\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"TEXT\", name: \"type\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst initialState = {\r\n  background_Image: \"\",\r\n  header_Image: \"\",\r\n  description: \"\",\r\n  form_Title: \"\",\r\n  submit_Content: \"\",\r\n  button_Text: \"\",\r\n  type: \"\",\r\n};\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst ExperienceCardCMS = (props) => {\r\n  console.log(\"console data\", props);\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [sendData, setSendData] = React.useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    background_Image: false,\r\n    header_Image: false,\r\n  });\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    setSendData([data?.props]);\r\n    setState(data?.props);\r\n  }, [data?.props]);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.background_Image &&\r\n      state.header_Image &&\r\n      state.description &&\r\n      state.form_Title &&\r\n      state.submit_Content &&\r\n      state.button_Text &&\r\n      state.type\r\n    ) {\r\n      let getData = [];\r\n      if (editData.isEdit) {\r\n        getData = {\r\n          component: data?.component,\r\n          props: state,\r\n        };\r\n        setOpen(false);\r\n      } else {\r\n        getData = {\r\n          component: data?.component,\r\n          props: [...data?.props, state],\r\n        };\r\n        setOpen(false);\r\n      }\r\n      props.handleSubmit(getData, \"ExperienceCard\", \"props\");\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    console.log(\"rowData\", rowData);\r\n  };\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      description: data,\r\n    });\r\n  };\r\n  const handleChangeTitle = (data) => {\r\n    setState({\r\n      ...state,\r\n      form_Title: data,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Experience Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={sendData}\r\n          handleEdit={handleEdit}\r\n        />\r\n        {/* Dialog */}\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeState}\r\n              parentState={state.description}\r\n            />\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeTitle}\r\n              parentState={state.form_Title}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"submit Content\"\r\n              label=\"Submit_Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.submit_Content}\r\n              onChange={onChangeData}\r\n              name=\"submit_Content\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.type}\r\n              onChange={onChangeData}\r\n              name=\"type\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"background_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.background_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.background_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.background_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"header_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.header_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.header_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.header_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default ExperienceCardCMS;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { useContext } from \"react\";\r\n  \r\n  const header = [\"S.No\", \"Image\", \"Title\", \"Description\", \"Url\", \"Action\"];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"TEXT\", name: \"description\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceTableCardCMS = (props) => {\r\n    const classes = useStyles();\r\n    const alert = useContext(AlertContext);\r\n  \r\n    const initialState = {\r\n      image: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      url: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [state, setState] = React.useState(initialState);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [disableButton, setDisable] = React.useState({\r\n      image: false,\r\n    });\r\n    const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n      setEditData(initialEdit)\r\n    };\r\n  \r\n    const onChangeData = (event) => {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.image && state.title && state.description && state.url) {\r\n        if (editData.isEdit) {\r\n          const editContent = props?.data?.props?.cardContent;\r\n          editContent.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: editContent,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: [...props?.data?.props?.cardContent, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n      let getData = [];\r\n      const content = props?.data?.props?.cardContent;\r\n      content.splice(rowIndex, 1);\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: {\r\n          cardContent: content,\r\n        },\r\n      };\r\n      props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Cards Component\"}\r\n            handleAddNew={handleClickOpen}\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.cardContent}\r\n            handleDelete={handleDelete}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog\r\n            classes={{ paper: classes.dialogPaperMid }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.title}\r\n                onChange={onChangeData}\r\n                name=\"title\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.description}\r\n                onChange={onChangeData}\r\n                name=\"description\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Url\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.url}\r\n                onChange={onChangeData}\r\n                name=\"url\"\r\n                required\r\n              />\r\n              {/* Image Upload */}\r\n  \r\n              <Grid container style={{ padding: \"16px 0px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.image}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {state.image.length > 0 && (\r\n                  <Grid item style={{ padding: \"0px 8px\" }}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n                Add\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceTableCardCMS;","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Address\",\r\n  \"Map Link\",\r\n  \"Contact Number\",\r\n  \"Store Id\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"address\" },\r\n  { type: \"TEXT\", name: \"url\", width: \"300px\" },\r\n  { type: \"TEXT\", name: \"contactNo\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  address: \"\",\r\n  url: \"\",\r\n  contactNo: \"\",\r\n  key: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst StoreLocatorDetailsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit)\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.address &&\r\n      state.contactNo &&\r\n      state.key\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: editContent,\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const deleteContent = props?.data?.props;\r\n    deleteContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: deleteContent\r\n    };\r\n    props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Career Card Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.address}\r\n            onChange={onChangeData}\r\n            name=\"address\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Map Link\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"contactNo\"\r\n            label=\"Contact No\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.contactNo}\r\n            onChange={onChangeData}\r\n            name=\"contactNo\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"key\"\r\n            label=\"Store Id\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.key}\r\n            onChange={onChangeData}\r\n            name=\"key\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StoreLocatorDetailsCMS;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { DatePickerComp } from \"../../../components\";\r\nimport moment from \"moment\";\r\nimport Edit from \"@material-ui/icons/Edit\";\r\nimport { Delete } from \"@material-ui/icons\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Header\",\r\n  \"Header Bottom\",\r\n  \"Heading Text\",\r\n  \"Content\",\r\n  \"Date\",\r\n  \"Button Text\",\r\n  \"View More\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"TEXT\", name: \"header\" },\r\n  { type: \"HTMLTEXT\", name: \"header_Bottom\" },\r\n  { type: \"TEXT\", name: \"heading\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"DATE_PICKER\", name: \"date\" },\r\n  { type: \"TEXT\", name: \"bottomText\" },\r\n  { type: \"VIEW_STORES\", name: \"blogs\",customName:\"View Details\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst options = [\"Left\", \"Right\"];\r\n\r\nconst initialBlogDetails = {\r\n  image: \"\",\r\n  header: \"\",\r\n  header_Bottom: \"\",\r\n  heading: \"\",\r\n  content: \"\",\r\n  date: new Date(),\r\n  bottomText: \"\",\r\n  description_1: \"\",\r\n  description_2: \"\",\r\n  description_3: \"\",\r\n  end_Text: \"\",\r\n  third_Image: {\r\n    align: \"\",\r\n    image: \"\",\r\n  },\r\n  second_Image: {\r\n    banners: [],\r\n  },\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction BlogPageCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openBlog, setOpenBlog] = useState(false);\r\n  const [blogs, setBlogs] = useState([]);\r\n  const [addBlogsOpens, setAddBlogs] = useState(false);\r\n  const [state, setState] = useState({\r\n    blogs: [],\r\n  });\r\n\r\n  const [value, setValue] = React.useState({ ...initialBlogDetails });\r\n  const [blogState, setBlogState] = useState({ ...initialBlogDetails });\r\n  const [editData, setEditData] = useState(initialEdit);\r\n\r\n  const handleViewMore = (e, data, index) => {\r\n    setOpenBlog(true);\r\n    setBlogs(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenBlog(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddBlogs(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddBlogs(false);\r\n    setEditData(initialEdit);\r\n    setBlogState(initialBlogDetails);\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name,i) => {\r\n    debugger;\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        console.log(res?.data, \"ll\");\r\n        if (res?.data?.web) {\r\n          if (name === \"banners\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners: [\r\n                  ...blogState?.second_Image?.banners,\r\n                  {\r\n                    position: blogState?.second_Image?.banners.length,\r\n                    url: \"\",\r\n                    urlParam: \"\",\r\n                    web: res?.data?.web,\r\n                    mobile: res?.data?.web,\r\n                  },\r\n                ],\r\n              },\r\n            });\r\n          } else if (name === \"third_Image\") {\r\n            setBlogState({\r\n              ...blogState,\r\n              third_Image: {\r\n                ...blogState?.third_Image,\r\n                image: res?.data?.web,\r\n              },\r\n            });\r\n          }else if(name === \"editBanners\"){\r\n            debugger;\r\n            const newBanner = {\r\n              position: i+1,\r\n              url: \"\",\r\n              urlParam: \"\",\r\n              web: res?.data?.web,\r\n              mobile: res?.data?.web,\r\n            }\r\n            const editBanners = [...blogState?.second_Image?.banners];\r\n            editBanners.splice(i,1,newBanner)\r\n            setBlogState({\r\n              ...blogState,\r\n              second_Image: {\r\n                banners:editBanners\r\n              },\r\n            });\r\n          } else {\r\n            setBlogState({\r\n              ...blogState,\r\n              [name]: res?.data?.web,\r\n            });\r\n          }\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  console.log(blogState, \"blogState\");\r\n\r\n  const onsubmitvalue = () => {\r\n    if (\r\n      blogState.image &&\r\n      blogState.header &&\r\n      blogState.header_Bottom &&\r\n      blogState.heading &&\r\n      blogState.content &&\r\n      blogState.date &&\r\n      blogState.bottomText &&\r\n      blogState.description_1 &&\r\n      blogState.description_2 &&\r\n      blogState.description_3 &&\r\n      blogState.end_Text &&\r\n      blogState.third_Image.align &&\r\n      blogState.third_Image.image.length > 0 &&\r\n      blogState.second_Image.banners.length > 0\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.cardContent;\r\n        storeDataEdit.splice(editData.editIndex, 1, {\r\n          bottomText: blogState?.bottomText,\r\n          content: blogState?.content,\r\n          date: moment(blogState?.date).format(\"MM/DD/YYYY\"),\r\n          description_1: blogState?.description_1,\r\n          description_2: blogState?.description_2,\r\n          description_3: blogState?.description_3,\r\n          end_Text: blogState?.end_Text,\r\n          header: blogState?.header,\r\n          header_Bottom: blogState?.header_Bottom,\r\n          heading: blogState?.heading,\r\n          image: blogState?.image,\r\n          second_Image: {\r\n            banners: blogState?.second_Image?.banners?.map((val, index) => {\r\n              return {\r\n                position: index,\r\n                url: \"\",\r\n                urlParam: \"\",\r\n                web: val.web,\r\n              };\r\n            }),\r\n          },\r\n          third_Image: {\r\n            align: blogState?.third_Image?.align,\r\n            image: blogState?.third_Image?.image,\r\n          },\r\n        });\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [\r\n              ...props?.data?.props?.cardContent,\r\n              {\r\n                bottomText: blogState?.bottomText,\r\n                content: blogState?.content,\r\n                date: new Date(blogState?.date),\r\n                description_1: blogState?.description_1,\r\n                description_2: blogState?.description_2,\r\n                description_3: blogState?.description_3,\r\n                end_Text: blogState?.end_Text,\r\n                header: blogState?.header,\r\n                header_Bottom: blogState?.header_Bottom,\r\n                heading: blogState?.heading,\r\n                image: blogState?.image,\r\n                second_Image: blogState.second_Image,\r\n                third_Image: {\r\n                  align: blogState?.third_Image?.align,\r\n                  image: blogState?.third_Image?.image,\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        setAddBlogs(false);\r\n        props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setBlogState(initialBlogDetails);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setBlogState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"blogPageCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleChangeheaderBottom = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      header_Bottom: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_1 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_1: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_2 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_2: data,\r\n    });\r\n  };\r\n\r\n  const handleChangeDescription_3 = (data) => {\r\n    setBlogState({\r\n      ...blogState,\r\n      description_3: data,\r\n    });\r\n  };\r\n  const handleDate = (value) => {\r\n    setBlogState({ ...blogState, date: value });\r\n  };\r\n  const handleDeleteBanner =(i) => {\r\n    const editBanners = [...blogState?.second_Image?.banners];\r\n    editBanners.splice(i,1)\r\n    setBlogState({\r\n      ...blogState,\r\n      second_Image: {\r\n        banners:editBanners\r\n      },\r\n    });\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Blog Page Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleViewStores={handleViewMore}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openBlog}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Blogs Inner Page</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div className={classes.innerDialog}>\r\n          <Grid>\r\n            <div className={classes.imageText}>\r\n              <Typography>Second Image</Typography>\r\n            </div>\r\n          </Grid>\r\n            <Grid container>\r\n              <Grid container spacing={2} style={{padding:\"10px 10px 20px\"}}>\r\n                {blogs?.second_Image?.banners?.map((val) => {\r\n                  return (\r\n                      <Grid md={4} xs={4}>\r\n                        <div>\r\n                          <img src={val?.web} alt=\"Second Image\" width={\"90%\"} />\r\n                        </div>\r\n                      </Grid>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Third Image</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.blogInnerImage}>\r\n                    <img src={blogs?.third_Image?.image} alt=\"Third Image\" />\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_1</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_1}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_2</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_2}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>Description_3</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.description_3}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.imageText}>\r\n                    <Typography>End Text</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.end_Text}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n              <div className={classes.border}>\r\n                <Grid>\r\n                  <div className={classes.alignText}>\r\n                    <Typography>Align</Typography>\r\n                  </div>\r\n                </Grid>\r\n                <Grid>\r\n                  <div className={classes.contentText}>\r\n                    <Typography>{blogs?.third_Image?.align}</Typography>\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          </div>\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addBlogsOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add Blog Page Details</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          ></div>\r\n          <div className={classes.textFields}>\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"header\"\r\n              label=\"Header\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.header}\r\n              name=\"header\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Header Bottom Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeheaderBottom}\r\n                parentState={blogState.header_Bottom}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"outlined-multiline-flexible\"\r\n              label=\"Heading Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState.heading}\r\n              name=\"heading\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.content}\r\n              name=\"content\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Date Picker :</Typography>\r\n              </div>\r\n              <div className={classes.datePicker}>\r\n                <DatePickerComp onChange={handleDate} value={blogState?.date} />\r\n                {console.log(blogState?.date, \"ll\")}\r\n              </div>\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"bottomText\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.bottomText}\r\n              name=\"bottomText\"\r\n              required\r\n            />\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_1 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_1}\r\n                parentState={blogState.description_1}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_2 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_2}\r\n                parentState={blogState.description_2}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className={classes.headerBottom}>\r\n                <Typography>Description_3 Text :</Typography>\r\n              </div>\r\n              <EditorConvertToHTML\r\n                handleChangeState={handleChangeDescription_3}\r\n                parentState={blogState.description_3}\r\n              />\r\n            </div>\r\n            <TextField\r\n              margin=\"normal\"\r\n              id=\"end_Text\"\r\n              label=\"End Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeStoreData}\r\n              value={blogState?.end_Text}\r\n              name=\"end_Text\"\r\n              multiline\r\n              rows={4}\r\n              required\r\n            />\r\n            <Autocomplete\r\n              value={blogState?.third_Image?.align}\r\n              onChange={(event, newValue) => {\r\n                setBlogState({\r\n                  ...blogState,\r\n                  third_Image: { ...blogState.third_Image, align: newValue },\r\n                });\r\n              }}\r\n              id=\"controllable-states-demo\"\r\n              options={options}\r\n              sx={{ width: 300 }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Third Image Align Position\"\r\n                  required\r\n                  margin=\"dense\"\r\n                />\r\n              )}\r\n            />\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    First Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={5} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file2\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"banners\")}\r\n                />\r\n                <label htmlFor=\"button-file2\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Second Banner Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.second_Image?.banners.length > 0 && blogState?.second_Image?.banners?.map((img,index) => {\r\n                    return (\r\n                      <Grid item style={{position:\"relative\"}}>\r\n                      <div style={{position:\"absolute\",width:\"150px\"}}>\r\n                        <div style={{display:\"flex\",justifyContent:\"space-between\"}}>\r\n                          <input\r\n                            accept=\"image/*\"\r\n                            style={{ display: \"none\" }}\r\n                            id={`button-file-edit${index}`}\r\n                            multiple\r\n                            type=\"file\"\r\n                            onChange={(e) => {handleChange(e.target.files[0],\"editBanners\",index)}}\r\n                          />\r\n                          <label htmlFor={`button-file-edit${index}`}>\r\n                            <Edit style={{fontSize:\"12px\",color:\"#fff\",backgroundColor:\"#000\",cursor:\"pointer\"}} />\r\n                          </label>\r\n                          <div style={{backgroundColor:\"#000\"}}>\r\n                            <Delete style={{fontSize:\"12px\",color:\"#fff\",cursor:\"pointer\"}} onClick={() => handleDeleteBanner(index)} />\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={img?.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                      </Grid>\r\n                    );\r\n                  }\r\n              )}\r\n            </Grid>\r\n            <Grid container spacing={8} style={{ paddingTop: \"8px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file3\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"third_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-file3\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Third Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {blogState?.third_Image?.image.length > 0 && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={blogState?.third_Image?.image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <div\r\n              className={classes.dialogHeader}\r\n              style={{ justifyContent: \"center\" }}\r\n              // onClick={addStoreDetails}\r\n            >\r\n              {/* <Button variant=\"contained\" color=\"primary\">\r\n                  Add Blog Details\r\n                </Button> */}\r\n            </div>\r\n          </div>\r\n          {/* )} */}\r\n          {/* <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Blogs Page Added\r\n          </Typography>\r\n          <TableComp\r\n            header={blogHeader}\r\n            // tableData={tableStoreData}\r\n            // data={state?.blogs}\r\n            // handleEdit={handleStoresEdit}\r\n            // handleDelete={handleDeleteStore}\r\n          /> */}\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default BlogPageCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Description\",\r\n  \"Customer Care\",\r\n  \"Whats App\",\r\n  \"Email\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"customer_Care\" },\r\n  { type: \"TEXT\", name: \"whatsApp\" },\r\n  { type: \"TEXT\", name: \"email\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst ContactUsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n    customer_Care: \"\",\r\n    whatsApp: \"\",\r\n    email: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.customer_Care &&\r\n      state.whatsApp &&\r\n      state.email\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"formContent\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Contact Us Component\"}\r\n        handleAddNew={handleClickOpen}\r\n        noAddNew\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Advertisement Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"customer_Care\"\r\n            label=\"Customer Care\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.customer_Care}\r\n            onChange={onChangeData}\r\n            name=\"customer_Care\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"whatsApp\"\r\n            label=\"WhatsApp\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.whatsApp}\r\n            onChange={onChangeData}\r\n            name=\"whatsApp\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"email\"\r\n            label=\"Email Id\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.email}\r\n            onChange={onChangeData}\r\n            name=\"email\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ContactUsCMS;\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport BannerCMS from \"./components/bannerCMS\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../config\";\r\nimport { CDNPAGES, CMS_UPDATE, CREATE_CMS } from \"../../graphql/cmsQuery\";\r\nimport StoreLocatorCMS from \"./components/storeLocatorCMS\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AlertContext } from \"../../context\";\r\nimport TitleDescriptionCMS from \"./components/titleDescriptionCMS\";\r\nimport QueryFormCMS from \"./components/queryFormCMS\";\r\nimport SlidingImageCardCMS from \"./components/slidingImageCardCMS\";\r\nimport CustomCareerBannerCMS from \"./components/customCareerBannerCMS\";\r\nimport CustomCareerCardCMS from \"./components/customCareerCardCMS\";\r\nimport CustomCollectionHeaderCMS from \"./components/customCollectionHeaderCMS\";\r\nimport CustomCollectionCardsCMS from \"./components/customCollectionCardsCMS\";\r\nimport CustomNewsCMS from \"./components/customNewsCMS\";\r\nimport SpclTitleDescr from \"./components/spclTitleDescrCMS\";\r\nimport BookYourAppointmentCMS from \"./components/bookYourAppointmentCMS\";\r\nimport TestimonialCMS from \"./components/testimonialCMS\";\r\nimport AboutCollection from \"./components/aboutCollectionCMS\";\r\nimport TitleComp from \"./components/titleCompCMS\";\r\nimport TitleWithDescription from \"./components/titleWithDescription\";\r\nimport CustomAdvertisementCMS from \"./components/customAdvertisementCMS\";\r\nimport SiteMapCMS from \"./components/siteMapCMS\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExperienceBannerCMS from \"./components/experienceBannerCMS\";\r\nimport ExperienceCardCMS from \"./components/experienceCardCMS\";\r\nimport ExperienceTableCardCMS from \"./components/experienceTableCards\";\r\nimport StoreLocatorDetailsCMS from \"./components/storeLocatorDetailsCMS\";\r\nimport BlogPageCMS from \"./components/blogPageCMS\";\r\nimport ContactUsCMS from \"./components/contactUsCMS\";\r\n\r\nconst CmsComponent = (props) => {\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const location = useLocation();\r\n  const [state, setState] = useState([]);\r\n  const [cloneDialog, setCloneDialog] = useState(false);\r\n  const [cloneState, setCloneState] = useState({\r\n    page: null,\r\n  });\r\n  console.log(\"state\", state);\r\n  console.log(\"cloneState\", cloneState);\r\n\r\n  useEffect(() => {\r\n    fetchCall();\r\n  }, []);\r\n\r\n  const handleClone = () => {\r\n    console.log(\"handleClone\", state);\r\n    setCloneDialog(true);\r\n  };\r\n\r\n  const handleCloneSumbit = () => {\r\n    if (cloneState.page) {\r\n      const cloneData = JSON.stringify(state);\r\n      const pageName = cloneState.page;\r\n      fetch(`${API_URL}/graphql`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: CREATE_CMS,\r\n          variables: {\r\n            cloneData: cloneData,\r\n            page: pageName,\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          handleCloneDialogClose()\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Page Created Successfully\",\r\n          });\r\n        });\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        msg: \"Please enter the page Route\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloneDialogClose = () => {\r\n    setCloneDialog(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCloneState({\r\n      ...cloneState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const fetchCall = () => {\r\n    const pageName = location?.state?.name;\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CDNPAGES,\r\n        variables: { page: pageName },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = JSON.parse(data?.data?.cdnByPage?.data);\r\n        console.log(\"dataRecieved\", dataRecieved)\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (data, component, propsKey) => {\r\n    const replaceIndex = state.findIndex((val) => val.component === component);\r\n    const newState = state;\r\n    newState.splice(replaceIndex, 1, data);\r\n    const stringifyState = JSON.stringify(newState);\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMS_UPDATE,\r\n        variables: {\r\n          stringifyState: stringifyState,\r\n          page: location.state.name,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Successfully Updated!\",\r\n        });\r\n        const newStateSet = JSON.parse(JSON.stringify(newState));\r\n        setState(newStateSet);\r\n        fetchCall();\r\n      });\r\n  };\r\n\r\n  const getTheTable = (val) => {\r\n    console.log(\"val000\", val);\r\n    switch (val?.component) {\r\n      case \"BannerComponent\": {\r\n        return <BannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Storelocator\": {\r\n        return <StoreLocatorCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndData\": {\r\n        return <TitleDescriptionCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"QueryForm\": {\r\n        return <QueryFormCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SlideImgMediaCard\": {\r\n\r\n        return <SlidingImageCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomBanner\": {\r\n        return <CustomCareerBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CareerCard\": {\r\n        return <CustomCareerCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CollectionHeader\": {\r\n        return (\r\n          <CustomCollectionHeaderCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CollectionCards\": {\r\n        return (\r\n          <CustomCollectionCardsCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CustomNews\": {\r\n        return <CustomNewsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SpclTitleDescr\": {\r\n        return <SpclTitleDescr data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"AboutBookAppointment\": {\r\n        return (\r\n          <BookYourAppointmentCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"titleComp\": {\r\n        return <TitleComp data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Testimonial\": {\r\n        return <TestimonialCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TestimonialTwo\": {\r\n        return <AboutCollection data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndDescription\": {\r\n        return <TitleWithDescription data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomAdvertising\": {\r\n        return (\r\n          <CustomAdvertisementCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"siteMap\": {\r\n        return (\r\n\r\n          <SiteMapCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"ExperienceCard\": {\r\n        return <ExperienceCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceBanner\": {\r\n        return <ExperienceBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceCard\": {\r\n        return <ExperienceTableCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      \r\n      case \"blogPageCard\": {\r\n        return <BlogPageCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StoreDetailsComponent\": {\r\n        return (\r\n          <StoreLocatorDetailsCMS data={val} handleSubmit={handleSubmit} />\r\n        )\r\n      }\r\n      case \"formContent\": {\r\n        return <ContactUsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      default: {\r\n        return <h1></h1>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid>\r\n          <Button variant=\"contained\" onClick={handleClone} color=\"primary\">\r\n            Clone\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {state.map((val, i) => {\r\n        return getTheTable(val);\r\n      })\r\n      }\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={cloneDialog}\r\n        onClose={handleCloneDialogClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Clone the current page</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={cloneState.page}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloneSumbit}>Clone Data</Button>\r\n          <Button onClick={handleCloneDialogClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default CmsComponent;\r\n","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"17px\",\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h2\r\n          className=\"products\"\r\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\r\n        >\r\n          Products\r\n        </h2>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        lassName=\"column\"\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n          <Button\r\n            className=\"product\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns columnclose={handleClose} />\r\n          </Popover>\r\n        </Grid>\r\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n          <Button\r\n            id=\"create\"\r\n            className=\"product\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n          >\r\n            CREATE PRODUCT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import { FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { ALLCDNPAGES, UPDATE_STATUS_CMS } from \"../../graphql/cmsQuery\";\r\n\r\nconst CmsHome = (props) => {\r\n  let history = useHistory();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [state, setState] = useState([]);\r\n  console.log(\"fetchedPages\", state);\r\n\r\n  const handleClick = (name) => {\r\n    history.push({\r\n      pathname: \"/cmsComponent\",\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }\r\n\r\n  const getThePageTitle = (name) => {\r\n    let createdName = name.replace(/[A-Z]/g, val => \" \" + `${val.toLowerCase()}`);\r\n    if (name === \"loc\") {\r\n      return createdName = \"Store Locator Details\"\r\n    } else {\r\n      return createdName\r\n    }\r\n  };\r\n\r\n  const handleChangeActive = (page, isActive) => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_STATUS_CMS,\r\n        variables: {\r\n          isActive: !isActive,\r\n          page: page,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Status Updated Successfully\",\r\n        });\r\n        fetchData()\r\n      });\r\n  }\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          CMS Complete List\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                NAC Banners\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Featured Product\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Customers Reviews\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/newarrival\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                New Arrival\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      {/* cms page */}\r\n      {state.map((val) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          {/* <Link underline=\"none\" component={RouterLink} to=\"/cmsComponent\"> */}\r\n          <div>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    margin: \"8px 0px\",\r\n                    textTransform: \"capitalize\",\r\n                    cursor: \"pointer\",\r\n                    borderRadius: \"8px\",\r\n                    backgroundColor: \"#3f51b5\",\r\n                    padding: \"8px\",\r\n                    color: \"#fff\"\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => handleClick(val.page)}\r\n                >\r\n                  {getThePageTitle(val.page)}\r\n                </Typography>\r\n                <div style={{display:\"flex\",alignItems:\"center\",justifyContent:\"center\",gap:\"4px\"}}>\r\n                  <Typography>Is page active:</Typography>\r\n                  <FormControlLabel\r\n                    style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}\r\n                    control={\r\n                      <Switch\r\n                        checked={val.isActive}\r\n                        onChange={() => handleChangeActive(val.page, val.isActive)}\r\n                        name=\"checkedB\"\r\n                        color=\"primary\"\r\n                      />\r\n                    }\r\n                  />\r\n                </div>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          {/* </Link> */}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CmsHome;\r\n","import React, { useEffect, useState , useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport {\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { AlertContext } from \"../../../../context\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            - Landing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n                        <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image</TableCell>\r\n                <TableCell>Desktop Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.mobile} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverLandingPage;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { APP_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                     \r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        alt=\"nacimages\"\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport {\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\nfunction SpecificListPages(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSPECIFICLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.urlParam &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESPECIFICLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Specific Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Specific Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Banner's Page Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n                   <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL + val.urlParam}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL + val.urlParam}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpecificListPages;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingBottom = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLISTINGBOTTOMBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (createlandingbanner.mobile && createlandingbanner.web) {\r\n      let create_banner_data = {\r\n        position: +\"1\",\r\n        url: \"#\",\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGBOTTOMBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          setOpen(false);\r\n          window.location.reload();\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            web: res?.data?.web,\r\n            mobile: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, web: true, mobile: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Bottom Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Bottom Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            {/* <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            /> */}\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Banner Image</TableCell>\r\n                {/* <TableCell>Desktop Image</TableCell> */}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingBottom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingRoutingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    urlParam : \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLSTYLORISILVERROUTINGPAGE,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allBanners.nodes;\r\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n          setalllandingbanner(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_banner_data = {\r\n      position: +createlandingbanner.position,\r\n      urlParam: createlandingbanner.urlParam,\r\n      mobile: createlandingbanner.mobile,\r\n      web: createlandingbanner.web,\r\n      now: new Date().toISOString(),\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATESTYLORISILVERROUTINGPAGE,\r\n        variables: create_banner_data,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              NAC Listing Routing Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Router Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"mobile\"\r\n              label=\"Mobile Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.mobile}\r\n              name=\"mobile\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"web\"\r\n              label=\"Web Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.web}\r\n              name=\"web\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Router Link</TableCell>\r\n                <TableCell>Mobile URL</TableCell>\r\n                <TableCell>Web URL</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\r\n                      {val.urlParam}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      {val.mobile}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\r\n                      {val.web}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingRoutingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport SilverLandingPage from \"./components/silverlandingpage\";\r\nimport SilverListingPage from \"./components/silverlistingpage\";\r\nimport SpecificListPages from \"./components/specificListPages\";\r\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\r\nimport SilverListingBottom from \"./components/silverbottmpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Silverbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverLandingPage />\r\n      <SilverListingPage />\r\n      <SpecificListPages />\r\n      <SilverListingBottom />\r\n      {/* <SilverListingRoutingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default Silverbanner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SilverListingPage from \"../components/silverlistingpage\";\r\nimport { Breadcrumbs } from \"../../../../components\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverListingPage />\r\n      {/* <SilverListingRoutingPage /> */}\r\n      {/* <SilverLandingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingbanner;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { API_URL } from \"../../config\";\r\nimport { isString } from \"util\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  variantFontSize: {\r\n    fontSize: \".9rem\",\r\n  },\r\n  variantMarginTop: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nexport function CreateVariant(props) {\r\n  const classes = useStyle();\r\n  let prod_id = props.productId;\r\n  let colors = [];\r\n  let purities = [];\r\n  let diamondtypes = [];\r\n  let oldpurity = [];\r\n\r\n  const TOKEN = \"token\";\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\r\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\r\n    colors.push(colorobj.productColor);\r\n  });\r\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\r\n    purities.push(colorobj.purity);\r\n    oldpurity.push(colorobj);\r\n  });\r\n\r\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\r\n    diamondtypes.push(diamondobj.diamondType);\r\n  });\r\n\r\n  const [variant, setVariant] = useState({\r\n    metal_color: [],\r\n    metal_purity: [],\r\n    diamond_color: [],\r\n    diamond_clarity: [],\r\n    variant_diamond_type: [],\r\n    product_images: {},\r\n    size: [],\r\n  });\r\n\r\n  function handleMetalColor(status_data) {\r\n    let color = variant.metal_color;\r\n    color.some((color_data) => color_data.id === status_data.id)\r\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\r\n      : color.push(status_data);\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color,\r\n    });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    let color_arr = [];\r\n    value.map((color, index) => {\r\n      if (\r\n        productCtx.productMetalColor.some(\r\n          (item) => item.productColor === color.productColor\r\n        )\r\n      ) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          metal_color: color.productColor,\r\n        };\r\n        color_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color_arr,\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n  };\r\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    alert(url);\r\n    url = API_URL + url;\r\n    console.info(\"URL\", url, data);\r\n    const method = data ? \"POST\" : \"GET\",\r\n      headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    let resdata = null;\r\n    if (auth) {\r\n      const token = localStorage.getItem(TOKEN);\r\n      if (token) headers[\"auth\"] = token;\r\n      else window.location = \"/\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: isString(data) ? data : JSON.stringify(data),\r\n      headers,\r\n    });\r\n\r\n    if (response.status < 400) {\r\n      resdata = await response.json();\r\n    } else {\r\n      alert(\r\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\r\n      );\r\n    }\r\n    return resdata;\r\n  };\r\n\r\n  const handleMetalPurity = (type) => (event, value) => {\r\n    let purity_arr = [];\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    value.map((color, index) => {\r\n      let color_obj = {\r\n        ...color,\r\n        purity: color.purity,\r\n      };\r\n      purity_arr.push(color_obj);\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: purity_arr,\r\n    });\r\n  };\r\n  // function handleMetalPurity(status_data) {\r\n  //     status_data.metal_weight = \"\";\r\n  //     status_data.error_message = false;\r\n  //     // alert(JSON.stringify(status_data));\r\n  //     let purity = variant.metal_purity;\r\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         metal_purity: purity\r\n  //     })\r\n  // }\r\n  const diamondTypeChange = (type) => (event, value) => {\r\n    let diamondtype_arr = [];\r\n    value.map((color, index) => {\r\n      if (color.label) {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.label,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.diamondType,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      }\r\n\r\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n      //    }else{ let color_obj = {\r\n      //         ...color,\r\n      //         diamondType: color.label\r\n      //     }\r\n      //     diamondtype_arr.push(color_obj)\r\n      //   }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      variant_diamond_type: diamondtype_arr,\r\n    });\r\n    alert(JSON.stringify(value));\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: diamondtype_arr,\r\n    });\r\n  };\r\n\r\n  // function diamondTypeChange(status_data){\r\n  //     let diamond__type = variant.variant_diamond_type;\r\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         variant_diamond_type: diamond__type\r\n  //     })\r\n  // }\r\n\r\n  const sizeChange = (type) => (event, value) => {\r\n    let size_arr = [];\r\n    value.map((color, index) => {\r\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          label: color,\r\n        };\r\n        size_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      size: size_arr,\r\n    });\r\n  };\r\n  // function sizeChange(status_data) {\r\n  //     let variantSize = variant.size;\r\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         size: variantSize\r\n  //     })\r\n\r\n  // }\r\n\r\n  function setMetalWeightInput(e, metalPurityId) {\r\n    // alert(e.target.value)\r\n    let metalWeight = variant.metal_purity;\r\n    metalWeight =\r\n      metalWeight &&\r\n      metalWeight.map((metal_weight, index) => {\r\n        if (metalPurityId === metal_weight.id) {\r\n          metal_weight.metal_weight = e.target.value;\r\n        }\r\n        return metal_weight;\r\n      });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: metalWeight,\r\n    });\r\n  }\r\n  function saveCreateVariant() {\r\n    let createVariant = {\r\n      productId: prod_id,\r\n      productMetalcoloursByProductId: variant.metal_color,\r\n      productPuritiesByProductId: variant.metal_purity,\r\n      productDiamondTypes: variant.variant_diamond_type,\r\n      productSize: variant.size,\r\n      product_images: variant.product_images,\r\n      // productImage:variant.product_images\r\n    };\r\n\r\n    let metal_color_image_length = Object.entries(variant.product_images);\r\n    let metal_purity_weight = false;\r\n    let metal_purity =\r\n      variant.metal_purity &&\r\n      variant.metal_purity.map((metal_weight_check) => {\r\n        if (metal_weight_check.metal_weight === \"\") {\r\n          metal_weight_check.error_message = true;\r\n          metal_purity_weight = true;\r\n        }\r\n        return metal_weight_check;\r\n      });\r\n    variant[\"metal_purity\"] = metal_purity;\r\n    setVariant({\r\n      ...variant,\r\n      variant,\r\n    });\r\n    if (metal_color_image_length.length !== variant.metal_color.length) {\r\n      alert(\"Select Metal Color Images\");\r\n    }\r\n    if (\r\n      (variant.metal_color.length > 0 &&\r\n        variant.metal_color.length === metal_color_image_length.length) ||\r\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\r\n      variant.size.length > 0 ||\r\n      variant.variant_diamond_type.length > 0\r\n    ) {\r\n      let createVariants = productCtx.createVariantList;\r\n      let editVariants = productCtx.editVariants;\r\n      let variants = productCtx.variants;\r\n      let productImages = productCtx.productImages;\r\n      productImages = [...productImages, variant.product_images];\r\n      createVariants.push(createVariant);\r\n      let params = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(createVariant),\r\n      };\r\n    } else {\r\n      alert(\"please fill the Create variant\");\r\n    }\r\n  }\r\n  function backToProductAttribute() {\r\n    props.changeVariant();\r\n  }\r\n  async function uploadimagetoserver(\r\n    bodaydata,\r\n    imageposition,\r\n    imagecolor,\r\n    uploadtype\r\n  ) {\r\n    let prodimages = variant.product_images;\r\n    // if(true)\r\n    // {\r\n    var prodid = prod_id;\r\n    let imagecolourobj = variant.product_images[imagecolor];\r\n    var imagecount = 1;\r\n    if (imagecolourobj) {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        product_id: prodid,\r\n      },\r\n      false\r\n    );\r\n    var returnData =\r\n      responsedata && responsedata.data && responsedata.data.returnData;\r\n    var signedRequest = returnData && returnData.signedRequest;\r\n    var url = returnData && returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData && returnData.filepath;\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (imagecolourobj) {\r\n      const imageobj = {\r\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      if (uploadtype === \"edit\") {\r\n        imagecolourobj[imageposition] = imageobj;\r\n      } else {\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n    } else {\r\n      const imageobj = {\r\n        name: prodid + \"_1\" + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj);\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setVariant({ ...variant, product_images: prodimages });\r\n    // setFiles([])\r\n    // }\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.productColor}\r\n          getOptionDisabled={(option) =>\r\n            colors.indexOf(option.productColor) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductMetalColor}\r\n          options={productCtx.masterData.metalcolour}\r\n          value={productCtx.productMetalColor}\r\n          onChange={handleoptionChange(\"productMetalColor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.productColor}\r\n                {...getTagProps({ index })}\r\n                disabled={colors.indexOf(option.productColor) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Colours\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          margin=\"dense\"\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\r\n          defaultValue={productCtx.oldproductMetalPurity}\r\n          options={productCtx.masterData.metalpurity}\r\n          value={productCtx.productMetalPurity}\r\n          onChange={handleMetalPurity(\"productMetalPurity\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.purity}\r\n                {...getTagProps({ index })}\r\n                disabled={purities.indexOf(option.purity) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        {productCtx.productMetalPurity &&\r\n          productCtx.productMetalPurity.map((metal_purity) => (\r\n            <TextField\r\n              key={metal_purity.id}\r\n              className={classes.helperinput}\r\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={metal_purity.metal_weight}\r\n              id=\"metal_weight\"\r\n              error={metal_purity && metal_purity.error_message}\r\n              name=\"metal_weight\"\r\n              label={`Weight ${metal_purity.purity}`}\r\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n            />\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.label}\r\n          getOptionDisabled={(option) =>\r\n            diamondtypes.indexOf(option.label) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductDiamondTypesArray}\r\n          options={productCtx.masterData.diamondtypes}\r\n          value={\r\n            productCtx.productDiamondTypesArray\r\n              ? productCtx.productDiamondTypesArray\r\n              : []\r\n          }\r\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.diamondType}\r\n                {...getTagProps({ index })}\r\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Diamond Types\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            options={productCtx.productVariantSize}\r\n            value={productCtx.variant_size}\r\n            onChange={sizeChange(\"productSizes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Sizes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n\r\n      {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n\r\n      <Grid container>\r\n        {variant.metal_color === undefined\r\n          ? null\r\n          : variant.metal_color.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.productColor}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) =>\r\n                      new Promise((resolve, reject) => {})\r\n                    }\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={(fileItem) => {\r\n                      // Set currently active file objectsfiles to this.state\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {}}\r\n                    fileRenameFunction={(file) =>\r\n                      new Promise((resolve) => {\r\n                        var prodid = prod_id;\r\n                        let imagecolourobj = variant.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename =\r\n                          prodid +\r\n                          \"_\" +\r\n                          imagecount +\r\n                          value.name.charAt(0) +\r\n                          file.extension;\r\n                        resolve(imagename);\r\n                      })\r\n                    }\r\n                  ></FilePond>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n      {\r\n        <Grid\r\n          container\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => saveCreateVariant()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\nexport default CreateVariant;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  conatainerRow: {\r\n    width: \"300px\",\r\n    color: \"#6f6f6f\",\r\n    display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight: \" 256px\",\r\n    fontSize: \"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"500px\",\r\n      color: \"#6f6f6f\",\r\n      display: \"grid\",\r\n      padding: \"16px 24px\",\r\n      maxHeight: \" 270px\",\r\n      fontSize: \"14px\",\r\n      overflowX: \"visible\",\r\n      overflowY: \"scroll\",\r\n      gridColumnGap: \"20px\",\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Columns(props) {\r\n  const classes = useStyles();\r\n\r\n  const checkboxrow = props.columns;\r\n  const [columns, setColumns] = React.useState({\r\n    listOfValue: checkboxrow,\r\n  });\r\n  const [showcolumns, setshowColumns] = React.useState();\r\n\r\n  function stateChange(id) {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (id === data.id) {\r\n        data.isActive = data.isActive ? false : true;\r\n      }\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function resetButton() {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (!data.disabled) {\r\n        data.isActive = false;\r\n      }\r\n\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function saveaction() {\r\n    // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n    //     if(data.isActive){\r\n    //               }\r\n    //               return data;\r\n\r\n    // })\r\n    let columnnames = [];\r\n    columns.listOfValue.forEach((element) => {\r\n      if (element.isActive) {\r\n        columnnames.push(element);\r\n      }\r\n    });\r\n    props.selectcolumnfilter(columnnames, props.displytype);\r\n    props.columnclose();\r\n  }\r\n  // const lists = columns.listOfValue.map((head) =>\r\n  //     (\r\n  //         <Grid conatiner>\r\n  //             <Grid item xs={4}><Checkbox\r\n  //                 value=\"secondary\"\r\n  //                 color=\"primary\"\r\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n  //                 checked = {head.isActive}\r\n  //                 onChange = {()=>stateChange(head.id)}\r\n\r\n  //             />\r\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n  //             </Grid>\r\n  //         </Grid>\r\n  //     )\r\n\r\n  // );\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"420px\" }}>\r\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n      <Grid\r\n        style={{\r\n          height: \"270px\",\r\n          borderBottom: \"1px solid #ddd\",\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          paddingTop: \"5px\",\r\n          paddingBottom: \"10px\",\r\n        }}\r\n      >\r\n        <Grid conatiner>\r\n          <Grid item className={classes.conatainerRow}>\r\n            {columns.listOfValue.map((head) => (\r\n              <Grid container>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={head.isActive}\r\n                  disabled={head.disabled}\r\n                  onChange={() => stateChange(head.id)}\r\n                />\r\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"10px auto\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <Grid>\r\n          <Button size=\"large\" onClick={() => resetButton()}>\r\n            RESET\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button size=\"small\" onClick={() => props.columnclose()}>\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => saveaction()}\r\n            backgroundColor=\"secondary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            className={classes.margin}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h4 className=\"products\">\r\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\r\n        </h4>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className=\"column-btn\"\r\n          lg={5}\r\n          md={5}\r\n          sm={5}\r\n          xs={5}\r\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Button\r\n            className=\"product\"\r\n            size=\"small\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns\r\n              columns={options}\r\n              selectcolumnfilter={props.getColumnnames}\r\n              displytype={props.displytype}\r\n              columnclose={handleClose}\r\n            />\r\n          </Popover>\r\n        </Grid>\r\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditDiamond = (props) => {\r\n\r\n\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\r\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\r\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\r\n    diamonditemname: diamond.diamonditemname ?? \"\",\r\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\r\n    diamonddescription: diamond.diamonddescription ?? \"\",\r\n    diamondclarity: diamond.diamondClarity ?? \"\",\r\n    diamondtype: diamond.diamondType ?? \"\",\r\n    diamondcolor: diamond.diamondColour ?? \"\",\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n \r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {}, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Diamond Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonditemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonditemname\")}\r\n          />{\" \"}\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondsubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondsubitemname\")}\r\n          />{\" \"} */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonddescription}\r\n            placeholder={\"Diamond Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonddescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondweight}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            label=\"Weight\"\r\n            onChange={handleInputChange(\"diamondweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondcount\")}\r\n            value={editcontent.diamondcount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.diamondsettings}\r\n            value={editcontent.diamondsettings}\r\n            onChange={handleoptionChange(\"diamondsettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondshape}\r\n            options={productCtx.masterData.diamondshapes}\r\n            onChange={handleoptionChange(\"diamondshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                // label=\"Shape\"\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondcolor}\r\n            options={productCtx.masterData.diamondcolors}\r\n            onChange={handleoptionChange(\"diamondcolor\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />{\" \"}\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondclarity}\r\n            options={productCtx.masterData.diamondclarities}\r\n            onChange={handleoptionChange(\"diamondclarity\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Clarity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondtype}\r\n            options={productCtx.masterData.diamondtypes}\r\n            onChange={handleoptionChange(\"diamondtype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\r\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\r\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n  { id: \"Colour\", label: \"Colour\" },\r\n  { id: \"Clarity\", label: \"Clarity\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: \"flex\",\r\n\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    //marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit: JSON.parse(JSON.stringify(diamondData)),\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.id,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n  async function DiamondSave(diamondobj) {\r\n    // alert(JSON.stringify(productCtx.diamondsettings))\r\n    // alert(JSON.stringify(productCtx.diamondshape))\r\n    // alert(JSON.stringify(productCtx.diamondcount))\r\n    // alert(JSON.stringify(id))\r\n    var bodydata = {};\r\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\r\n      let list_data = props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\r\n        if (diamondobj.id === diamondListData.id) {\r\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\r\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\r\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\r\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\r\n          bodydata[\"diamondid\"] = diamondobj.id;\r\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\r\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\r\n          bodydata[\"description\"] = diamondobj.diamonddescription;\r\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\r\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\r\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      });\r\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\r\n\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\r\n      // let editDiamondLists = productCtx.editDiamondLists;\r\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\r\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\r\n      //   editDiamondLists = editDiamondLists && editDiamondLists\r\n      //   .map((diamond_list,index)=>{\r\n      //     if(diamond_list.id === editDiamondList.id){\r\n      //       return editDiamondList;\r\n      //     }\r\n      //     return diamond_list;\r\n      //   })\r\n      //   : editDiamondLists.push(editDiamondList);\r\n      // }\r\n      // // console.log(editDiamondLists,'editDiamondList')\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      // handleClick();\r\n      // setProductCtx({\r\n      //   ...productCtx,\r\n      //   diamondlist:DiamondChangeData,\r\n      //   editDiamondLists,\r\n      //   diamondsettings:\"\",\r\n      //   diamondshape: \"\",\r\n      //   diamondcount:\"\",\r\n      //   diamondweight:\"\",\r\n      // })\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n    window.location.reload();\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        {/* <CircularProgress color=\"secondary\"/> */}\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond &&\r\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondColour}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondClarity}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondweight\")}\r\n                        value={productCtx.diamondweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneWeight}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        type=\"number\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondcount\")}\r\n                        value={productCtx.diamondcount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneCount}\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondsettings}\r\n                        options={productCtx.masterData.diamondsettings}\r\n                        onChange={handleoptionChange(\"diamondsettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondSettings}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondshape}\r\n                        options={productCtx.masterData.diamondshapes}\r\n                        onChange={handleoptionChange(\"diamondshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondShape}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 ? (\r\n              <>\r\n                <TableRow style={{ height: 1 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              </>\r\n            ) : null}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.diamond && props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditGemstone = (props) => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    gemstonesettings: diamond?.gemstonesettings ?? null,\r\n    gemstonecount: diamond?.gemstonecount ?? \"\",\r\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\r\n    gemstonesize: diamond?.gemstonesize ?? \"\",\r\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\r\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\r\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\r\n    gemstoneshape: diamond?.gemstoneshape ?? null,\r\n    gemstonetype: diamond?.gemstonetype ?? null,\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    // alert(JSON.stringify(editcontent.gemstonecount))\r\n  }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Gemstone Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneitemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesubitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonedescription}\r\n            placeholder={\" Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonedescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesize}\r\n            label=\"Size\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesize\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            label=\"Weight\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneweight}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonecount\")}\r\n            value={editcontent.gemstonecount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.gemstonesettings}\r\n            value={editcontent.gemstonesettings}\r\n            onChange={handleoptionChange(\"gemstonesettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\" Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.name}\r\n            value={editcontent.gemstoneshape}\r\n            options={productCtx.masterData.gemstonshapes}\r\n            onChange={handleoptionChange(\"gemstoneshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.gemstonetype}\r\n            options={productCtx.masterData.gemstontypes}\r\n            onChange={handleoptionChange(\"gemstonetype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditGemstone;\r\n","import { Button, Chip, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\r\n  { id: \"SubItemName\", label: \"SubItem Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 120,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\r\n    });\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    setEditcontent({\r\n      id: gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n\r\n  async function GemstoneSave(gemdata) {\r\n\r\n    if (\r\n      gemdata.gemstonesettings &&\r\n      gemdata.gemstoneshape &&\r\n      gemdata.gemstonecount &&\r\n      gemdata.gemstoneweight &&\r\n      gemdata.gemstonesize\r\n    ) {\r\n\r\n      let list_data = props.gemstone;\r\n      var bodydata = {};\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\r\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\r\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\r\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\r\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\r\n          bodydata[\"id\"] = gemdata.id;\r\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\r\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\r\n          bodydata[\"description\"] = gemdata.gemstonedescription;\r\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\r\n\r\n          return gemstoneListData;\r\n        }\r\n\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\r\n      let editGemstoneList =\r\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\r\n        let status =\r\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\r\n            ? (editGemstoneLists =\r\n              editGemstoneLists &&\r\n              editGemstoneLists.map((gemstone_list, index) => {\r\n                if (gemstone_list.id === editGemstoneList.id) {\r\n                  return editGemstoneList;\r\n                }\r\n                return gemstone_list;\r\n              }))\r\n            : editGemstoneLists.push(editGemstoneList);\r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\",\r\n      });\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n   \r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n  \r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone &&\r\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Gemstone Size\"\r\n                        name=\"size\"\r\n                        onChange={handleInputChange(\"gemstonesize\")}\r\n                        autoComplete=\"size\"\r\n                        value={productCtx.gemstonesize}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSize}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstoneweight\")}\r\n                        value={productCtx.gemstoneweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneWeight}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstonecount\")}\r\n                        value={productCtx.gemstonecount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneCount}\r\n                      </TableCell>\r\n                    )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstonesettings}\r\n                        options={productCtx.masterData.gemstonesettings}\r\n                        onChange={handleoptionChange(\"gemstonesettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSetting}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstoneshape}\r\n                        options={productCtx.masterData.gemstonshapes}\r\n                        onChange={handleoptionChange(\"gemstoneshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneShape}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell align=\"center\">\r\n                        <Button onClick={(e) => GemstoneEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport \"./upload.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { IMAGEDELETE } from \"../../graphql/query\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30,\r\n  },\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = \"\";\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  product_id = useLocation().pathname.split('/').pop()\r\n\r\n  React.useEffect(() => {\r\n    setProductimages(props.prodimages);\r\n  }, [props.prodimages]);\r\n\r\n  productimages.forEach((imgobj) => {\r\n    console.log();\r\n    image_count = image_count + 1;\r\n    if (imgobj.productId) {\r\n      product_id = imgobj.productId;\r\n    }\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const deleteImage = async (imageData) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: IMAGEDELETE,\r\n        variables: { productimageid: imageData.id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        fatchvalue.statuscode = 200 && window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handlenewAssetChange = (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      var imagecount = 1;\r\n      if (productimages) {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = product_id + \"-\" + imagecount;\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n\r\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\r\n    });\r\n  };\r\n\r\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      { image: filetype, filename: imagename, product_id: prodid },\r\n      false\r\n    );\r\n\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    var filepathname = returnData.filepath;\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": filetype,\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (!isedit) {\r\n      const imageobj = {\r\n        name: product_id + \"_\" + (image_count + 1),\r\n        imagePosition: image_count + 1,\r\n        productColor: props.color,\r\n        productId: product_id,\r\n        imageUrl: url,\r\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n      };\r\n      imagecontent = imageobj;\r\n    }\r\n\r\n    if (!isedit) {\r\n      var productimgs = [];\r\n      productimages.forEach((img) => {\r\n        productimgs.push(img);\r\n      });\r\n      productimgs.push(imagecontent);\r\n    }\r\n\r\n    await axios.put(signedRequest, fileobj, options);\r\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\r\n    responsecontent.statuscode === 200 && setSuccess(true);\r\n    setTimeout(function () {\r\n      responsecontent.statuscode === 200 && window.location.reload();\r\n    }, 2500);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\r\n        <CardContent>\r\n          <Grid container spacing={2} className={classes.styleFile}>\r\n            {productimages.map((url, index) => (\r\n              <React.Fragment key={url.id}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <i\r\n                    className=\"fa fa-window-edit\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 11,\r\n                      color: \"red\",\r\n                      zIndex: \"12\",\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      width: \"150px\",\r\n                      wordBreak: \"break-all\",\r\n                      height: \"150px\",\r\n                      padding: \"8px\",\r\n                      margin: \"0\",\r\n                      // cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                    }}\r\n                    className=\"container\"\r\n                  >\r\n                    <img\r\n                      src={url.imageUrl}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      alt=\"product images\"\r\n                    />\r\n                  </Grid>\r\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\r\n                    <DeleteIcon style={{ color: \"grey\" }} />\r\n                  </Button>\r\n                  <br />\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n                    {\" \"}\r\n                    {index + 1}{\" \"}\r\n                  </Typography>\r\n\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n                    {\" \"}\r\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\r\n                  </Typography>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </React.Fragment>\r\n            ))}\r\n            <Grid\r\n              item\r\n              style={{\r\n                width: \"150px\",\r\n                wordBreak: \"break-all\",\r\n                height: \"150px\",\r\n                padding: \"8px\",\r\n                margin: \"0\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n              className=\"container\"\r\n            >\r\n              {\r\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\r\n                  <i\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      color: \"rgba(60,64,67,.15)\",\r\n                      fontSize: \"45px\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  ></i>\r\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\r\n                </label>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Input,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\r\n  { id: \"Markup Price\", label: \"Markup Price\" },\r\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\r\n  { id: \"Discount Price\", label: \"Discount Price\" },\r\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\r\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\r\n  { id: \"Discount\", label: \"Discount\" },\r\n\r\n  {\r\n    id: \"Disable\",\r\n    label: \"Price Update\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: \"\",\r\n  });\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    // }\r\n  };\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\r\n\r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku: diamondData.generatedSku,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.generatedSku,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    // setOpenedit(true)\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(priceobj) {\r\n    var bodydata = {};\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (priceobj.id === skulistdata.generatedSku) {\r\n        skulistdata.costPrice = priceobj.editcostprice;\r\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n        skulistdata.sellingPrice = priceobj.editsellingprice;\r\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\r\n        skulistdata.markupPrice = priceobj.editmarkupprice;\r\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\r\n        skulistdata.discountPrice = priceobj.editdiscountprice;\r\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\r\n\r\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\r\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\r\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\r\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\r\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\r\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\r\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\r\n        bodydata[\"discountPriceTax\"] = parseFloat(\r\n          priceobj.editdiscountpricetax\r\n        );\r\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\r\n          priceobj.marginOnSalePercentage\r\n        );\r\n\r\n        bodydata[\"generatedSku\"] = priceobj.id;\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    alert(JSON.stringify(bodydata));\r\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    // setEditcontent(null)\r\n    // setOpenedit(false)\r\n  }\r\n  //   const handleoptionChange = type => (event, value) => {\r\n\r\n  //     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.generatedSku}\r\n                    </TableCell>\r\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editcostprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price\"\r\n                            onChange={handleinputChange(\"editcostprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPrice}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editcostpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price Tax\"\r\n                            onChange={handleinputChange(\"editcostpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price\"\r\n                            onChange={handleinputChange(\"editsellingprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price Tax\"\r\n                            onChange={handleinputChange(\"editsellingpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            //onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkupprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price\"\r\n                            onChange={handleinputChange(\"editmarkupprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkuppricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price Tax\"\r\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountprice}\r\n                            id=\"productname\"\r\n                            onChange={handleinputChange(\"editdiscountprice\")}\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountpricetax}\r\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price Tax\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.marginOnSalePercentage}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.discount}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={(e) => props.onShow(row.generatedSku)}\r\n                        >\r\n                          Summary\r\n                        </Button>{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Button\r\n                          onClick={(e) => Skupricesync(row)}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        >\r\n                          ₹ Run\r\n                        </Button>\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\r\n                          <CircularProgress size={15} />\r\n                        ) : (\r\n                          <Button\r\n                            onClick={(e) => Skupricesync(row)}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            ₹ Run\r\n                          </Button>\r\n                        )}\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditPrice\r\n            diamond={editcontent}\r\n            onApply={DiamondSave}\r\n            onClose={handleApplicationClose}\r\n            open={openedit}\r\n          />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Button, Input, Typography } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\r\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\r\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\r\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\r\n\r\n  { id: \"Default\", label: \"Default\" },\r\n  { id: \"Show PriceBreakup\", label: \"Show PriceBreakup\" },\r\n  {\r\n    id: \"Active\",\r\n    label: \"Active\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  function handleChangeisdefault(variantId) {}\r\n\r\n  const handleChangeswitch = (name) => (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n\r\n    //  setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    console.log(diamondData);\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editleadtime: diamondData.vendorDeliveryTime,\r\n      discount: diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault: diamondData.isdefault,\r\n      editisactive: diamondData.isActive,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(id) {\r\n    var bodydata = {};\r\n\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (id === skulistdata.generatedSku) {\r\n        skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n        skulistdata.isdefault = productCtx.editisdefault;\r\n        skulistdata.isActive = productCtx.editisactive;\r\n        skulistdata.isReadyToShip = productCtx.editreadytoship;\r\n        skulistdata.discountDesc = productCtx.discount;\r\n        bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\r\n        bodydata[\"isdefault\"] = productCtx.editisdefault;\r\n        bodydata[\"isActive\"] = productCtx.editisactive;\r\n        bodydata[\"discount\"] = productCtx.discount;\r\n        bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\r\n        bodydata[\"generatedSku\"] = id;\r\n        bodydata[\"showPriceBreakup\"] = productCtx.showPriceBreakup;\r\n\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.generatedSku}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.metalColor}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.purity}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuWeight}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell> */}\r\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuSize}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editleadtime}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Vendor Lead Time\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"editleadtime\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.vendorDeliveryTime}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.discount}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"discount\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountDesc}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editreadytoship\r\n                              : row.isReadyToShip\r\n                          }\r\n                          // onChange={()=>handleChange(row.id)}\r\n                          value=\"checkedA\"\r\n                          // onChange={handleChangeswitch('editreadytoship')}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editreadytoship\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisdefault\r\n                              : row.isdefault\r\n                          }\r\n                          value=\"checkedA\"\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisdefault\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          // checked={row.showPriceBreakup}\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisactive\r\n                              : row.isActive\r\n                          }\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisactive\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Show PriceBreakup\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          checked={productCtx.showPriceBreakup}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"showPriceBreakup\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 20 }} align=\"center\">\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell align=\"center\" style={{ width: 20 }}>\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Chip,\r\n  FormControlLabel,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTDIAMONDTYPES, PRODUCTEDIT } from \"../../graphql/query\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport \"../Productupload/Productupload.css\";\r\nimport columnnames from \"./columnnames.json\";\r\nimport SortHeader from \"./Components/SortHeader\";\r\nimport CreateVariant from \"./CreateVariant\";\r\nimport DiamondDetails from \"./DiamondDetails\";\r\nimport GemstoneDetails from \"./GemstoneDetails\";\r\nimport Pricedetails from \"./Pricedetails\";\r\nimport Productimages from \"./Productimages\";\r\nimport Skupricing from \"./Skupricing\";\r\nimport Variants from \"./Variants\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(\r\n    columnnames.defaultvarients\r\n  );\r\n  const [displycolumns, setDisplycolumns] = React.useState(\r\n    columnnames.defaultvarientnames\r\n  );\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(\r\n    columnnames.pricing\r\n  );\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\r\n    columnnames.defaultpricing\r\n  );\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\r\n    columnnames.defaultpricingnames\r\n  );\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    createVariant();\r\n    setExpand(isExpanded ? true : false);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n\r\n  console.log(productCtx);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\",\r\n  });\r\n\r\n  let prod_id = props.location.pathname.split(\"/\")[2];\r\n  let product_sku = \"\";\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname });\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function dismisspricesummary() {\r\n    setIsshowpricesummary(false);\r\n  }\r\n  function getColumnnames(columnnames, displytype) {\r\n    let displycolumns = [];\r\n    let displycolumnnames = [];\r\n\r\n    columnnames.forEach((element) => {\r\n      displycolumnnames.push(element.name);\r\n      displycolumns.push(element);\r\n    });\r\n    if (displytype === 1) {\r\n      setDisplycolumns(displycolumnnames);\r\n      setVarientcolumns(columnnames);\r\n    } else {\r\n      setPricingcolumns(columnnames);\r\n      setDisplypricingcolumns(displycolumns);\r\n      setDisplycolumnnames(displycolumnnames);\r\n    }\r\n  }\r\n\r\n  let client = useApolloClient();\r\n\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    productCtx.diamondlist &&\r\n      productCtx.diamondlist.map((diamond_type) => {\r\n        let diamond_data = {\r\n          id: diamond_type.id,\r\n          diamondType: diamond_type.diamondType,\r\n        };\r\n        let status = diamondTypesArray.some(\r\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\r\n        )\r\n          ? \"\"\r\n          : diamondTypesArray.push(diamond_data);\r\n        return diamond_type;\r\n      });\r\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\r\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx,\r\n    });\r\n\r\n    client\r\n      .query({ query: PRODUCTDIAMONDTYPES })\r\n      .then((res) => {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async function saveProductEditItem() {\r\n    console.log(productCtx.product_type);\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productCategory: productCtx.product_categoy,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions: productCtx.occassions,\r\n      collections: productCtx.collections,\r\n      stonecount: productCtx.stonecount,\r\n      stonecolour: productCtx.stonecolour,\r\n      gender: productCtx.product_gender,\r\n      hashtags: productCtx.hashtags,\r\n      description: productCtx.description,\r\n      minOrderQty: productCtx.minOrderQty,\r\n      maxOrderQty: productCtx.maxOrderQty,\r\n      length: productCtx.length,\r\n      height: productCtx.height,\r\n\r\n      productType: productCtx?.product_type?.label ?? null,\r\n      productMetalColor: productCtx?.productMetalColor ?? null,\r\n      vendorCode: productCtx?.vendorcode?.name ?? null,\r\n      earingBacking: productCtx?.earringbacking?.label ?? null,\r\n      // productSize: \"12,13,14,15\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/editproduct\",\r\n      {},\r\n      productEditItem\r\n    );\r\n    window.location.reload();\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(productEditItem));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem));\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handledisableproduct = (name) => async (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n      isactive: event.target.checked,\r\n    };\r\n    let esbody = {\r\n      product_id: prod_id,\r\n    };\r\n    var endpoint = \"/reindex\";\r\n    if (event.target.checked) {\r\n      endpoint = \"/esearch_forceindex\";\r\n    }\r\n\r\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\r\n\r\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\r\n    let updateproductattr = await sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      esbody\r\n    );\r\n\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(bodycontent));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  };\r\n  async function showpricesummary(sku) {\r\n    let response = await sendNetworkRequest(\r\n      \"/viewskupricesummary/\" + sku,\r\n      {},\r\n      null\r\n    );\r\n    let price_summary = [];\r\n    let skuprice = response.price_summary.skuprice;\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n    let obj = {\r\n      component: \"SKU Price\",\r\n      cost_price: skuprice.cost_price,\r\n      selling_price: skuprice.selling_price,\r\n      markup_price: skuprice.markup_price,\r\n      discount_price: skuprice.discount_price,\r\n    };\r\n    price_summary.push(obj);\r\n\r\n    setPricesummaryvalue(price_summary);\r\n    setIsshowpricesummary(true);\r\n  }\r\n  function Skupricesync(product_id) {\r\n    let bodydata = {\r\n      product_sku: [product_id],\r\n    };\r\n    sendNetworkRequest(\"/price_run_latest\", {}, bodydata);\r\n  }\r\n  function Skumarkupsync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n      pricingcomponent: \"updateskuprice\",\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function backProductList() {\r\n    window.location = \"/productlist\";\r\n  }\r\n  useEffect(() => {\r\n    client\r\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\r\n      .then((res) => {\r\n        setLoadopen(false);\r\n\r\n        var { productListByProductId } = res.data;\r\n        var genders = productListByProductId.gender;\r\n        var productTypes = productListByProductId.productType;\r\n        var earringBackings = productListByProductId.earringBacking;\r\n        var size_obj = productListByProductId.sizeVarient;\r\n        var vendorCodes = productListByProductId.vendorCode;\r\n\r\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\r\n        // let productSize_arr = [];\r\n        // if (productSizes != null && productSizes != undefined) {\r\n        //\r\n        //   let productSizeArray = productSizes.split(\",\");\r\n        //   for (let i = 0; i < productSizeArray.length; i++) {\r\n        //\r\n        //     let obj_size = {\r\n        //       sizeValue: productSizeArray[i],\r\n        //     };\r\n        //     productSize_arr.push(obj_size);\r\n        //   }\r\n        // }\r\n\r\n        let sizes_arr = [];\r\n        if (size_obj) {\r\n          let sizes = size_obj.split(\",\");\r\n          sizes.forEach((element) => {\r\n            sizes_arr.push(element);\r\n          });\r\n        }\r\n        let gender_arr = [];\r\n        if (genders) {\r\n          genders = genders.split(\",\");\r\n          genders.forEach((element) => {\r\n            let gender_obj = {\r\n              label: element,\r\n            };\r\n            gender_arr.push(gender_obj);\r\n          });\r\n        }\r\n        let product_type = null;\r\n        if (productTypes !== null && productTypes !== undefined) {\r\n          productTypes = productTypes.split(\",\");\r\n          productTypes.forEach((element) => {\r\n            product_type = {\r\n              label: element,\r\n            };\r\n          });\r\n        }\r\n\r\n        let earring_backing = null;\r\n        if (earringBackings !== null && earringBackings !== undefined) {\r\n          earring_backing = {\r\n            label: earringBackings,\r\n          };\r\n        }\r\n\r\n        let vendor_code = null;\r\n        if (vendorCodes !== null && vendorCodes !== undefined) {\r\n          vendorCodes = vendorCodes.split(\",\");\r\n          vendorCodes.forEach((element) => {\r\n            vendor_code = {\r\n              name: element,\r\n            };\r\n          });\r\n        }\r\n        let defaultcolour = \"\";\r\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\r\n        images_arr.forEach((element) => {\r\n          if (element.isdefault) {\r\n            defaultcolour = element.productColor;\r\n          }\r\n        });\r\n        var metalcolors = [];\r\n        Array.prototype.insert = function (index, item) {\r\n          this.splice(index, 0, item);\r\n        };\r\n\r\n        var unfilterMetalColor =\r\n          productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\r\n        var metalColor = unfilterMetalColor;\r\n        var metalColor = unfilterMetalColor.filter(function (el) {\r\n          return el.productColor != null;\r\n        });\r\n\r\n        if (\r\n          typeof metalColor !== undefined &&\r\n          metalColor !== null &&\r\n          metalColor !== undefined\r\n        ) {\r\n        } else {\r\n          metalColor = {};\r\n        }\r\n\r\n        let metalcolor =\r\n          productListByProductId.productMetalcoloursByProductId.nodes;\r\n        metalcolor.forEach((colorobj) => {\r\n          if (colorobj.productColor === defaultcolour) {\r\n            colorobj[\"isdefault\"] = true;\r\n            metalcolors.insert(0, colorobj);\r\n          } else {\r\n            colorobj[\"isdefault\"] = false;\r\n            metalcolors.push(colorobj);\r\n          }\r\n        });\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: productListByProductId.productName,\r\n          isactive: productListByProductId.isactive,\r\n          product_type: product_type,\r\n          product_categoy: productListByProductId.productCategory,\r\n          gemstonelist:\r\n            productListByProductId.productGemstonesByProductSku.nodes,\r\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\r\n          variants: productListByProductId.transSkuListsByProductId.nodes,\r\n          productImages: productListByProductId.productImagesByProductId.nodes,\r\n          productMetalColor: metalColor,\r\n          // oldproductMetalColor: metalColor,\r\n          productMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          oldproductMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials:\r\n            productListByProductId.productMaterialsByProductSku.nodes,\r\n          vendorcode: vendor_code,\r\n          product_gender: gender_arr,\r\n          themes: productListByProductId.productThemesByProductId.nodes,\r\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\r\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\r\n          collections:\r\n            productListByProductId.productCollectionsByProductId.nodes,\r\n          stonecount:\r\n            productListByProductId.productStonecountsByProductId.nodes,\r\n          stonecolour:\r\n            productListByProductId.productStonecolorsByProductId.nodes,\r\n          description:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\r\n          minOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.minOrderQty,\r\n          maxOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.maxOrderQty,\r\n          height: productListByProductId?.height,\r\n          length: productListByProductId?.length,\r\n          earringbacking: earring_backing,\r\n          hashtags: productListByProductId?.productHashTagsByProductId?.nodes,\r\n          showPriceBreakup:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.showPriceBreakup,\r\n          // productSize: productSize_arr ?? [{}],\r\n          // productDiamondClarity:diamondClaritySku,\r\n        });\r\n\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(\r\n            JSON.stringify(productListByProductId.productName)\r\n          ),\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   client\r\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\r\n  //     .then((res) => {\r\n  //\r\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\r\n\r\n  //       //\r\n  //       // let FilteredProductSize = null;\r\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\r\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\r\n  //       //     return val.productType === productCtx?.product_type?.label;\r\n  //       //   });\r\n  //       // }\r\n  //\r\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\r\n  //       console.log(ProductSizeFullData);\r\n  //     })\r\n  //     .catch(console.error);\r\n  // }, [productCtx?.product_type?.label]);\r\n  return state.create_variant ? (\r\n    <CreateVariant\r\n      productMetalColor={productCtx.productMetalColor}\r\n      productMetalPurity={productCtx.productMetalPurity}\r\n      changeVariant={changeVariant}\r\n      productId={prod_id}\r\n    />\r\n  ) : (\r\n    <Grid container>\r\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <Grid item container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={3}\r\n          lg={3}\r\n          spacing={2}\r\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\r\n        >\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.productname}\r\n            id=\"productname\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.productname\r\n            }\r\n            name=\"productname\"\r\n            label=\"Product Name\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"productname\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          {/* <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_categoy}\r\n            id=\"product_category\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_categoy\r\n            }\r\n            name=\"product_category\"\r\n            label=\"Product Category\"\r\n          /> */}\r\n          <Autocomplete\r\n            id=\"product_category\"\r\n            className={classes.helperinput}\r\n            value={productCtx.product_categoy}\r\n            // getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"product_categoy\")}\r\n            options={productCtx.masterData.category.map((i) => i.name)}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Category\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.description}\r\n            id=\"description\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.description\r\n            }\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"description\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_type}\r\n            getOptionLabel={(option) => option.label}\r\n            onChange={handleoptionChange(\"product_type\")}\r\n            options={productCtx.masterData.product_type}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            disabled\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.vendorcode}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            onChange={handleoptionChange(\"vendorcode\")}\r\n            options={productCtx?.masterData?.vendorcode}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Ventor Name\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          {productCtx?.product_type?.label === \"Earrings\" ||\r\n          productCtx?.product_type?.label === \"earrings\" ? (\r\n            <Autocomplete\r\n              id=\"free-solo-2-demos\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.earringbacking}\r\n              getOptionLabel={(option) => option.label}\r\n              onChange={handleoptionChange(\"earringbacking\")}\r\n              options={productCtx.masterData.earringbacking}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.label}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Earring Backing\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\r\n            <Autocomplete\r\n              mutiple\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.productSize}\r\n              defaultValue={productCtx.productSize}\r\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\r\n              onChange={handleoptionChange(\"productSize\")}\r\n              options={productCtx?.masterProductSize}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Size\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.height}\r\n            id=\"height\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.height\r\n            }\r\n            name=\"height\"\r\n            label=\"Height \"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"height\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.length}\r\n            id=\"length\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.length\r\n            }\r\n            name=\"length\"\r\n            label=\"Width\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"length\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.minOrderQty}\r\n            id=\"minOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.minOrderQty\r\n            }\r\n            name=\"minOrderQty\"\r\n            label=\"Minimum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"minOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.maxOrderQty}\r\n            id=\"maxOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.maxOrderQty\r\n            }\r\n            name=\"maxOrderQty\"\r\n            label=\"Maximum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"maxOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productmaterials}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.materialName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Materials\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  readOnly: true,\r\n                  type: \"search\",\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            getOptionLabel={(option) => option.productColor}\r\n            getOptionSelected={(option, value) =>\r\n              option.productColor === value.productColor\r\n            }\r\n            onChange={handleoptionChange(\"productMetalColor\")}\r\n            options={productCtx.masterData.metalcolour}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalColor}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.productColor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalPurity}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.purity}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Purity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_gender}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) => option.label === value.label}\r\n            onChange={handleoptionChange(\"product_gender\")}\r\n            options={productCtx.masterData.gender}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gender\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.themeName\r\n            }\r\n            defaultValue={productCtx.themes}\r\n            options={productCtx.masterData.themes}\r\n            value={productCtx.themes}\r\n            onChange={handleoptionChange(\"themes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.themeName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ display: \"none\" }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Themes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.styleName\r\n            }\r\n            defaultValue={productCtx.prod_styles}\r\n            options={productCtx.masterData.styles}\r\n            onChange={handleoptionChange(\"prod_styles\")}\r\n            value={productCtx.prod_styles}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.styleName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Styles\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.occassions}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.occassionName\r\n            }\r\n            defaultValue={productCtx.occassions}\r\n            options={productCtx.masterData.occasions}\r\n            onChange={handleoptionChange(\"occassions\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.occassionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Occasions\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.collections}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.collectionName\r\n            }\r\n            defaultValue={productCtx.collections}\r\n            options={productCtx.masterData.collections}\r\n            onChange={handleoptionChange(\"collections\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.collectionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Collections\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"hashtags\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.hashtags}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            options={productCtx.masterData.hashtags}\r\n            onChange={handleoptionChange(\"hashtags\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Hash Tags\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecount}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecount}\r\n            options={productCtx.masterData.stones}\r\n            onChange={handleoptionChange(\"stonecount\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecount}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"No of Stones\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecolour}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecolour}\r\n            options={productCtx.masterData.gemstonecolor}\r\n            onChange={handleoptionChange(\"stonecolour\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecolor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Stone Colour\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            label={\r\n              productCtx.isactive\r\n                ? \"Disable this product\"\r\n                : \"Enable this product\"\r\n            }\r\n            control={\r\n              <Switch\r\n                checked={productCtx.isactive}\r\n                onChange={handledisableproduct(\"isactive\")}\r\n                value=\"checkedA\"\r\n              />\r\n            }\r\n          />\r\n          <Grid\r\n            item\r\n            container\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => saveProductEditItem()}\r\n              >\r\n                Update\r\n              </Button>\r\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={9}\r\n          lg={9}\r\n          spacing={2}\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid container item md={6}></Grid>\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Diamond Table\r\n          </Grid>\r\n          <DiamondDetails diamond={productCtx.diamondlist} />\r\n          {productCtx.gemstonelist.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\r\n              >\r\n                Gemstone Table\r\n              </Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <Grid style={{}}></Grid>\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              columnnames={columnnames.varients}\r\n              getColumnnames={getColumnnames}\r\n              displytype={1}\r\n            />{\" \"}\r\n          </Grid>\r\n\r\n          <Variants\r\n            variants={productCtx.variants}\r\n            columns={varientcolumns}\r\n            displycolumns={displycolumns}\r\n          />\r\n\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              title={\"Pricing Table\"}\r\n              columnnames={pricingcolumns}\r\n              displycolumns={displypricingcolumns}\r\n              getColumnnames={getColumnnames}\r\n              displytype={2}\r\n            />\r\n            <Button\r\n              onClick={(e) => Skupricesync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Price Run For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => Skumarkupsync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={true}\r\n            >\r\n              Run Markup For This Product\r\n            </Button>\r\n          </Grid>\r\n          {isshowpricesummary ? (\r\n            <Pricedetails\r\n              onClose={dismisspricesummary}\r\n              values={pricesummaryvalues}\r\n            />\r\n          ) : null}\r\n          <Skupricing\r\n            variants={productCtx.variants}\r\n            onShow={showpricesummary}\r\n            columns={displypricingcolumns}\r\n            displycolumns={displycolumnnames}\r\n          />\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Product Images\r\n          </Grid>\r\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\r\n          <Productimages\r\n            //color={colors.productColor}\r\n            //isdefault={colors.isdefault}\r\n            prodimages={productCtx.productImages}\r\n          />\r\n          {/* ))} */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter((props) => {\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n\r\n  const _content = (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n  return _content;\r\n});\r\nexport default withRouter(ProductAttributes);\r\n","const route = {\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  profile: \"/profile\",\r\n  productupload: \"/productupload\",\r\n  configuration: \"/Configuration\",\r\n  vendor: \"/vendorlist\",\r\n  productlist: \"/productlist\",\r\n  orderlist: \"/orderlist\",\r\n  orderdetails: \"/orderdetails/:id\",\r\n  appointmentdetails: \"/appointmentdetails/:id\",\r\n  userorders: \"/orderlist/:userid\",\r\n  userwishlist: \"/userwishlist/:userid\",\r\n  address: \"/address/:userid\",\r\n  cmshome: \"/cmshome\",\r\n\r\n  materiallist: \"/material\",\r\n  mastermaterial: \"/materialmaster\",\r\n  mastercolors: \"/mastercolors\",\r\n  masterpurities: \"/masterpurities\",\r\n  salediscountlist: \"/salediscountlist\",\r\n  voucherdiscountlist: \"/voucherdiscountlist\",\r\n\r\n  producttypes: \"/producttypes\",\r\n  voucherdiscount: \"/voucherdiscount\",\r\n  salediscount: \"/salediscount\",\r\n  priceupdate: \"/priceupdate\",\r\n  priceupload: \"/price_upload\",\r\n  productAttributes: \"/product_attributes\",\r\n  diamondDetails: \"/diamond_details\",\r\n  gemstoneDetails: \"/gemstone-details\",\r\n  variants: \"/variants\",\r\n  images: \"/images\",\r\n  createVariant: \"/create_variant\",\r\n  materiallistpage: \"/newmaterial\",\r\n  editCategory: \"/editcategory\",\r\n  vendorPrice: \"/vendorpricesetup\",\r\n  markupPrice: \"/markuppricesetup\",\r\n  taxsetup: \"/taxsetup\",\r\n  editdiscount: \"/salediscount/:id\",\r\n  editvoucher: \"/voucherdiscount/:id\",\r\n  masterstyles: \"/masterstyles\",\r\n  masterthemes: \"/masterthemes\",\r\n  masteroccassions: \"/masteroccassions\",\r\n  masterpaymentstatus: \"/paymentstatus\",\r\n  mastercollections: \"/collections\",\r\n  masterdesigns: \"/designs\",\r\n  masterorderstatus: \"/orderstatus\",\r\n  shippingzones: \"/zones\",\r\n  shipmentsettings: \"/shipmensettings\",\r\n  shippingattributes: \"/shippingattributes\",\r\n  masterdiamonds: \"/diamonds\",\r\n  diamondsettings: \"/diamondsettings\",\r\n  diamondshapes: \"/diamondshapes\",\r\n  earringbacking: \"/earringbacking\",\r\n  addshippingattributes: \"/addshippingattributes\",\r\n  addtaxattributes: \"/addtaxattributes\",\r\n  userconfiguration: \"/userconfiguration\",\r\n  masterroles: \"/masterroles\",\r\n  manageadminusers: \"/manageadminusers\",\r\n  goldpriceupdate: \"/goldpriceupdate\",\r\n\r\n  manageusers: \"/manageusers\",\r\n\r\n  masterpages: \"/masterpages\",\r\n\r\n  gemsettings: \"/gemstonesettings\",\r\n  gemshapes: \"/gemstoneshapes\",\r\n  gemtypes: \"/gemstonetypes\",\r\n  gender: \"/genders\",\r\n  seo: \"/seopriority\",\r\n  taxsettings: \"/taxsettings\",\r\n  masterattributes: \"/masterattributes\",\r\n  mastercountries: \"/countries\",\r\n  dailyMetalRate: \"/daily_metal_rate\",\r\n\r\n  masterstones: \"/masterstones\",\r\n  masterstonecolors: \"/masterstonecolors\",\r\n  masterstoneshapes: \"/masterstoneshapes\",\r\n  weights: \"/weights\",\r\n  customerdetails: \"/customerdetails/:id\",\r\n\r\n  category: \"/categories\",\r\n\r\n  warehouse: \"/warehouse\",\r\n  holiday_manager: \"/holiday-manager\",\r\n  inventory: \"/inventory\",\r\n\r\n  silverbanner: \"/silverbanner\",\r\n  silverlistingbanner: \"/listingPage\",\r\n  FeaturedProduct: \"/featuredproduct\",\r\n\r\n  Comments: \"/comments\",\r\n  Newarrival: \"/newarrival\",\r\n  Manageappoinment: \"/manageappoinment\",\r\n  Manageshedule: \"/manageshedule\",\r\n  abandoned_cart: \"/cart-details\",\r\n  pricelogs: \"/price-logs\",\r\n  imageUpload:\"/imageUpload\",\r\n\r\n  cmsComponents:\"/cmsComponent\"\r\n};\r\n\r\nexport default route;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n     \r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: \"1 0 auto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        outline: 0,\r\n        zIndex: 1200,\r\n        position: \"fixed\",\r\n        overflowY: \"auto\",\r\n        flexDirection: \"column\",\r\n       \r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: 'fit-content'\r\n    },\r\n    avatar: {\r\n      width: 60,\r\n      height: 60\r\n    },\r\n    name: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));","import Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink, withRouter } from \"react-router-dom\";\r\nimport { GlobalContext, ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport data from \"../menupages.json\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload, setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem(\"accesspages\");\r\n\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  };\r\n  const handleClick = (type) => (e) => {\r\n    if (\r\n      type === \"Pricing\" ||\r\n      type == \"Inventory & Shipping Setup\" ||\r\n      type == \"Appoinment Management\" ||\r\n      type === \"Orders\"\r\n    ) {\r\n      setGlobalCtx({\r\n        ...globalCtx,\r\n        optionname: type,\r\n        selectedIndex: 5,\r\n        isExpand: !globalCtx.isExpand,\r\n      });\r\n    } else {\r\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\r\n    }\r\n  };\r\n  async function getmasterpages() {\r\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach((element) => {\r\n      pages.push(element.pageurl);\r\n      if (element.is_write) {\r\n        pagepermissions.push(element.pageurl);\r\n      }\r\n    });\r\n    // setPages(pageaccess)\r\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n    //setIsreload(true)\r\n\r\n    localStorage.setItem(\"accesspages\", pages);\r\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n    window.location.reload();\r\n  }\r\n  React.useEffect(() => {\r\n    //alert(globalCtx.accesspages)\r\n    if (!accesspages) {\r\n      // getmasterpages()\r\n    } else {\r\n      //  setIsreload(true)\r\n    }\r\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n\r\n    console.log(\"pagess\", globalCtx);\r\n  }, []);\r\n  function handleListItemClick(event, index) {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {data.menus.map((menuobj, index) => (\r\n            <React.Fragment key={index}>\r\n              {menuobj.submenu ? (\r\n                <>\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <>\r\n                      <ListItem button onClick={handleClick(menuobj.name)}>\r\n                        <ListItemIcon>\r\n                          {/* <InboxIcon /> */}\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Console\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n\r\n                        {globalCtx.isExpand &&\r\n                        globalCtx.optionname === menuobj.name ? (\r\n                          <ExpandLess />\r\n                        ) : (\r\n                          <ExpandMore />\r\n                        )}\r\n                      </ListItem>\r\n                      <Collapse\r\n                        in={\r\n                          globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <List component=\"div\" disablePadding>\r\n                          {menuobj.submenu.map((submenuobj, subindex) => (\r\n                            <React.Fragment key={subindex}>\r\n                              {accesspages &&\r\n                              accesspages.indexOf(submenuobj.url) > -1 ? (\r\n                                <Link\r\n                                  underline=\"none\"\r\n                                  component={RouterLink}\r\n                                  to={submenuobj.url}\r\n                                >\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={\r\n                                      globalCtx.selectedIndex === subindex\r\n                                    }\r\n                                    onClick={(event) =>\r\n                                      handleListItemClick(event, subindex)\r\n                                    }\r\n                                  >\r\n                                    <ListItemIcon>\r\n                                      <img\r\n                                        style={{ width: \"18px\" }}\r\n                                        src={submenuobj.icons}\r\n                                        alt=\"NAC Console\"\r\n                                      ></img>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={submenuobj.name} />\r\n                                  </ListItem>\r\n                                </Link>\r\n                              ) : null}\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </List>\r\n                      </Collapse>{\" \"}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <Link\r\n                      underline=\"none\"\r\n                      component={RouterLink}\r\n                      to={menuobj.url}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        key={\"Product List\"}\r\n                        selected={globalCtx.optionname === menuobj.name}\r\n                        onClick={handleClick(menuobj.name)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Icon\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ) : null}{\" \"}\r\n                </>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      color: 'red',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        marginLeft: \"0px\",\r\n        width:\"100%\"\r\n      },\r\n    },\r\n \r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      width:\"100%\",\r\n      overflow:\"auto\",\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));","import { CssBaseline } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"./style.css\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\");\r\n    window.location = \"/\";\r\n  }\r\n\r\n  function handleDrawer() {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: globalCtx.sideBarOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\r\n            NAC jewellery\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = (props) => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Component {...rest} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const withAppBar = (component, props) => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrimaryAppBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport route from \"./route\";\r\nimport { withAppBar } from \"../components/PrimaryAppBar\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { component, ...rest } = props;\r\n\r\n  const checkAuth = () => {\r\n    let accesstoken = localStorage.getItem(\"accesstoken\");\r\n    if (accesstoken) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const Component = (props) => withAppBar(component, props);\r\n  return checkAuth() ? (\r\n    rest.path === \"/\" || rest.path === \"/login\" ? (\r\n      <Redirect to={route.productlist} />\r\n    ) : (\r\n      <Component {...rest} />\r\n    )\r\n  ) : (\r\n    <Redirect to={route.login} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import ApolloClient from \"apollo-boost\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\r\nimport Newarrival from \"../components/Newarrival/NewArrival\";\r\nimport Review from \"../components/Review/Review\";\r\nimport { GlobalContext } from \"../context\";\r\nimport { NetworkProvider } from \"../context/NetworkContext\";\r\nimport { ProductContext } from \"../context/ProductuploadContext\";\r\nimport {\r\n  Addshippingattributes,\r\n  Addtaxattributes,\r\n  CategoryList,\r\n  Configuration,\r\n  Customerdetails,\r\n  Dashboard,\r\n  DiscountList,\r\n  Earringbacking,\r\n  Goldpriceupdate,\r\n  HolidayManager,\r\n  Inventory,\r\n  Login,\r\n  Manageadminusers,\r\n  Manageappoinment,\r\n  ManageShedule,\r\n  Manageusers,\r\n  Markupprice,\r\n  Masterattribute,\r\n  Mastercategories,\r\n  Mastercollections,\r\n  Masterdesigns,\r\n  Masterdiamonds,\r\n  Masterdiamondsettings,\r\n  Masterdiamondshapes,\r\n  Mastergemsettings,\r\n  Mastergemshapes,\r\n  Mastergemtypes,\r\n  Mastergenders,\r\n  Mastermetalcolors,\r\n  Masteroccassions,\r\n  Masterorderstatus,\r\n  Masterpaymentstatus,\r\n  Masterproducttypes,\r\n  Masterpurities,\r\n  Masterroles,\r\n  Masterscreens,\r\n  Masterstonecolors,\r\n  Masterstones,\r\n  Masterstoneshapes,\r\n  Masterstyles,\r\n  Masterthemes,\r\n  Masterweights,\r\n  Materialmaster,\r\n  OrderList,\r\n  OrderManagementDetails,\r\n  Priceupdate,\r\n  Productlist,\r\n  Productupload,\r\n  Salediscount,\r\n  Seopriority,\r\n  Shipmentsettings,\r\n  Shippingattributes,\r\n  Shippingzones,\r\n  Taxsettings,\r\n  Taxsetup,\r\n  Useraddresses,\r\n  Userconfiguration,\r\n  Userwishlist,\r\n  Vendorlist,\r\n  Vendorprice,\r\n  Voucherdiscount,\r\n  VoucherdiscountListing,\r\n  Warehouse,\r\n  AbandonedCart,\r\n  PriceUpload,\r\n  MasterCountry,\r\n  DailyMetalRate,\r\n  PriceLogs,\r\n  ImageUpload,\r\n  AppointmentManagementDetails,\r\n  CmsComponent\r\n} from \"../screens\";\r\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\r\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\r\nimport cmshome from \"../screens/cms/cmshome\";\r\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\r\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\r\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\r\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport route from \"./route\";\r\n\r\nconst MainApp = () => {\r\n  const { globalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx } = React.useContext(ProductContext);\r\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {/* <ProductProvider > */}\r\n      <NetworkProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Login} />\r\n          <Route path={route.login} component={Login} />\r\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n          <PrivateRoute path={route.productupload} component={Productupload} />\r\n          <PrivateRoute path={route.configuration} component={Configuration} />\r\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n          <PrivateRoute path={route.productlist} component={Productlist} />\r\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n          <PrivateRoute path={route.cmshome} component={cmshome} />\r\n          <PrivateRoute\r\n            path={route.producttypes}\r\n            component={Masterproducttypes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.Manageappoinment}\r\n            component={Manageappoinment}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscount}\r\n            component={Voucherdiscount}\r\n          />\r\n          <PrivateRoute path={route.pricelogs} component={PriceLogs} />\r\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n          <PrivateRoute path={route.orderlist} component={OrderList} />\r\n          <PrivateRoute path={route.userorders} component={OrderList} />\r\n          <PrivateRoute path={route.address} component={Useraddresses} />\r\n          <PrivateRoute path={route.imageUpload} component={ImageUpload} />\r\n\r\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n          <PrivateRoute path={route.category} component={Mastercategories} />\r\n          <PrivateRoute\r\n            path={route.masterattributes}\r\n            component={Masterattribute}\r\n          />\r\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n          <PrivateRoute\r\n            path={route.masterstonecolors}\r\n            component={Masterstonecolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterstoneshapes}\r\n            component={Masterstoneshapes}\r\n          />\r\n          <PrivateRoute path={route.weights} component={Masterweights} />\r\n          <PrivateRoute\r\n            path={route.masteroccassions}\r\n            component={Masteroccassions}\r\n          />\r\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n          <PrivateRoute\r\n            path={route.manageadminusers}\r\n            component={Manageadminusers}\r\n          />\r\n          <PrivateRoute\r\n            path={route.goldpriceupdate}\r\n            component={Goldpriceupdate}\r\n          />\r\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n          <PrivateRoute\r\n            path={route.customerdetails}\r\n            component={Customerdetails}\r\n          />\r\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n          <PrivateRoute\r\n            path={route.orderdetails}\r\n            component={OrderManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.appointmentdetails}\r\n            component={AppointmentManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.userconfiguration}\r\n            component={Userconfiguration}\r\n          />\r\n\r\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n          <PrivateRoute\r\n            path={route.mastermaterial}\r\n            component={Materialmaster}\r\n          />\r\n          <PrivateRoute\r\n            path={route.mastercolors}\r\n            component={Mastermetalcolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterpurities}\r\n            component={Masterpurities}\r\n          />\r\n          <PrivateRoute\r\n            path={route.salediscountlist}\r\n            component={DiscountList}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscountlist}\r\n            component={VoucherdiscountListing}\r\n          />\r\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n          <PrivateRoute\r\n            path={route.mastercollections}\r\n            component={Mastercollections}\r\n          />\r\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n          <PrivateRoute\r\n            path={route.masterdiamonds}\r\n            component={Masterdiamonds}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondsettings}\r\n            component={Masterdiamondsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondshapes}\r\n            component={Masterdiamondshapes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.earringbacking}\r\n            component={Earringbacking}\r\n          />\r\n          <PrivateRoute\r\n            path={route.gemsettings}\r\n            component={Mastergemsettings}\r\n          />\r\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n          <PrivateRoute\r\n            path={route.masterpaymentstatus}\r\n            component={Masterpaymentstatus}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterorderstatus}\r\n            component={Masterorderstatus}\r\n          />\r\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n          <PrivateRoute\r\n            path={route.shippingattributes}\r\n            component={Shippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addshippingattributes}\r\n            component={Addshippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addtaxattributes}\r\n            component={Addtaxattributes}\r\n          />\r\n\r\n          <PrivateRoute path={route.gender} component={Mastergenders} />\r\n          <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={route.editdiscount}\r\n            component={Salediscount}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.productAttributes}/:id`}\r\n            component={ProductAttributes}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.createVariant}`}\r\n            component={CreateVariant}\r\n          />\r\n          <PrivateRoute\r\n            path={route.shipmentsettings}\r\n            component={Shipmentsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.holiday_manager}\r\n            component={HolidayManager}\r\n          />\r\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\r\n          <PrivateRoute path={route.inventory} component={Inventory} />\r\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\r\n          <PrivateRoute path={route.Manageshedule} component={ManageShedule} />\r\n          <PrivateRoute\r\n            path={route.silverlistingbanner}\r\n            component={SilverListingbanner}\r\n          />\r\n          <PrivateRoute\r\n            path={route.FeaturedProduct}\r\n            component={FeaturedProduct}\r\n          />\r\n          <PrivateRoute path={route.Comments} component={Review} />\r\n          <PrivateRoute path={route.Newarrival} component={Newarrival} />\r\n          <PrivateRoute path={route.abandoned_cart} component={AbandonedCart} />\r\n          <PrivateRoute path={route.priceupload} component={PriceUpload} />\r\n          <PrivateRoute\r\n            path={route.mastercountries}\r\n            component={MasterCountry}\r\n          />\r\n          <PrivateRoute\r\n            path={route.dailyMetalRate}\r\n            component={DailyMetalRate}\r\n          />\r\n          <PrivateRoute\r\n            path={route.cmsComponents}\r\n            component={CmsComponent}\r\n          />\r\n        </Switch>\r\n      </NetworkProvider>\r\n      {/* </ProductProvider> */}\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport { Alerts as Alert } from \"./components\";\r\nimport { AlertProps, AlertContext } from \"./context\";\r\n\r\nclass AppAlert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    };\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    });\r\n  };\r\n\r\n  set = (props) => {\r\n    this.setState({ ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AlertContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          onclose: this.close,\r\n          setSnack: this.set,\r\n        }}\r\n      >\r\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\r\n        {this.props.children}\r\n      </AlertContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAlert;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainApp from \"./routes\";\r\nimport { GlobalProvider } from \"./context\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport AppAlert from \"./App.Alert\";\r\n\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// const theme = createMuiTheme({\r\n//   typography: {\r\n//     fontFamily: [\r\n\r\n//       'Roboto'\r\n\r\n//     ].join(','),\r\n//   },\r\n// });\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n          <Router >\r\n            <AppAlert>\r\n              <MainApp />\r\n            </AppAlert>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}