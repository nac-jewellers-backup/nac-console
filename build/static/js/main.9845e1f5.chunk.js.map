{"version":3,"sources":["routes/route.js","components/Input.js","components/Page/Page.js","utils/gradients.js","graphql/query.js","services/queries.js","services/mapper.js","config.js","context/NetworkContext.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Dashboard/Dashboard.js","components/Loader/Fullloader.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","screens/Configuration/Configuration.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","components/Products/Product.js","screens/Productlist/Productlist.js","screens/CategoryList/components/Header/Header.js","components/Categoryrow/Categoryrow.js","components/Label/Label.js","components/Breadcrumbs/Breadcrumbs.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","utils/commonmethod.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/Priceupdate.js","screens/OrderList/components/Header/columns.js","screens/OrderList/components/Header/SortHeader.js","screens/OrderList/components/Header/Header.js","components/EnhancedTableHead/EnhancedTableHead.js","screens/OrderList/components/Results/Results.js","screens/OrderList/Orderlistcontent.js","screens/OrderList/OrderList.js","components/ConformationAlert/ConformationAlert.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","components/Mastercontent/Mastercontent.js","screens/Taxsetup/Taxsetup.js","screens/Materialmaster/Materialmaster.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/Masterpurities.js","screens/DiscountList/components/Header/Header.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Earringbacking/Earringbacking.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/Mastergenders.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/Seopriority.js","screens/Taxsettings/Taxsettings.js","screens/Mastercategories/Mastercategories.js","screens/Masterattribute/Masterattribute.js","screens/Masterstones/Masterstones.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterweights/Masterweights.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/Masterthemes.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Shippingzones/Shippingzones.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Userconfiguration/Userconfiguration.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Manageadminusers/Manageadminusers.js","screens/Goldpriceupdate/Goldpriceupdate.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/General/General.js","screens/Customerdetails/Customerdetails.js","components/PrimaryAppBar/styles.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Variants.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/ProductAttributes.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/CategoryList/components/editpage/editcategory.js","routes/index.js","App.js","serviceWorker.js","index.js"],"names":["route","login","dashboard","profile","productupload","configuration","vendor","productlist","orderlist","materiallist","mastermaterial","mastercolors","masterpurities","salediscountlist","voucherdiscountlist","producttypes","voucherdiscount","salediscount","priceupdate","productAttributes","diamondDetails","gemstoneDetails","variants","images","createVariant","materiallistpage","editCategory","vendorPrice","markupPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","diamondsettings","diamondshapes","earringbacking","addshippingattributes","userconfiguration","masterroles","manageadminusers","goldpriceupdate","manageusers","masterpages","gemsettings","gemshapes","gemtypes","gender","seo","taxsettings","masterattributes","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","category","Input","props","_props$isNumber","isNumber","pattern","maxLength","minLength","helperText","rest","Object","objectWithoutProperties","react_default","a","createElement","Grid","item","xs","TextField","assign","inputProps","style","width","onKeyPress","e","which","preventDefault","margin","variant","input-label","textOverflow","whiteSpace","overflow","color","input","&::placeholder","useStyles","process","REACT_APP_GA_MEASUREMENT_ID","makeStyles","media","height","Page","title","children","buildGradient","start","end","concat","gradients","grey","colors","blue","indigo","green","orange","red","PRODUCTCATEGORY","gql","_templateObject","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","TaxSettingList","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","queries_templateObject","ORDERS","queries_templateObject2","VOUCHERMASTER","queries_templateObject3","queries_templateObject4","SHIPPINGMASTER","productCategory","query","mapper","response","allMasterProductCategories","nodes","map","_","objectSpread2","value","id","label","name","product_type","allMasterProductTypes","shortCode","material","allMasterMaterials","allMasterGenders","vendorcode","allMasterVendors","display","allMasterDiamondsSettings","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","metals","apidata","orderList","orders","allOrders","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","API_URL","GRAPHQL_DEV_CLIENT","URL","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","size","sizes","selected_sizes","metal","product_code","isactive","gemstonelist","diamondlist","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","useEffect","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","log","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","setOrderCtx","OrderContext","OrderProvider","setorderCtx","order","validate","require","schema","email","presence","allowEmpty","message","password","theme","root","card","maxWidth","position","& > *","flexGrow","flexBasis","content","padding","spacing","defineProperty","borderTopRightRadius","borderBottomRightRadius","palette","white","flexDirection","justifyContent","breakpoints","down","icon","backgroundImage","borderRadius","shape","top","left","fontSize","loginForm","divider","person","avatar","marginRight","fields","flexWrap","submitButton","marginTop","Alert","elevation","withRouter","className","classes","useContext","_React$useContext2","_useState","isValid","values","touched","errors","_useState2","formState","setFormState","open","setOpen","_React$useState3","_React$useState4","showmessage","setShowmessage","_React$useState5","_React$useState6","handleClose","event","reason","handleChange","persist","target","type","checked","handleSubmit","signinobj","pageaccess","pages","pagepermissions","statuscode","setItem","accessToken","forEach","element","push","pageurl","is_write","history","alert","hasError","field","Card","CardContent","Typography","gutterBottom","clsx","autoComplete","onSubmit","fullWidth","onChange","Button","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","LoginForm_Alert","severity","Login","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","components_LoginForm_LoginForm","Component","Dashboard_","Container","component","Input_Input","Dashboard","& > * + *","loader","paddingLeft","FullLoader","Dialog","isopen","aria-labelledby","aria-describedby","DialogTitle","DialogContent","CircularProgress","fixedTag","& .MuiOutlinedInput-root","dropdownlayout","& .menu","helperinput","& .MuiFormHelperText-root","marginBottom","formGroup","fieldGroup","alignItems","fieldHint","tags","marginLeft","dateField","& + &","AddressForm","_React$useContext","handleTextChange","handleoptionChange","_objectSpread4","vendorDelivaryDays","Fragment","container","sm","CardHeader","Divider","cardcontent","test","Autocomplete","defaultValue","options","option","renderTags","getTagProps","index","Chip","renderInput","InputProps","getOptionLabel","multiple","material_names","_objectSpread9","indexOf","handleMaterialChange","_objectSpread8","minvalue","maxvalue","default_size","i","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormControl","FormLabel","RadioGroup","aria-label","isreorderable","row","FormControlLabel","control","Radio","labelPlacement","default_metal_colour","default_metal_purity","freeSolo","PlaceholderText","styled","Text","placeholderUp","transition","pointerEvents","zIndex","placeholderzindex","paddingRight","backgroundColor","isDisabled","SelectContainer","View","_ref2","selectzindex","SelectView","placeholder","react_select_browser_esm","isClearable","PaymentForm","handleInputChange","disabled","includes","table","button","paper","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","count","weight","handleClick","metalsarr","stonedetails","isvalid","justify","onClick","Table","TableHead","TableRow","TableCell","align","TableBody","scope","Edit_default","Delete_default","splice","deletematerial","valueContainer","flex","chip","chipFocused","emphasize","noOptionsMessage","singleValue","bottom","right","borderColor","borderBottom","formControl","minWidth","selectEmpty","createData","calories","fat","carbs","protein","selectedOption","default_metal_size","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","objectFit","setMetalcolour","_uploadimagetoserver","bodaydata","imageposition","imagecolor","uploadtype","prodimages","prodid","imagecolourobj","imagecount","imagename","responsedata","returnData","signedRequest","filepathname","imageobj","_imageobj","charAt","image","fileExtension","filename","product_id","filepath","replace","Access-Control-Allow-Origin","image_url","axios","put","file","unshift","direction","md","react_filepond","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","labelIdle","allowMultiple","onupdatefiles","fileItem","onaddfile","_x4","uploadimagetoserver","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","window","Plotly","createPlotlyRenderers","_paper","appBar","layout","up","stepper","background","buttons","nested","Productupload","activeStep","setActiveStep","failure","success","setSuccess","_React$useState7","_React$useState8","setLoading","handleNext","error_content","formdata","keyvalue","sleep","location","_sleep","_callee2","millis","_context2","setTimeout","Paper","Stepper","Step","StepLabel","step","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","progress","_useQuery","useQuery","ProductuploadContext_ProductProvider","Component_Productupload","contantview","Configuration","master_options_url","text","lg","Link","underline","RouterLink","to","fullwidth","textAlign","useStyless","border","&:hover","typography","FormPropsTextFields","_React$createElement","anchorEl","searchtext","setSearchtext","setCategory","producttype","setProducttype","handleinputChange","Boolean","borderTop","mastercategory","applyfilter","readOnly","masterproducttype","columns","flexShrink","secondary","EnhancedTableHead","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","headCell","numeric","disablePadding","sortDirection","TableSortLabel","active","property","visuallyHidden","highlight","main","lighten","light","primary","dark","clip","useStyles2","placeItems","tableWrapper","overflowX","withApollo","useHistory","page","setPage","rowsPerPage","setRowsPerPage","pageCount","setPageCount","offsetValue","setOffsetValue","_React$useState9","_React$useState10","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","reload","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","client","fetchPolicy","then","catch","getproductlist","_x5","_x6","_x7","_x8","_getproductlist","_callee3","productcategory","pagesize","offsetvalue","sort","orderby","bodydata","_context3","offset","products","rows","text-align","addnewvendor","stickyHeader","isAsc","react_components_esm","onCompleted","totalCount","variables","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","address","city","gstNo","createdAt","vendordata","pincode","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","onChangePage","newPage","onChangeRowsPerPage","parseInt","Newvendor","Vendorlist","components_Vendor_Vendor","descendingComparator","b","productlists","allproductlists","mastercategories","masterproducttypes","categoryname","typename","searchproduct","filter","l","productId","toLowerCase","match","productName","Product_EnhancedTableHead","array","comparator","stabilizedThis","el","stableSort","getComparator","product_name","product_category","Switch","Productlist","Product","Header","_useState3","_useState4","searchcontent","setSearchcontent","onSearch","onAdd","buttonPadding","paddingTop","expand","transform","transitions","create","duration","shortest","expandOpen","contrastText","pendingchip","lineHeight","rounded","Label","_clsx","rootClassName","finalStyle","defaultProps","StyledBreadcrumb","withStyles","fontWeight","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","CustomizedBreadcrumbs","Breadcrumbs","href","ArrowBackIos_default","filterButton","inner","actions","Results","_useState5","_useState6","CardActions","results","Categorycontent","setOrders","uuid","created_at","customer","payment","ref","total","currency","components_Header_Header","components_Results_Results","CategoryList","MaterialContext_MaterialProvider","slice","IconButton","Create_default","makeid","prefix","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","Math","floor","random","toUpperCase","cursor","metaloption","selectedOptiondefault","common","optionRadio","optionDetails","optionmaterialDetails","selectedtext","AboutVoucher","vouchercode","setVouchercode","vouchercount","setVouchercount","_useState7","_useState8","voucherprefix","setVoucherprefix","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","selectedDate","setSelectedDate","_useState21","_useState22","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","ButtonGroup","categories","discounttype","minimumqty","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","inputVariant","startdate","minDate","val","enddate","strictCompareDates","VoucherComponent","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","elements_arr","onAdded","aboutvoucher","Voucherdiscountcontent","attributes","setAttributes","setProducts","skus","setSkus","isloading","setIsloading","discountid","setDiscountid","isloaded","setIsloaded","snackMessage","attributesadded","attributedata","_filterapllied","filterapllied","_creatediscount","_getdiscountvalue","discount_id","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","product_attributes","catobj","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","description","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","pathname","split","getdiscountvalue","Fullloader","VoucherdiscountContent_Alert","useUtils_cfb96ac9","utils","DateFnsUtils","components_AboutVoucher_AboutVoucher","components_VoucherComponent_VoucherComponent","creatediscount","Voucherdiscount","VoucherContext_VoucherProvider","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","productids","formData","setFormData","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","vendorid","categorylist","producttypelist","PriceupdateContent","masters","setMasters","setCategories","setVendors","startrun","setStartrun","_updateprices","pricingcomponent","req_product_id","_rerun","history_id","update_products","filterdata","_downloadlog","_callee4","_context4","Priceupdate_components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","checkboxrow","listOfValue","setColumns","paddingBottom","conatiner","head","Checkbox","isActive","stateChange","resetButton","columnclose","columnnames","getColumnnames","saveaction","SortHeader","setAnchorEl","xl","currentTarget","ArrowDownward_default","Popover","transformOrigin","displytype","Header_SortHeader","containergrid","columnobjs","onupdate","components_EnhancedTableHead_EnhancedTableHead","col","iswrite","orderid","paymentstatusobj","orderstatus","Editvendor","paymentmode","paymentstatus","Producttypecontent","filteredorder","setFilteredorder","setpaymentstatus","setorderstatus","setIswrite","defaultcolumns","displaycolumnnames","setDisplaycolumnnames","defaultcolumnnames","displaycolumns","setDisplaycolumns","_updateorder","ordercontent","_getorders","orders_arr","orderobj","paymentMode","cartId","awbNumber","comments","orderStatus","paymentStatus","paymentDetailsByOrderId","pgres","response_pg","parse","paymentResponse","ipgTransactionId","fail_reason","shoppingCartByCartId","cartcontent","shoppingCartItemsByShoppingCartId","cartitemscontent","transSkuListByProductSku","generatedSku","cartAddressesByCartId","addressobj","addressline1","join","userProfileByUserprofileId","usercontent","firstName","mobile","giftwrapsByCartId","gift","getmaster","_getmaster","opts","res","fatchvalue","allOrderStatusMasters","allPaymentStatusMasters","getorders","OrderList_components_Header_Header","displycolumns","data_filter","username","OrderList_components_Results_Results","showcolumns","OrderList","OrderContext_OrderProvider","ConformationAlert","isshow","dividers","DialogContentText","DialogActions","onSuccess","autoFocus","positivebtn","closeButton","other","disableTypography","Close_default","MuiDialogContent","MuiDialogActions","Addmetalprice","metaldata","setMetaldata","actionclose","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","disableClearable","Addmetalprice_DialogActions","save","cardroot","editdiamond","setEditdiamond","setGoldpricelist","metalmaster","setMetalmaster","puritymaster","setPuritymaster","deleteid","setDeleteid","isconformation","setIsconformation","hidedeleteconformation","handledelete","_handledelete","datacontent","elementId","mutate","mutation","err","_handleAdd","metalcontent","costprice","costPrice","sellingprice","sellingPrice","pricetype","_handleSave","priceid","sellingPriceType","column","allGoldPriceSettings","vendorCode","negativebtn","esm_Input_Input","heading","selectedsellingPriceType","updatedAt","handleSave","diamondData","handleEdit","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","actionSave","diamondmaster","setDiamondmaster","allDiamondPriceSettings","Adddiamondprice_Addmetalprice","diamondColour","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstoneType","gemstone_type","weight_start","weight_end","cost_price","price","selling_price","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","handleDelete","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","allMakingChargeSettings","weightStart","weightEnd","useStyle","Vendorprice","setVendorcode","setVendorlist","components_Product","Diamonds","Gemstones","Makingcharge","Addmarkup","markup","setMarkup","Addmarkup_DialogTitle","Addmarkup_DialogContent","Addmarkup_DialogActions","editmarkup","setEditmarkup","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","sellpricemin","sellpricemax","markuptype","allPricingMarkups","productType","sellingPriceMin","sellingPriceMax","markupType","markupValue","markupid","allGemstonePriceSettings","Markupprice","setCategorylist","setProducttypes","Markuppricesetup_components_Product","black","warning","blueGrey","link","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","textTransform","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","drawer","discountobj","setDiscountobj","discountname","discounttitle","componenets","optionvalue","discountvalue","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","onDelete","Viewsku_DialogActions","Products","selectskus","Salediscountcontent","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","comparr","discunt","components","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","allkeys","ispricerun","skuarray","sku_content","updatediscount","discount_count","parseFloat","product_attributes_text","eror_skus","_callee6","_context6","Salediscountcontent_Alert","Salediscount_components_VoucherComponent_VoucherComponent","componentsstring","attrs","display_arr","alias_arr","valueobj","displaytext","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","Salediscount","masterlist","setMasterlist","onCreate","Array","prototype","insert","button_title","columnname","controllabel","mastervaluekey","defaultkey","onPermissionadd","Taxsetup","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","taxcontent","_search","filteredHomes","x","taxName","allMasterTaxSettings","Mastercontent","Materialmaster","Mastermetalcolors","Masterpurities","_handledelete2","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","Mastercollections","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Earringbacking","Masterproducttypes","Mastergemsettings","Mastergemshapes","Mastergemtypes","Mastergenders","Seopriority","allSeoUrlPriorities","Taxsettings","allTaxsettings","Mastercategories","Masterattribute","_Masterattribute","allAttributeMasters","Masterstones","Masterstonecolors","Masterstoneshapes","allMasterStonesShapes","Masterweights","allMasterWeights","Masterstyles","Masterthemes","Masteroccassions","Masterpaymentstatus","Masterorderstatus","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","zones","allShippingZones","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","country","charges","zonecountry","getmastercountries","Shipmentsettings","_getmastervalues","ranges","shipmentcharges","allShippingCharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","getmastervalues","Shippingattributes","displayAttributes","Attributescontent","AttributeComponent","shiprates","selectedrate","Addshippingattributes","rateid","setRateid","setSelectedrate","selectedattr","setSelectedattr","_updateattributes","reqbody","display_text","ratevalue","attr","selectedcategory","prod_id","AttributesComponent","updateattributes","Userconfiguration","menu","form","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","pagecontent","displayname","isview","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","roles","_showpermissions","rowcontent","_updatepermissions","_callee5","_context5","components_Addpermissions_Addpermissions","Masterscreens","Manageadminusers","setMasterroles","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","Goldpriceupdate","mastervendors","setMastervendors","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","setPricetype","selectedvendors","setSelectedvendors","setMaterials","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","sellingpricejson","handlesellingPriceChange","pricejson","goldpurity","priceratio","goldprice_val","goldsellingprice_val","purityname","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$useState33","_React$useState34","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","tabs","_match$params","tab","find","t","CustomerManagementDetails_components_Header_Header","Tabs","scrollButtons","Tab","Invoices","setInvoices","invoice","moment","date","buttonIcon","General","selected","first_name","last_name","components_Label_Label","isemailverified","ismobileverified","TabPanel","role","hidden","Box","p","a11yProps","aria-controls","borderRight","Customerdetails","setValue","setCustomer","user_id","userinfo","userprofile","orientation","newValue","components_General_General","Customerdetails_components_Results_Results","addressess","addressbook","shoppingbag","wishlists","grow","menuButton","search","fade","searchIcon","inputRoot","inputInput","sectionDesktop","sectionMobile","easing","sharp","leavingScreen","appBarShift","enteringScreen","hide","drawerOpen","drawerClose","toolbar","mixins","outline","minHeight","_clsx2","accesspages","isreload","setIsreload","optionname","Drawer","ChevronRight_default","ChevronLeft_default","List","menus","menuobj","submenu","ListItem","ListItemIcon","MoveToInbox_default","ListItemText","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","StarBorder_default","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","Menu_Menu","keepMounted","MenuItem","removeItem","renderMobileMenu","aria-haspopup","AccountCircle_default","AppBar","Toolbar","edge","Menu_default","noWrap","MoreVert_default","MainWrapper","PrivateRoute","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","max","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","emptyRows","min","diamond","DiamondDetails_Alert","diamondType","stoneWeight","stoneCount","diamondSettings","diamondShape","diamondListData","DiamondSave","settingData","shapeData","colSpan","ActionsComponent","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","_GemstoneSave","list_data","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","some","check_edit","gemstone_list","GemstoneDetails_Alert","GemstoneSave","gemstoneData","Variants","checkedA","checkedB","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discount","discountDesc","isReadyToShip","isdefault","skulistdata","pricerun","Skupricesync","_Skupricesync","costPriceTax","sellingPriceTax","markupPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","productMetalcoloursByProductId","productPuritiesByProductId","productSize","metal_color_image_length","entries","metal_purity_weight","metal_weight_check","createVariants","toConsumableArray","saveCreateVariant","selectcolumnfilter","columns_Columns","Productimages","image_count","productimages","setProductimages","fileobj","filetype","imagecontent","productimgs","imagePosition","imageUrl","imgobj","styleFile","wordBreak","endPoint","files","productimageobj","prodcolor","randomnum","fileType","handleAssetChange","src","ishover","class","aria-hidden","handlenewAssetChange","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","textDecoration","setExpand","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","defaultpricing","pricingcolumns","setPricingcolumns","defaultpricingnames","displypricingcolumns","setDisplypricingcolumns","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","state","setstate","changeVariant","_saveProductEditItem","productEditItem","genders","productListByProductId","size_obj","sizeVarient","sizes_arr","gender_arr","gender_obj","defaultcolour","productImagesByProductId","metalcolors","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","ProductEdit_CreateVariant","ProductAttributes_Alert","materialName","esbody","endpoint","productid","saveProductEditItem","ExpansionPanel","expanded","isExpanded","diamondTypesArray","diamond_type","diamond_data","store_dia","diamondtypesData","ExpansionPanelSummary","expandIcon","Add_default","ExpansionPanelDetails","Components_SortHeader","varients","Skupricing_Variants","ProductAttributes","ProductAttributes_Component","FontWeight","Select","notchedOutline","labelId","noValidate","lassName","newmaterial_columns_Columns","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","Tooltip","EnhancedTable","setSelected","dense","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","TableContainer","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","aria-checked","tabIndex","newmaterial1","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","focusVisibleClassName","disableRipple","Editcategory","checkedC","setState","spaceing","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","routes","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9845e1f5.chunk.js","sourcesContent":["const route = {\n    login: '/login',\n    dashboard: '/dashboard',\n    profile: '/profile',\n    productupload: '/productupload',\n    configuration: '/Configuration',\n    vendor: '/vendorlist',\n    productlist: '/productlist',\n    orderlist: '/orderlist',\n    materiallist: '/material',\n    mastermaterial: '/materialmaster',\n    mastercolors: '/mastercolors',\n    masterpurities: '/masterpurities',\n    salediscountlist: '/salediscountlist',\n    voucherdiscountlist: '/voucherdiscountlist',\n\n    producttypes: '/producttypes',\n    voucherdiscount: '/voucherdiscount',\n    salediscount: '/salediscount',\n    priceupdate: '/priceupdate',\n    productAttributes: '/product_attributes',\n    diamondDetails: '/diamond_details',\n    gemstoneDetails:'/gemstone-details',\n    variants:'/variants',\n    images:'/images',\n    createVariant:'/create_variant',\n    materiallistpage:'/newmaterial',\n    editCategory:'/editcategory',\n    vendorPrice:'/vendorpricesetup',\n    markupPrice: '/markuppricesetup',\n    taxsetup: '/taxsetup',\n    editdiscount: '/salediscount/:id',\n    editvoucher: '/voucherdiscount/:id',\n    masterstyles: '/masterstyles',\n    masterthemes: '/masterthemes',\n    masteroccassions: '/masteroccassions',\n    masterpaymentstatus : '/paymentstatus',\n    mastercollections: '/collections',\n    masterdesigns: '/designs',\n    masterorderstatus : '/orderstatus',\n    shippingzones : '/zones',\n    shipmentsettings : '/shipmensettings',\n    shippingattributes : '/shippingattributes',\n    masterdiamonds: '/diamonds',\n    diamondsettings: '/diamondsettings',\n    diamondshapes: '/diamondshapes',\n    earringbacking: '/earringbacking',\n    addshippingattributes : '/addshippingattributes',\n    userconfiguration : '/userconfiguration',\n    masterroles : '/masterroles',\n    manageadminusers : '/manageadminusers',\n    goldpriceupdate : '/goldpriceupdate',\n        \nmanageusers : '/manageusers',\n\n    masterpages : '/masterpages',\n\n    gemsettings: '/gemstonesettings',\n    gemshapes: '/gemstoneshapes',\n    gemtypes: '/gemstonetypes',\n    gender: '/genders',\n    seo: '/seopriority',\n    taxsettings: '/taxsettings',\n    masterattributes: '/masterattributes',\n\n    masterstones: '/masterstones',\n    masterstonecolors: '/masterstonecolors',\n    masterstoneshapes: '/masterstoneshapes',\n    weights: '/weights',\n    customerdetails: '/customerdetails/:id',\n\n    \n    category: '/categories',\n    \n\n}\n\nexport default route;","import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport propTypes from \"prop-types\";\n\n// NOTABLE POINTS\n//  Min and Max\n// Email ID\n// Confirm Email ID\n// Mobile Number\n// Number\n// Password\n// Repeat Password\n// On Button Submit\n// On Moving Out\n// Live\n\nexport const Input = props => {\n  let {\n    isNumber = false,\n    pattern,\n    maxLength,\n    minLength,\n    helperText,\n    ...rest\n  } = props;\n  const defaultStyle = {\n    margin: \"dense\",\n    variant: \"outlined\",\n    'input-label': {\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      overflow: 'hidden',\n      width: '100%',\n      color: 'red'\n    },\n  \n    'input': {\n      '&::placeholder': {\n        textOverflow: 'ellipsis !important',\n        color: 'red'\n      }\n    }\n  };\n\n  // INTEGRATE THEME HERE\n\n  const handleKeyPress = e => {\n    if (isNumber) {\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\n    }\n  };\n\n  return (\n    <Grid item xs={12}>\n      <TextField\n                inputProps={{ pattern, maxLength, minLength  }}\n\n        style={{ width: \"100%\" }}\n        helperText={helperText}\n        onKeyPress={handleKeyPress}\n        {...defaultStyle}\n        {...rest}\n      />\n    </Grid>\n  );\n};\n\nInput.propTypes = {\n  isNumber: propTypes.bool\n};\n","import React,{ useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n// import { Helmet } from 'react-helmet';\nimport PropTypes from 'prop-types';\n\n\n\n\n\nconst NODE_ENV = process.env.NODE_ENV;\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\n\nconst useStyles = makeStyles({\n  \n  media: {\n    height: 140,\n  },\n});\n\nexport default function Page(props) {\n  const classes = useStyles();\n  const { title, children, ...rest } = props;\n\n  // useEffect(() => {\n  //   if (NODE_ENV !== 'production') {\n  //     return;\n  //   }\n  \n  //   if (window.gtag) {\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\n  //       page_path: router.location.pathname,\n  //       page_name: title\n  //     });\n  //   }\n  // }, [title, router]);\n  return (\n    <div {...rest}>\n      {/* <Helmet>\n        <title>{title}</title>\n      </Helmet> */}\n      {children}\n    </div>\n  );\n}","import { colors } from '@material-ui/core';\n\nconst buildGradient = (start, end) =>\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\n\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\nconst green = buildGradient(colors.green[400], colors.green[600]);\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\nconst red = buildGradient(colors.red[500], colors.red[700]);\n\nexport default {\n  grey,\n  blue,\n  indigo,\n  green,\n  orange,\n  red\n};\n","import gql from 'graphql-tag';\n\nconst PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterGenders {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterDiamondsShapes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterThemes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n\n  allMasterStyles {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      id\n      alias\n      name\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterMetalsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondsColors {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterDiamondClarities {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterVendors {\n    nodes {\n      id\n      name\n      shortCode\n      vendorDelivaryDays\n    \n    }\n  }\n  allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\n    nodes {\n      productSeries\n      id\n    }\n  },\n  allMasterGemstonesTypes {\n    nodes {\n      alias\n      colorCode\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterGemstonesShapes {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterEarringBackings {\n    nodes {\n      name\n      createdAt\n      alias\n      id\n      nodeId\n      updatedAt\n    }\n  }\n  allMasterGemstonesSettings {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\nconst PRODUCTFILTERMASTER = gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n    }\n  }\n  allMasterProductTypes {\n    nodes {\n      updatedAt\n      shortCode\n      name\n      id\n      createdAt\n      alias\n      displayOrder\n    }\n  }\n}\n`;\n\nconst ALLPRODUCTLIST = gql`\nquery  {\n  allProductLists(first: 500)  {\n    nodes {\n      id\n      nodeId\n      productName\n      productCategory\n      productType\n      productId\n      createdAt\n      isactive\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTLIST = (category) => gql`\nquery($Veiw: Int!, $Offset: Int!) {\n  allProductLists(first: $Veiw, offset: $Offset) {\n    nodes {\n      id\n      nodeId\n      productName,\n      productCategory,\n      productType\n      productId,\n      createdAt\n      isactive,\n      transSkuListsByProductId(condition: {isdefault: true}) {\n        nodes {\n          skuUrl\n          discount\n        }\n      }\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLISTS = gql`\nquery  {\n  allMasterVendors(orderBy: CREATED_AT_DESC) {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n    totalCount\n  }\n}\n`;\n\nconst TaxList_1 = gql`\nquery  {\n  allMasterTaxSettings {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;/*********** configuration query */\n\nconst TaxList =`\nquery  {\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      hsnNumber\n      taxName\n      taxValue\n      igst\n      cgst\n      updatedAt\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst TaxSettingList =`\nquery  {\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      value\n      hsnCode\n      id\n    }\n  }\n}\n`;\n\nconst MASTERMATERIAL =`\nquery  {\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERMATERIALCOLORS =`\nquery  {\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst MASTERPRODUCTPURITIES =`\nquery  {\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst DESIGNMASTER =`\nquery  {\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    isFilter\n    isActive\n    filterOrder\n    id\n  }\n}\n}`;\nconst COLLECTIONMASTER =`\nquery  {\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\n\nconst OCCASSIONSMASTER =`\nquery  {\n  allMasterOccasions {\n    nodes {\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst STYLEMASTER =`\nquery  {\nallMasterStyles {\n  nodes {\n    alias\n    createdAt\n    name\n    id\n    updatedAt\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}`;\nconst THEMEMASTER =`\nquery  {\n  allMasterThemes {\n    nodes {\n      createdAt\n      alias\n      id\n      name\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst DIAMONDMASTER =`\nquery  {\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    diamondClarity\n    diamondColor\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\n\nconst PAYMENTSTATUSMASTER =`\nquery  {\n  allOrderStatusMasters {\n    nodes {\n      createdAt\n      id\n      isActive\n      name\n      updatedAt\n    }\n  },\n  allPaymentStatusMasters {\n    nodes {\n      name\n      createdAt\n      id\n      isActive\n      updatedAt\n    }\n  }\n}\n`;\nconst DIAMONDSETTINGS =`\nquery  {\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    name\n    id\n    isFilter\n    isActive\n    filterOrder\n  }\n}\n}\n`;\nconst DIAMONDSHAPES =`\nquery  {\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}\n`;\nconst MASTERPRODUCTTYPES =`\nquery  {\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\n  nodes {\n    certificate\n    name\n    id\n    isActive\n    isFilter\n    shortCode\n    displayOrder\n  }\n}\n}`;\nconst MASTERCATEGORIES =`\nquery  {\n  allMasterProductCategories(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERPAGES =`\nquery  {\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      pagename\n      displayname\n      id\n    }\n  }\n}`;\nconst GOLDPRICESETUPMASTER =`\nquery  {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\nconst EARRINGBACKING =`\nquery  {\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      updatedAt\n      createdAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\n\n\nconst MASTERSTONES =`\nquery  {\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      id\n      name\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERCOUNTRIES =`\nquery  {\n  allMasterCountries(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      iso\n    }\n  }\n}`;\nconst SHIPPINGCHARGES= `query{\n  allShippingCharges {\n    nodes {\n      id\n      name\n      isActive\n      isCart\n      chargeType\n      rangeFrom\n      rangeTo\n      shipmentCharge\n      productAttributes\n      displayAttributes\n      shippingZoneByZoneId {\n        name\n        id\n        isActive\n      }\n    }\n  }\n}`\nconst ACTIVESHIPPINGZONES =`\nquery  {\n  allShippingZones(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      isActive\n    }\n  }\n}`;\nconst SHIPPINGZONES =`\nquery  {\n  allShippingZones {\n    nodes {\n      name\n      id\n      isActive\n      shippingZoneCountriesByZoneId {\n        nodes {\n          countryId\n          createdAt\n          id\n          masterCountryByCountryId {\n            name\n            nicename\n            id\n          }\n        }\n      }\n      shippingChargesByZoneId {\n        nodes {\n          name\n        }\n      }\n    }\n  }\n}`;\nconst MASTERSTONECOLORS =`\nquery  {\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERWEIGHTS =`\nquery  {\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      alias\n      createdAt\n      name\n      id\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERSTONESHAPES =`\nquery  {\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      createdAt\n      alias\n      updatedAt\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\n\nconst MASTERATTRIBUTES =`\nquery  {\nallAttributeMasters {\n  nodes {\n    name\n    isFilter\n    id\n    isSearch\n    isActive\n    filterPosition\n    createdAt\n    shortCode\n    updatedAt\n  }\n}\n}`;\n\nconst MASTERGEMSETTINGS =`\nquery  {\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\n\nconst MASTERGEMSHAPES =`\nquery  {\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      alias\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGEMTYPES =`\nquery  {\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      id\n      name\n      colorCode\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst MASTERGENDER =`\nquery  {\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      name\n      alias\n      id\n      isFilter\n      isActive\n      filterOrder\n    }\n  }\n}`;\nconst SEOPRIORITIES =`\nquery  {\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\n    nodes {\n      priority\n      seoText\n      seoUrl\n      id\n      attributeName\n      attributeValue\n    }\n  }\n}`;\n/**************** */\n\n\n// const PRODUCTLIST  = (category) =>  gql`\n// query  {\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\n//     nodes {\n//       id\n//       nodeId\n//       productName,\n//       productCategory,\n//       productType\n//       productId,\n//       createdAt\n//       isactive,\n//       transSkuListsByProductId(condition: {isdefault: true}) {\n//         nodes {\n//           skuUrl\n//           discount\n//         }\n//       }\n//     }\n//     totalCount\n//   }\n// }\n// `;\n\nconst GOLDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n    allGoldPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      purity\n      vendorCode\n      updatedAt\n      sellingPriceType\n      sellingPrice\n      material\n      id\n      createdAt\n      costPrice\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDMARKUP = gql`\nquery MyQuery($vendorCode: String!) {\n  allPricingMarkups(condition: {material: $vendorCode},orderBy: UPDATED_AT_DESC) {\n    nodes {\n      updatedAt\n      sellingPriceMin\n      sellingPriceMax\n      material\n      category\n      productType\n      markupValue\n      markupType\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\n\nconst DIAMONDPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allDiamondPriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      costPrice\n      createdAt\n      diamondClarity\n      diamondColour\n      id\n      sellingPrice\n      sellingPriceType\n      updatedAt\n      vendorCode\n    }\n    totalCount\n  }\n}`;\n// const CATGORYLIST = gql`\n// query {\n//   allMasterMaterials {\n//     nodes {\n//       name\n//       shortCode\n//     }\n// }`;\n\n\nconst CATGORYLIST =gql`\nquery  {\n  allMasterProductCategories {\n    nodes {\n      alias\n      name\n      shortCode\n      id\n    }\n    totalCount\n  }\n}\n`;\nconst PRODUCTTYPEMASTER =gql`\nquery  {\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\nconst MATERIALMASTER =gql`\nquery  {\n  allMasterMaterials {\n    nodes {\n      alias\n      name\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst MASTERCOLORS =gql`\nquery  {\n  allMasterMetalsColors {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\n\n\nconst SALEDISCOUNTS =gql`\nquery  {\n  allSaleDiscounts {\n    nodes {\n      id\n      discountName\n      discountType\n      discountValue\n      components\n      attributes\n      isActive\n      productAttributes\n      productAttributesText\n    }\n\n    totalCount\n  }\n}\n`;\n\n\nconst VOUCHERDISCOUNTS =gql`\nquery  {\n  allVouchers {\n    nodes {\n      id\n      name\n      code\n      uses\n      maxUses\n      isActive\n      voucherCodes\n      description\n      \n    }\n\n    totalCount\n  }\n}\n`;\n\n\n\n\nconst MASTERPURITIES =gql`\nquery  {\n  allMasterMetalsPurities {\n    nodes {\n      name\n      alias\n      shortCode\n    }\n    totalCount\n  }\n}\n`;\nconst VENDORLIST =`\nquery {\n  allMasterVendors {\n    nodes {\n      vendorDelivaryDays\n      updatedAt\n      state\n      shortCode\n      partnerCategory\n      name\n      organization\n      gstNo\n      currency\n      createdAt\n      city\n      address\n    }\n  }\n}`;\n\nconst METALMASTER =`\nquery {\n  allMasterMaterials {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst MASTERCATEGORY =`\nquery {\n  allMasterProductCategories {\n    nodes {\n      name\n      shortCode\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      shortCode\n    }\n  }\n}`;\n\n\nconst GEMSTONEMASTER =`\nquery {\n  allMasterGemstonesTypes {\n    nodes {\n      name\n      shortCode\n      colorCode\n    }\n  }  \n}`;\n\n\n\nconst MAKINGCHARGEPRICELIST = gql`\nquery MyQuery($vendorCode: String!,$ratetype: Int!) {\n  allMakingChargeSettings(condition: {vendorCode: $vendorCode,rateType: $ratetype}) {\n    nodes {\n      weightStart\n      weightEnd\n      vendorCode\n      updatedAt\n      sellingPriceType\n      rateType\n      purity\n      priceType\n      price\n      material\n      id\n      createdAt\n    }\n    totalCount\n  }\n}`;\nconst GEMPRICELIST = gql`\nquery MyQuery($vendorCode: String!) {\n  allGemstonePriceSettings(condition: {vendorCode: $vendorCode}) {\n    nodes {\n      price\n      rateType\n      priceType\n      sellingPriceType\n      vendorCode\n      weightEnd\n      weightStart\n      updatedAt\n      id\n      createdAt\n      gemstoneType\n    }\n    totalCount\n  }\n}`;\nconst PRODUCTLISTSTATUSEDIT = gql`\nmutation MyMutation($productId:String!,$isActive:Boolean!) {\n  __typename\n  updateProductListByProductId(input: {productId: $productId, productListPatch: {isactive: $isActive}}) {\n    clientMutationId\n    productList {\n      isactive\n    }\n  }\n}\n`;\n\nconst CREATETAXSETUP = gql`\nmutation MyMutation($id:UUID!,$updatedAt:Date!,$createdAt:Date!,$taxValue:Double!,$taxName:String!,$hsnNumber:String!) {\n  __typename\n  createMasterTaxSetting(input: {masterTaxSetting: {id: $id, updatedAt: $updatedAt, createdAt: $createdAt, taxValue: $taxValue, taxName: $taxName, hsnNumber: $hsnNumber}}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst VOUCHERSTATUSEDIT = gql`\nmutation MyMutation($voucherId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateVoucherById(input: {id: $voucherId, voucherPatch: {isActive: $isActive}}) {\n    clientMutationId\n    voucher {\n      isActive\n    }\n  }\n}\n`;\n\nconst DISCOUNTSTATUSEDIT = gql`\nmutation MyMutation($discountId:UUID!,$isActive:Boolean!) {\n  __typename\n  updateSaleDiscountById(input: {id: $discountId, saleDiscountPatch: {isActive: $isActive}}) {\n    clientMutationId\n    saleDiscount {\n      isActive\n    }\n  }\n}\n`;\n\nconst DELETEMARKUPPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deletePricingMarkupById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGOLDPRICE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGoldPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETESALEDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteSaleDiscountById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEVOUCHERDISCOUNT = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteVoucherById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEMAKINGCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteMakingChargeSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\nconst DELETEGEMCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteGemstonePriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\nconst DELETEDIAMONDCHARGE = gql`\nmutation MyMutation($elementId:UUID!) {\n  __typename\n  deleteDiamondPriceSettingById(input: {id: $elementId}) {\n    clientMutationId\n  }\n}\n`;\n\n\n\n\nconst PRODUCTDIAMONDTYPES = `\nquery{\n  allMasterDiamondTypes {\n    nodes {\n      diamondClarity\n      diamondColor\n      id\n    }\n  }\n}\n`;\nconst PRODUCTEDIT = `\nquery MyQuery($productId: String!) {\n  productListByProductId(productId: $productId) {\n    productMetalcoloursByProductId {\n      nodes {\n        productColor\n        id\n      }\n    }\n    productName\n    productType\n    vendorCode\n    gender\n    isactive\n    productMaterialsByProductSku {\n      nodes {\n        materialName\n      }\n    }\n    productDiamondsByProductSku {\n      nodes {\n        diamondClarity\n        diamondColour\n        diamondSettings\n        diamondShape\n        diamondType\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productGemstonesByProductSku {\n      nodes {\n        gemstoneSetting\n        gemstoneShape\n        gemstoneSize\n        gemstoneType\n        gemstonsSize\n        id\n        stoneCount\n        stoneWeight\n      }\n    }\n    productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\n      nodes {\n        id\n        imagePosition\n        productId\n        imageUrl\n        ishover\n        isdefault\n        productColor\n      }\n    }\n    productPuritiesByProductId {\n      nodes {\n        purity\n        id\n      }\n    }\n    productThemesByProductId(condition: {isActive: true}) {\n      nodes {\n        themeName\n        id\n      }\n    }\n    productStonecolorsByProductId {\n      nodes {\n        id\n        stonecolor\n      }\n    }\n    productStylesByProductId(condition: {isActive: true}) {\n      nodes {\n        styleName\n        id\n      }\n    }\n    productCollectionsByProductId {\n      nodes {\n        collectionName\n        id\n      }\n    }\n    productOccassionsByProductId(condition: {isActive: true}) {\n      nodes {\n        occassionName\n        id\n      }\n    }\n    productStonecountsByProductId {\n      nodes {\n        id\n        stonecount\n      }\n    }\n    transSkuListsByProductId {\n      nodes {\n        skuSize\n        diamondType\n        metalColor\n        purity\n        productId\n        skuWeight\n        generatedSku,\n        costPrice\n        costPriceTax\n        discountPrice\n        discountPriceTax\n        markupPrice\n        markupPriceTax\n        sellingPrice\n        discountDesc\n        sellingPriceTax\n        isReadyToShip\n        discount\n        isActive\n        isdefault,\n        vendorDeliveryTime\n        id\n        isActive\n        transSkuDescriptionsBySkuId {\n          nodes {\n            skuDescription\n            certificate\n            ringsizeImage\n          }\n        }\n      }\n    }\n    productCategory\n    sizeVarient\n  }\n}\n\n`;\n  export {\n    PRODUCTCATEGORY,\n    PRODUCTLIST,\n    PRODUCTEDIT,\n    PRODUCTLISTSTATUSEDIT,\n    PRODUCTDIAMONDTYPES,\n    GOLDPRICELIST,\n    DIAMONDPRICELIST,\n    GEMPRICELIST,\n    MAKINGCHARGEPRICELIST,\n    VENDORLIST,\n    ALLPRODUCTLIST,\n    DIAMONDMARKUP,\n    PRODUCTFILTERMASTER,\n    METALMASTER,\n    GEMSTONEMASTER,\n    MASTERCATEGORY,\n    DELETEMARKUPPRICE,\n    DELETEMAKINGCHARGE,\n    DELETEGEMCHARGE,\n    DELETEGOLDPRICE,\n    DELETESALEDISCOUNT,\n    CATGORYLIST,\n    DELETEDIAMONDCHARGE,\n    VENDORLISTS,\n    TaxList,\n    PRODUCTTYPEMASTER,\n    MATERIALMASTER,\n    MASTERCOLORS,\n    MASTERPURITIES,\n    SALEDISCOUNTS,\n    VOUCHERDISCOUNTS,\n    DELETEVOUCHERDISCOUNT,\n    VOUCHERSTATUSEDIT,\n    DISCOUNTSTATUSEDIT,\n    MASTERMATERIAL,\n    MASTERMATERIALCOLORS,\n    MASTERPRODUCTPURITIES,\n    COLLECTIONMASTER,\n    DESIGNMASTER,\n    DIAMONDMASTER,\n    DIAMONDSETTINGS,\n    DIAMONDSHAPES,\n    MASTERPRODUCTTYPES,\n    MASTERGEMSETTINGS,\n    MASTERGEMSHAPES ,\n    MASTERGEMTYPES,\n    MASTERGENDER ,\n    SEOPRIORITIES,\n    CREATETAXSETUP,\n    TaxSettingList,\n    MASTERCATEGORIES,\n    EARRINGBACKING,\n    MASTERATTRIBUTES,\n    MASTERSTONESHAPES,\n    MASTERSTONECOLORS,\n    MASTERSTONES,\n    MASTERWEIGHTS,\n    THEMEMASTER,\n    STYLEMASTER,\n    OCCASSIONSMASTER,\n    PAYMENTSTATUSMASTER,\n    SHIPPINGZONES,\n    MASTERCOUNTRIES,\n    SHIPPINGCHARGES,\n    ACTIVESHIPPINGZONES,\n    MASTERPAGES,\n    GOLDPRICESETUPMASTER\n  }","import { gql } from 'apollo-boost';\n\nexport const PRODUCTCATEGORY = gql`query {\n    allMasterProductCategories{\n        nodes {\n            alias\n            name\n            id\n          }\n    }\n    allMasterProductTypes {\n    nodes {\n      alias\n      id\n      name\n      shortCode\n    }\n  },\n  allMasterStonesColors {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterStones {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n  }`\n\nexport const ORDERS = gql`query {\n  allOrders {\n    nodes {\n      paymentMode\n      paymentStatus\n      updatedAt\n      createdAt\n      awbNumber\n      cartId\n      orderStatus\n      comments\n      id\n      shoppingCartByCartId {\n        shoppingCartItemsByShoppingCartId {\n          nodes {\n            transSkuListByProductSku {\n              generatedSku\n              productListByProductId {\n                productCategory\n                productType\n                productCollectionsByProductId {\n                  nodes {\n                    collectionName\n                  }\n                }\n              }\n            }\n          }\n        }\n        giftwrapsByCartId {\n          nodes {\n            message\n            giftFrom\n            giftTo\n          }\n        }\n        \n        cartAddressesByCartId {\n          nodes {\n            firstname\n            contactNumber\n            addressline1\n            addressline2\n            city\n            pincode\n            state\n          }\n        }\n        userProfileByUserprofileId {\n          firstName\n          mobile\n          email\n        }\n      }\n      paymentDetailsByOrderId {\n        nodes {\n          paymentResponse\n        }\n      }\n    }\n  }\n\n}`\n\nexport const MATERIALMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  }\n}`\n\nexport const VOUCHERMASTER = gql`query {\n  allMasterVendors {\n    nodes {\n      name\n      id\n      \n      \n    }\n  },\n  allMasterPricingComponents(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n    }\n  }\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`\n\n\n\nexport const SHIPPINGMASTER = `query {\n  allMasterProductCategories {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterProductTypes {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n  allMasterMetalsPurities {\n    nodes {\n      name\n      id\n      alias\n    }\n  },\n   allMasterMaterials {\n    nodes {\n      alias\n      id\n      name\n    }\n  },\n  allMasterCollections {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n\n  allMasterMetalsPurities{\n    nodes {\n      name\n      id\n    }\n  }\n  allShippingCharges(condition: {isActive: true}) {\n    nodes {\n      name\n      id\n      productAttributes\n    }\n  }\n  allMasterStyles {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n\n  allMasterThemes {\n    nodes {\n      name\n      id\n      alias\n    }\n  }\n  allMasterDiamondTypes {\n    nodes {\n      shortCode\n      diamondColor\n      diamondClarity\n      id\n    }\n  }\n  allMasterOccasions {\n    nodes {\n      name\n      alias\n      id\n    }\n  }\n}`","import { PRODUCTCATEGORY } from \"../graphql/query\";\nimport { MATERIALMASTER,ORDERS,VOUCHERMASTER } from \"../services/queries\";\nimport apidata from '../screens/Productupload/data.json';\n\nexport const productCategory = {\n    query: PRODUCTCATEGORY,\n    mapper: (response) => {\n        const category = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const product_type = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label: _.name,\n            title: _.name\n        }))\n        const material = response.allMasterMaterials.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label:_.name\n        }))\n        const gender = response.allMasterGenders.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const vendorcode  = response.allMasterVendors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            display: _.name +' ('+_.shortCode+' )'\n        }))\n        \n        const diamondsettings = response.allMasterDiamondsSettings.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const diamondshapes = response.allMasterDiamondsShapes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            themeName:_.name\n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            styleName: _.name\n        }))\n        \n        const occasions = response.allMasterOccasions.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            occassionName: _.name\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            collectionName: _.name\n        }))\n        const gemstonecolor = response.allMasterStonesColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecolor:_.name\n        }))\n        const stones = response.allMasterStones.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            stonecount:_.name\n        }))\n        const metalcolour = response.allMasterMetalsColors.nodes.map(_ => ({\n            ..._,\n            productColor: _.name,\n            value: _.id,\n            label: _.name\n        }))\n        const metalpurity = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name,\n            purity: _.name\n        }))\n        const diamondcolors = response.allMasterDiamondsColors.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n\n        const diamondclarities = response.allMasterDiamondClarities.nodes.map(_ => ({\n            ..._,\n            value: _.id,\n            label: _.name\n        }))\n        const productseries = response.allProductLists.nodes.map(_ => ({\n            ..._,\n            value: _.productSeries,\n        }))\n        const gemstontypes = response.allMasterGemstonesTypes.nodes.map(_ => ({\n            ..._,\n            value: _.shortCode,\n            label:_.name\n        }))\n        \n        const gemstonshapes = response.allMasterGemstonesShapes.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n        const earringbacking = response.allMasterEarringBackings.nodes.map(_ => ({\n            ..._,\n            value: _.alias,\n            label:_.name\n        }))\n\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            value: _.diamondColor+_.diamondClarity,\n            label:_.diamondColor+_.diamondClarity\n        }))\n\n        \n        \n        const metals = apidata.metals\n        \n        return { category,\n             product_type, \n             material, \n             gender,\n             vendorcode, \n             metalcolour, \n             metals, \n             diamondsettings,\n             diamondshapes,\n            themes,\n            styles,\n            occasions,\n            collections,\n            gemstonecolor,\n            stones,\n            metalpurity,\n            diamondcolors,\n            diamondtypes,\n            diamondclarities,\n            productseries,\n            gemstontypes,\n            gemstonshapes,\n            gemstonesettings,\n            earringbacking\n        }\n    }\n}\n\nexport const orderList = {\n    query: ORDERS,\n    mapper: (response) => {\n        const orders = response.allOrders.nodes.map(_ => ({\n            ..._\n                }))\n               \n        return {\n            orders\n        }\n    }\n}\nexport const materialMaster = {\n    query: VOUCHERMASTER,\n    mapper: (response) => {\n        const materials = response.allMasterMaterials.nodes.map(_ => ({\n            ..._\n                }))\n        const vendors = response.allMasterVendors.nodes.map(_ => ({\n                    ..._\n        }))\n\n        const product_categories = response.allMasterProductCategories.nodes.map(_ => ({\n            ..._\n        }))\n        const product_types = response.allMasterProductTypes.nodes.map(_ => ({\n            ..._\n        }))\n        const pricing_components = response.allMasterPricingComponents.nodes.map(_ => ({\n            ..._\n        }))\n        const collections = response.allMasterCollections.nodes.map(_ => ({\n            ..._\n        }))\n        const purities = response.allMasterMetalsPurities.nodes.map(_ => ({\n            ..._,\n            \n        }))\n        const styles = response.allMasterStyles.nodes.map(_ => ({\n            ..._\n        }))\n\n        const themes = response.allMasterThemes.nodes.map(_ => ({\n            ..._\n        }))\n        const occations = response.allMasterOccasions.nodes.map(_ => ({\n            ..._\n        }))\n        const diamondtypes = response.allMasterDiamondTypes.nodes.map(_ => ({\n            ..._,\n            \"alias\": _.shortCode,\n            \"diamondtype\":_.diamondColor+_.diamondClarity\n        }))\n        \n\n        \n        // alert(JSON.stringify(product_types))\n        return {\n            vendors,\n            product_categories,\n            product_types,\n            materials,\n            pricing_components,\n            collections,\n            purities,\n            styles,\n            themes,\n            occations,\n            diamondtypes\n        }\n    }\n\n\n}","// export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\n// export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\nexport const BASE_URL = \"https://api-staging.stylori.com\"\nexport const API_URL = \"https://api-staging.stylori.com\"\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.stylori.com/graphql\"\nexport const URL = \"https://console-staging.stylori.com\"\n\n// export const GRAPHQL_DEV_CLIENT = \"http://192.168.1.105:8000/graphql\"\n// export const API_URL = \"http://192.168.1.105:8000\"\n\n","import React from 'react';\nimport { productCategory } from '../services/mapper';\nimport { API_URL } from '../config';\nimport { isString } from 'util';\n\nconst TOKEN = 'accesstoken'\n\nconst initialNetworkCtx = {\n    networkCtx: {\n        mapper: productCategory,\n        status: { called: false, data: [], loading: true, error: false, parsedData: [] },\n        notRequested: true\n    },\n    setNetworkCtx: () => null,\n    sendNetworkRequest: () => null\n}\n\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\n    url = API_URL+url;\n    console.info('URL', url, data)\n    const method = data ? 'POST' : 'GET', \n        headers = {\n            'Content-Type': 'application/json'\n        };\n    let resdata = null;\n    if(auth){\n        const token = localStorage.getItem(TOKEN)\n        if(token) headers[\"x-access-token\"] = token\n       // else window.location = '/'\n    }\n    const response = await fetch(url, method === 'GET' ? {method} : ({\n        method, body: isString(data) ? data : JSON.stringify(data), headers\n    }))\n\n    if(response.status < 400){\n        resdata = await response.json();\n    } else {\n        resdata = await response.json();\n        // if(url === 'https://api-staging.stylori.com/api/auth/signin')\n        // {\n        //    if(!resdata.auth)\n        //    {\n        //     //alert(resdata.message)\n        //    }\n        // }else{\n        //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        // }\n    }\n    resdata['statuscode'] = response.status\n\n    return resdata;\n}\n\nexport const NetworkContext = React.createContext(initialNetworkCtx);\n\nexport const NetworkConsumer = NetworkContext.Consumer;\n\nexport const NetworkProvider = (props) => {\n\n    const [ networkCtx, setNetworkCtx ] = React.useState(initialNetworkCtx.networkCtx);\n\n    return(\n        <NetworkContext.Provider value={{ networkCtx, setNetworkCtx, sendNetworkRequest }} >\n            {props.children}\n        </NetworkContext.Provider>\n    )\n}","import React from 'react';\nimport { GRAPHQL_DEV_CLIENT } from '../config';\n\nconst globalCtxInitial = {\n    globalCtx: {\n        auth:{\n            loggedIn: false,\n            userData: {}\n        },\n        sideBarOpen: false,\n        isExpand: false,\n        selectedIndex: 0,\n        gqlClient: GRAPHQL_DEV_CLIENT\n    },\n    setGlobalCtx: () => null\n}\n\nexport const GlobalContext = React.createContext(globalCtxInitial);\n\nexport const GlobalConsumer = GlobalContext.Consumer;\n\nexport const GlobalProvider = props => {\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n    return(\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\n            {props.children}\n        </GlobalContext.Provider>      \n    )\n}","import React from 'react';\n\nconst productuploadCtxInitial = {\n    productCtx: {  \n        product_categoy: \"\",\n        steps: ['Step1', 'Step2','Step6'],\n        product_type:\"\",\n        productname:\"\",\n        material:\"\",\n        product_type_shortcode: \"\",\n        category:[],\n        metalColour:\"\",\n        metalpurities:\"\",\n        isExpand:false,\n        selectedgender:\"\",\n        selected_metal_colour:{},\n        gender: {},\n        product_gender:\"\",\n        vendorcode: \"\",\n        productseries:[],\n        size:0,\n        sizes:[],\n        selected_sizes:[],\n        metal:{\n            value : 1,\n            label:'Diamond'\n        },\n        materials:[\n                \"Diamond\",\n                \"Gold\",\n                \"Gemstone\",\n                \"Solitaire\",\n                \"Silver\",\n                \"Platinum\"\n        ],\n        gemstontypes:\"\",\n        gemstonshapes:\"\",\n        product_code: \"\",\n        isactive: false,\n        gemstonelist:[],\n        diamondlist:[],\n        variants:[],\n        oldproductMetalColor:[],\n        oldproductMetalPurity:[],\n        productMetalColor:[],\n        productMetalPurity:[],\n        productDiamondColor:[],\n        productDiamondClarity:[],\n        productDiamondTypes:[],\n        productImages:[],\n        productDiamondTypesArray:[],\n        oldproductDiamondTypesArray:[],\n        productmaterials:[],\n        createVariantList:[],\n        editVariants:[],\n        editDiamondLists:[],\n        editGemstoneLists:[],\n        productVariantSize:[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25   \n        ],\n        variant_size:[],\n        gemstonetype:\"\",\n        gemstoneshape:\"\",\n        gemstonesettings:\"\",\n        gemstonesize:\"\",\n        gemstonecount:\"\",\n        gemstoneweight:\"\",\n        stonetype:\"\",   \n\n         editleadtime: \"\",\n         editreadytoship:false,\n         editisdefault: false,\n         editisactive: false,\n\n\n         editcostprice: 0,\n         editsellingprice:0,\n         editmarkupprice: 0,\n         editdiscountprice: 0,\n         editcostpricetax: 0,\n         editsellingpricetax:0,\n         editmarkuppricetax: 0,\n         editdiscountpricetax: 0,\n\n        diamondclarity:\"\",\n        diamondcolor:\"\",\n        diamondsettings:\"\",\n        diamondshape:\"\",\n        diamondcount:\"\",\n        diamondweight:\"\",\n        metalindex: -1,\n        themes:\"\",\n        prod_styles:\"\",\n        occassions:\"\",\n        collections:\"\",\n        stonecount:\"\",\n        stonecolour:\"\",\n        product_images:{},\n        metalcolour:[],\n        metal_purity:[],\n        metalpurity:[],\n        metal_color:0,\n        metal_weight:0,\n        diamond_colour:0,\n        diamond_clarity:0,\n        metal_height:0,\n        metal_width:0,\n        metal_length:0,\n        metal_object:0,\n        diamondtype:0,\n        metals:[],\n        error_message:{ }\n    },\n    masterData: {},\n    setProductCtx: () => null\n}\n\nexport const ProductContext = React.createContext(productuploadCtxInitial);\n\nexport const ProductConsumer = ProductContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\n\n    return productuploadCtxInitial.productCtx;\n}\n\nexport const ProductProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ productCtx, setProductCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('productCtx s',productCtx);\n    },[productCtx.material])\n\n    return(\n        <ProductContext.Provider value={{ productCtx, setProductCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </ProductContext.Provider>      \n    )\n}","import React from 'react';\n\nconst materialCtxInitial = {\n    materialCtx: {\n        \n    },\n    materialMaster: {\n        materials: []\n    },\n    setMaterialCtx: () => null\n}\n\nexport const MaterialContext = React.createContext(materialCtxInitial);\n\nexport const MaterialConsumer = MaterialContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\n\n    return materialCtxInitial.materialCtx;\n}\n\nexport const MaterialProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',materialCtx);\n    },[materialCtx.material])\n\n    return(\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </MaterialContext.Provider>      \n    )\n}","import React from 'react';\n\nconst voucherCtxInitial = {\n    voucherCtx: {\n        voucher:\"\",\n        attrobj:{}\n    },\n    voucherMaster: {\n        materials: []\n    },\n    setVoucherCtx: () => null\n}\n\nexport const VoucherContext = React.createContext(voucherCtxInitial);\n\nexport const VoucherConsumer = VoucherContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\n\n\n    return voucherCtxInitial.voucherCtx;\n}\n\nexport const VoucherProvider = props => {\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('materialCtx s',voucherCtx);\n    },[voucherCtx.voucher])\n\n    return(\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </VoucherContext.Provider>      \n    )\n}","import React from 'react';\n\nconst orderCtxInitial = {\n    orderCtx: {\n        \n    },\n    orderMaster: {\n        orders: []\n    },\n    setOrderCtx: () => null\n}\n\nexport const OrderContext = React.createContext(orderCtxInitial);\n\nexport const OrderConsumer = OrderContext.Consumer;\n\nconst mapDataToCtx = (apiData, mapper, mappertype) => { \n    if(Object.keys(apiData).length === 0) return {};\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\n \n    orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\n\n    console.log(\"resposeobjvalue1\"+JSON.stringify(orderCtxInitial.orderCtx))\n\n    return orderCtxInitial.orderCtx;\n}\n\nexport const OrderProvider = props => {\n    console.info('PROPS',props,props.value.mappertype)\n    const [ orderCtx, setorderCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\n    // on Mount get Data from storage\n    // on Unmount store data to storage\n\n    React.useEffect(() => {\n        console.info('orderCtx s',orderCtx);\n    },[orderCtx.order])\n\n    return(\n        <OrderContext.Provider value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\n            {props.children}\n        </OrderContext.Provider>      \n    )\n}","/* eslint-disable no-unused-vars */\n\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, TextField } from '@material-ui/core';\nimport gradients from '../../../../utils/gradients';\nimport LockIcon from '@material-ui/icons/Lock';\nimport { NetworkContext } from '../../../../context/NetworkContext';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { GlobalContext } from '../../../../context';\n\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Typography,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\nvar validate = require(\"validate.js\");\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  }\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n   \n  },\n  card: {\n    maxWidth: '100%',\n    overflow: 'unset',\n    display: 'flex',\n    position: 'relative',\n    '& > *': {\n      flexGrow: 1,\n      flexBasis: '50%',\n      width: '50%'\n    }\n  },\n  content: {\n    padding: theme.spacing(8, 4, 8, 4)\n  },\n  media: {\n    borderTopRightRadius: 4,\n    borderBottomRightRadius: 4,\n    color: theme.palette.white,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      display: 'none'\n    }\n  },\n  icon: {\n    backgroundImage: gradients.green,\n    color: theme.palette.white,\n    borderRadius: theme.shape.borderRadius,\n    padding: theme.spacing(1),\n    position: 'absolute',\n    top: -32,\n    left: theme.spacing(3),\n    height: 64,\n    width: 64,\n    fontSize: 32\n  },\n  loginForm: {\n\n  },\n  divider: {\n    margin: theme.spacing(2, 0)\n  },\n  person: {\n    display: 'flex'\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  fields: {\n    margin: theme.spacing(-1),\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      flexGrow: 1,\n      margin: theme.spacing(1)\n    }\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: '100%'\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst LoginForm = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n  const [open, setOpen] = React.useState(false);\n  const [showmessage, setShowmessage] = React.useState(\"\");\n  const [iserror, setIserror] = React.useState(false);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  useEffect(() => {\n   const errors = validate(formState.values, schema);\n\n    setFormState(formState => ({\n      ...formState,\n      isValid: errors ? false : true,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  const handleChange = event => {\n    event.persist();\n\n    setFormState(formState => ({\n      ...formState,\n      values: {\n        ...formState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...formState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if(formState.isValid)\n    {\n      //alert(JSON.stringify(formState.values))\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\n   \n   if(signinobj.statuscode === 200)\n   {\n    localStorage.setItem('accesstoken', signinobj.accessToken);\n\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      // pagepermissions[element.pageurl] = {\n      //   isread : element.is_view,\n      //   iswrite : element.is_write\n      // }\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\n\n    localStorage.setItem('accesspages', pages);\n    localStorage.setItem('pagepermissions', pagepermissions);\n\n    \n    props.history.push('/productlist')\n\n\n   }else\n   {\n\n    setShowmessage(signinobj.message)\n    setOpen(true);\n   }\n  \n    }else{\n      alert(\"has some error\")\n    }\n\n\n    //alert(JSON.stringify(formState))\n    // dispatch(login());\n    //alert(\"i am here\")\n  };\n\n  const hasError = field =>\n    formState.touched[field] && formState.errors[field] ? true : false;\n\n  return (\n    <Card className={classes.card}>\n      <CardContent className={classes.content}>\n        <Typography\n          gutterBottom\n          variant=\"h3\"\n        >\n        Log in Page\n        </Typography>\n        <Typography variant=\"subtitle2\">\n        {/* Sign in on the internal platform */}\n        </Typography>\n        \n        <form\n          {...rest}\n          className={clsx(classes.root, className)}\n          autoComplete={\"off\"}\n          onSubmit={handleSubmit}\n        >\n          <div className={classes.fields}>\n            <TextField\n              error={hasError('email')}\n              fullWidth\n              helperText={hasError('email') ? formState.errors.email[0] : null}\n              label=\"Email address\"\n              name=\"email\"\n              \n              onChange={handleChange}\n              value={formState.values.email || ''}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={hasError('password')}\n              fullWidth\n              helperText={\n                hasError('password') ? formState.errors.password[0] : null\n              }\n              label=\"Password\"\n              name=\"password\"\n              onChange={handleChange}\n              type=\"password\"\n              value={formState.values.password || ''}\n              variant=\"outlined\"\n            />\n          </div>\n          <Button\n            className={classes.submitButton}\n            color=\"primary\"\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n        Log in\n          </Button>\n          <Snackbar open={open} autoHideDuration={6000}\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\n          onClose={handleClose}>\n            <Alert onClose={handleClose} severity=\"error\">\n             {showmessage}\n            </Alert>\n      </Snackbar>\n        </form>\n       \n      </CardContent>\n     \n    </Card>\n  );\n};\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default withRouter(LoginForm);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport {Input} from '../../components/Input.js'\nimport Page from '../../components/Page'\n\nimport \"./Login.css\"\nimport { LoginForm } from './components';\nimport {\n  Card,\n  CardContent,\n  CardMedia,\n  Divider,\n  Link,\n  Avatar\n} from '@material-ui/core';\n\n\nexport class Login extends React.Component {\n\n   \n  render() {\n  return (\n    <Page\n    className='root'\n      title=\"Login\"\n    >\n    <LoginForm />\n        </Page>\n         \n  );\n}\n}\n\n\n  \n  export default (withRouter(Login));","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\n\nimport Container from '@material-ui/core/Container';\nimport {Input} from '../../components/Input.js'\n\nimport \"./Dashboard.css\"\n\nclass Dashboard_ extends React.Component {\n  \n   \n  render() {\n  return (\n    <Container className=\"root\" component=\"main\">\n    <Input />\n  </Container>\n         \n  );\n}\n}\n\nexport const Dashboard = withRouter(Dashboard_);\n  export default Dashboard;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction FullLoader(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <div className={classes.loader}>\n\n      <CircularProgress />\n\n      </div>\n\n      </DialogContent>\n      \n    </Dialog>\n \n    )\n}\nexport default FullLoader;","import React,{ useState } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\n\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport {Input} from '../../components/Input.js'\nimport { ProductContext } from '../../context';\nimport FullLoader from '../../components/Loader'\nimport \"./Productupload.css\"\nimport Select from 'react-select';\nimport \"./floating_dropdown.css\"\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\nconst top100Films = [\n  { title: 'The Shawshank Redemption', year: 1994 },\n  { title: 'The Godfather', year: 1972 },\n  { title: 'The Godfather: Part II', year: 1974 },\n  { title: 'The Dark Knight', year: 2008 },\n  { title: '12 Angry Men', year: 1957 },\n  { title: \"Schindler's List\", year: 1993 }\n]\nconst useStyles = makeStyles(theme => ({\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  dropdownlayout: {\n    '& .menu':{\n      position: \"Relative !important\",\n    }\n  },\n  helperinput: {\n    '& .MuiFormHelperText-root':{\n      color: \"#e53935\",\n    }\n  },\n  \n  root: {\n    marginTop: theme.spacing(2)\n  },\n  alert: {\n    marginBottom: theme.spacing(3)\n  },\n  formGroup: {\n    marginBottom: theme.spacing(3)\n  },\n  fieldGroup: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  fieldHint: {\n    margin: theme.spacing(1, 0)\n  },\n  tags: {\n    marginTop: theme.spacing(1),\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  dateField: {\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  }\n}));\n\n  \nexport default function AddressForm(props) {\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const classes = useStyles();\n    const { className, ...rest } = props;\n\n    React.useEffect(() => {\n    },[productCtx])\n    // const handleChange = selectedOption => {\n    \n    // };\n    const handlesizeChange  = selectedOption => {\n      setProductCtx({ ...productCtx, selected_sizes: selectedOption })\n    };\n    const handlevendorChange  = selectedOption => {\n      setProductCtx({ ...productCtx, vendorcode: selectedOption})\n    };\n   \n    const changeproducttype = type => (event, newvalue) => {\n      setProductCtx({ ...productCtx, product_type: newvalue})\n\n    }\n    const handlechange = type =>  selectedOption => {\n      if(type === 'product_type')\n      {\n        if(selectedOption)\n        {\n          var size = \"\";\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes = [];\n      var default_size = 0;\n      if(selectedOption.shortCode === 'K')\n      {\n\n        selected_sizes.push(\n          {\n            value:\"XS\",\n            label:\"XS\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"S\",\n            label:\"S\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"M\",\n            label:\"M\"\n          }\n        )\n        selected_sizes.push(\n          {\n            value:\"L\",\n            label:\"L\"\n          }\n        )\n      }  else\n      {\n\n      \n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Male')\n      {\n        minvalue = 13\n        maxvalue = 25\n        default_size = 15\n      }\n      if(selectedOption.shortCode === 'R' && productCtx.selectedgender.name === 'Female')\n      {\n        minvalue = 8\n       maxvalue = 23\n       default_size = 12\n      }\n      \n      for(var i=minvalue; i<maxvalue;i++)\n      {\n        selected_sizes.push(\n          {\n            value:i,\n            label:\"\"+i\n          }\n        )\n      }\n    }\n      \n      setProductCtx({ ...productCtx, product_type_shortcode: selectedOption.shortCode,product_type:selectedOption, size,default_size,selected_sizes })\n        }else{\n          setProductCtx({ ...productCtx, product_type_shortcode: \"\",product_type:\"\", size,selected_sizes: \"\" })\n\n        }  \n    }else{\n        setProductCtx({ ...productCtx, [type]: selectedOption})\n\n      }\n    };\n    const handleTextChange = type => e => {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n\n    }\n    const handleoptionChange = type => (event, value) => {\n     \n      if(type === 'vendorcode')\n      {\n        setProductCtx({ ...productCtx, [type]: value,'vendorleadtime':value.vendorDelivaryDays})\n\n      }else\n      {\n        setProductCtx({ ...productCtx, [type]: value})\n\n      }\n\n    }\n\n\n    const switchisorderable = event => {\n        setProductCtx({ ...productCtx, ['isreorderable']: event.target.value})\n\n     \n\n    };\n\n\n    const purityChange = type => selectedOption => {\n      setProductCtx({ ...productCtx, [type]:selectedOption })\n  \n    }\n \n\n    const handleGenderChange = type => (event, value)  => {\n      var minvalue = 0;\n      var maxvalue = 0;\n      var selected_sizes=[]\n      var sizes = [];\n      var default_size = 0\n      if(productCtx.product_type.shortCode === 'K')\n      {\n\n       \n        default_size = \"XS\"\n        selected_sizes.push(\"XS\",\"S\",\"M\",\"L\")\n        sizes.push(\"XS\",\"S\",\"M\",\"L\")\n      }  else\n      {\n    if(productCtx.product_type.shortCode === 'R' && value === 'Male')\n    {\n      minvalue = 13\n      maxvalue = 26\n      default_size = ''+15\n    }\n    if(productCtx.product_type.shortCode === 'R' && value === 'Female')\n    {\n     minvalue = 8\n      maxvalue = 24\n      default_size = ''+12\n\n    }\n\n    for(var i=minvalue; i<maxvalue;i++)\n    {\n      selected_sizes.push(\n        ''+i\n      )\n      sizes.push(\n        ''+i\n      )\n    }\n  }\n    setProductCtx({ ...productCtx,  [type]: value,sizes, selected_sizes,default_size })\n\n    }\n\n    \n\n\n\n    const handleMaterialChange = type => (event, value)  => {\n      var steps = ['Step1', 'Step2','Step6']\n      if(value)\n      {\n      if(value.indexOf('Diamond' ) > -1 || value.indexOf('Gemstone' ) > -1 )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n        }\n      setProductCtx({ ...productCtx, [type]:value,steps})\n\n    }\n\n    const handleInputChange = type => e => {\n\n                var size = productCtx.size;\n                var materials = productCtx.materials;\n                var selected_sizes = productCtx.selected_sizes;\n\n            if(type === 'selectedgender')\n                {\n                  var minvalue = 0;\n                  var maxvalue = 0;\n                  selected_sizes=[]\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Male')\n                {\n                  size = \"13-25\"\n                  minvalue = 13\n                  maxvalue = 26\n                }\n                if(productCtx.product_type_shortcode === 'R' && e.name === 'Female')\n                {\n                 size = \"8-18\"\n                 minvalue = 8\n                  maxvalue = 19\n\n                }\n\n                for(var i=minvalue; i<maxvalue;i++)\n                {\n                  selected_sizes.push(\n                    {\n                      value:i,\n                      label:\"\"+i\n                    }\n                  )\n                }\n              }\n\n              if(type === 'product_categoy')\n              {\n                  if(e.target.value === 'Platinum Jewellery')\n                  {\n                    materials.push('Platinum Jewellery')\n                    var index = materials.indexOf('Silver Jewellery');\n\n                    if(index >= 0)\n                    {\n                        materials.splice(index, 1)\n                    }\n                  }else if(e.target.value === 'Silver Jewellery')\n                  {\n                    materials.push('Silver Jewellery')\n                    var index1 = materials.indexOf('Platinum Jewellery');\n                    if(index1 >= 0)\n                    {\n                      materials.splice(index1, 1)\n                    }\n                  }else{\n                    var indexval = materials.indexOf('Silver Jewellery');\n\n                    if(indexval >= 0)\n                    {\n                        materials.splice(indexval, 1)\n                    }\n                    indexval = materials.indexOf('Platinum Jewellery');\n                    if(indexval >= 0)\n                    {\n                      materials.splice(indexval, 1)\n                    }\n                  }\n              }\n\n               setProductCtx({ ...productCtx, size ,[type]: e, materials, selected_sizes })\n\n              \n      }\n\n\n    const materialChange = type => selectedOption => {\n      //   let material = { ...productCtx.material, [type]: selectedOption }\n        var steps = ['Step1', 'Step2','Step4','Step5','Step6']\n      //   if(material.material)\n      //   {\n      //   material.material.forEach(element => {\n        let material_names = []\n          if(selectedOption)\n          {\n\n            selectedOption.forEach(element => {\n              material_names.push(element.name)\n            if(element.name === 'Diamond' || element.name === 'Gemstone' )\n            {\n            \n            if(steps.indexOf('Step3') === -1)\n            {\n              steps = ['Step1', 'Step2','Step3','Step6']\n\n            }\n\n          }\n            });\n            \n        }\n      //   });\n      // }\n\n        setProductCtx({ ...productCtx, [type]:selectedOption, steps,material_names })\n\n    }\n    const keyPress =type => e => {\n      const re = /^[a-zA-Z \\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setProductCtx({ ...productCtx, [type]: e.target.value})\n      }\n      \n   }\n    \n  return (\n    <>\n    <div>\n      {/* <FullLoader /> */}\n    <Grid container  spacing={1}>  \n    <Grid item xs={12} sm={6} spacing={1}>\n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 1\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={12} spacing={1}>\n                      <Input\n                          className={classes.helperinput}\n                          variant=\"outlined\"\n                          margin=\"dense\"\n                          fullWidth\n                          value={productCtx.productname}\n                          id=\"productname\"\n                          error = {productCtx.error_message.productname}\n                         // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\n                          name=\"productname\"\n                          label=\"Product Name\"\n                          onChange={keyPress('productname')}\n                          />\n          \n      </Grid> \n            <Grid item   className={'dropdownlayout'} xs={12} sm={6}>\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.product_categoy}\n                      onChange={handleoptionChange('product_categoy')}\n                      options={productCtx.masterData.category.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Product Category\"\n                        margin=\"dense\"\n                        error = {productCtx.error_message.product_categoy}\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n\n            </Grid>\n      <Grid    item xs={12} sm={6} spacing={1}>\n            \n                  <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.product_type}\n                    options={productCtx.masterData.product_type}\n                    onChange={handleoptionChange('product_type')}\n                    \n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Product Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.product_type}\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n            </Grid>\n\n     \n          \n      </Grid>\n      </CardContent>\n      </Card>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      { productCtx.product_type ? <>\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Product Information 2\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>   \n      { productCtx.product_type ? <>              \n              <Grid item xs={12} sm={6}>\n  \n                  <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.material_names}\n                      options={productCtx.masterData.material.map(option => option.label)}\n                      onChange={handleMaterialChange('material_names')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Select Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      error = {productCtx.error_message.material_names}\n                      fullWidth\n  \n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              </Grid>\n           \n          \n  \n          \n  \n                </> : null } \n                <Grid item xs={12} sm={6}>\n                         <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.selectedgender}\n                    options={productCtx.masterData.gender.map(option => option.label)}\n                    onChange={handleGenderChange('selectedgender')}\n\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Gender\"\n                    margin=\"dense\"\n                    error = {productCtx.error_message.selectedgender}\n\n                    variant=\"outlined\"\n                    fullWidth\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                  {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\n\n            </Grid>  \n      <Grid item xs={6} sm={6}>      \n                  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel = {option => option.label}\n                    defaultValue={productCtx.metalpurity}\n                    options={productCtx.masterData.metalpurity}\n                    onChange={handleoptionChange('metalpurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.metalpurity}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\n          \n        </Grid>\n        <Grid item xs={6} sm={6}>\n      \n                <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    defaultValue={productCtx.metalcolour}\n                    options={productCtx.masterData.metalcolour}\n                    onChange={handleoptionChange('metalcolour')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.metalcolour}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n</Grid>\n      \n        </Grid>\n      </CardContent>\n      </Card>\n      </> : null}\n</Grid>\n</Grid>\n<Grid container  spacing={1}>  \n\n<Grid item xs={12} sm={6}>\n{ productCtx.product_type ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Vendor Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={1}>  \n      <Grid item xs={12} sm={6}>\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.vendorcode}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.vendorcode}\n                    onChange={handleoptionChange('vendorcode')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Vendor Code\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    error = {productCtx.error_message.vendorcode}\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid> \n            <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Product Code\"\n                      fullWidth\n                      className={classes.helperinput} \n                      value={productCtx.productvendorcode}\n                      error = {productCtx.error_message.productvendorcode}\n                      id=\"productvendorcode\"\n                      name=\"productvendorcode\"\n                      onChange={handleTextChange('productvendorcode')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n                    <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      label=\"Vendor Lead Time\"\n                      fullWidth\n                      className={classes.helperinput} \n                      error = {productCtx.error_message.vendorleadtime}\n                      value={productCtx.vendorleadtime}\n                      InputLabelProps={{ shrink: productCtx.vendorleadtime }}\n                      id=\"vendorleadtime\"\n                      name=\"vendorleadtime\"\n                      onChange={handleTextChange('vendorleadtime')}\n                      />\n\n          </Grid>\n          <Grid item xs={12} sm={6} spacing={1}>\n\n          <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">IsReorderable</FormLabel>\n          <RadioGroup aria-label=\"position\" name=\"position\" value={productCtx.isreorderable} onChange={switchisorderable} row>\n            <FormControlLabel\n              value=\"Yes\"\n              \n              control={<Radio color=\"primary\" \n               />}\n              label=\"Yes\"\n              labelPlacement=\"right\"\n            />\n            <FormControlLabel\n              value=\"No\"\n              control={<Radio  color=\"primary\" />}\n              label=\"No\"\n              labelPlacement=\"right\"\n            />\n            </RadioGroup>\n            </FormControl>\n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> </>: null}\n\n\n\n   </Grid>\n    <Grid item xs={12} sm={6}>\n    <Grid container  spacing={1}> \n    <Grid item xs={12} sm={12}>\n\n{ productCtx.product_type ? \n\n  <Card\n    {...rest}\n    className={clsx(classes.root, className)}\n  >\n    <CardHeader title=\"Default SKU For Display\n  \" />\n    <Divider />\n    <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} alignItems=\"center\" spacing={2}>\n      \n      \n      \n      \n      <Grid item xs={6} >\n  \n                    <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_colour}\n                        onChange={handleoptionChange('default_metal_colour')}\n                        options={productCtx.metalcolour.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Colour\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          error = {productCtx.error_message.default_metal_colour}\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n      </Grid>\n      <Grid item xs={6} >\n             \n  \n                  <Autocomplete\n                        id=\"product_category\"\n                        className={classes.fixedTag}\n                        defaultValue={productCtx.default_metal_purity}\n                        onChange={handleoptionChange('default_metal_purity')}\n                        options={productCtx.metalpurity.map(option => option.label)}\n                        renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Metal Purity\"\n                          margin=\"dense\"\n                          error = {productCtx.error_message.default_metal_purity}\n                          variant=\"outlined\"\n                          fullWidth\n  \n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n     \n      </Grid>\n      </Grid>\n      </CardContent>\n      </Card> : null }\n      \n    </Grid>\n    </Grid> \n    <Grid item xs={12} sm={12}>\n\n    {(productCtx.product_type && (productCtx.product_type.shortCode  === 'K' || productCtx.product_type.shortCode  === 'R') && productCtx.sizes.length > 0 ) ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Size Information\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}> \n      <Grid item xs={6} >\n               \n               <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       className={classes.fixedTag}\n                       defaultValue={productCtx.selected_sizes}\n                       options={productCtx.sizes}\n                       onChange={handleoptionChange('selected_sizes')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Ring Sizes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       error = {productCtx.error_message.selected_sizes}\n\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n               </Grid> \n\n\n               <Grid item xs={6} >\n               \n               <Autocomplete\n                    id=\"product_type\"\n                    className={classes.fixedTag}\n                    freeSolo\n                    defaultValue={productCtx.default_size}\n                    options={productCtx.selected_sizes}\n                    onChange={handleoptionChange('default_size')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                      }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Select Default Size\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.default_size}\n\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                  />\n               </Grid> \n     \n      \n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n    </Grid>\n    <Grid item xs={12} sm={12}>\n{ (productCtx.product_type && productCtx.product_type.alias  === 'Earrings') ? <>\n  <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>  \n      \n        <Grid item xs={12} >\n               \n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    defaultValue={productCtx.earringbacking}\n                    options={productCtx.masterData.earringbacking.map(option => option.label)}\n                    onChange={handleoptionChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Earring Backing\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n      </Grid>\n          </CardContent>\n      </Card> </>: null}\n\n      </Grid>\n   \n    </Grid>\n</Grid>\n<Grid container  spacing={1}>  \n    \n</Grid>\n   \n      \n\n            \n\n\n               \n      </div>\n\n     </>\n  );\n}","import React from 'react';\nimport styled from '@emotion/styled';\nimport Select from 'react-select';\nimport { View, Text} from \"react-primitives\";\nimport \"../screens/Productupload/Productupload.css\"\n\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\n  position: 'absolute',\n  transition: 'all .25s',\n  pointerEvents: 'none',\n  top: placeholderUp ? -8 : 10,\n  left: 8,\n  zIndex: placeholderzindex,\n  paddingLeft: 8,\n  paddingRight: 8,\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\n  fontSize: placeholderUp ? 12 : 15,\n  color: placeholderUp ? '#3F51B5' : '#263238',\n}));\n\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\n  position: 'relative',\n  display: 'flex',\n  zIndex: selectzindex\n}));\n\nconst SelectView = props => {\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\n  return (\n    <SelectContainer selectzindex={selectzindex}>\n      <Select \n        fullWidth\n        isClearable\n      {...props} placeholder=\"\" />\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\n    </SelectContainer>\n  );\n};\n\nclass SelectPlaceholder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      placeholderUp: false,\n      placeholderzindex : 1\n    };\n  }\n\n  onFocus = () => {\n    const { onFocus } = this.props;\n    this.setState({ placeholderUp: true });\n    onFocus && onFocus();\n  };\n\n  onBlur = () => {\n    const { value, onBlur } = this.props;\n    onBlur && onBlur();\n  };\n\n  render() {\n    return (\n      <SelectView\n      className={'dropdownlayout'}\n        fullWidth\n        {...this.props}\n        onBlur={this.onBlur}\n        onFocus={this.onFocus}\n      />\n    );\n  }\n}\n\nexport default SelectPlaceholder;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\nimport {Checkbox,\n  Card,\n  CardHeader,\n  TextField,\n  Divider,\n  Chip,\nCardContent} from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Select from 'react-select';\nimport {Input} from '../../components/Input.js'\nimport FormGroup from '@material-ui/core/FormGroup';\nimport { ProductContext } from '../../context';\nimport Box from '@material-ui/core/Box';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\n\nimport \"./Productupload.css\"\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n}));\n\n\nexport default function PaymentForm(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const materialChange = type => e => {\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\n    setProductCtx({ ...productCtx, selected_metal_colour })\n    }\n  const purityChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]:selectedOption })\n\n  }\n  const handleoptionChange = type => (event, value) => {\n  \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n\n  return (\n    <React.Fragment>\n<Grid container  spacing={1}> \n    <Grid item xs={12} sm={6}>\n      <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n      <Grid container spacing={1}>\n      <Grid item container xs={12} sm={12}>\n      <Grid item xs={6} sm={3}>\n\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\n                  <Input\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      disabled\n                      id=\"size\"\n                      onChange={handleInputChange('product_code')}\n                      name=\"size\"\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\n                      \n                      />\n                      </Grid>\n     </Grid>\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\n      <>\n     <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Height\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_height')}\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\n          \n          />\n     </Grid> \n\n    <Grid item xs={4} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Width\"\n          name=\"size\"\n          onChange = {handleInputChange('metal_width')}\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\n\n          autoComplete=\"size\"\n          \n          />\n    </Grid>\n    </>\n     }\n      \n   \n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\n\n      <Input\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Length\"\n          name=\"size\"\n          autoComplete=\"size\"\n          onChange = {handleInputChange('metal_length')}\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\n\n          />\n    </Grid> : null }\n  \n</Grid>\n</CardContent>\n</Card>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Enter weights for different Purity\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container spacing={1}>\n\n    <Grid item xs={12}>\n\n    </Grid>\n    {productCtx.metalpurity.map(row => (\n  \n  <Grid item container xs={12} spacing={2} >\n    \n    <Grid item xs={6} >\n\n      <Input\n    variant=\"outlined\"\n    disabled\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Purity\"\n    name=\"size\"\n    autoComplete=\"size\"\n    value={row.name}\n    />\n</Grid>\n    <Grid item xs={6} >\n\n<Input\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    id=\"size\"\n    label=\"Weight\"\n    name=\"size\"\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\n    autoComplete=\"size\"\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\n    />\n</Grid>\n    </Grid> ))}\n\n      </Grid>\n      </CardContent>\n</Card>\n</Grid>\n<Grid item xs={12} sm={6}>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={6} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.themes}\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={6}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.prod_styles}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleoptionChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.occassions}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleoptionChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        error = {productCtx.error_message.collections}\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n              </Grid>\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\n              <>\n               <Grid item xs={12} sm={6} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleoptionChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"No of Stones\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={6}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleoptionChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Stone Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    </> : null }\n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n\n</Grid>\n</Grid>\n    </React.Fragment>\n  );\n}","import React,{useState} from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from 'react-select';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Box from '@material-ui/core/Box';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Paper from '@material-ui/core/Paper';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  TextField,\n  Divider,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./Productupload.css\"\nimport { func } from 'prop-types';\n\n  const useStyles = makeStyles(theme => ({\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    root:{\n      marginTop: theme.spacing(2)\n    },\n    table:{\n      marginTop: theme.spacing(2)\n    },\n    button: {\n      margin: theme.spacing(0),\n    },\n    paper: {\n      padding: theme.spacing(2),\n      width: '100%'\n    },\n    gempapper: {\n      padding: theme.spacing(2),\n      marginTop: theme.spacing(2),\n      width: '100%'\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  \nexport default function Review(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n  const { className, ...rest } = props;\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption })\n  };\n  function editmaterial(name) {\n    clearmetalvalue();\n    assignvalue(productCtx.metals[name], name);\n  }\n  function deletematerial(name) {\n    clearmetalvalue();\n    var metalsarr  = productCtx.metals;\n    metalsarr.splice(name,1)\n    setProductCtx({ ...productCtx, metals: metalsarr }) \n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    \n      setProductCtx({ ...productCtx, [type]: value})\n\n  }\n  function clearmetalvalue()\n  {\n    // for(let value in initialState){\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\n    //     setProductCtx({  \n    //       [value]:initialState[value]\n    //     })\n    //   }\n    // }\n    setProductCtx({...productCtx,\n      diamondsettings: \"\",\n      diamondcolor:\"\",\n      diamondclarity:\"\",\n      diamondshape:\"\",\n      diamondcount:\"\",\n      diamondweight:\"\",\n      gemstonetype:\"\",\n      gemstoneshape:\"\",\n      gemstonesettings:\"\",\n      gemstonesize:\"\",\n      gemstonecount:\"\",\n      gemstoneweight:\"\"\n    })\n    // alert(productCtx)\n    // console.log(productCtx)\n    \n\n  }\n  function assignvalue(metalobj, indexval)\n  {\n    if(metalobj.metalname === 'Diamond')\n    {\n    setProductCtx({ ...productCtx, \n      diamondsettings: metalobj.settings,\n      diamondcolor:metalobj.color,\n      diamondclarity:metalobj.clarity,\n      diamondshape:metalobj.shape,\n      diamondcount:metalobj.count,\n      diamondweight:metalobj.weight,\n    metalindex: indexval})\n    }else\n    {\n      setProductCtx({ ...productCtx, \n        gemstonesettings: metalobj.settings,\n        gemstoneshape:metalobj.color,\n        gemstonetype:metalobj.clarity,\n        gemstonesize:metalobj.shape,\n        gemstonecount:metalobj.count,\n        gemstoneweight:metalobj.weight,\n      metalindex: indexval})\n    }\n\n  }\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    var stonedetails = {};\n    stonedetails['metalname'] = productCtx.metal.label;\n    var isvalid = true\n    if(productCtx.diamondclarity)\n    {\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\n      productCtx.diamondweight)\n      {      stonedetails['metalname'] = \"Diamond\"\n    stonedetails['settings'] = productCtx.diamondsettings;\n    stonedetails['color'] = productCtx.diamondcolor;\n    stonedetails['clarity'] = productCtx.diamondclarity;\n    stonedetails['shape'] = productCtx.diamondshape;\n    stonedetails['count'] = productCtx.diamondcount;\n    stonedetails['weight'] = productCtx.diamondweight;\n      }else\n      {\n        isvalid = false\n        alert(\"Fill all fields\")\n      }\n\n    }else{\n      if(productCtx.gemstonetype && \n        productCtx.gemstoneshape && \n        productCtx.gemstonesettings && \n        productCtx.gemstonesize && productCtx.gemstonecount &&\n        productCtx.gemstoneweight)\n        { \n      stonedetails['metalname'] = \"Gemstone\"\n      stonedetails['clarity'] = productCtx.gemstonetype;\n      stonedetails['color'] = productCtx.gemstoneshape;\n      stonedetails['settings'] = productCtx.gemstonesettings;\n      stonedetails['shape'] = productCtx.gemstonesize;\n      stonedetails['count'] = productCtx.gemstonecount;\n      stonedetails['weight'] = productCtx.gemstoneweight;\n    }else\n    {\n      isvalid = false\n      alert(\"Fill all fields\")\n    }\n    }\n\n    if(isvalid)\n    {\n    if(productCtx.metalindex === -1)\n    {\n      stonedetails['id'] = metalsarr.length;\n\n      metalsarr.push(stonedetails) \n\n    }else\n    {\n      stonedetails['id'] = productCtx.metalindex\n\n      metalsarr[productCtx.metalindex] = stonedetails;\n    }\n    setProductCtx({ ...productCtx, metals: metalsarr })\n    clearmetalvalue()\n  }\n  }\n\n  return (\n    <React.Fragment>\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \n\n      <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n      fullWidth\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container xs={12} spacing={1}>\n\n        <Grid container xs={12} spacing={1}>\n\n        <Grid item xs={4} >\n                   \n\n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondclarity}\n                    options={productCtx.masterData.diamondclarities}\n                    onChange={handleoptionChange('diamondclarity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Type/Clarity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n        </Grid>\n\n        <Grid item xs={4} >\n        \n                      \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondcolor}\n                    options={productCtx.masterData.diamondcolors}\n                    onChange={handleoptionChange('diamondcolor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Colour\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          \n\n            <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        </Grid>\n        <Grid item xs={4} >\n      \n       \n                      <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n        \n        </Grid>\n        <Grid item xs={4} >\n        \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n        </Grid>\n        <Grid item xs={4} >\n      \n          <Input\n              variant=\"outlined\"\n              fullWidth\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n        </Grid>\n        <Grid container item xs={12} justify=\"flex-end\">\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\n            Add Diamond\n          </Button>\n\n        </Grid>\n        </Grid>\n      </Grid>\n      \n        </CardContent>\n        </Card>\n   }\n\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \n\n  \n       <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n\n          <Grid  container xs={12} spacing={1}>\n\n      <Grid item xs={4} >\n      \n                 \n                       <Autocomplete\n                    \n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonetype}\n                    options={productCtx.masterData.gemstontypes}\n                    onChange={handleoptionChange('gemstonetype')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Type\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n              \n      </Grid>\n    \n      <Grid item xs={4} >\n    \n          \n\n<Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstoneshape}\n                    options={productCtx.masterData.gemstonshapes}\n                    onChange={handleoptionChange('gemstoneshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      \n      </Grid>\n      <Grid item xs={4} >\n      \n          \n                    <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.gemstonesettings}\n                    options={productCtx.masterData.gemstonesettings}\n                    onChange={handleoptionChange('gemstonesettings')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Gemstone Setting\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n      </Grid>\n      <Grid item xs={4} >\n    \n      <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Gemstone Size\"\n            name=\"size\"\n            onChange={handleInputChange('gemstonesize')}\n            autoComplete=\"size\"\n            value={productCtx.gemstonesize}\n            />\n      \n      \n      </Grid>\n      <Grid item xs={4} >\n      \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"#of Stones\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstonecount')}\n            value={productCtx.gemstonecount}\n            />\n      </Grid>\n      <Grid item xs={4} >\n        \n        <Input\n            variant=\"outlined\"\n            fullWidth\n            id=\"size\"\n            margin=\"dense\"\n            label=\"Weight\"\n            name=\"size\"\n            autoComplete=\"size\"\n            onChange={handleInputChange('gemstoneweight')}\n            value={productCtx.gemstoneweight}\n            />\n      </Grid>\n      <Grid container item xs={12} justify=\"flex-end\">\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\n          Add Gemstone\n        </Button>\n\n      </Grid>\n      </Grid>\n            </CardContent>\n            </Card>}\n\n            <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n    <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Stone</TableCell>\n            <TableCell align=\"right\">Type/Clarity</TableCell>\n            <TableCell align=\"right\">Colour</TableCell>\n            <TableCell align=\"right\">Setting</TableCell>\n            <TableCell align=\"right\">Shape</TableCell>\n            <TableCell align=\"right\">#of stone</TableCell>\n            <TableCell align=\"right\">Weight</TableCell>\n            <TableCell align=\"center\">Edit</TableCell>\n            <TableCell align=\"center\">Delete</TableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {productCtx.metals.map(row => (\n            <TableRow key={row.metalname}>\n              <TableCell component=\"th\" scope=\"row\">\n                {row.metalname}\n              </TableCell>\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\n              <TableCell align=\"right\">{row.color.label}</TableCell>\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\n              <TableCell align=\"right\">{row.count}</TableCell>\n              <TableCell align=\"right\">{row.weight}</TableCell>\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\n\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      </CardContent>\n      </Card>\n         \n </React.Fragment>\n  );\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Grid from '@material-ui/core/Grid';\nimport {Input} from '../../components/Input.js'\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from 'react-select';\nimport Chip from '@material-ui/core/Chip';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport { ProductContext } from '../../context';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Multiselect from '../../components/Select';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\nCardContent} from '@material-ui/core';\n  const useStyles = makeStyles(theme => ({\n    root: {\n      marginTop: theme.spacing(2)\n    },\n    fixedTag: {\n      padding: 0,\n      '& .MuiOutlinedInput-root':{\n        padding: 0,\n      }\n    },\n    button: {\n      margin: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n    rightIcon: {\n      marginLeft: theme.spacing(1),\n    },\n    iconSmall: {\n      fontSize: 20,\n    },\n  }));\n  function createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n  }\n  \n  const rows = [\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n    createData('Eclair', 262, 16.0, 24, 6.0),\n    createData('Cupcake', 305, 3.7, 67, 4.3),\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\n  ];\nexport default function Review(props) {\n  const classes = useStyles();\n  const { className, ...rest } = props;\n\n  const theme = useTheme();\n  const inputLabel = React.useRef(null);\n\n\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\n  }\n  const handleChange = type => selectedOption => {\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\n  };\n  const handlemetalcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\n  };\n  const handlediamndcolorChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\n  };\n  const handlediamndclarityChange = selectedOption => {\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\n  };\n\n  const handlemetalpurityChange = selectedOption => {\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\n  };\n  function handleClick(e) {\n    var metalsarr  = productCtx.metals;\n    metalsarr.push(\"test\") \n    setProductCtx({ ...productCtx, metals: metalsarr })\n  }\n  return (\n    <React.Fragment>\n<Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Default SKU For Display\n\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\n    \n    \n    \n    \n    <Grid item xs={4} >\n\n                  \n                \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_colour}\n                      onChange={handleChange('default_metal_colour')}\n                      options={productCtx.metalcolour}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Colour\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={4} >\n           \n\n                <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_purity}\n                      onChange={handleChange('default_metal_purity')}\n                      options={productCtx.metalpurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Metal Purity\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid>\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \n    <Grid item xs={4} >\n           \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      isDisabled \n                      className={classes.fixedTag}\n                      defaultValue={productCtx.default_metal_size}\n                      onChange={handleChange('default_metal_size')}\n                      options={productCtx.selected_sizes}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Default Size\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n   \n    </Grid> : null}\n    {/* <Grid item xs={3} >\n                <Select\n                    value={productCtx.diamond_colour}\n                    placeholder=\"Diamond Colour\"\n                    onChange={handlediamndcolorChange}\n                    options={productCtx.masterData.diamondcolors}\n                  />\n   \n    </Grid>\n    <Grid item xs={3} >\n    <Select\n                    value={productCtx.diamond_clarity}\n                    placeholder=\"Diamond Clarity\"\n                    onChange={handlediamndclarityChange}\n                    options={productCtx.masterData.diamondclarities}\n                  />\n\n    </Grid>                 */}\n    \n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  Divider,\n  Chip,\n  TextField,\nCardContent} from '@material-ui/core';\nimport { ProductContext } from '../../context';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n}));\n\nexport default function Review(props) {\n  const classes = useStyles();\n\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { className, ...rest } = props;\n  const handleChange = type => (event, value) => {\n    setProductCtx({ ...productCtx, [type]: value  })\n\n  };\n \n  \n  return (\n    <React.Fragment>\n         <Card\n  {...rest}\n  className={clsx(classes.root, className)}\n>\n  <CardHeader title=\"Type of Fit\" />\n  <Divider />\n  <CardContent className={classes.cardcontent}>\n    <Grid container xs={12} sm={12} spacing={2}>\n    <Grid item xs={6} sm={4} >\n                   \n                      \n           <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.themes}\n                      onChange={handleChange('themes')}\n                      options={productCtx.masterData.themes.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Select Themes\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n           \n           \n            </Grid>\n   \n    <Grid item xs={12} sm={4}>\n                     \n    \n\n              <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.prod_styles}\n                      onChange={handleChange('prod_styles')}\n                      options={productCtx.masterData.styles.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Style\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n      \n    \n          <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.occassions}\n                      onChange={handleChange('occassions')}\n                      options={productCtx.masterData.occasions.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Occasions\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n  \n   \n\n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.collections}\n                      onChange={handleChange('collections')}\n                      options={productCtx.masterData.collections.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4} >\n    \n                  <Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecount}\n                      onChange={handleChange('stonecount')}\n                      options={productCtx.masterData.stones.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    <Grid item xs={12} sm={4}>\n    \n  \n\n<Autocomplete\n                      id=\"product_category\"\n                      multiple\n                      className={classes.fixedTag}\n                      defaultValue={productCtx.stonecolour}\n                      onChange={handleChange('stonecolour')}\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Collections\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  />\n    </Grid>\n    \n    \n    </Grid>\n    \n        <Grid item xs={6} >\n        </Grid>\n        </CardContent>\n        </Card>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\n\n // Import React FilePond\n import { FilePond, registerPlugin } from 'react-filepond';\n import TextField from '@material-ui/core/TextField';\n\n // Import FilePond styles\n import 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n\n// Register the plugins\n \nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { file } from '@babel/types';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview,FilePondPluginImageValidateSize,FilePondPluginFileRename);\n\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n      },\n      paper: {\n        height: 140,\n      },\n      img: {\n        height: '100%',\n        width:'100%',\n        objectFit:'contain'\n      },\n      control: {\n        padding: theme.spacing(2),\n      },\n      input: {\n        display: 'none',\n      },\n  }));\n  \n  \n  \n  \nexport default function Review() {\n  let count= 0;\n  const classes = useStyles();\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalcolour, setMetalcolour] = React.useState([]);\n  const [files, setFiles] = React.useState([]);\n  const [images,setImages] = React.useState({});\n  React.useEffect(() => {\n    let metalcolour = []\n    let product_images = [];\n\n    productCtx.metalcolour.forEach(element => {\n      if(element.name === productCtx.default_metal_colour)\n      {\n        product_images[element.name] = [] \n        if(metalcolour.length > 0)\n        {\n          metalcolour.unshift(element);\n        }else{\n          metalcolour.push(element)\n        }\n\n      }else{\n        metalcolour.push(element)\n        product_images[element.name] = []\n      }\n    })\n    setMetalcolour(metalcolour)\n\n}, []);\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype)\n  {\n      \n//alert(JSON.stringify(bodaydata))\n\n  let prodimages = productCtx.product_images;\n  if(prodimages)\n  {\n    var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n    let imagecolourobj = productCtx.product_images[imagecolor];\n    var imagecount  = 1;\n    if(imagecolourobj)\n    {\n      imagecount = imagecolourobj.length + 1;\n    }\n\n    let imagename = (prodid+\"-\"+(imagecount)+imagecolor.charAt(0));\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:bodaydata.fileExtension, filename :imagename, product_id: prodid },false)\n    var returnData = responsedata.data.returnData;\n    var signedRequest = returnData.signedRequest;\n    var url = returnData.url;\n    console.log(\"responseurl\"+url);\n    var filepathname = returnData.filepath\n    filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n    var options = {\n        headers: {\n            'Content-Type': bodaydata.fileExtension,\n            'Access-Control-Allow-Origin':'*'\n        }\n    };\n    \n    if(imagecolourobj)\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_\"+(imagecolourobj.length+1)+imagecolor.charAt(0)),\n        \"position\":(imagecolourobj.length+1),\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      if(uploadtype === 'edit')\n      {\n        imagecolourobj[imageposition] = imageobj;\n\n      }else\n      {\n        imagecolourobj.push(imageobj)\n\n      }\n      prodimages[imagecolor] = imagecolourobj;\n\n    }else\n    {\n      const imageobj = {\n        \"name\": (prodid+\"_1\"+imagecolor.charAt(0)),\n        \"position\":imageposition,\n        \"color\":imagecolor,\n        \"image_url\":filepathname,\n        \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n      }\n      imagecolourobj = [];\n      imagecolourobj.push(imageobj)\n    }\n    prodimages[imagecolor] = imagecolourobj;\n  \n    setProductCtx({ ...productCtx, product_images: prodimages })\n    // setFiles([])\n  }\n  await axios.put(signedRequest, bodaydata.file, options)\n\n  \n\n  }\n\n  function removefiles(imageposition, imagecolor)\n  {\n  \n\n    let prodimages = productCtx.product_images;\n\n  if(prodimages)\n  {\n    let imagecolourobj = prodimages[imagecolor];\n\n    if(imagecolourobj)\n    {\n      if(imagecolourobj.length > imageposition)\n      {\n        let removedfile = imagecolourobj[imageposition]\n\n      imagecolourobj[imageposition] = {...removedfile, url: \"\"}\n\n      }\n\n    }\n    prodimages[imagecolor] = imagecolourobj;\n    setProductCtx({ ...productCtx, product_images: prodimages })\n//alert(JSON.stringify(productCtx.product_images))\n  }\n  }\n  \n const handleInit = () =>\n    {\n     // alert(\"initialized\")\n    }\n  return (\n    <React.Fragment>\n         <Grid container className={classes.root} spacing={2}>\n\n     <Grid item direction=\"row\" xs={12}>\n       <Grid container  justify=\"left\" spacing={2}>\n\n          {metalcolour === undefined ? null : metalcolour.map((value,index) => ( \n            <Grid xs={12} container spacing={1} item>\n            <Grid  xs={12}  item>\n\n             <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {value.name}\n             </Typography> \n             </Grid>\n             {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\n\n            <Grid  xs={3} alignItems=\"center\" item>\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            {row.url}\n             </Typography> \n           {row.url.length === 0 ? <FilePond \n                          labelIdle=\"Image For\"\n                          allowMultiple={true}\n                          maxFiles={3}  \n                          files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}>\n                </FilePond> :  <FilePond \n                          labelIdle=\"Image For\"\n                          files={[{\n                            source: row.url,\n                            options: {\n                                type: 'local'\n                            }\n                        }]}\n                          server={{\n                            load: (source, load) => {\n                                // simulates loading a file from the server\n                                fetch(source).then(res => \n                                  \n                                  res.blob()).then(load);\n                            }\n                        }} \n                          onupdatefiles={fileItems => {\n                              // Set currently active file objects to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItems)=> {\n                            \n                          }}\n                          onremovefile={(error, fileItem)=>{\n                            removefiles(imageindex, value.name)\n                          }}>\n                </FilePond>\n               \n                \n                         } </Grid>\n             ))} */}\n            <Grid xs={12} sm={12} md={12} item>\n              <FilePond  \n                          allowImageValidateSize\n                          imageValidateSizeMinWidth=\"2400\"\n                          imageValidateSizeMinHeight=\"2400\"\n                          imageValidateSizeMeasure={(file)=>new Promise((resolve,reject)=>{\n                            console.log(file);\n                            console.log('filepond property');\n                            debugger;\n                          })}\n                          labelIdle=\"Upload Image\" \n                          allowMultiple={true}  \n                          //files = {files}\n                          onupdatefiles={fileItem => {\n                              // Set currently active file objectsfiles to this.state\n                            \n                          }}\n                          onaddfile={(error, fileItem)=> {\n                            uploadimagetoserver(fileItem, index, value.name, \"add\")\n                          }}\n                          onremovefile={(error, fileItem)=>{\n\n                          }}\n                          fileRenameFunction={\n                            (file) => new Promise(resolve => {\n                              var prodid = \"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)\n                              let imagecolourobj = productCtx.product_images[value.name];\n                              var imagecount  = 1;\n                              if(imagecolourobj)\n                              {\n                                imagecount = imagecolourobj.length + 1;\n                              }\n                              let imagename = (prodid+\"_\"+(imagecount)+value.name.charAt(0))+file.extension;\n                              resolve(imagename)\n                              \n                          })\n                           } \n                          >\n                </FilePond>\n                {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\n                <Grid  xs={8} item>\n\n                <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      fullWidth\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\n                      id=\"imagename\"\n                      name=\"imagename\"\n                      label=\"imagename\"\n                      />  \n                                        </Grid>          \n\n                <Grid  xs={4}  item>\n\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"small\"\n                    className={classes.button}\n                  >Upload</Button> \n                                    </Grid>          \n  \n                  </Grid>           */}\n            </Grid>\n            \n            </Grid>\n           ))} \n       </Grid>\n     </Grid>\n\n    </Grid>\n \n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\n\n\n  \n  \n  \n  \nexport default function Review() {\n \n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n            Page Not Found\n          </Typography> \n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport ReactDOM from 'react-dom';\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\nimport 'react-pivottable/pivottable.css'\nimport Typography from '@material-ui/core/Typography';\nimport { ProductContext } from '../../context';\nimport TableRenderers from 'react-pivottable/TableRenderers';\nimport createPlotlyComponent from 'react-plotly.js/factory';\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\n\n// create Plotly React component via dependency injection\nconst Plot = createPlotlyComponent(window.Plotly);\n\n// create Plotly renderers via dependency injection\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\n\n// see documentation for supported input formats\nconst data = [{\n'id':'1',\n'productid':'SE30002',\n'productname':'Gold Ring', \n'purity':'18K',\n'material':'Gold',\n'diamondcolor':'EF',\n'diamondclarity':'VVS',\n'gemstone':'Navrathna',\n'size':'18',\n'costprice':30000,\n'sellingprice':38000,\n'margin':8000\n}, \n{\n  'id':'2',\n  'productid':'SE30002',\n  'productname':'Diamond Ring', \n  'purity':'18K',\n  'material':'Diamond',\n  'diamondcolor':'EF',\n  'diamondclarity':'VVS',\n  'gemstone':'Navrathna',\n  'size':'12',\n  'costprice':70000,\n  'sellingprice':98000,\n  'margin':28000\n  }\n];\n\n  \n  const dimensions = [\n    {value: 'firstName', title: 'First Name'}\n  ]\n\n  const reduce = function(row, memo) {\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\n    return memo\n  }\n\n  const calculations = [\n    {\n      title: 'Amount', value: 'amountTotal',\n      template: function(val, row) {\n        return '$' + val.toFixed(2)\n      },\n      sortBy: function(row) {\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\n      }\n    }\n  ]\n  \n  \n  \nexport default function Pivot(props) {\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\n  function setcurrentstate(s)\n  {\n    setProductCtx({ ...productCtx, s })\n\n  }\n  return (\n    <React.Fragment>\n    <Grid container xs={12} spacing={2}>\n    <Grid item xs={12} >\n    <PivotTableUI\n                data={data}\n                onChange={s => setcurrentstate(s)}\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\n                {...productCtx.s}\n\n          />\n    </Grid>\n    \n        </Grid>\n </React.Fragment>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport PaymentForm from './PaymentForm';\nimport Review from './Review';\nimport { Grid } from '@material-ui/core';\nimport Collapse from '@material-ui/core/Collapse';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport Step4 from './Step4';\nimport Step5 from './Step5';\nimport Step6 from './Step6';\nimport Step7 from './Step7';\nimport Step8 from './Step8';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { ProductContext } from '../../context';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport { element } from 'prop-types';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n    background: \"#fff\"\n  },\n  stepper: {\n    padding: theme.spacing(1, 0, 1),\n    background: \"#fff\"\n\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\n\nfunction getStepContent(step) {\n  switch (step) {\n    case \"Step1\":\n    return <AddressForm />;\n    case \"Step2\":\n      return <PaymentForm />;\n    case \"Step3\":\n      return <Review />;\n    case \"Step4\":\n      return <Step5 />;\n    case \"Step5\":\n      return <Step4 />;  \n    case \"Step6\":\n      return <Step6 />;\n  \n    case \"Step7\":\n      return <Step7 />;    \n    default:\n      throw new Error('Unknown step');\n  }\n}\n\nexport default function Productupload() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const { productCtx,setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [failure, setfailure] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClick = () => {\n    setSuccess(true);\n  };\n \n  const handleClose =  (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setSuccess(false);\n  };\n  const handleNext = async () => {\n    var isvalid = true;\n    var  error_content = {}\n    // if(productCtx.error_message)\n    // {\n    //   error_content = productCtx.error_message\n\n    // }\n\n    if(activeStep === 0)\n    {\n    if(!productCtx.product_type)\n    {\n      isvalid = false\n      error_content['product_type'] = \"Error messsage\";\n     \n    }\n    if(!productCtx.productname)\n    {\n      isvalid = false\n      error_content['productname'] = \"Error messsage\" \n    }\n    if(!productCtx.product_categoy)\n    {\n      isvalid = false\n      error_content['product_categoy'] = \"Error messsage\" \n    }\n\n    if(!productCtx.metalcolour)\n    {\n      isvalid = false\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    if(!productCtx.material_names)\n    {\n      isvalid = false\n      error_content['material_names'] = \"Error messsage\" \n    }\n    if(!productCtx.metalpurity || productCtx.metalpurity.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalpurity'] = \"Error messsage\" \n    }\n    if(!productCtx.metalcolour || productCtx.metalcolour.length === 0)\n    {\n      isvalid = false\n\n      error_content['metalcolour'] = \"Error messsage\" \n    }\n    \n    if(!productCtx.vendorcode)\n    {\n      isvalid = false\n      error_content['vendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.vendorleadtime)\n    {\n      isvalid = false\n      error_content['vendorleadtime'] = \"Error messsage\" \n    }\n\n    if(!productCtx.default_metal_colour)\n    {\n      isvalid = false\n      error_content['default_metal_colour'] = \"Error messsage\" \n    }\n    if(!productCtx.default_metal_purity)\n    {\n      isvalid = false\n      error_content['default_metal_purity'] = \"Error messsage\" \n    }\n    if(!productCtx.productvendorcode)\n    {\n      isvalid = false\n      error_content['productvendorcode'] = \"Error messsage\" \n    }\n    if(!productCtx.earringbacking && productCtx.product_type.alias === 'Earrings' )\n    {\n      isvalid = false\n      error_content['earringbacking'] = \"Error messsage\" \n    }\n    if(!productCtx.selectedgender)\n    {\n      isvalid = false\n      error_content['selectedgender'] = \"Error messsage\" \n    }\n    if((!productCtx.selected_sizes || productCtx.selected_sizes.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['selected_sizes'] = \"Error messsage\" \n    }\n\n    if((!productCtx.default_size || productCtx.default_size.length === 0 )  && productCtx.product_type === 'Rings')\n    {\n\n      isvalid = false\n      error_content['default_size'] = \"Error messsage\" \n    }\n   // isvalid = true;\n  }\n\n  if(activeStep === 1)\n  {\n    productCtx.metalpurity.forEach( element => {\n      const keyvalue = (element.name)+'_metal_weight'\n\n      if((!productCtx[keyvalue] || productCtx[keyvalue].length === 0 ))\n    {\n      isvalid = false\n\n      error_content[keyvalue] = \"Error messsage\" \n\n    }\n    \n    })\n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if(productCtx.product_type_shortcode === 'R')\n    {\n      if(!productCtx.metal_height)\n      {\n        isvalid = false\n        error_content['metal_height'] = \"Error messsage\" \n      }\n      if(!productCtx.metal_width)\n      {\n        isvalid = false\n        error_content['metal_width'] = \"Error messsage\" \n      }\n    }\n    \n    if((!productCtx.themes || productCtx.themes.length === 0 ))\n    {\n      isvalid = false\n      error_content['themes'] = \"Error messsage\" \n    }\n    if((!productCtx.prod_styles || productCtx.prod_styles.length === 0 ))\n    {\n      isvalid = false\n      error_content['prod_styles'] = \"Error messsage\" \n    }\n    if((!productCtx.occassions || productCtx.occassions.length === 0 ))\n    {\n      isvalid = false\n      error_content['occassions'] = \"Error messsage\" \n    }\n    // if((!productCtx.collections || productCtx.collections.length === 0 ))\n    // {\n    //   isvalid = false\n    //   error_content['collections'] = \"Error messsage\" \n    // }\n\n  //  isvalid = true;\n\n\n  }\n    \n\n\n    setProductCtx({...productCtx,error_message:error_content})\n     if(activeStep === productCtx.steps.length - 1){\n      console.info('HANDLE',sendNetworkRequest);\n     const productseries = productCtx.masterData.productseries[0].productSeries\n\n      delete productCtx['masterData'];\n\n      var formdata = productCtx\n      formdata['productseries'] = productseries\n \n      setLoading(true)\n       await sendNetworkRequest('/productupload', {}, formdata)\n      setLoading(false)\n      setSuccess(true)\n      await sleep(500)\n      window.location.replace('/productlist')\n    }else{\n       if(isvalid)\n       {\n        setActiveStep(activeStep + 1);\n  \n      \n        }\n     }\n    \n\n\n\n\n\n    \n      //else\n    //  {\n    //  }\n\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n  async  function sleep(millis) {\n    return new Promise(resolve => setTimeout(resolve, millis));\n  }\n  \n  return (\n    \n    <Grid item xs={12} sm={12}  >\n       <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} >\n          Product Created Successfully\n        </Alert>\n      </Snackbar>\n\n    <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"info\">\n          Please Wait ...\n        </Alert>\n  </Snackbar> \n\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"error\">\n          Please try again\n        </Alert>\n      </Snackbar>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {productCtx.steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel></StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          </Paper>\n\n    \n          <React.Fragment>\n            {activeStep === productCtx.steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Product Added Successfully\n                  </Typography>\n                <Typography variant=\"subtitle1\">\n                  \n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(productCtx.steps[activeStep])}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Back\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                    {activeStep === productCtx.steps.length - 1 ? 'Product Upload' : 'Next'}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Grid>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from \"react-router-dom\";\nimport Component from './Component';\nimport { ProductProvider } from '../../context';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"./Productupload.css\"\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: 'auto'\n    },\n  }));\n  \nexport const Productupload = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype:  \"masterData\" }} >\n            <Component {...props} />\n        </ProductProvider>\n    )\n});\nexport default Productupload;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Configuration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            Configure\n          </Typography>\n    </Grid>\n    \n    {master_options.map((text, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {text}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Configuration;","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n\n  Chip\n\n} from '@material-ui/core';\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n \n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields(props) {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [searchtext, setSearchtext] = React.useState(\"\");\n  const [category, setCategory] = React.useState(\"\");\n  const [producttype, setProducttype] = React.useState(\"\");\n\n  // const handleinputChange =type => e => {\n  // props.searchproduct(e.target.value)\n  // }\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n  }\n  const handlecategoryChange = type => (event, value) => {\n    setCategory( value.name)\n    props.applyfilter(searchtext, value.name, producttype)\n\n}\nconst handletypeChange = type => (event, value) => {\n  setProducttype(value.name)\n  props.applyfilter(searchtext, category, value.name  )\n\n}\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n   function applyfilter() {\n     props.applyfilter(searchtext, category, producttype)\n  }\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={3} md={3} sm={3}  >\n      <Autocomplete\n                      \n                      fullWidth\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.mastercategory}\n                      onChange={handlecategoryChange('product_category')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Category\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3} >\n\n      <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\" }}\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={props.masterproducttype}\n                      onChange={handletypeChange('product_type')}\n\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Filter By Product Type\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n          <TextField fullWidth margin=\"dense\" onChange={handleinputChange('productname')} placeholder={\"Search by product name or product id\"} onChange={handleinputChange('productname')} id=\"outlined-basic\" variant=\"outlined\"  style={{ margin: \"auto\",marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }}/>\n          \n      </Grid>\n      <Grid lg={3} md={3} sm={3}>\n\n      <Button onClick={(e) => applyfilter()} color=\"primary\" variant=\"contained\" style={{ marginLeft: \"10px\", marginTop: \"18px\", marginBottom: \"10px\" }} >\n                  Search\n          </Button>\n          </Grid>\n\n    </div>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nconst columns = [\n  { id: 'vendorcode', label: 'Vendor Code' },\n  { id: 'name', label: 'Name' },\n  { id: 'Address', label: 'Address' },\n  { id: 'City', label: 'City' },\n  { id: 'gstNo', label: 'gstNo' },\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n  { id: 'updatedAt', label: 'updated on' },\n  { id: 'actions', label: 'actions' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  contantview: {\n   placeItems: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\"\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [add,setAdd] = React.useState(false)\n  const [isadd,setIsadd] = React.useState(false)\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  async function addnewvendor()\n  {\n\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \n    setIsadd(true)\n    setNewvendorcode(response.newvendorcode)\n  }\n  function Cancelcreate(refetch) {\n    window.location.reload();\n    // props.onCancel();\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      shortCode : vendordata.shortCode,\n      name : vendordata.name,\n      address : vendordata.address,\n      city : vendordata.city,\n      pincode : vendordata.pincode,\n      gstNo : vendordata.gstNo,\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n    if(!editcontent.isedit)\n    {\n      \n      editcontent['isedit'] = false\n      editcontent['shortCode'] = newvendorcode\n    }\n   \n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\n     props.onCancel()\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  // refetch()\n  if(!editcontent.isedit)\n    {\n      \n  window.location.reload();\n    }else{\n      refetch()\n    }\n\n  }\n  function CancelEdit(diamondData) {\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('product_id');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\n          <Typography  component=\"h4\" variant=\"h4\" >\n            Vendors\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\n              Add New Vendor\n            </Button>\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          { <Query\n              query={VENDORLISTS}\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> \n                              {data.allMasterVendors.nodes.map((row, index) => (\n                           <>\n                           {index == 0 && isadd ? \n                           <TableRow key={row.name}>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              contentEditable={false}\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={newvendorcode}\n                              onChange={handleInputChange('shortCode')}\n\n                              label=\"Vendor Code\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('name')}\n\n                              label=\"Vendor Name\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('address')}\n\n                              label=\"Address\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.taxValue}\n                              onChange={handleInputChange('city')}\n\n                              label=\"City\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              \n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.hsnNumber}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"vendordeliverydays\"\n                             />\n                           </TableCell>\n                           <TableCell align=\"left\">\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {new Date()}\n                                  </Moment>\n                           </TableCell>\n                           \n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\n                      </Button>\n                    </TableCell>\n                           </TableRow> : null }\n                              \n                                \n                                <TableRow key={row.name}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.shortCode}\n                                  </TableCell>\n                {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendorname\"\n                        name=\"vendorname\"\n                        value={editcontent.name}\n                        onChange={handleInputChange('name')}\n                        label=\"Vendor Name\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                           </TableCell> }\n                           {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                  <TableCell align=\"left\">\n                  <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        fullWidth\n                        id=\"vendoraddress\"\n                        name=\"vendoraddress\"\n                        value={editcontent.address}\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \n                           </TableCell> }\n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendorcity\"\n                              name=\"vendorcity\"\n                              value={editcontent.city}\n                              onChange={handleInputChange('city')}\n\n                              label=\"Vendor City\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \n                           </TableCell> }\n                                  \n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"gst_no\"\n                              name=\"gst_no\"\n                              value={editcontent.gstNo}\n                              onChange={handleInputChange('gstNo')}\n\n                              label=\"GST Number\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \n                           </TableCell> }  \n\n                           {\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \n                        <TableCell align=\"left\">\n                        <TextField\n                              variant=\"outlined\"\n                              margin=\"dense\"\n                              fullWidth\n                              id=\"vendordeliverydays\"\n                              name=\"vendordeliverydays\"\n                              value={editcontent.vendorDelivaryDays}\n                              onChange={handleInputChange('vendorDelivaryDays')}\n\n                              label=\"Vendor Delivery Days\"\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \n                           </TableCell> }\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                      <Button ><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n                                  \n                                </TableRow>\n                                </>\n\n                              ))}\n                              \n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport {\n  Button,\n  Grid,\n  TextField\n} from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst useStyles = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      '& > * + *': {\n        marginTop: theme.spacing(2),\n      },\n    },\n    loader: {\n      display: 'flex',\n      width: 100,\n      paddingLeft: 25\n    }\n  }));\nfunction Newvendor(props) {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n\n    return (\n      <Dialog\n      open={props.isopen}\n      fullWidth={true}\n      maxWidth={'md'}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n      <Grid container  spacing={2}> \n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorname\"\n            name=\"vendorname\"\n            value={\"test\"}\n            label=\"Vendor Name\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendorcode\"\n            name=\"vendorcode\"\n            value={\"test\"}\n            label=\"Vendor Code\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"organization\"\n            name=\"organization\"\n            value={\"test\"}\n            label=\"Organization\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"partnercategory\"\n            name=\"partnercategory\"\n            value={\"test\"}\n            label=\"Partner Category\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"gstno\"\n            name=\"gstno\"\n            value={\"test\"}\n            label=\"GST Number\"\n            />\n          </Grid>\n          <Grid   item xs={6} sm={6} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            // onChange={handleInputChange('vouchername')}\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n          <Grid   item xs={12} sm={12} >\n          <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            rows={3}\n            multiline\n            id=\"vendordeliverydays\"\n            name=\"vendordeliverydays\"\n            value={\"test\"}\n            label=\"Vendor Delivery Days\"\n            />\n          </Grid>\n      </Grid>\n\n      </DialogContent>\n      <DialogActions>\n      <Button  color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\">\n            Update\n          </Button>\n      </DialogActions>\n    </Dialog>\n \n    )\n}\nexport default Newvendor;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Newvendor from '../../components/Newvendor'\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\n\nexport const Vendorlist = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  \n \n  function cancelvendorcreation()\n  {\n    setIsadd(false)\n\n\n  }\n  return (\n    <>\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\n    <Grid container  spacing={2}>  \n    \n    \n    <Vendor  onCancel={cancelvendorcreation}  />\n   \n    </Grid>\n    </>\n  )\n});\n\nexport default Vendorlist;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {PRODUCTLIST,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch, FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'product_id', label: 'product id' },\n  { id: 'product_name', label: 'product name' },\n  { id: 'product_type', label: 'product type' },\n  { id: 'product_category', label: 'product category' },\n  { id: 'isactive', label: 'active' },\n  { id: 'createdAt', label: 'Created on' }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        {/* <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell> */}\n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [selected, setSelected] = React.useState([]);\n  const [order, setOrder] = React.useState('desc');\n  const [orderBy, setOrderBy] = React.useState('updatedAt');\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    getproductlist(\"\",\"\",\"\",\"\",newPage)\n\n  }\n  useEffect( () => {\n\n    getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\n  const query = props.client.query\n    query({\n      query: PRODUCTFILTERMASTER,\n      fetchPolicy: \"network-only\"\n    }).then((data) => {\n      if (data) {\n      // setProductlists(data.data.allProductLists.nodes)\n       setMastercategories(data.data.allMasterProductCategories.nodes)\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\n      }else{\n      }\n    })\n  .catch((error) => {console.log(\"smbcj\")})\n  }, [])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\n\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\n\n\n\n  };\n  function searchproduct(searchtext, productcategory, producttype)\n  {\n    let products = allproductlists.filter(l => {\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\n    });\n    setProductlists(products)\n  }\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\n{\n  let bodydata = {\n    size : pagesize ? pagesize : rowsPerPage,\n    offset : offsetValue,\n    searchtext: searchtext,\n    productcategory: productcategory,\n    producttype: producttype,\n    order: sort ? sort : order,\n    orderby : orderby ? orderby : orderBy\n  }\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\n  setProductlists(response.products.rows)\n  setPageCount(response.products.count)\n}\nfunction applyfilter(searchtext, categoryname, typename)\n{\n  getproductlist(searchtext,categoryname,typename)\n}\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} />\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {/* <Query\n              query={PRODUCTLIST(true,\"Bangles\")}\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) { \n                           return <> */}\n                              {stableSort(productlists, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.product_id}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                    {row.product_id}\n                                    <Button onClick={(e) => ProductEdit(row.product_id)}>\n                                    <EditIcon />\n                                  </Button>\n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {/* <Link target='blank_' href={row.trans_sku_lists.length > 0 ? BASE_URL+row.trans_sku_lists[0].sku_url : '-'}  variant=\"body2\"> */}\n                                    {row.product_name}\n\n                                    {/* </Link>  */}\n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.product_type}</TableCell>\n                                  <TableCell align=\"left\">{row.product_category}</TableCell>\n                                  <TableCell align=\"left\"> <FormControlLabel\n                                      label={row.isactive ? \"\" : \"\"}\n\n                                      control={\n                                        <Switch checked={row.isactive}  value=\"checkedA\" />\n                                      }\n                                    /></TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.createdAt}\n                                  </Moment>\n                                  </TableCell>\n                                  \n                                </TableRow>\n                              ))}\n                          {/* </> */}\n                       {/* }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  */}\n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from '../../components/Products'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport FullLoader from '../../components/Loader'\n\n\n\n\nexport const Productlist = withRouter(props => {\n\n   \n  \n  //alert(JSON.stringify(props.nameevent))\n   \n  return (\n    <Grid container  spacing={2}>  \n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Products\n          </Typography>\n          </Grid>\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\"}} >\n          <Link underline='none' component={RouterLink} to={'/productupload'}>\n          <Button variant=\"contained\" color=\"primary\" >\n            Add New Product\n        </Button>\n        \n        </Link>\n        </Grid>\n    </Grid>\n    <Product />\n   \n    </Grid>\n  )\n});\n\nexport default Productlist;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New Category\n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport {Grid, Chip } from '@material-ui/core';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nconst useStyles = makeStyles(theme => ({\n    card: {\n      width: '100%',\n      padding: theme.spacing(1),\n      marginTop : theme.spacing(2)\n    },\n    buttonPadding: {    \n        marginLeft: theme.spacing(2),   \n    },\n    media: {\n      height: 0,\n      paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n      transform: 'rotate(0deg)',\n      marginLeft: 'auto',\n      transition: theme.transitions.create('transform', {\n        duration: theme.transitions.duration.shortest,\n      }),\n    },\n    expandOpen: {\n      transform: 'rotate(180deg)',\n    },\n    avatar: {\n      backgroundColor: red[500],\n    },\n    chip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.success.main,\n    },\n    pendingchip: {\n      color: theme.palette.success.contrastText,\n      backgroundColor: theme.palette.secondary,\n    }\n  }));\n\nexport default function Categoryrow(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n  \n    const handleExpandClick = () => {\n      setExpanded(!expanded);\n    };\n  return (\n    \n    <Card className={classes.card}>\n\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\n            <Grid item xs={6} sm={9}>\n                    <Typography variant=\"subtitle2\" gutterBottom>\n                       mano\n                    </Typography>\n                    <Typography variant=\"caption\" gutterBottom>\n                    mani\n                    </Typography>\n            </Grid>\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\n            alignItems=\"center\"\n            justify=\"center\"\n                >\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\n            size=\"small\" /></Grid>\n             <Grid item xs={3}>\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\n            <CreateIcon />\n            </IconButton> */}\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\n            <DeleteIcon />\n            </IconButton>\n            </Grid>\n            </Grid>\n\n      </Grid>\n      \n      \n    </Card>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexGrow: 0,\n    flexShrink: 0,\n    borderRadius: theme.shape.borderRadius,\n    lineHeight: '10px',\n    fontSize: '10px',\n    height: 20,\n    minWidth: 20,\n    whiteSpace: 'nowrap',\n    padding: theme.spacing(0.5, 1)\n  },\n  rounded: {\n    borderRadius: 10,\n    padding: theme.spacing(0.5)\n  }\n}));\n\nconst Label = props => {\n  const { className, variant, color, shape, children, style, ...rest } = props;\n\n  const classes = useStyles();\n\n  const rootClassName = clsx(\n    {\n      [classes.root]: true,\n      [classes.rounded]: shape === 'rounded'\n    },\n    className\n  );\n\n  const finalStyle = { ...style };\n\n  if (variant === 'contained') {\n    finalStyle.backgroundColor = color;\n    finalStyle.color = '#FFF';\n  } else {\n    finalStyle.border = `1px solid ${color}`;\n    finalStyle.color = color;\n  }\n\n  return (\n    <Typography\n      {...rest}\n      className={rootClassName}\n      style={finalStyle}\n      variant=\"overline\"\n    >\n      {children}\n    </Typography>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  color: PropTypes.string,\n  shape: PropTypes.oneOf(['square', 'rounded']),\n  style: PropTypes.object,\n  variant: PropTypes.oneOf(['contained', 'outlined'])\n};\n\nLabel.defaultProps = {\n  style: {},\n  color: colors.grey[600],\n  variant: 'contained',\n  shape: 'square'\n};\n\nexport default Label;\n","import React from 'react';\nimport { emphasize, withStyles } from '@material-ui/core/styles';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Chip from '@material-ui/core/Chip';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport {URL} from '../../config'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[100],\n    height: theme.spacing(3),\n    color: theme.palette.grey[800],\n    fontWeight: theme.typography.fontWeightRegular,\n    '&:hover, &:focus': {\n      backgroundColor: theme.palette.grey[300],\n    },\n    '&:active': {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n  },\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\n\nfunction handleClick(event) {\n  //event.preventDefault();\n  console.info('You clicked a breadcrumb.');\n}\n\nexport default function CustomizedBreadcrumbs() {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <StyledBreadcrumb\n        component=\"a\"\n        href={URL+\"/configuration\"}\n        label=\"Configure\"\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\n      />\n      \n    </Breadcrumbs>\n  );\n}\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {CATGORYLIST} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={CATGORYLIST}\n                    onCompleted={data => setPageCount( data.allMasterProductCategories.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterProductCategories.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.shortCode} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { MaterialContext } from '../../context';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n  \nexport default function Categorycontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n  const [isadd, setIsadd] = useState(false);\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      setOrders( [\n        {\n          id: uuid(),\n          created_at: \"test\",\n          customer: {\n            name: 'Ekaterina Tankova'\n          },\n          payment: {\n            ref: 'FAD103',\n            method: 'CreditCard',\n            total: '500.00',\n            currency: '$',\n            status: 'pending'\n          },\n          status: 'inactive'\n        }])\n    };\n\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Header onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n      className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n      orders={materialCtx.materialMaster.materials}\n    />\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { MaterialProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Categorycontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const CategoryList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\n            \n    <Component {...props} />\n    </MaterialProvider>\n\n)});\nexport default CategoryList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","export const makeid = ((length, prefix,couponcount) => {\n  var count = 1;\n  var codes = []\n  if(couponcount)\n  {\n    count = couponcount;\n  }\n  let codelength = length - prefix.length\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var charactersLength = characters.length;\n  generatecode(0)\n  function generatecode(generatedcount)\n  {\n  for ( var i = 0; i < codelength; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  result = prefix.toUpperCase() + result.toUpperCase();\n  codes.push(result)\n  result = \"\"\n  generatedcount = generatedcount + 1\n  if(count > generatedcount)\n  {\n    generatecode(generatedcount);\n  }\n  }\n  return codes;\n});","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  ButtonGroup,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Switch,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState([]);\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  const handleendDateChange = val => {\n      setSelectedendDate(val)\n      setVoucherCtx({\n        ...voucherCtx,\n        \"enddate\": val\n      })\n    };\n  const handleDateChange = val => {\n    setSelectedDate(val)\n\n    setVoucherCtx({\n      ...voucherCtx,\n      \"startdate\": val\n    })\n};\n  const handleClick = (event, option) => {\n   // setDiscounttype(option);\n   setVoucherCtx({\n     ...voucherCtx,\n     \"discounttype\": option\n   })\n  };\n  const handleMinimumreq = (event, option) => {\n   // setDiscounttype(option);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"minimumreq\": option\n    })\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n    \n  };\n  const handleInputChange = type => (event, value) => {\n    setVoucherCtx({\n      ...voucherCtx,\n      \"vouchercodes\":value\n    })\n    setVouchercode(value)\n  }\n  // const handleInputChange = (event, option) => {\n  //   alert(JSON.stringify(option))\n  // }\n  // const handleInputChange = type => e => {\n  //   setVouchercode(e.target.value.toUpperCase())\n  // }\n  const handlevouchername = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handlevaluechange = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.value\n    })\n  }\n  const handleisloggedin = type => e => {\n    setVoucherCtx({\n      ...voucherCtx,\n      [type]: e.target.checked\n    })\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n  //  setIsonce(!isonce);\n    setVoucherCtx({\n      ...voucherCtx,\n      \"isonce\": !voucherCtx.isonce\n    })\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVoucherCtx({\n     ...voucherCtx,\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\n   })\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}>  \n      <Grid container item xs={12} sm={12} spacing={1} >\n      <Grid   item xs={6} sm={6} >\n      <Grid container  item xs={12} sm={12} spacing={1}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlevouchername('vouchername')}\n            id=\"vouchername\"\n            name=\"vouchername\"\n            value={voucherCtx.vouchername}\n            label=\"Voucher Name\"\n            />\n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handlePrefixChange('voucherprefix')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n             value={voucherprefix}\n            label=\"Voucher Prefix\"\n            />\n      </Grid>\n      <Grid   item xs={6} sm={6} >\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            onChange={handleCountChange('vouchercount')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            // value={vouchercode}\n            label=\"No of vouchers\"\n            />\n      </Grid>\n      <Grid   item xs={12} sm={12} >\n\n         {/* <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            \n            onChange={handleInputChange('vouchercode')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n            value={vouchercode}\n            label=\"Voucher Code\"\n            />  */}\n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       freeSolo\n                       defaultValue={voucherCtx.vouchercode}\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\n                       className={classes.fixedTag}\n                       fullWidth\n                       options={[]}\n                        onChange={handleInputChange('vouchercode')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Voucher Codes\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                      //  error = {productCtx.error_message.selected_sizes}\n\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n                       </Grid>\n      </Grid>\n      </Grid> \n      <Grid   item xs={6} sm={6} >\n      <TextField\n            variant=\"outlined\"\n            margin=\"dense\"\n            fullWidth\n            multiline\n            rows=\"7\"\n            onChange={handlevaluechange('voucherdescription')}\n            id=\"vouchercode\"\n            name=\"vouchercode\"\n           value={voucherCtx.voucherdescription}\n            label=\"Voucher Description\"\n            />\n\n      </Grid>\n      \n    \n      <Grid   item xs={2} sm={2} >\n        <Button size=\"small\" variant=\"contained\" \n        onClick={event => generateCoupon(event)}\n        className={classes.margin}>\n            Generate Voucher\n          </Button>\n      </Grid>\n      \n          \n\n        </Grid>\n        \n       \n       \n     \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n        <FormControlLabel\n        control={\n          <Switch\n             checked={voucherCtx.isloggedin}\n             onChange={handleisloggedin('isloggedin')}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        labelPlacement=\"start\"\n\n        label=\"Applicable for loggedin user\"\n      />  \n      </Grid>\n        <Grid  item xs={12} sm={12} spacing={1}>\n                      \n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n      Discount Type\n      </Typography>\n      </Grid>\n        \n\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {props.categories.map(option => (\n              \n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        </Grid>\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n            <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"orderqty\"\n          name=\"orderqty\"\n          label=\"Minimum order Quantity\"\n          onChange={handlevaluechange('minimumqty')}\n          value={voucherCtx.minimumqty}\n          />\n        </Grid> </Grid> :  \n        <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid item xs={6} sm={6} spacing={1}>\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Discount Value\"\n          onChange={handlevaluechange('voucherdiscount')}\n          value={voucherCtx.voucherdiscount}\n          />\n          </Grid>\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\n          <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Maximun Discount Value\"\n          onChange={handlevaluechange('maxvoucherdiscount')}\n          value={voucherCtx.maxvoucherdiscount}\n          />\n          </Grid> : null}\n\n        </Grid>\n}\n      \n        <Grid  item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Uses per user\"\n          defaultValue=\"1\"\n          helperText=\"One User can use how many times\"\n          onChange={handlevaluechange('isonce')}\n          value={voucherCtx.isonce}\n          />\n        {/* <CardActionArea>\n\n        <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: voucherCtx.isonce\n            })}\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n\n            key={\"\"}\n          >\n                <CardActions>\n\n            <Radio\n              checked={voucherCtx.isonce}\n              className={classes.optionRadio}\n              color=\"primary\"\n              label\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\n              />\n            </CardActions>\n            <div className={classes.optionDetails}>\n              <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               If this option is disabled, discount will be counted for every eligible product\n              </Typography>\n              </div>\n            \n          </div>\n          </CardActionArea> */}\n          </Grid>\n         \n          <Grid item xs={6} sm={6} spacing={1}>\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('limittouse')}\n          fullWidth\n          value={voucherCtx.limittouse}\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          helperText=\"How may times we can  use this\"\n\n          />\n        \n        </Grid>\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\n        <Grid  item xs={12} sm={12} spacing={1}>\n\n      <Typography\n        gutterBottom\n        variant=\"h5\"\n      >\n        Minimum Requirements\n        </Typography>\n      </Grid>\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\n\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\n              \n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\n              \n            ))}\n            </ButtonGroup>\n        \n        </Grid> */}\n\n\n\n        \n\n\n\n        <Grid item xs={12} sm={12} spacing={1}>\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          onChange={handlevaluechange('minorder')}\n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          value={voucherCtx.minorder}\n          label={'Minimum Order Value'}\n          />\n        {/* } */}\n        </Grid>\n        <Grid container item xs={12} sm={12} spacing={1}>\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\n\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n          >\n            Usage Limits\n            </Typography>\n          </Grid> */}\n{/* \n          <Grid  item xs={6} sm={6} spacing={1}>\n\n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\n            })}\n            key={\"\"}\n            onClick={event => handleusagelimit(event, \"once\")}\n\n          >\n            <Radio\n              checked={usagelimit === \"once\"}\n              className={classes.optionRadio}\n              color=\"primary\"\n              onClick={event => handleusagelimit(event, \"once\")}\n            />\n            <div className={classes.optionDetails}>\n              <Typography\n                className={selected === \"\" ? classes.selectedtext : null}\n                gutterBottom\n                variant=\"h6\"\n              >\n               Only once per order\n              </Typography>\n              <Typography\n                gutterBottom\n                variant=\"title\"\n              >\n               Limit to one use per customer\n              </Typography>\n              </div>\n            \n          </div>\n          \n            </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n\n<div\n  className={clsx(classes.option, {\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\n  })}\n  key={\"\"}\n  onClick={event => handleusagelimit(event, \"usagecount\")}\n\n>\n  <Radio\n    checked={usagelimit === \"usagecount\"}\n    className={classes.optionRadio}\n    color=\"primary\"\n    onClick={event => handleusagelimit(event, \"usagecount\")}\n  />\n  <div className={classes.optionDetails}>\n    <Typography\n      gutterBottom\n      variant=\"h5\"\n    >\n     Usage Limit\n    </Typography>\n    <Typography\n      gutterBottom\n      variant=\"title\"\n    >\n     Limit number of times this discount can be used in total\n    </Typography>\n    </div>\n  \n</div>\n<Grid item xs={12} sm={12} spacing={1}>\n        {usagelimit === 'once' ? null :\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          \n          fullWidth\n          id=\"discountvalue\"\n          name=\"discountvalue\"\n          label=\"Limit of uses\"\n          />\n        }\n        </Grid>\n  </Grid> */}\n          </Grid>\n          <Grid container item xs={12} sm={12} spacing={1}>\n        \n        <Grid  item xs={6} sm={6} spacing={1}>\n\n        <DateTimePicker\n          label=\"Start Date\"\n          fullWidth\n          inputVariant=\"outlined\"\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \n          minDate={new Date()}    \n          onChange={handleDateChange}\n        />\n    </Grid>\n            <Grid  item xs={6} sm={6} spacing={1}>\n            <DateTimePicker\n      label=\"End Date\"\n      fullWidth\n      inputVariant=\"outlined\"\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\n      minDate={selectedDate}\n      strictCompareDates={true}\n      onChange={handleendDateChange}\n    />\n    </Grid>\n        </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\n           onChange={handleoptionChange('componenets')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\nimport Paper from '@material-ui/core/Paper';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n  \nexport default function Voucherdiscountcontent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const [attributes, setAttributes] = useState({});\n  const [products, setProducts] = useState([]);\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [open, setOpen] = React.useState(false);\n  const [discountid, setDiscountid] = React.useState(\"\");\n  const [isloaded, setIsloaded] = useState(false);\n\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  function attributesadded(attributedata)\n  {\n    setAttributes(attributedata)\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(attributedata)\n\n  }\n  async function creatediscount()\n  {\n    setIsloading(true)\n    var discounttype = 2;\n    if(voucherCtx.discounttype === 'Free Shipping')\n    {\n      discounttype = 3\n    }\n  else if(voucherCtx.discounttype === 'percentage')\n    {\n      discounttype =2\n    }\nelse    {\n      discounttype = 1\n    }\n    let bodydata = {}\n    bodydata['vouchername'] = voucherCtx.vouchername;\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\n    bodydata['description'] = voucherCtx.voucherdescription;\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\n    bodydata['discounttype'] = discounttype;\n    bodydata['discount'] = voucherCtx.voucherdiscount;\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\n    bodydata['isonce'] = voucherCtx.isonce;\n    bodydata['limittouse'] = voucherCtx.limittouse;\n    bodydata['minorder'] = voucherCtx.minorder;\n    bodydata['attributes'] = attributes;\n    bodydata['startdate'] = voucherCtx.startdate;\n    bodydata['enddate'] = voucherCtx.enddate;\n\n    console.log(JSON.stringify(bodydata))\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\n    setIsloading(false)\n    setOpen(true)\n\n    window.location='/voucherdiscountlist'\n\n  }\n\n  async function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setIsloading(false)\n\n    \n  }\n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      id : discount_id\n      }\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\n    let voucherobj = response.response\n    let discounttype = voucherobj.discounttype\n    var discounttypeval = \"percentage\"\n    if(discounttype === 1)\n    {\n      discounttypeval = 'Fixed'\n    }else if(discounttype === 3)\n    {\n      discounttypeval = 'Free Shipping'\n\n    }\n    let categories = voucherobj.product_attributes.category;\n    let selectedcategories = []\n    if(categories)\n    {\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\n      if(categories.indexOf(catobj.alias) > -1)\n      {\n        selectedcategories.push(catobj)\n      }\n    })\n  }\n    let materials = voucherobj.product_attributes.materials;\n    let selectedmaterials = []\n    if(materials)\n    {\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\n      if(materials.indexOf(matobj.alias) > -1 )\n      {\n        selectedmaterials.push(matobj)\n      }\n    })\n  }\n    \n    let producttypes = voucherobj.product_attributes.product_types;\n    let selectedproduct_types = []\n    if(producttypes)\n    {\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\n      if( producttypes.indexOf(protypeobj.alias) > -1)\n      {\n        selectedproduct_types.push(protypeobj)\n      }\n    })\n  }\n\n  let collections = voucherobj.product_attributes.collections;\n    let selectedcollections = []\n    if(collections)\n    {\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\n      if( collections.indexOf(collectionobj.alias) > -1)\n      {\n        selectedcollections.push(collectionobj)\n      }\n    })\n  }\n\n  let occassions = voucherobj.product_attributes.occations;\n    let selectedoccassions = []\n    if(occassions)\n    {\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\n      if( occassions.indexOf(occassionobj.alias) > -1)\n      {\n        selectedoccassions.push(occassionobj)\n      }\n    })\n  }\n\n  let themes = voucherobj.product_attributes.themes;\n  let selectedthemes = []\n  if(themes)\n  {\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\n    if( themes.indexOf(themeobj.alias) > -1)\n    {\n      selectedthemes.push(themeobj)\n    }\n  })\n}\n\n  let styles = voucherobj.product_attributes.styles;\n    let selectedstyles = []\n    if(styles)\n    {\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\n      if( styles.indexOf(styleobj.alias) > -1)\n      {\n        selectedstyles.push(styleobj)\n      }\n    })\n  }\n    setVoucherCtx({\n      ...voucherCtx,\n      vouchername: voucherobj.name,\n      vouchercode: voucherobj.voucher_codes,\n      voucherdescription : voucherobj.description,\n      isloggedin: voucherobj.isloginneeded,\n      discounttype: discounttypeval,\n      minimumqty:0,\n      maxvoucherdiscount:voucherobj.max_discount,\n      isonce: voucherobj.max_uses_user,\n      limittouse:voucherobj.max_uses,\n      voucherdiscount:voucherobj.discount_amount,\n      minorder: voucherobj.min_cart_value,\n      startdate: voucherobj.starts_at,\n      enddate: voucherobj.expires_at,\n      category: selectedcategories,\n      materials: selectedmaterials,\n      product_types : selectedproduct_types,\n      collections : selectedcollections,\n      styles: selectedstyles,\n      themes: selectedthemes\n    })\n    setIsloaded(true)\n    }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n    {\n       setDiscountid( props.location.pathname.split('/')[2]);\n      getdiscountvalue(props.location.pathname.split('/')[2])\n  \n    }else{\n      setIsloaded(true)\n    }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <>\n             <FullLoader title=\"\" isopen={isloading}/>\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n   {isloaded ? <>\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\n\n    <Typography variant=\"h5\" component=\"h2\">\n    {products.length} Products and {skus.length} skus\n  </Typography>\n          </Grid>\n          \n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\n          </Grid>:null} </>\n          : null }\n          </>:null}\n    \n   \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './VoucherdiscountContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Voucherdiscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Voucherdiscount;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { NetworkContext } from '../../../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [status, setStatus] = useState({});\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  function handleAdd(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.update(e)\n  }\n  function handleupdate(e) {\n    setStatus({...status, [e.id]:\"0 out of \"+props.products.length})\n\n    props.resumeupdate(e)\n  }\n  \n\n  function handledownload(e) {\n    props.downloadlog()\n  }\n async function handlestatus(e) {\n   let bodydata = {\n    \"component\":e.label\n   }\n  let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n\n    setStatus({...status, [e.id]: response.message})\n  }\n  async function getpricestatus(component)\n  {\n\n  }\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card style={{marginTop : 16}}>\n        \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Components</TableCell>\n                    \n                    <TableCell align=\"center\">Action</TableCell>\n\n                    <TableCell align=\"center\">Status</TableCell>\n                    <TableCell align=\"center\">Restart</TableCell>\n\n                    <TableCell align=\"center\">Log</TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.pricingrows.map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.id}</TableCell>\n                      <TableCell align=\"center\">  \n                        <Button variant=\"outlined\"  onClick={(e) => handleAdd(order)} size=\"small\" color=\"primary\" className={classes.margin}>\n                          ₹ Run\n                        </Button>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                        {status[order.id] ? status[order.id] : \"\"}\n                        \n                      <IconButton aria-label=\"delete\" onClick={(e) => handlestatus(order)}  color=\"primary\">\n                          <RefreshIcon />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handleupdate(order)} size=\"small\">\n                        Re Run\n\n                      </Button>\n                      </TableCell>\n                      <TableCell align=\"center\">\n                      <Button color=\"primary\"  onClick={(e) => handledownload()} size=\"small\">\n                        Download\n                      </Button>\n                      </TableCell>\n                     \n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          \n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport { Autocomplete } from '@material-ui/lab';\nimport  {NetworkContext}  from '../../../../context/NetworkContext';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  Chip,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\n  const [producttypelist, setProducttypelist] = useState(props.masterData.product_type);\n  const [productids, setProductids] = useState(props.productids);\n  \n  \n  const [updatestatus, setUpdatestatus] = useState(\"\");\n\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [discounttype, setDiscounttype] = useState(\"\");\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n  const [formData, setFormData] = useState({});\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n\n  const handleproducttypechange = type => (event, option) => {\n      \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, producttypes:vendorsarray})\n    props.apply(formData.vendorid,formData.categories,vendorsarray)\n  };\n  const handlecategorychange = type => (event, option) => {\n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.name)\n    });\n    setFormData({...formData, categories:vendorsarray})\n\n    props.apply(formData.vendorid,vendorsarray,formData.producttypes)\n  };\n  const hangeoptionchange = type => (event, option) => {\n    \n    let vendorsarray = []\n    option.forEach(element => {\n      vendorsarray.push(element.shortCode)\n    });\n    setFormData({...formData, vendorid:vendorsarray})\n\n    props.apply(vendorsarray,formData.categories,formData.producttypes)\n  };\n \n  const handleClick = async (event, option) => {\n    let response = await sendNetworkRequest('/updatepricelist', {}, formData, false)\n    if(response.status < 400){\n    }else{\n      alert(\"error\")\n    }\n  };\n  const handleuploadstatus = async (event, option) => {\n    let response = await sendNetworkRequest('/getpriceupdatestatus', {}, formData, false)\n    if(response.status < 400){\n      setUpdatestatus(response.message)\n    }else{\n    }\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n  const handleInputChange = type => e => {\n    setVouchercode(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder =  (event, option) => {\n    setIsonce(!isonce);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(makeid(10))\n  };\n  \n  \n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"General Information\" />\n      <Divider />\n      <CardContent className={classes.cardcontent}>\n      <Grid container spacing={2}>  \n        <Grid item xs={6} sm={4}>\n           <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.vendorlist}\n              getOptionLabel={option => option.display}\n              fullWidth\n              onChange={hangeoptionchange('vendorcode')}\n              renderInput={params => (\n                <TextField {...params} label=\"Selct Vendor\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4} >\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.categorylist}\n              getOptionLabel={option => option.name}\n              onChange={handlecategorychange('category')}\n              fullWidth\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product Category\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={6} sm={4}>\n        <Autocomplete\n              multiple\n              id=\"combo-box-demo\"\n              disabled={props.isdisabled}\n              options={props.producttypelist}\n              getOptionLabel={option => option.name}\n              onChange={handleproducttypechange('product_type')}\n              fullWidth\n              margin=\"dense\"\n              renderInput={params => (\n                <TextField {...params} label=\"Select Product type\" variant=\"outlined\" fullWidth />\n              )}\n            />\n        </Grid>\n        <Grid item xs={12} >\n        \n\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       disabled={props.isdisabled}\n                       className={classes.fixedTag}\n                       value={props.productids}\n                       options={productids}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label={props.productids.length > 0 ? \"Products (\"+props.productids.length+\") \": \"Products\"}\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       InputProps={{ ...params.InputProps, type: 'search' }}\n                       />\n                       )}\n                       />\n        </Grid>\n\n       \n       \n       {/* <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleClick}\n        color=\"primary\">\n        Update Price\n      </Button>\n      </Grid>\n      \n      <Grid item xs={6} sm={3} >\n\n        <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Update Status\n      </Button>\n      <Typography variant=\"subtitle1\">\n                {updatestatus}\n      </Typography>\n\n      </Grid> */}\n      {/* <Grid item xs={6} sm={3} >\n      <Button variant=\"contained\" \n          onClick={handleuploadstatus}\n        color=\"primary\">\n        Price Update\n      </Button>\n       \n      </Grid> */}\n        </Grid>\n\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Dialog from '@material-ui/core/Dialog';\nimport Grid from '@material-ui/core/Grid';\nimport Fullloader from '../../components/Loader';\n\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results,AboutVoucher } from './components';\nimport { productCategory } from '../../services/mapper';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader';\nconst rows = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Gemstone', label: 'Gemstone' },\n  { id: 'Metal & Making Charge', label: 'Gold' },\n  { id: 'Markup & Discount price update', label: 'updateskuprice' }\n];\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function PriceupdateContent(props) {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n\n  const [masters, setMasters] = useState([]);\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [sizes, setSizes] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [vendors, setVendors] = useState([]);\n  const [startrun, setStartrun] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  async function updateprices(component)\n{\n  setOpen(true)\n  var  bodydata = {}\n  bodydata = {\n    pricingcomponent: component.label,\n    req_product_id : products\n  }\n  setStartrun(true)\n  let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  setOpen(false)\n}\nasync function rerun(component)\n{\n  var  bodydata = {}\n  bodydata = {\n    component: component.label,\n    // req_product_id : products\n  }\n  let response = await sendNetworkRequest('/getincompletepricerun', {}, bodydata, false)\n  let history_id = response.id;\n  let update_products = response.products\n  if(response.products && response.products.length > 0)\n  {\n    setOpen(true)\n\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: component.label,\n      req_product_id : update_products,\n      history_id : history_id\n    }\n    setStartrun(true)\n    let response1 = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n    setOpen(false)\n  }else\n  {\n    alert(\" Doesn't have any incomplete products\")\n  }\n  \n}\n\n async function filterapllied(filterdata, categories, producttypes)\n  {\n    var  bodydata = {}\n  \n      bodydata = {\n        vendorid : filterdata && filterdata.length > 0 ? filterdata : '',\n        product_category : categories && categories.length > 0 ? categories : '',\n        product_type : producttypes && producttypes.length > 0 ? producttypes : ''\n      }\n\n    let response = await sendNetworkRequest('/getdistinctproduct', {}, bodydata, false)\n    setProducts(response.products)\n    setCategories(response.category)\n    setVendors(response.vendorlist)\n    // if(response.status < 400){\n    //   alert(JSON.stringify(products))\n    // }\n  }\n  async function downloadlog()\n  {\n\n    window.location.href = 'https://api-staging.stylori.com/getlogfile';\n    // let response = await sendNetworkRequest('/getlogfile', {}, \"\", false)\n  \n  }\n async function getsizes()\n  {\n    let response = await sendNetworkRequest('/getsizes', {}, {}, false)\n    if(response.status < 400){\n      setSizes(response.sizes)\n    }else{\n      alert(\"succes21s\")\n    }\n      \n  }\n  useEffect(() => {\n    let mounted = true;\n    //filterapllied()\n    //getsizes();\n    setMasters(productCategory.mapper(props.data));\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <FullLoader title={\"Run Diamond Price\"} isopen={open} ></FullLoader>\n     <AboutVoucher isdisabled={startrun} className={classes.aboutvoucher} apply={filterapllied} productids= {products.length > 0 ? products : []} categorylist={masters.category} producttypelist={masters.product_type} vendorlist={ masters.vendorcode} masterData= {masters} categories={['Fixed Amount','percentage','Free Shipping']} />\n    <Results products={products} pricingrows={rows} downloadlog={downloadlog} update={updateprices} resumeupdate={rerun}/>\n  </Page>\n  </MuiPickersUtilsProvider>\n  );\n}","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { productCategory } from '../../services/mapper';\nimport Component from './PriceupdateContent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Priceupdate = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(productCategory.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} data={data} />\n    // </VoucherProvider>\n\n)});\nexport default Priceupdate;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.getColumnnames(columnnames);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\n\n\nconst useStyles = makeStyles(theme => ({\n    // button: {\n    //     color:\"#06847B\",\n    //     border: \"1px solid #7bbcb7\",\n    //     '&:hover':{\n    //         backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n    //         border: \"1px solid #06847B\",\n    //     }\n    //   },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} >\n               \n                <Grid container xl={12} lg={12} md={12} sm={12} xs={12} style={{display: 'flex',margin: '8px', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={12} md={12} sm={12} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}} >\n                        {/* <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button> */}\n                        <Button className=\"product\" size=\"medium\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" >\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        \n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} getColumnnames={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport SortHeader from './SortHeader';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n    display: \"flex\",\n    placeItems:\"center\",\n  },\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchtext, setSearchtext] = useState(\"\");\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  function handlesearch(){\n    props.onSearch(searchtext)\n  }\n  const handleinputChange =type => e => {\n    setSearchtext(e.target.value)\n   //props.onSearch(e.target.value)\n  }\n  const classes = useStyles();\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n\n      <Grid\n        className={classes.contantview}\n        container\n        spacing={3}\n      >\n        <Grid item xs={3} >\n           <Typography\n           variant=\"h4\"\n           style={{margin: \"8px\"}}\n          >\n            Orders\n          </Typography>\n           {/* <Typography\n            component=\"h1\"\n            variant=\"h5\"\n          >\n             Order List\n          </Typography>  */}\n        </Grid>\n        <Grid container xs={6} item  >\n        <Grid xs={9} item >\n               <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={searchtext}\n                    id=\"productname\"\n                    name=\"productname\"\n                    label=\"Search by name/email/mobile\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('searchtext')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n\n          </Grid>\n        <Grid xs={3} item >\n        <Button variant= \"contained\" color=\"primary\" onClick={() => handlesearch()} style={{ marginLeft: \"0px\", marginTop: \"8px\", marginBottom: \"10px\" }}>Search</Button> \n\n          </Grid>\n\n\n        </Grid>\n        <Grid xs={3}  item  alignItems={\"flex-end\"}  spacing={3} >\n\n          <SortHeader  columnnames={props.columns} getColumnnames={props.getColumnnames}/>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useEffect, useContext, useState } from 'react';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport PropTypes from 'prop-types';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TableCell from '@material-ui/core/TableCell';\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n      onRequestSort(event, property);\n    };\n  \n    return (\n      <TableHead>\n        <TableRow>\n          {/* <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={onSelectAllClick}\n              inputProps={{ 'aria-label': 'select all desserts' }}\n            />\n          </TableCell> */}\n          {props.columns.map(headCell => (\n            <TableCell\n              key={headCell.id}\n              align={headCell.numeric ? 'right' : 'left'}\n              padding={headCell.disablePadding ? 'none' : 'default'}\n              sortDirection={orderBy === headCell.id ? order : false}\n            >\n              <TableSortLabel\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={createSortHandler(headCell.id)}\n              >\n                {headCell.label ? headCell.label : headCell.name}\n                {orderBy === headCell.id ? (\n                  <span className={classes.visuallyHidden}>\n                    {order === 'desc' ? '' : ''}\n                  </span>\n                ) : null}\n              </TableSortLabel>\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    );\n  }\n  \n  EnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n  };\n\n  export default EnhancedTableHead;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Moment from 'react-moment';\nimport { TextField } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport EnhancedTableHead from \"../../../../components/EnhancedTableHead\"\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Chip,\n  Grid,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  table: {\n   // minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n    overflowY: 'auto',\n    maxHeight: '100vh'\n  },\n  containergrid: {\n    overflowX: 'scroll',\n    width: 1000,\n    height: 20,\n    overflowY: 'hidden'\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [editcontent,setEditcontent] = React.useState({})\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState(props.columnobjs.length > 0 ? props.columnobjs[0].id : 'Order ID');\n  const handleRequestSort = (event, property) => {\n\n    const isAsc = orderBy === property && order === 'asc';\n\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  function descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  function getComparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descendingComparator(a, b, orderBy)\n      : (a, b) => -descendingComparator(a, b, orderBy);\n  }\n  \n  function stableSort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n  const classes = useStyles();\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditcontent({ ...editcontent, [type]: value  })\n\n  }\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    \n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n  async function Savevendor(refetch) {\n    props.onupdate(editcontent)\n   // setIsadd(false)\n  // alert(JSON.stringify(editcontent))\n//  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n  setBtnEdit({ ...btnEdit, id:'', action: false })\n // refetch()\n}\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Editvendor(vendordata) {\n      let paymentstatusobj = {}\n      props.orderstatus.forEach(element => {\n        if(vendordata.orderstatus === element.name)\n        {\n          paymentstatusobj = element;\n        }\n      });\n      \n     delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      orderstatus : paymentstatusobj,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.orderid, action: true })\n\n  }\n  function CancelEdit(diamondData) {\n  //  alert(diamondData.paymentstatus)\n    // if(isadd)\n    // {\n    //   let masters = masterlist;\n \n    //  masters.splice(0, 1)\n    //  setMasterlist(masterlist)\n \n    // }\n    //    setIsadd(false)\n     setEditcontent({})\n     setBtnEdit({ ...btnEdit, id:'', action: false })\n   }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    \n      <Card>\n       \n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n          \n         \n            <div className={classes.tableWrapper}>\n              \n              <Table className={classes.table} stickyHeader size=\"small\" border={1} borderColor={\"#ddd\"} size=\"small\">\n                {/* <TableHead>\n                  <TableRow>\n                  {props.columnobjs.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))} */}\n              <EnhancedTableHead\n              columns={props.columnobjs}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n                    {/* <TableCell>Order ID</TableCell>\n                    \n                    <TableCell align=\"left\">Order Date</TableCell>\n                    <TableCell align=\"center\">Customer Name</TableCell>\n                    <TableCell align=\"center\">Email</TableCell>\n                    <TableCell align=\"center\">Mobile</TableCell>\n                    <TableCell align=\"center\">Shipping Address</TableCell>\n                    <TableCell align=\"center\">Gift Message</TableCell>\n                    <TableCell align=\"center\">Payment Type</TableCell>\n                    <TableCell align=\"center\">Payment Status</TableCell> */}\n                    {/* <TableCell align=\"center\">Waybill No</TableCell>\n                    <TableCell align=\"center\">Comments</TableCell>\n                    <TableCell align=\"center\">PG Response</TableCell> */}\n\n                  {/* </TableRow>\n                </TableHead> */}\n                <TableBody>\n                {stableSort(orders, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                  // {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      {props.columnobjs.map(col => (\n                        <>\n                        {col.key === 'action' && props.iswrite?   \n                        <TableCell align=\"center\" style = {{width: 20}}>\n                        {\n                         btnEdit.action && btnEdit.id == order.orderid  ?  <>\n                         <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                          </Button>\n                          <Button onClick={(e) => CancelEdit(order)}><CancelIcon />\n                          </Button></> : <Button onClick={(e) => Editvendor(order)} ><EditIcon />\n                     </Button>\n                         } \n                   </TableCell> : \n                   <>\n                   {\n                    btnEdit.action && btnEdit.id == order.orderid  ?\n                        <TableCell>\n                          {!col.type ||  col.type == 1 ? <Typography> {order[col.key]}</Typography>:null } \n                        { col.type == 2 ? <TextField\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        \n                        id={col.key}\n                        name={col.key}\n                        value={editcontent[col.key]}\n                        onChange={handleInputChange(col.key)}\n    \n                        label={col.label}\n                       />:null } \n                       {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                                       </Moment>:null } \n\n                   {col.type == 5 && order.paymentmode == 'COD' ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.paymentstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Payment Status\" variant=\"outlined\" />}\n                /> : null }  \n                {col.type == 5 && order.paymentmode != 'COD' ? <Typography> {order[col.key]}</Typography>:null } \n       \n                  {col.type == 3 ? \n                  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={props.orderstatus}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[col.key]}\n                  onChange={handleoptionChange(col.key)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label=\"Order Status\" variant=\"outlined\" />}\n                /> : null }\n                            \n                        </TableCell>  :  <TableCell align=\"center\" style = {{width: 20}}>\n                          {col.type == 4 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {order[col.key]} \n                             </Moment>: <Typography> {order[col.key]}</Typography> } \n\n                          \n                           \n                           </TableCell> }\n                        </>\n                        }\n                       \n                      </>\n                      ))}                      \n\n                      {/* {props.showcolumns.indexOf('Order ID') > -1 ? <TableCell >{order.id}</TableCell> : null }\n                      {props.showcolumns.indexOf('Order Date') > -1 ? <TableCell align=\"left\" style = {{width: 120}}>            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {order.createdAt}\n                                  </Moment>\n                                  </TableCell> : null }\n                      {props.showcolumns.indexOf('Customer Name') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.firstName : ''}</TableCell> :  null}\n                      {props.showcolumns.indexOf('Email') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.email : ''}</TableCell> : null}\n                      {props.showcolumns.indexOf('Phone Number') > -1 ? <TableCell align=\"left\" style = {{width: 40}}>{order.shoppingCartByCartId.userProfileByUserprofileId ? order.shoppingCartByCartId.userProfileByUserprofileId.mobile : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Shipping Address') > -1 ?  <TableCell align=\"left\">{order.shoppingCartByCartId.cartAddressesByCartId.nodes.length > 0 ? order.shoppingCartByCartId.cartAddressesByCartId.nodes[0].addressline1 : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Gift Message') > -1 ? <TableCell align=\"left\">{order.shoppingCartByCartId.giftwrapsByCartId.nodes.length > 0 ? order.shoppingCartByCartId.giftwrapsByCartId.nodes[0].message : ''}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Type') > -1 ? <TableCell >{order.paymentMode}</TableCell> : null }\n                      {props.showcolumns.indexOf('Payment Status') > -1 ? <TableCell >{order.paymentStatus}</TableCell> : null }\n                      {props.showcolumns.indexOf('Waybill No') > -1 ? <TableCell >{order.waybill}</TableCell> : null }\n                      {props.showcolumns.indexOf('Comments') > -1 ? <TableCell >{order.comments}</TableCell> : null }\n                      {props.showcolumns.indexOf('Pg Response') > -1 ? <TableCell >{order.pgresponse}</TableCell> : null }\n                      {props.showcolumns.indexOf('SKUs') > -1 ? <TableCell >{order.skus}</TableCell> : null } */}\n\n                      {/* <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[10,50, 100, 250]}\n          />\n        </CardActions>\n      </Card>\n   \n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\nimport { OrderContext } from '../../context';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport Columns from './components/columnnames.json';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    //marginTop: theme.spacing(3)\n  },\n  \n}));\n  \nexport default function Producttypecontent() {\n  const classes = useStyles();\n  const [orders, setOrders] = useState([]);\n  const { orderCtx, setOrderCtx ,orderMaster} = React.useContext(OrderContext);\n  const [columnnames, setColumnnames] = useState(Columns.columns);\n  const [filteredorder, setFilteredorder] = useState([]);\n  const [paymentstatus, setpaymentstatus] = useState([]);\n  const [orderstatus, setorderstatus] = useState([]);\n  const [iswrite, setIswrite] = useState(false);\n\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [displaycolumnnames, setDisplaycolumnnames] = useState(Columns.defaultcolumns);\n  const [displaycolumns, setDisplaycolumns] = useState(Columns.defaultcolumnnames);\n\n  function columnchanged(columnnames){\n    let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n    setDisplaycolumns(columnnames)\n    setDisplaycolumnnames(displycolumns)\n  }\n\n  async function updateorder(ordercontent)\n  {\n  let response =  await sendNetworkRequest('/updateorderstatus', {}, ordercontent)\n    window.location.reload();\n\n   // getorders()\n  }\n  function searchorder(searchtext)\n  {\n    if(searchtext.length > 0)\n    {\n    var data_filter = orders.filter( element => \n      element.email.match(searchtext+'.*') || \n      element.mobile.match(searchtext+'.*') ||\n      element.orderid.match(searchtext+'.*') || \n      element.username.match(searchtext+'.*')\n      )\n      setFilteredorder(data_filter)\n    }else{\n      setFilteredorder(orders)\n    }\n  }\n  async function getorders()\n  {\n    var orders_arr = []\n   \n    orderCtx.orderMaster.orders.forEach(element => {\n        let orderobj = {}\n        orderobj['orderid'] = element.id\n        orderobj['orderdate'] = element.createdAt\n        orderobj['paymentmode'] = element.paymentMode\n        orderobj['cartid'] = element.cartId\n       // orderobj['paymentstatusmaster'] = element.paymentStatus\n       orderobj['awbNumber'] = element.awbNumber ? element.awbNumber : \"\"\n       orderobj['comments'] = element.comments ? element.comments : \"\"\n       orderobj['orderstatus'] = element.orderStatus\n       if(element.paymentMode === 'COD')\n       {\n        orderobj['paymentstatus'] = element.paymentStatus\n\n       }\n        if(element.paymentDetailsByOrderId)\n        {\n            let pgresponseobj = element.paymentDetailsByOrderId.nodes\n            pgresponseobj.forEach(pgres => {\n           let response_pg =   JSON.parse(pgres.paymentResponse)\n                    if(element.paymentMode === 'Prepaid')\n                    {\n                      orderobj['paymentstatus'] = response_pg.ipgTransactionId + ' \\n'+response_pg.fail_reason+ ' \\n'+response_pg.status\n\n                    }\n\n            } )\n        }\n        if(element.shoppingCartByCartId)\n        {\n            let cartcontent = element.shoppingCartByCartId\n            if(cartcontent.shoppingCartItemsByShoppingCartId)\n            {\n              \n\n                let cartitemscontent = cartcontent.shoppingCartItemsByShoppingCartId.nodes\n                let skus = []\n                cartitemscontent.forEach(element => {\n                    if(element.transSkuListByProductSku)\n                    {\n                        skus.push(element.transSkuListByProductSku.generatedSku)\n                    }\n\n                    if(element.cartAddressesByCartId)\n                    {\n                        let addresscontent = element.cartAddressesByCartId.nodes;\n                        addresscontent.forEach(addressobj => {\n                            orderobj['address'] = addressobj.addressline1\n                        })\n\n                    }\n                })\n                orderobj['skus'] = skus.join(' , ')\n            }\n            if(cartcontent.userProfileByUserprofileId)\n            {\n             // alert(JSON.stringify(orderCtx.orderMaster.orders[0]))\n              let usercontent = cartcontent.userProfileByUserprofileId\n                orderobj['username'] = usercontent.firstName ? usercontent.firstName : \"\"\n                orderobj['mobile'] = usercontent.mobile ? usercontent.mobile : \"\"\n                orderobj['email'] = usercontent.email ? usercontent.email : \"\"\n            }\n\n            if(cartcontent.giftwrapsByCartId)\n            {\n                let giftobj = cartcontent.giftwrapsByCartId.nodes;\n                giftobj.forEach(gift => {\n                    orderobj['giftmessage'] = gift.message\n                })\n            }\n        }\n        orders_arr.push(orderobj)\n    });\n    \n    setOrders(orders_arr)\n    setFilteredorder(orders_arr)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setpaymentstatus(fatchvalue.data.allOrderStatusMasters.nodes)\n        setorderstatus(fatchvalue.data.allPaymentStatusMasters.nodes)\n\n        \n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let pagepermission = localStorage.getItem('pagepermissions')\n    if(pagepermission.indexOf('/orderlist') > -1)\n    {\n      setIswrite(true)\n\n    }else\n    {\n      setIswrite(false)\n    }\n    getmaster()\n  }, [])\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n        \n     \n    };\n    getmaster()\n    getorders()\n    fetchOrders();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {/* <Grid container spacing={2} item xs={12} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={6} sm={6}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            Orders\n          </Typography>\n          </Grid>\n          \n    </Grid> */}\n    <Header getColumnnames={columnchanged} onSearch={searchorder}  columns={columnnames}/>\n    {filteredorder ? <Results\n      className={classes.results}\n      orderstatus={paymentstatus}\n      paymentstatus={orderstatus}\n      iswrite={iswrite}\n     orders={filteredorder}\n     onupdate={updateorder}\n     showcolumns={displaycolumnnames}\n     columnobjs={displaycolumns}\n\n\n    /> : null }\n    \n  </Page>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { OrderProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { orderList } from '../../services/mapper';\nimport Component from './Orderlistcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const OrderList = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(orderList.query);\n\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n        <OrderProvider value={{ data, mapper: orderList.mapper, mappertype:  \"orderMaster\" }} >\n            \n    <Component {...props} />\n    </OrderProvider>\n\n)});\nexport default OrderList;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Divider} from '@material-ui/core'\nexport default function ConformationAlert(props) {\n  \n  const handleOk = () => {\n    props.onSuccess(props.data, props.refetch)\n  };\n  const handleClose = () => {\n    props.onCancel()\n  };\n  return (\n    <div>\n\n      <Dialog\n        open={props.isshow}\n        onClose={handleClose}\n        fullWidth={true}\n        maxWidth={'sm'}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n        <DialogContent dividers>\n          <DialogContentText id=\"alert-dialog-description\">\n            {props.message}\n            Verify details before deleting\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"default\">\n            Cancel\n          </Button>\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\n          {props.positivebtn}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [metaldata, setMetaldata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.save(metaldata,props.refetch)\n  };\n\nconst handleoptionChange = type => (event, value) => {\n    setMetaldata({ ...metaldata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMetaldata({\n    ...metaldata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Gold Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('pricetype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"sellingprice\"\n              name=\"Selling Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect, useContext, useState }  from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GOLDPRICELIST,ALLPRODUCTLIST,DELETEGOLDPRICE,METALMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Moment from 'react-moment';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Addmetalprice from './Addmetalprice'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { MATERIALMASTER } from '../../../services/queries';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [metalmaster,setMetalmaster] = React.useState([])\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEGOLDPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  async function handleAdd(metalcontent,refetch)\n\n  {\nvar bodydata = {}\nbodydata = {\nmaterial : metalcontent.metal.name,\n purity: metalcontent.purity.shortCode,\n costprice : metalcontent.costPrice,\n sellingprice : metalcontent.sellingPrice,\n pricetype: metalcontent.pricetype.label,\n vendor : props.vendor,\n isadd: true\n}\nconsole.log(\"--------\")\n\nconsole.log(JSON.stringify(bodydata))\n await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n setOpen(false)\n refetch()\n//  setBtnEdit({ ...btnEdit, id:\"\", action: false })\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  \n  function handleEdit(diamondData) {\n    let pricetypes =[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]\n      let selectedsellingPriceType = {}\n      pricetypes.forEach(element => {\n    \n        if(element.label == diamondData.sellingPriceType)\n        {\n          selectedsellingPriceType = element\n        }\n      })\n        setEditdiamond({  \n          ...editdiamond,\n          priceid: diamondData.id,\n          costPrice : diamondData.costPrice,\n          sellingPriceType : diamondData.sellingPriceType,\n          selectedsellingPriceType : selectedsellingPriceType,\n          sellingPrice : diamondData.sellingPrice,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n   bodydata = {\n    priceid: editdiamond.priceid,\n    costprice : editdiamond.costPrice,\n    sellingprice : editdiamond.sellingPrice,\n    pricetype: editdiamond.sellingPriceType.label\n   }\n  await sendNetworkRequest('/updatemetalprice', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  // useEffect(() => {\n  //   const query = props.client.query\n  //     query({\n  //       query: ALLPRODUCTLIST,\n  //       fetchPolicy: \"network-only\"\n  //     }).then((data) => {\n  //       // if (data) {\n  //       // setProductlists(data.data.allProductLists.nodes)\n  //       // setAllProductlists(data.data.allProductLists.nodes)\n  //       // setPageCount( data.data.allProductLists.totalCount )\n  //       // }else{\n  //       //   alert(\"success\")\n  //       // }\n  //     })\n  //   .catch((error) => {console.log(\"smbcj\")})\n  //   }, [])\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n      <>\n     \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Gold Price Setup\"}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n      \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GOLDPRICELIST}\n              onCompleted={data => setPageCount( data.allGoldPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                               {open ? <Addmetalprice isadd={open} refetch = {refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose}/> : null} \n\n                              { data.allGoldPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.purity}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      value={editdiamond.selectedsellingPriceType}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n\n      </div>\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmetalprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [diamonddata, setDiamonddata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(diamonddata, props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setDiamonddata({ ...diamonddata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setDiamonddata({\n    ...diamonddata,\n    [type]: e.target.value\n  })\n}\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         New Diamond Price\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\n              options={props.diamonds}\n              onChange={handleoptionChange('diamondtype')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Diamond Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Grid, Card} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT, DELETEDIAMONDCHARGE,PRODUCTDIAMONDTYPES} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Adddiamondprice from './Adddiamondprice'\n\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n   \n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid, setDeleteid] = React.useState('');\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEDIAMONDCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n\n  async function handleAdd(metalcontent,refetch)\n\n  {\n    alert(\"i am here\")\n    let bodydata = {}\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\n    bodydata['costprice'] = metalcontent.costPrice\n    bodydata['pricetype'] = metalcontent.pricetype.label\n    bodydata['sellingprice'] = metalcontent.sellingprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['isadd'] = true\n\n\n    \n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  setOpen(false)\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        priceid : diamondData.id,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id,refetch){\n    var bodydata = {}\n    bodydata = {\n      priceid: editdiamond.priceid,\n      costprice : editdiamond.costPrice,\n      sellingprice : editdiamond.sellingPrice,\n      pricetype: editdiamond.sellingPriceType.label\n     }\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\n  \n      setBtnEdit({ ...btnEdit, id:\"\", action: false })\n      refetch()\n\n\n  }\n\n  const handleoptionChange = type => (event, value) => {\n    setEditdiamond({ ...editdiamond, [type]: value})\n}\n  const handleinputChange =type => e => {\n   setEditdiamond({\n     ...editdiamond,\n     [type]: e.target.value\n   })\n  }\n\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       // alert(JSON.stringify(fatchvalue))\n       setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n  \n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n    <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {\"Diamond Price Setup\"}\n      </Typography> \n      </Grid>\n     \n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n    \n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                             <ConformationAlert \n                            title={\"Are you sure to delete?\"} \n                            positivebtn={\"Yes\"} \n                            negativebtn={\"No\"} \n                            message={\"\"} \n                            refetch={refetch}\n                            data={deleteid}\n                            onSuccess={handledelete}\n                            onCancel={hidedeleteconformation}\n                            isshow={isconformation} />\n                                {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    onChange={handleinputChange('costPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    onChange={handleinputChange('sellingPrice')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n\n    </Paper>\n  </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addgemstoneprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [gemstonedata, setGemstonedata] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  const handleSave = () => {\n    props.actionSave(gemstonedata)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setGemstonedata({ ...gemstonedata, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setGemstonedata({\n    ...gemstonedata,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('gemstone')}\n              getOptionLabel={option => option.name}\n              options={props.gems}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Gemstone\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          {props.viewtype == 1 ? \n          <>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              onChange={handleinputChange('weightend')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          </> : null }\n          <Grid item xs={12}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              id=\"productvendorcode\"\n              onChange={handleinputChange('costprice')}\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\nimport {Card,CardContent} from '@material-ui/core';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {Grid} from '@material-ui/core';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,GEMSTONEMASTER, DELETEGEMCHARGE,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport Addgemstoneprice from './Addgemstoneprice'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'From weight', label: 'From weight' },\n  { id: 'To Weight', label: 'To Weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\nconst stonecountcolumns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  \n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [deleteid, setDeleteid] = React.useState([]);\n  const [gemmaster, setGemmaster] = React.useState([]);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editgem,setEditgem] = React.useState({})\n  const [gemlist,setgemlist] = React.useState([])\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(diamondcontent)\n  {\n    if(deleteid.length > 0)\n    {\n      let variables ={\n        elementId:deleteid[0]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    if(deleteid.length > 1)\n    {\n      let variables ={\n        elementId:deleteid[1]\n      }\n      await props.client.mutate({mutation:DELETEGEMCHARGE,variables})\n    }\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\n\n    //   if(res!==null){\n    //    // refetch();\n    //     // refetchval()\n    //     getgemlist()\n    //   }\n    // }).catch(err => {\n\n    // })\n    setgemlist([])\n\n    setDeleteid([])\n    getgemlist()\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n\n    let deleteids = [];\n    deleteids.push(diamondData.costprice.id)\n    deleteids.push(diamondData.sellprice.id)\n\n     setDeleteid(deleteids)\n     setIsconformation(true);\n  }\n\n  async function handleAdd(gemstonedata){\n    var bodydata = {}\n    bodydata['gemstone_type'] = gemstonedata.name\n    bodydata['weight_start'] = gemstonedata.weightstart\n    bodydata['weight_end'] = gemstonedata.weightend\n    bodydata['cost_price'] = gemstonedata.costprice\n    bodydata['vendor_code'] = props.vendor\n    bodydata['selling_price_type']= gemstonedata.pricetype.label\n    bodydata['selling_price']= gemstonedata.sellingprice\n    bodydata['isadd']=true\n\n   // alert(JSON.stringify(gemstonedata))\n\n  await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\n    setOpen(false)\n     getgemlist()\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditgem({\n        ...editgem,\n        cost_price_id : diamondData.costprice.id,\n        weight_start : diamondData.costprice.weight_start,\n        weight_end : diamondData.costprice.weight_end,\n        cost_price : diamondData.costprice.price,\n         selling_price : diamondData.sellprice.price,\n         selling_price_id : diamondData.sellprice.id,\n\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.costprice.id, action: true })\n\n  }\n\n async function handleSave(id){\n    var bodydata = {}\n   \n   await sendNetworkRequest('/updategemstoneprice', {}, editgem)\n\n    getgemlist()\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  async function getgemlist()\n  {\n    let bodydata = {\n      vendorid : props.vendor,\n      ratetype : props.viewtype\n    }\n    let response =  await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\n   // setProductlists(response.products)\n   setgemlist(response.gems)\n\n  }\n  useEffect( () => {\n    getgemlist()\n  }, [vendorid])\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\n       \n\n      })\n      .catch(console.error)\n  }, [])\n\n  const handleinputChange =type => e => {\n    setEditgem({\n      ...editgem,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      onSuccess={handledelete}\n      data={deleteid}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n   <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item> \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n      <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"  style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n       \n      {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\n        \n      </div> */}\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            {props.viewtype == 1 ? \n            <TableRow>\n              \n              {columns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> : <TableRow>\n              \n              {stonecountcolumns.map(column => (\n              \n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow> }\n          </TableHead>\n          <TableBody>\n          {/* <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <> */}\n                               {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.costprice.gemstone_type}\n                                    \n                                  </TableCell>\n                                  {props.viewtype == 1 ? \n                                  <>\n                                  <TableCell align=\"left\">\n                                  <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_start}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography> \n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.weight_end}\n                                   </Typography>  } */}\n                                    </TableCell>\n                                    </> : null}\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.cost_price}\n                                    onChange={handleinputChange('cost_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editgem.selling_price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellprice.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.costprice.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          {/* </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      } \n                  }}*/}\n          {/* </Query> */}\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmakingchargeprice(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [makingcharge, setMakingcharge] = React.useState({});\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n  const handleSave = () => {\n    props.actionSave(makingcharge)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMakingcharge({ ...makingcharge, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMakingcharge({\n    ...makingcharge,\n    [type]: e.target.value\n  })\n}\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         {props.title}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n          <Grid item xs={12}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.metals}\n              onChange={handleoptionChange('metal')}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Metal\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight Start\"\n              fullWidth\n              onChange={handleinputChange('weightstart')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Weight End\"\n              fullWidth\n              onChange={handleinputChange('weightend')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              options={props.purities}\n              onChange={handleoptionChange('purity')}\n\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose Purity\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('pricetype')}\n              getOptionLabel={option => option.name}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Selling Price Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n         \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Cost Price\"\n              fullWidth\n              onChange={handleinputChange('costPrice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          \n          \n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price\"\n              fullWidth\n              onChange={handleinputChange('sellingprice')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React,{ useEffect} from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport {Grid,Card} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Input} from '@material-ui/core';\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT,METALMASTER, DELETEMAKINGCHARGE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport Addmakingchargeprice from './Addmakingchargeprice'\nimport SaveIcon from '@material-ui/icons/Save';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../../config';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Metal', label: 'Metal' },\n  { id: 'Purity', label: 'Purity' },\n  { id: 'From Weight', label: 'From Weight' },\n  { id: 'To weight', label: 'To weight' },\n  { id: 'Cost Price', label: 'Cost Price' },\n\n  { id: 'updated On', label: 'updated On' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align : 'center' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n  \n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [vendorid,setVendorid] = React.useState(props.vendor);\n  const [editmc,setEditmc] = React.useState({})\n  const [puritymaster,setPuritymaster] = React.useState([])\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n  const [mchargelist,setMchargelist]= React.useState([])\n  const [deleteid,setDeleteid]= React.useState('')\n  const [metalmaster,setMetalmaster]= React.useState([])\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: '',\n    add: false\n  })\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n async function handledelete(datacontent)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMAKINGCHARGE,variables}).then(res=>{\n\n      if(res!==null){\n        //refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleDelete(diamondData) {\n    setDeleteid(diamondData.id)\n    setIsconformation(true);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false, add: true })\n\n  }\n  async function handleAdd(makingcontent) {\n    let bodydata ={}\n    bodydata['material'] = makingcontent.metal.name;\n    bodydata['weight_start'] = makingcontent.weightstart;\n    bodydata['weight_end'] = makingcontent.weightend;\n    bodydata['price_type'] = makingcontent.pricetype.label;\n    bodydata['vendor_code'] = props.vendor;\n    bodydata['purity'] = makingcontent.purity.shortCode;\n    bodydata['cost_price'] = makingcontent.costPrice;\n    bodydata['selling_price'] = makingcontent.sellingprice;\n    bodydata['isadd'] = true\n\n     await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\n\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     setOpen(false)\n     getmclist()\n\n  }\n  function handleEdit(diamondData) {\n      setEditmc({\n        ...editmc,\n        price : diamondData.price,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function getmclist()\n  {\n    let bodydata = {\n      vendorid : props.vendor\n    }\n\n    let response =  await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\n   setMchargelist(response.gems)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: METALMASTER, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\n\n      })\n      .catch(console.error)\n  }, [])\n\n  useEffect( () => {\n    getmclist()\n  }, [vendorid])\n  async function handleSave(id){\n    var bodydata = {}\n   \n\n   await sendNetworkRequest('/updatemakingcharge', {}, editmc)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    getmclist()\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  const handleinputChange =type => e => {\n    setEditmc({\n      ...editmc,\n      [type]: e.target.value\n    })\n      // setProductCtx({ ...productCtx, [type]: e.target.value})\n    \n   }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n     <ConformationAlert \n      title={\"Are you sure to delete?\"} \n      positivebtn={\"Yes\"} \n      negativebtn={\"No\"} \n      message={\"\"} \n      data={deleteid}\n      onSuccess={handledelete}\n      onCancel={hidedeleteconformation}\n      isshow={isconformation} />\n    <Card className={classes.cardcontent} > \n    <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n      <Grid item xs={6}> \n      <Typography variant=\"h6\"> \n        {props.title}\n      </Typography> \n      </Grid>\n      {/* <Grid item > \n      <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          label=\"Search By Purity\"\n          className={classes.helperinput}\n          onChange={handleinputChange('weight_start')}\n          id=\"productvendorcode\"\n          name=\"Cost Price\"\n      />\n      </Grid> */}\n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"  size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n\n      </Grid>\n    </Card>\n    <Paper className={classes.root}>\n     \n      \n\n\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"  : column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_start}\n                                    onChange={handleinputChange('weight_start')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightStart}\n                                   </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.weight_end}\n                                    onChange={handleinputChange('weight_end')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.weightEnd}\n                                   </Typography>  \n                                    </TableCell>\n\n                                  \n\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmc.price}\n                                    onChange={handleinputChange('selling_price')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.price}\n                                   </Typography>  }\n                                    </TableCell>\n\n                                    {/* <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell> */}\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"left\">\n                                        <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"left\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter> */}\n        </Table> \n      </div>\n      {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster}  isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose}/> : null} \n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Vendorprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n\n\n        setVendorlist({ \n          ...vendorlist,\n          vendors : fatchvalue.data.allMasterVendors.nodes\n        })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n         <Grid container  spacing={1}>  \n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Choose Vendor\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid>\n         \n         {vendorcode ? <>\n          {/* <Grid item xs={12} sm={12}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n           Gold Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={vendorcode} />\n          </Grid>\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds vendor={vendorcode}/>\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup By weight\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           \n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \n    </Grid>\n\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Cost Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\n    </Grid>\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Selling Price Setup\n          </Typography>\n          </Grid> */}\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\n    </Grid>\n          </> : null }\n    </Grid>\n\n    \n  )\n});\n\nexport default withRouter(Vendorprice);","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nexport default function Addmarkup(props) {\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         Add Markup Price For {props.material}\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('category')}\n              getOptionLabel={option => option.name}\n              options={props.category}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose category\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n          <Autocomplete\n              id=\"free-solo-2-demo\"\n              multiple\n              fullWidth\n              disableClearable\n              onChange={handleoptionChange('producttype')}\n              getOptionLabel={option => option.name}\n              options={props.producttype}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Choose product type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n        <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Min\"\n              fullWidth\n              onChange={handleinputChange('sellpricemin')}\n              id=\"productvendorcode\"\n              name=\"Selling Price Min\"\n              />\n          </Grid>\n          \n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Selling Price Max\"\n              fullWidth\n              onChange={handleinputChange('sellpricemax')}\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n          <Grid item xs={6}>\n            <Autocomplete\n              id=\"free-solo-2-demo\"\n              fullWidth\n              disableClearable\n              getOptionLabel={option => option.name}\n              onChange={handleoptionChange('markuptype')}\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n              renderTags={(value, getTagProps) =>\n              value.map((option, index) => (\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n              ))\n              }\n              renderInput={params => (\n              <TextField\n              {...params}\n              label=\"Markup Type\"\n              margin=\"dense\"\n              variant=\"outlined\"\n              fullWidth\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n              />\n              )}\n            />\n          </Grid>\n          <Grid item xs={6}>\n              <TextField\n              variant=\"outlined\"\n              margin=\"dense\"\n              label=\"Markup Value \"\n              onChange={handleinputChange('markup')}\n              fullWidth\n              id=\"productvendorcode\"\n              name=\"Cost Price\"\n              />\n          </Grid>\n        </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\n            Save\n          </Button>\n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport ConformationAlert from '../../../components/ConformationAlert'\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Input, Grid, Card} from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDMARKUP,PRODUCTLISTSTATUSEDIT,DELETEMARKUPPRICE} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport Addmarkup from './Addmarkup'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nconst columns = [\n  { id: 'Component', label: 'Components' },\n  { id: 'Product Category', label: 'product Category' },\n  { id: 'Product Type', label: 'Product Type' },\n  { id: 'Selling Price Min', label: 'Selling Price Min' },\n  { id: 'Selling Price Max', label: 'Selling Price Max' },\n  { id: 'Markup Type', label: 'Markup Type' },\n  { id: 'Markup value', label: 'Markup value' },\n\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: \"center\" }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  cardroot: {\n    flexGrow: 1,\n  },\n  cardcontent: {\n    padding: theme.spacing(1),\n    marginTop: theme.spacing(2),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editmarkup,setEditmarkup] = React.useState({})\n  const [goldpricelist,setGoldpricelist] = React.useState({})\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [deleteid,setDeleteid] = React.useState(\"\")\n  const [refetch,setRefetch] = React.useState(null)\n  const [isdelete, setIsdelete] = React.useState(false);\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n   \n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [isconformation, setIsconformation] = React.useState(false);\n  const showdeleteconformation = () => {\n    setIsconformation(true);\n  };\n\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  async function handledelete(datacontent, refetch)\n  {\n    setIsdelete(true)\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEMARKUPPRICE,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n    \n  }\n  function handleDelete(diamondData, refetch) {\n    setDeleteid(diamondData.id)\n    \n    setIsconformation(true);\n  }\n\n\n async function updatemarkup(markupcontent,refetch)\n  {\n    var bodydata = {}\n    bodydata['category'] = markupcontent.category.name;\n    bodydata['producttype'] = markupcontent.producttype.name;\n    bodydata['sellingPriceMin'] = markupcontent.sellpricemin\n    bodydata['sellingPriceMax'] = markupcontent.sellpricemax\n    bodydata['markuptype'] = markupcontent.markuptype.label\n    bodydata['markupValue'] = markupcontent.markup\n    bodydata['material'] = pricecomponent\n    console.log(\"XXXXXXXX\")\n    await sendNetworkRequest('/addmarkup', {}, bodydata)\n    setOpen(false)\n     setBtnEdit({ ...btnEdit, id:\"\", action: false })\n     refetch()\n  }\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n    setEditmarkup({\n          ...editmarkup,\n          markupid : diamondData.id,\n          sellingPriceMin : diamondData.sellingPriceMin,\n          sellingPriceMax : diamondData.sellingPriceMax,\n          markupValue : diamondData.markupValue,\n          updatedAt : new Date()\n\n\n        })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  async function handleSave(id, refetch){\n    var bodydata = {}\n    \n   await sendNetworkRequest('/updatemarkup', {}, editmarkup)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    refetch()\n  }\n  const handleoptionChange = type => (event, value) => {\n    setEditmarkup({ ...editmarkup, [type]: value})\n}\nconst handlecomponentChange = type => (event, value) => {\n  \n  setPriceomponent(value)\n}\n  const handleinputChange =type => e => {\n   setEditmarkup({\n     ...editmarkup,\n     [type]: e.target.value\n   })\n     // setProductCtx({ ...productCtx, [type]: e.target.value})\n   \n  }\n  \n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    \n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <>\n      \n    <Card className={classes.cardcontent} > \n     <Grid container justify=\"left\"   alignItems=\"center\" className={classes.cardroot} spacing={4}>\n     <Grid item xs={3}>\n       <Typography variant=\"h6\"> \n         {\"Selling Price Markup Setup\"}\n       </Typography> \n       </Grid>\n     <Grid item xs={3}> \n          \n     <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                     defaultValue={pricecomponent}\n                    options={[\"Diamond\",\"Gem Stone\",\"Gold\",\"Making Charge\"]}\n                    onChange={handlecomponentChange('earringbacking')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Pricing Components\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    // error = {productCtx.error_message.earringbacking}\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n       </Grid> \n       <Grid item xs={6} style={{textAlign: \"right\"}}>\n        <Button color=\"primary\" variant=\"contained\"   size=\"small\"   style={{paddingRight: 16, paddingLeft: 16}} onClick={handleClickOpen}>\n              Add New\n        </Button>\n      </Grid>\n \n       </Grid>\n     </Card>\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDMARKUP}\n              onCompleted={data => setPageCount( data.allPricingMarkups.totalCount )}\n              variables={{ \"vendorCode\": pricecomponent}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                        setGoldpricelist(data)\n                          return <>\n                           <ConformationAlert \n                                title={\"Are you sure to delete?\"} \n                                positivebtn={\"Yes\"} \n                                negativebtn={\"No\"} \n                                message={\"\"} \n                                refetch={refetch}\n                                onSuccess={handledelete}\n                                onCancel={hidedeleteconformation}\n                                isshow={isconformation} />\n                                {open ? <Addmarkup isadd={open} material={pricecomponent} refetch={refetch} actionSave={updatemarkup} category={props.categories} producttype={props.producttypes} title={props.title} actionclose={handleClose}/> : null} \n\n                              { data.allPricingMarkups.nodes.map((row, index) => (\n                                <>\n                                  <TableRow key={row.category}>\n                                      <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.category}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.productType ? row.productType : 'All' }\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMin}\n                                    onChange={handleinputChange('sellingPriceMin')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMin} </Typography>  \n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {/* {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.sellingPriceMax}\n                                    onChange={handleinputChange('sellingPriceMax')}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> :  */}\n                                    <Typography className={classes.heading}> \n                                    {row.sellingPriceMax} </Typography>  \n                                    </TableCell>\n\n                                    <TableCell align=\"center\">\n                                    {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      onChange={handleoptionChange('sellingPriceType')}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.markupType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                    <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editmarkup.markupValue}\n                                    onChange={handleinputChange('markupValue')}\n\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.markupValue} </Typography>  }\n                                    </TableCell>\n\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  { btnEdit.action && btnEdit.id == row.id ? editmarkup.updatedAt : row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 170}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.id, refetch)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 170}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                        <Button onClick={(e) => handleDelete(row,refetch)}><DeleteIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                                </>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query> \n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n       \n      </div>\n\n    </Paper>\n    </>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport { Input} from '@material-ui/core';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {DIAMONDPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={DIAMONDPRICELIST}\n              onCompleted={data => setPageCount( data.allDiamondPriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allDiamondPriceSettings.nodes.map((row, index) => (\n                                  <TableRow key={row.diamondClarity}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.diamondClarity}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.diamondColour}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.costPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.costPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    label=\"Cost Price\"\n                                    fullWidth\n                                    className={classes.helperinput}\n                                    value= {editdiamond.sellingPrice}\n                                    id=\"productvendorcode\"\n                                    name=\"Cost Price\"\n                                    /> : \n                                    <Typography className={classes.heading}> \n                                    {row.sellingPrice} </Typography>  }\n                                    </TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                  </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n          {/* <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n                colSpan={5}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>*/}\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {GEMPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={GEMPRICELIST}\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                               {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.gemstoneType}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.gemstoneType}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.price}</TableCell>\n                                  <TableCell align=\"left\">\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\n                                      id=\"free-solo-2-demo\"\n                                      fullWidth\n                                      disableClearable\n                                      className={classes.fixedTag}\n                                      getOptionLabel={option => option.name}\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\n                                      renderTags={(value, getTagProps) =>\n                                      value.map((option, index) => (\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                                      ))\n                                      }\n                                      renderInput={params => (\n                                      <TextField\n                                      {...params}\n                                      label=\"Price Type\"\n                                      margin=\"dense\"\n                                      variant=\"outlined\"\n                                      fullWidth\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                                      />\n                                      )}\n                                      /> : <Typography className={classes.heading}> \n                                      {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>  }\n\n                                    </TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n        <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,20,200,500]}\n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React from 'react';\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {MAKINGCHARGEPRICELIST,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../../screens/Productlist/filterandsearch';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\nconst columns = [\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\n  { id: 'updatedAt', label: 'updatedAt' },\n  { id: 'Edit', label: 'Edit' }\n\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n       \n        {columns.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {/* <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? '' : ''}\n                </span>\n              ) : null}\n            </TableSortLabel> */}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\nconst   AddContact=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('Product Id');\n  const [editdiamond,setEditdiamond] = React.useState({})\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleEdit(diamondData) {\n      setEditdiamond({\n        ...editdiamond,\n        costPrice : diamondData.costPrice,\n        sellingPriceType : diamondData.sellingPriceType,\n        sellingPrice : diamondData.sellingPrice,\n        updatedAt : new Date()\n\n\n      })\n    // setProductCtx({\n    //   ...productCtx,\n    //   editleadtime:diamondData.vendorDeliveryTime,\n    //   editreadytoship: diamondData.isReadyToShip,\n    //   editisdefault:diamondData.isdefault,\n    //   editisactive:diamondData.isActive\n    // })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n\n  }\n\n  function handleSave(id){\n    var bodydata = {}\n   \n\n  //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`product_attributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  // function productItemStatusChange(id,isactive){\n    // let variable = {\n    //   \"productId\": id\n    // };\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\n    async function productItemStatusChange(id,isactive,refetch){\n      let variables ={\n        productId:id,\n        isActive:isactive ?false:true\n      }\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\n\n        if(res!==null){\n          refetch();\n        }\n      }).catch(console.error)\n    \n    }\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\n  // }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n      \n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          <Query\n              query={MAKINGCHARGEPRICELIST}\n              onCompleted={data => setPageCount( data.allMakingChargeSettings.totalCount )}\n              variables={{ \"vendorCode\": 'STYPA 010'}}>\n              {\n                  ({ data, loading, error, refetch }) => {\n                    debugger\n                      if (loading) {\n                          // return <Loader />\n                      }\n                      if (error) {\n                        return <div>{error}</div>\n                          // return false\n                      }\n                      if (data) {\n                          return <>\n                              {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  <TableRow key={row.material}>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                     {row.material}\n                                    \n                                  </TableCell>\n                                  <TableCell component=\"th\" scope=\"row\">\n                                  {row.weightStart}\n                                    \n                                  </TableCell>\n                                  <TableCell align=\"left\">{row.weightEnd}</TableCell>\n                                  <TableCell align=\"left\">{row.purity}</TableCell>\n                                  <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\n\n                                  <TableCell align=\"left\">            \n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\n                                  {row.updatedAt}\n                                  </Moment>\n                                  </TableCell>\n                                  {\n                                    btnEdit.action && btnEdit.id == row.id ?\n                                      <TableCell  style = {{width: 20}} align=\"center\">\n                                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\n                                        </Button>\n                                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                        </Button>\n                                      </TableCell> :\n                                      <TableCell align=\"center\" style = {{width: 20}}>\n                                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\n                                        </Button>\n                                      </TableCell>\n                                  }\n                                </TableRow>\n                              ))}\n                          </>\n                      }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                      }\n                  }}\n          </Query>\n            {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )} */}\n          </TableBody>\n         <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[10,100,200,500]}\n                \n                count={pageCount}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table> \n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(AddContact);\n","import React, { useEffect, useContext, useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { Query, withApollo } from 'react-apollo';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Product from './components/Product'\nimport Diamonds from './components/Diamonds'\nimport Gemstones from './components/Gemstones'\nimport Makingcharge from './components/Makingcharge'\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { VENDORLIST,MASTERCATEGORY, PRODUCTDIAMONDTYPES } from '../../graphql/query';\n\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport {\n \n  Chip,\n  TextField\n} from '@material-ui/core';\n\n\nconst useStyle = makeStyles(theme => ({\n}))\nexport const Markupprice = withRouter(props => {\n  const [vendorcode, setVendorcode] = React.useState(0);\n  const [vendorlist, setVendorlist] = React.useState(0);\n  const [categorylist, setCategorylist] = React.useState([]);\n  const [producttypes, setProducttypes] = React.useState([]);\n  const [isadd, setIsadd] = React.useState(false);\n\n   \n  const classes = useStyle();\n\n  const handlevendorchange = type => (event, value) => { \n    setVendorcode(value.shortCode)\n\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: { } })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes)\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes)\n        // setVendorlist({ \n        //   ...vendorlist,\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\n        // })\n\n      })\n      .catch(console.error)\n  }, [])\n\n   \n  return (\n    <Grid container  spacing={1}>  \n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n            Vendor Based Price List\n          </Typography>\n          </Grid>\n\n          <Grid item xs={4} sm={4}>\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      fullWidth\n                      disableClearable\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.name}\n                      options={vendorlist.vendors}\n                      onChange={handlevendorchange('vendor')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n    </Grid> */}\n         \n          \n          <Grid item xs={12} sm={12}>\n\n          <Product categories={categorylist} producttypes={producttypes} vendor={\"Gold\"} />\n          </Grid>\n          {/* <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gem Stone Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gem Stone\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Gold Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Gold\"} />\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Typography component=\"h6\" variant=\"h6\">\n          Making Charge Markup Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n          <Product vendor={\"Making Charge\"} />\n          </Grid> */}\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Diamond Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Diamonds />\n    </Grid> */}\n\n    {/* <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Gemstone Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n  <Gemstones /> \n    </Grid> */}\n\n{/* \n    <Grid item xs={12} sm={12}>\n    <Typography component=\"h6\" variant=\"h6\">\n           Makingcharge Price Setup\n          </Typography>\n          </Grid>\n          <Grid item xs={12} sm={12}>\n\n    <Makingcharge />\n    </Grid> */}\n    </Grid>\n  )\n});\n\nexport default withApollo(withRouter(Markupprice));","import { colors } from '@material-ui/core';\n\nconst white = '#FFFFFF';\nconst black = '#000000';\n\nexport default {\n  black,\n  white,\n  \n  primary: {\n    contrastText: white,\n    dark: colors.indigo[900],\n    main: colors.indigo[500],\n    light: colors.indigo[100]\n  },\n  secondary: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue['A400'],\n    light: colors.blue['A400']\n  },\n  success: {\n    contrastText: white,\n    dark: colors.green[900],\n    main: colors.green[600],\n    light: colors.green[400]\n  },\n  info: {\n    contrastText: white,\n    dark: colors.blue[900],\n    main: colors.blue[600],\n    light: colors.blue[400]\n  },\n  warning: {\n    contrastText: white,\n    dark: colors.orange[900],\n    main: colors.orange[600],\n    light: colors.orange[400]\n  },\n  error: {\n    contrastText: white,\n    dark: colors.red[900],\n    main: colors.red[600],\n    light: colors.red[400]\n  },\n  text: {\n    primary: colors.blueGrey[900],\n    secondary: colors.blueGrey[600],\n    link: colors.blue[600]\n  },\n  background: {\n    default: '#F4F6F8',\n    paper: white\n  },\n  icon: colors.blueGrey[600],\n  divider: colors.grey[200]\n};\n","import palette from './palette';\n\nexport default {\n  h1: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '35px',\n    letterSpacing: '-0.24px',\n    lineHeight: '40px'\n  },\n  h2: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '29px',\n    letterSpacing: '-0.24px',\n    lineHeight: '32px'\n  },\n  h3: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '24px',\n    letterSpacing: '-0.06px',\n    lineHeight: '28px'\n  },\n  h4: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '20px',\n    letterSpacing: '-0.06px',\n    lineHeight: '24px'\n  },\n  h5: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  h6: {\n    color: palette.text.primary,\n    fontWeight: 500,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '20px'\n  },\n  subtitle1: {\n    color: palette.text.primary,\n    fontSize: '16px',\n    letterSpacing: '-0.05px',\n    lineHeight: '25px'\n  },\n  subtitle2: {\n    color: palette.text.secondary,\n    fontWeight: 400,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body1: {\n    color: palette.text.primary,\n    fontSize: '14px',\n    letterSpacing: '-0.05px',\n    lineHeight: '21px'\n  },\n  body2: {\n    color: palette.text.secondary,\n    fontSize: '12px',\n    letterSpacing: '-0.04px',\n    lineHeight: '18px'\n  },\n  button: {\n    color: palette.text.primary,\n    fontSize: '14px'\n  },\n  caption: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    letterSpacing: '0.33px',\n    lineHeight: '13px'\n  },\n  overline: {\n    color: palette.text.secondary,\n    fontSize: '11px',\n    fontWeight: 500,\n    letterSpacing: '0.33px',\n    lineHeight: '13px',\n    textTransform: 'uppercase'\n  }\n};\n","import MuiButton from './MuiButton';\nimport MuiIconButton from './MuiIconButton';\nimport MuiPaper from './MuiPaper';\nimport MuiTableCell from './MuiTableCell';\nimport MuiTableHead from './MuiTableHead';\nimport MuiTypography from './MuiTypography';\n\nexport default {\n  MuiButton,\n  MuiIconButton,\n  MuiPaper,\n  MuiTableCell,\n  MuiTableHead,\n  MuiTypography\n};\n","export default {\n  contained: {\n    boxShadow:\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\n    backgroundColor: '#FFFFFF'\n  }\n};\n","import palette from '../palette';\n\nexport default {\n  root: {\n    color: palette.icon,\n    '&:hover': {\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\n    }\n  }\n};\n","export default {\n  elevation1: {\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\n  }\n};\n","import palette from '../palette';\nimport typography from '../typography';\n\nexport default {\n  root: {\n    ...typography.body1,\n    borderBottom: `1px solid ${palette.divider}`\n  }\n};\n","import { colors } from '@material-ui/core';\n\nexport default {\n  root: {\n    backgroundColor: colors.grey[50]\n  }\n};\n","export default {\n  gutterBottom: {\n    marginBottom: 8\n  }\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport palette from './palette';\nimport typography from './typography';\nimport overrides from './overrides';\n\nconst theme = createMuiTheme({\n  palette,\n  typography,\n  overrides,\n  zIndex: {\n    appBar: 1200,\n    drawer: 1100\n  }\n});\n\nexport default theme;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title=\"Product Type\"\n          action ={\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n\n          >\n            Add New Producttype\n          </Button>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"center\">Alias</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order.name}</TableCell>\n                      <TableCell align=\"center\">{order.alias}</TableCell>\n                      \n                      <TableCell align=\"center\">\n                      <IconButton aria-label=\"add to favorites\">\n                        <CreateIcon />\n                        </IconButton>\n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          {/* <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Management\n          </Typography> */}\n          {/* <Typography\n            component=\"h1\"\n            variant=\"h2\"\n          >\n             Product Type\n          </Typography> */}\n        </Grid>\n        <Grid item>\n\n          \n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport { makeid } from '../../../../utils/commonmethod';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport data from './data.json'\nimport { Fullloader } from '../../../../components/Loader';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  \n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Chip,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n   \n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  metaloption: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary.main,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  selectedOptiondefault: {\n    backgroundColor: theme.palette.common.white,\n   // border: `3px solid ${theme.palette.divider}`,\n\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    \n  },\n  optionmaterialDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n\n  },\n  selectedtext: {\n    color: theme.palette.common.white\n  }\n}));\n\nconst AboutVoucher = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [discountobj, setDiscountobj] = useState({});\n  const [vouchername, setVouchername] = useState(\"\");\n  const [vouchercount, setVouchercount] = useState(\"\");\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\n\n  const [discounttype, setDiscounttype] = useState(1);\n  const [minreq, setMinreq] = useState(\"None\");\n  const [usagelimit, setUsagelimit] = useState(\"once\");\n\n  const [isonce, setIsonce] = useState(false);\n\n  const classes = useStyles();\n\nReact.useEffect(() => {\n  // setDiscountobj({\n  //   ...discountobj,\n  //   \"discountname\": props.discountcontent.discountname,\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\n  //   \"componenets\":props.discountcontent.componenets\n  // })\n},[])\n  const [selected, setSelected] = useState(1);\n  const [selectedDate, handleDateChange] = useState(new Date());\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  \n \n  const handleClick = (event, option) => {\n    setDiscounttype(option);\n  };\n  const handleusagelimit = (event, option) => {\n    setUsagelimit(option);\n\n  };\n\n  const handleInputChange = type => e => {\n    props.onAdded(type,e.target.value)\n\n  }\n  function changediscountype(optionvalue)\n  {\n    setDiscountobj({\n      ...discountobj,\n      \"discounttype\": optionvalue\n    })\n    props.onAdded(\"discounttype\",optionvalue)\n\n  }\n  const handleoptionChange = type => (event, value) => {\n      setDiscountobj({\n        ...discountobj,\n        [type]: value\n      })\n\n      props.onAdded(type,value)\n  }\n  const handleCountChange = type => e => {\n    setVouchercount(e.target.value.toUpperCase())\n  }\n  const handlePrefixChange = type => e => {\n    setVoucherprefix(e.target.value.toUpperCase())\n  }\n  const handleminreq = (event, option) => {\n    setMinreq(option);\n  };\n  const handleonceperorder = (event, option) => {\n    setIsonce(!isonce);\n  };\n \n  \n  return (\n\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {/* <CardHeader title=\"General Information\" />\n      <Divider /> */}\n      <CardContent className={classes.cardcontent}>\n      <Grid container  spacing={2}> \n      <Grid container item xs={12} sm={6}  spacing={2}> \n\n\n<Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountname}\n    onChange={handleInputChange(\"discountname\")}\n    id=\"discountname\"\n    name=\"discountname\"\n    label=\"Name\"\n    />\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n    <TextField\n      variant=\"outlined\"\n      margin=\"dense\"\n      fullWidth\n      value={discountobj.discounttitle}\n      onChange={handleInputChange(\"discounttitle\")}\n      id=\"discounttitle\"\n      name=\"discounttitle\"\n      label=\"Title\"\n      />\n    </Grid>\n<Grid   item xs={12} sm={12} >\n        \n                 \n\n  <Autocomplete\n                 id=\"free-solo-2-demo\"\n                 multiple\n                 defaultValue={discountobj.componenets}\n                 value={discountobj.componenets}\n                 className={classes.fixedTag}\n                 fullWidth\n                 getOptionLabel={option => option.name}\n                 options={voucherCtx.voucherMaster.pricing_components}\n                 onChange={handleoptionChange('componenets')}\n                 renderTags={(value, getTagProps) =>\n                 value.map((option, index) => (\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                 ))\n                 }\n                 renderInput={params => (\n                 <TextField\n                 {...params}\n                 label=\"Pricing Components\"\n                 margin=\"dense\"\n                 variant=\"outlined\"\n                 fullWidth\n                //  error = {productCtx.error_message.selected_sizes}\n\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\n                 />\n                 )}\n                 />\n\n\n\n\n\n    \n\n  </Grid>\n  \n \n \n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  <Grid  item xs={12} sm={6} spacing={1}>\n\n<Typography\n  gutterBottom\n  variant=\"h5\"\n>\nDiscount Type\n</Typography>\n</Grid>\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\n\n  {props.categories.map(option => (\n    \n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\n    \n  ))}\n  </ButtonGroup>\n\n  </Grid>\n  <Grid item xs={12} sm={6} spacing={1}>\n\n  <TextField\n    variant=\"outlined\"\n    margin=\"dense\"\n    fullWidth\n    value={discountobj.discountvalue}\n    onChange={handleInputChange(\"discountvalue\")}\n    id=\"discountvalue\"\n    name=\"discountvalue\"\n    label=\"Discount Value\"\n    />\n  </Grid>\n\n  <Grid container item xs={12} sm={12} spacing={1}>\n  \n    </Grid>\n         </Grid> \n  \n      <Grid container item xs={12} sm={6}  spacing={2}> \n      </Grid>\n     </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nAboutVoucher.propTypes = {\n  className: PropTypes.string\n};\n\nexport default AboutVoucher;\n","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst VoucherComponent = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState({});\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n      if(type === 'materials')\n      {\n        let elements_arr = []\n        value.forEach(element => {\n          elements_arr.push(element.name)\n          \n        });\n        if(elements_arr.indexOf(\"Gold\") > -1)\n        {\n          setIsgold(true)\n        }else\n        {\n          setIsgold(false)\n        }\n\n        if(elements_arr.indexOf(\"Diamond\") > -1)\n        {\n          setIsdiamond(true)\n        }else\n        {\n          setIsdiamond(false)\n        }\n      }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj.category}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={voucherCtx.voucherMaster.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n           value={attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           value={attrobj.materials}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n//  value={attrobj.componenets}\n className={classes.fixedTag}\n fullWidth\n options={voucherCtx.voucherMaster.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n           options={voucherCtx.voucherMaster.diamondtypes}\n           onChange={handleoptionChange('diamondtype')}\n           value={attrobj.diamondtype}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n           value={attrobj.collections}           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n           value={attrobj.occations} \n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n           value={attrobj.styles}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n          //  value={attrobj.componenets}\n           className={classes.fixedTag}\n           fullWidth\n           options={voucherCtx.voucherMaster.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n           value={attrobj.themes}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n      <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\n    </Grid>\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nVoucherComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default VoucherComponent;\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { TextField, Grid, Chip } from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nexport default function Viewsku(props) {\n  const classes = useStyles();\n\n  const [open, setOpen] = React.useState(props.isadd);\n  const [markup, setMarkup] = React.useState({});\n\n  const handleSave = () => {\n    props.actionSave(markup,props.refetch)\n  };\n  const handleoptionChange = type => (event, value) => {\n    setMarkup({ ...markup, [type]: value})\n}\nconst handleinputChange =type => e => {\n  setMarkup({\n    ...markup,\n    [type]: e.target.value\n  })\n}\nconst handleDelete = chipToDelete => () => {\n\n }\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    props.actionclose()\n  };\n\n  return (\n    <div>\n  \n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n         SKUs\n        </DialogTitle>\n        <DialogContent dividers>\n        <Grid container spacing={2}>\n        {props.products.map(data => (\n        <Chip\n        key={data.generated_sku}\n        label={data.generated_sku}\n        variant=\"outlined\"\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n         onDelete={handleDelete(data.generated_sku)}\n        className={classes.chip}\n      />\n\n      \n      ))}\n       \n       </Grid>\n        \n        \n        </DialogContent>\n        <DialogActions>\n        <Button autoFocus onClick={handleClose} >\n            Cancel\n          </Button>\n          \n          \n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { VoucherContext } from '../../../../context';\n\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography,\n  TextField,\n  Popper,\n  CardActionArea,\n  CardActions,\n  Radio,\n  Button,\n  Grid,\n  Checkbox,\n  FormControlLabel,\n  Divider,\n  colors\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    cursor: 'pointer',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: theme.palette.primary\n  },\n  optionRadio: {\n    margin: -10\n  },\n  margin: {\n    marginTop: theme.spacing(2),\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2),\n  }\n}));\n\nconst CategoryComponents = props => {\n  const { className, ...rest } = props;\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\n  const [vouchercode, setVouchercode] = useState(\"\");\n  const [attributenames, setAttributenames] = useState(\"\");\n  const [attributealias, setAttributealias] = useState(\"\");\n\n  const classes = useStyles();\n\n  const [selected, setSelected] = useState(1);\n\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  function makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result.toUpperCase();\n }\n \n  const handleClick = (event, option) => {\n    alert(JSON.stringify(option))\n    setSelected(option);\n  };\n  const generateCoupon = (event) => {\n   // alert(JSON.stringify(voucherCtx))\n   setVouchercode(\"1234343\")\n  };\n  \n  return (\n        <Grid container item xs={12} sm={12} spacing={1}>\n        \n        {props.materials.map(option => (\n          \n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\n          <CardActionArea>\n            \n          <div\n            className={clsx(classes.option, {\n              [classes.selectedOption]: selected === option\n            })}\n            onClick={event => handleClick(event, option)}\n            key={option}\n          >\n\n           <div className={classes.optionDetails}>\n           <Typography\n                gutterBottom\n                variant=\"h5\"\n              >\n                {option.name}\n              </Typography>  \n              </div> \n          </div>\n          </CardActionArea>\n          </Grid>\n        ))}  \n        </Grid>\n       \n        \n  );\n};\n\nCategoryComponents.propTypes = {\n};\n\nexport default CategoryComponents;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Viewsku from '../Viewsku'\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Products = props => {\n  const { className, orders, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [open, setOpen] = useState(false);\n  const [selectskus, setSelectskus] = useState([]);\n\n  const handleSelectAll = event => {\n    const selectedOrders = event.target.checked\n      ? orders.map(order => order.id)\n      : [];\n\n    setSelectedOrders(selectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function handlecancel(){\n    setOpen(false)\n  }\n  function handleOpen(prodskus)\n  {\n    setOpen(true)\n    setSelectskus(prodskus)\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n    {open ? <Viewsku isadd={open} products={selectskus}  actionclose={handlecancel}/> : null} \n\n      {/* <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length} Records found. Page {page + 1} of{' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography> */}\n      <Card>\n        <CardHeader\n          title =  {props.title} \n\n         \n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Product ID</TableCell>\n                    \n                    {/* <TableCell align=\"center\">SKU Count</TableCell>\n\n                    <TableCell align=\"center\">Actions</TableCell> */}\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\n                    <TableRow\n                      // key={order.id}\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      \n                     \n\n                      <TableCell >{order}</TableCell>\n                      {/* <TableCell align=\"center\"> \n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\n                          <VisibilityIcon />\n                      </IconButton>\n                      </TableCell>\n                      \n                      <TableCell align=\"center\">\n                      \n                        <IconButton aria-label=\"add to favorites\">\n                        <DeleteIcon />\n                        </IconButton>\n                      </TableCell> */}\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={props.products.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nProducts.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nProducts.defaultProps = {\n  orders: []\n};\n\nexport default Products;\n","import React, { useEffect, useState } from 'react';\nimport clsx from 'clsx';\n\nimport { VoucherContext } from '../../context';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {Chip,IconButton} from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport RefreshIcon from '@material-ui/icons/Refresh';\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport uuid from 'uuid/v1';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport {palette} from '../../theme'\nimport Page from '../../components/Page'\nimport { Header, Results, Products,AboutVoucher ,VoucherComponent} from './components';\nimport { Button, Grid,Typography } from '@material-ui/core';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport FullLoader from '../../components/Loader'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  aboutvoucher: {\n    marginTop: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  },\n  productcontent: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    padding: theme.spacing(0.5),\n    marginTop: theme.spacing(1)\n  },\n  errorchip: {\n    margin: theme.spacing(0.5),\n    backgroundColor: theme.palette.error.dark,\n    textColor : theme.palette.white\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n   \n  }\n\n}));\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function Salediscountcontent(props) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n  const [deletedids, setDeletedids] = useState([]);\n\n  const [skus, setSkus] = useState([]);\n  const [isloading, setIsloading] = useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [productattr, setProductattr] = useState({});\n  const [productattrtext, setProductattrtext] = useState(\"\");\n  const [errorskus, setErrorskus] = useState([]);\n  const [isloaded, setIsloaded] = useState(false);\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\n  const [statusmessage, setStatusmessage] = useState(\"\");\n  const [titlecontent, setTitlecontent] = useState(\"\");\n  const [discount_id, setDiscount_id] = useState(\"\");\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\n\n  const [attributeobj, setAttributeobj] = useState({});\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"Created Successfully\",\n    severity:\"Success\"\n  });\n \n  \n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n  \n  async function getdiscountvalue(discount_id)\n  {\n    let bodydata = {\n      discountid : discount_id\n      }\n    let response = await sendNetworkRequest('/getdiscount', {}, bodydata, false)\n    let comparr = [];\n    let displyarr = [];\n    response.discunt.components.forEach(comp => {\n      comparr.push({\n        name: comp\n      })\n    })\n    // alert(JSON.stringify(response.discunt))\n\n    // alert(Object.keys(response.discunt.product_attributes))\n\n    setProducts(response.discunt.product_ids)\n    setAttributeobj({\n      ...setAttributeobj,\n      discountname:response.discunt.discount_name,\n      discountvalue:response.discunt.discount_value,\n      discounttype:response.discunt.discount_type,\n      discounttitle:response.discunt.discount_title,\n      componenets: comparr,\n      skucount: response.discunt.product_ids.length,\n      displaycomp: response.discunt.components,\n      attributes: response.discunt.product_attributes,\n      allkeys: Object.keys(response.discunt.product_attributes)\n    })\n    setIsloaded(true)\n  }\n  async function creatediscount(ispricerun)\n  {\n   let skuarray  = []\n    while(skus.length > 0)\n    {\n        let sku_content = skus.splice(0,25000)\n        skuarray.push(sku_content)\n    }\n    if(errorskus.length > 0 )\n    {\n      alert(\"Some skus are overlapping\")\n    }else{\n     \n    let discount_count = 0\n   setIsloading(true)\n      updatediscount(discount_count)\n     async function updatediscount()\n      {\n    let bodydata = {\n      discountvalue: parseFloat(attributeobj.discountvalue),\n      discounttype : attributeobj.discounttype,\n      componenets : attributeobj.componenets,\n      discountname : attributeobj.discountname,\n      discounttitle : attributeobj.discounttitle,\n      product_attributes: productattr,\n      product_attributes_text : productattrtext,\n      skus : skuarray[discount_count]\n    }\n    console.log(JSON.stringify(productattr))\n    let response = await sendNetworkRequest('/creatediscount', {}, bodydata, false)\n   \n    discount_count = discount_count + 1\n    if(skuarray.length > discount_count)\n    {\n      setLoadingtitle(skus.length+\" Left\")\n      updatediscount(discount_count)\n    }else{\n      setIsloading(false)\n      setOpen(true)\n      setIsshowpriceupdate(false)\n\n     window.location='/salediscountlist'\n\n    }\n  }\n  }\n}\nconst handleDelete = chipToDelete => () => {\n  //setProducts([]) \n  let errorindex =  errorskus.indexOf(chipToDelete)\n  if(errorindex > -1)\n  {\n    errorskus.splice(errorindex,1)\n    var erroritems = []\n    errorskus.forEach(itemname =>{\n      erroritems.push(itemname)\n    })\n   setErrorskus(erroritems) \n  }\n  let index = products.indexOf(chipToDelete)\n  products.splice(index,1)\n  var items = []\n  products.forEach(itemname =>{\n    items.push(itemname)\n  })\n setProducts(items) \n\n  //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\n};\n\nasync function filterapllied(value)\n  {\n    var  bodydata = {}\n  \n    let product_ids = []\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\n   setProducts(response.products)\n   setSkus(response.skus)\n   setErrorskus(response.eror_skus)\n   setIsloading(false)\n   setTitlecontent(response.title)\n    \n  }\n  async function updateprices()\n  {\n    alert('i am here')\n    var  bodydata = {}\n    bodydata = {\n      pricingcomponent: \"updateskuprice\",\n      req_product_id : products\n    }\n    setIsshowpriceupdate(true)\n\n    let response = await sendNetworkRequest('/productpriceupdate', {}, bodydata, false)\n  }\n  async function handlestatus(e) {\n    let bodydata = {\n     \"component\":\"updateskuprice\"\n    }\n   let response = await sendNetworkRequest('/getcomponentpricestatus', {}, bodydata, false)\n \n   setStatusmessage(response.message)\n   }\n  function attributeadded( value)\n  {\n  let componentsstring = {}\n  let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      componentsstring[key] = {\n        values : values,\n        alias : alias_arr\n      }\n      let displaytext = key + ' : ' + attrs.join(' , ')\n      display_arr.push(displaytext)\n    })\n    setProductattr(componentsstring)\n    setProductattrtext(display_arr.join(' | '))\n   //alert(JSON.stringify(componentsstring))\n    setIsloading(true)\n    //setAttributeobj(value)\n    filterapllied(value)\n    \n\n  }\n  function valuechange(type, value)\n  {\n    setAttributeobj({\n      ...attributeobj,\n      [type]: value\n    })\n    \n\n  }\n  useEffect(() => {\n    let mounted = true;\n    const fetchOrders = () => {\n\n      \n    };\n    fetchOrders();\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\n  {\n    let discount_id = props.location.pathname.split('/')[2];\n    setDiscount_id(discount_id)\n    getdiscountvalue(discount_id)\n\n  }else\n  {\n    setIsloaded(true)\n  }\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n\n    <>\n     <FullLoader title={loadingtitle} isopen={isloading}/>\n     <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    {!discount_id ?\n    <>\n    <VoucherComponent onAdded={attributeadded} className={classes.aboutvoucher} />\n    {products.length > 0 ? <Products  title={titlecontent} products={errorskus} /> : null }\n  {/* <Paper className={classes.productcontent}>\n     <Typography variant=\"h5\" component=\"h2\">\n        {products.length} Products and {skus.length} skus\n      </Typography>\n\n     \n    </Paper> \n    {products.map(data => (\n        <Chip\n        key={data}\n        label={data}\n        variant=\"outlined\"\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\n        onDelete={handleDelete(data)}\n        className={classes.chip}\n      />\n\n      \n      ))} */}\n    {isloaded || !discount_id ? <AboutVoucher discountcontent= {attributeobj} className={classes.aboutvoucher} onAdded={valuechange} categories={['Fixed Amount','percentage']} /> : null}\n    \n    \n    {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\n\n    <Grid container xs={12} spacing={2} style={{textAlign:\"center\"}} >\n   \n    <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} spacing={2} >\n    {!isshowpriceupdate ? <>\n      <Button onClick={() => creatediscount(false)} color=\"primary\" style={{margin:16}} variant=\"contained\">Submit</Button>\n         \n      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\n      </>:null} \n    </Grid>\n    </Grid>\n    </> : \n        <Grid container xs={12} spacing={2} >\n            <Grid item xs={6} style={{marginTop:16}} >\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Name\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discountname}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={12} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Title\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttitle}\n\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Discount Value\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.discounttype == 2 ? attributeobj.discountvalue+ \"%\" : attributeobj.discountvalue}\n\n            </Typography>\n            </Grid>\n            <Grid item xs={6} style={{marginTop:16}} >\n              \n              <Typography variant=\"body2\" component=\"body2\">\n              Pricing Compponent\n\n            </Typography>\n            <Typography variant=\"h5\" component=\"h5\">\n            {attributeobj.displaycomp}\n\n            </Typography>\n            </Grid>\n            </Grid>\n            \n            {attributeobj.allkeys ? <Grid item xs={6} style={{marginTop:16}} >\n                   {attributeobj.allkeys.map((row, index) => (\n                     <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          {row}\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.attributes[row].values}\n                        </Typography>\n                       </Grid>\n                  ))}  \n                  <Grid item xs={12} style={{marginTop:16}} >\n                       <Typography variant=\"body2\" component=\"body2\">\n                          Total Sku\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h5\">\n                          {attributeobj.skucount}\n                        </Typography>\n                       </Grid>\n            </Grid> : null}\n                      <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n                      {!isshowpriceupdate ? <>\n         \n      {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\n      </>:<> {statusmessage}<IconButton aria-label=\"delete\"  onClick={(e) => handlestatus()} color=\"primary\">\n                            <RefreshIcon />\n                          </IconButton></>} \n                        \n                        \n      </Grid>\n      </Grid>\n} \n  </Page>\n  </MuiPickersUtilsProvider>\n  </>\n  );\n}","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { VoucherProvider } from '../../context';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\n\nimport { useQuery } from 'react-apollo';\nimport { materialMaster } from '../../services/mapper';\nimport Component from './Salediscountcontent';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles(theme => ({\n    progress: {\n      margin: theme.spacing(2)\n    },\n  }));\nexport const Salediscount = withRouter(props => {\n    const classes = useStyles();\n\n    const { data, loading, error } = useQuery(materialMaster.query);\n    if(loading) return <div><CircularProgress className={classes.progress} />\n    </div>\n    if(error) return <div>error</div>\n    return (\n        \n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\n            \n    <Component {...props} />\n    </VoucherProvider>\n\n)});\nexport default Salediscount;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                 {columnname.type == 8 ?\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                View\n               </Button> \n                : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                {/* {columnname.type === 8 ?\n                  <Button\n                  color=\"primary\"\n                  component={RouterLink}\n                  size=\"small\"\n                  to={'/management/invoices/1'}\n                  variant=\"outlined\"\n                >\n                  View\n                </Button>\n                : null} */}\n\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                 View\n                                                </Button> : null}  \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsetup = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsetup);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Materialmaster = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIAL  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Materialmaster;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastermetalcolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastermetalcolors;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpurities = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpurities;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link'\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibileIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  FormControlLabel,\n  Switch,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n   // minWidth: 1150\n   overflowX: 'auto',\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  let history = useHistory();\n\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function DiscountEdit(id){\n    // localStorage.setItem('productEditId',id);\n   // history.push(`product_attributes/${id}`)\n   history.push(`salediscount/${id}`)\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      discountId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n          action={\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\n            <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n          >\n            Add New \n          </Button>\n          </Link>\n          }\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={SALEDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                  \n                                 <>\n\n                                  <TableRow key={row.name}>\n                                  <TableCell align=\"left\">{row.discountName} \n                                              </TableCell>\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \n                                              </TableCell>\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\n                                              } \n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell> */}\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"Components\",\n  \"discount_value\",\n  \"product attributes\",\n  \"Active\",\n  \"actions\"\n]\nexport const DiscountList = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    \n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Sale Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      onAdd={addcategory}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default DiscountList;","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\nimport ConformationAlert from '../../../../components/ConformationAlert'\nimport { useHistory } from \"react-router-dom\";\n\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport VisibleIcon from '@material-ui/icons/Visibility';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  FormControlLabel,\n  Switch,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    //minWidth: 1150\n    overflowX: \"auto\"\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  let history = useHistory();\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [isconformation,setIsconformation] = React.useState(false)\n\n  \n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n  const [deleteid, setDeleteid] = React.useState('');\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nfunction handleEdit(diamondData) {\n\nhistory.push(`voucherdiscount/${diamondData.id}`)\n}\nfunction handleDelete(diamondData) {\n\n  setDeleteid(diamondData.id)\n  setIsconformation(true);\n}\n async function handledelete(datacontent,refetch)\n  {\n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n  const hidedeleteconformation = () => {\n    setIsconformation(false);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  async function handledelete(datacontent,refetch)\n  {\n   \n    let variables ={\n      elementId:deleteid\n    }\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n        // refetchval()\n      }\n    }).catch(err => {\n\n    })\n    setIsconformation(false);\n\n  }\n  function handleChange(event,voucherid, refetch)\n  {\n    handlestatusChange(voucherid,event.target.checked, refetch)\n  }\n\n  async function handlestatusChange(id,isactive,refetch){\n    let variables ={\n      voucherId:id,\n      isActive:isactive\n    }\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\n\n      if(res!==null){\n        refetch();\n      }\n    }).catch(console.error)\n  \n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    {props.tablecolumns.map((row, index) => (\n                          <TableCell>{row}</TableCell>\n                    ))}   \n                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={VOUCHERDISCOUNTS}\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n                                 <ConformationAlert \n                                    title={\"Are you sure to delete?\"} \n                                    positivebtn={\"Yes\"} \n                                    negativebtn={\"No\"} \n                                    message={\"\"} \n                                    data={deleteid}\n                                    refetch={refetch}\n                                    onSuccess={handledelete}\n                                    onCancel={hidedeleteconformation}\n                                    isshow={isconformation} />\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\n                                 <>\n                                  <TableRow key={row.name}>\n                                    <TableCell align=\"left\">\n                                    {row.name}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.description}\n                                              </TableCell>\n                                              <TableCell align=\"left\">\n                                              {row.uses} / {row.maxUses}\n                                              </TableCell>\n                                              <TableCell align=\"left\"> <FormControlLabel\n                                                    label={row.isActive ? \"\" : \"\"}\n\n                                                    control={\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \n                                                      />\n                                                    }\n                                                  /></TableCell>\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\n                                      <Button ><VisibleIcon />\n                                      </Button>\n                                    </TableCell>\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={pageCount}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default withApollo(Results);\n","import React,{useState} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport data from \"./data.json\"\nimport Page from '../../components/Page/Page'\nimport { Header, Results } from './components';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\nlet colimns = [\n  \"Name\",\n  \"code\",\n  \"description\",\n  \"uses/Max usage\",\n  \"Active\",\n  \"actions\"\n]\nexport const VoucherdiscountListing = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const classes = useStyles();\n\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\n    <Results\n    title={\"Voucher Discount\"}\n       className={classes.results}\n       tablecolumns={colimns}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    />\n   \n    </Page>\n    </>\n  )\n});\n\nexport default VoucherdiscountListing;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercollections = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercollections;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdesigns = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DESIGNMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamonds = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterdiamondshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterdiamondshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Earringbacking = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: EARRINGBACKING  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterproducttypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterproducttypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemsettings;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  useEffect(() => {\n   \n  }, [])\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemshapes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergemtypes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergemtypes;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastergenders = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERGENDER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastergenders;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Seopriority = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SEOPRIORITIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Seopriority;","import React,{useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { Query, withApollo } from 'react-apollo';\n\nimport Mastercontent from '../../components/Mastercontent';\nimport data from \"./data.json\"\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { TaxSettingList, CREATETAXSETUP } from '../../graphql/query';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\n\nexport const Taxsettings = withRouter(props => {\n  const [mastervalue, setMastervalue] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\n   // alert(JSON.stringify(response))\n    getmaster()\n  } \n  \n\n  // async function createtax(taxcontent){\n    \n  //   let variables ={\n     \n  //      taxValue: taxcontent.taxValue, \n  //      taxName: taxcontent.taxName,\n  //     hsnNumber: taxcontent.hsnNumber\n  //   }\n  //   console.log()\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\n\n  //   //   if(res!==null){\n        \n  //   //   }\n  //   // }).catch(console.error)\n  \n  // }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\n    );\n    setFiltervalue(filteredHomes)\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: TaxSettingList  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allTaxsettings.nodes)\n        setFiltervalue(fatchvalue.data.allTaxsettings.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <>\n    <Grid container  spacing={2}>  \n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Grid>\n    </>\n  )\n});\n\nexport default withApollo(Taxsettings);","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Mastercategories = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCATEGORIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes)\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Mastercategories;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterattribute = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n \n  \n  async function Masterattribute(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managemasterattributes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERATTRIBUTES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    \n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes)\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={Masterattribute} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterattribute;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstonecolors = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstoneshapes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\n    };\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstoneshapes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterweights = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n       \n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterweights;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterstyles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: STYLEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterstyles;","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\n// import moment from 'moment';\nimport { Query, withApollo } from 'react-apollo';\nimport {MATERIALMASTER} from '../../../../graphql/query'\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport PropTypes from 'prop-types';\n// import PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport CreateIcon from '@material-ui/icons/Create';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  Typography,\n  Table,\n  TextField,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label, ReviewStars } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst Results = props => {\n  const { className, orders, ...rest } = props;\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  const [editcontent,setEditcontent] = React.useState({})\n\n  const classes = useStyles();\n\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\n  function Editvendor(vendordata) {\n    setEditcontent({\n      ...editcontent,\n      alias : vendordata.alias,\n      name : vendordata.name,\n      isedit: true\n    })\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\n\n  }\n  async function Savevendor(refetch) {\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(event.target.value);\n  };\n  function Cancelcreate() {\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \n    props.onCancel();\n\n  }\n  const paymentStatusColors = {\n    canceled: colors.grey[600],\n    pending: colors.orange[600],\n    completed: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      <Card>\n        <CardHeader\n          title=\"Category\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          {/* <PerfectScrollbar> */}\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    \n                    <TableCell>Name</TableCell>\n                    \n                    <TableCell align=\"left\">Alias</TableCell>\n\n                    <TableCell align=\"left\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                { <Query\n                    query={MATERIALMASTER}\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\n                    {\n                        ({ data, loading, error, refetch }) => {\n                            if (loading) {\n                                // return <Loader />\n                            }\n                            if (error) {\n                              return <div>{error}</div>\n                                // return false\n                            }\n                            if (data) { \n                                return <> \n\n                                {data.allMasterMaterials.nodes.map((row, index) => (\n                                 <>\n                                 {index == 0 && props.isadd ? \n                                 <TableRow key={row.name}>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                 <TableCell align=\"left\">\n                                 <TextField\n                                    variant=\"outlined\"\n                                    margin=\"dense\"\n                                    contentEditable={false}\n                                    id=\"vendordeliverydays\"\n                                    name=\"vendordeliverydays\"\n                                    value={props.newvendorcode}\n                                    onChange={handleInputChange('shortCode')}\n      \n                                    label=\"Vendor Code\"\n                                   />\n                                   </TableCell>\n                                          \n                                  <TableCell  style = {{width: 20}} align=\"center\">\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                    </Button>\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\n                                    </Button>\n                                  </TableCell>\n                                   </TableRow>\n                                  : null }\n                                 <TableRow key={row.name}>\n\n                                \n                                 {\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                <TableCell align=\"left\">\n                                    <TextField\n                                      variant=\"outlined\"\n                                      margin=\"dense\"\n                                      fullWidth\n                                      id=\"categoryname\"\n                                      name=\"categoryname\"\n                                      value={editcontent.name}\n                                      onChange={handleInputChange('name')}                        \n                                      label=\"Name\"\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \n                                        </TableCell> }\n                                        {\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \n                                      <TableCell align=\"left\">\n                                      <TextField\n                                            variant=\"outlined\"\n                                            margin=\"dense\"\n                                            fullWidth\n                                            id=\"alias\"\n                                            name=\"alias\"\n                                            value={editcontent.alias}\n                                            onChange={handleInputChange('alias')}  \n                                                                  label=\"alias\"\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \n                                              </TableCell> }\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\n                                    <TableCell  style = {{width: 20}} align=\"center\">\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\n                                      </Button>\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                                      </Button>\n                                    </TableCell> :\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\n                                      <Button ><EditIcon />\n                                      </Button>\n                                    </TableCell>}\n                                    </TableRow>\n                                    </>\n\n                                      ))}\n                         </> \n                       }\n                      else{\n                      return <div>{\"Fetch Products\"}</div>\n                     \n                 } } }\n                </Query>  }\n                </TableBody>\n              </Table>\n            </div>\n          {/* </PerfectScrollbar> */}\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      {/* <TableEditBar selected={selectedOrders} /> */}\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { Header, Results } from './components';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterthemes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: THEMEMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masteroccassions = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterpaymentstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n<Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport {Breadcrumbs} from '../../components'\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterorderstatus = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.diamondColor.toLowerCase() ? x.diamondColor.toLowerCase().match(taxcontent+ \".*\") : null ||\n      x.diamondClarity.toLowerCase() ? x.diamondClarity.toLowerCase().match(taxcontent+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs ></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingzones = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [mastercountries, setMastercountries] = React.useState([])\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\n    getmaster()\n  }\n  async function getmastercountries()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\n      })\n      .catch(console.error)\n  }\n  function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let zones = []\n        if(fatchvalue.data.allShippingZones.nodes)\n        {\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\n            let countries = []\n            let countrydefault = []\n            let shippingcharges = []\n\n            if(element.shippingZoneCountriesByZoneId)\n            {\n              \n              if(element.shippingZoneCountriesByZoneId.nodes)\n              {\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\n                  countries.push(countryobj.masterCountryByCountryId.name)\n                  countrydefault.push(countryobj.masterCountryByCountryId)\n                })\n              }\n            }\n            if(element.shippingChargesByZoneId)\n            {\n              \n              if(element.shippingChargesByZoneId.nodes)\n              {\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\n                  shippingcharges.push(countryobj.name)\n                })\n              }\n            }\n            let zoneobj = {\n              id : element.id,\n              isActive : element.isActive,\n              name : element.name,\n              country  : countries.join(\" , \"),\n              charges : shippingcharges.join(\" , \"),\n              zonecountry : countrydefault\n            }\n            zones.push(zoneobj)\n          });\n        }\n\n        setMastervalue(zones)\n        setFiltervalue(zones)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastercountries()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \n\n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \n        masters={mastercountries}\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingzones;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shipmentsettings = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n            shipobj['isCart'] = element.isCart;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Mastercontent title= {\"Shipment Settings\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport { NetworkContext } from '../../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\n  const [pageCount,setPageCount] = React.useState(0);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n\n  }\n\n  useEffect( () => {\n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  function ProductEdit(id){\n    // localStorage.setItem('productEditId',id);\n    history.push(`addshippingattributes/${id}`)\n  }\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> */}\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                     {columnname.key === 'action' ?                  \n                          <TableCell align=\"center\" style = {{width: 20}}>\n                            <Button onClick={(e) => ProductEdit(row.id)}>\n                                    <EditIcon />\n                                  </Button>\n                        </TableCell>   :            <TableCell>\n\n                      <Typography> {row[columnname.key]}</Typography>\n                     \n                    </TableCell>}\n                \n              \n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.values.length]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Attributescontent from './Attributescontent/Attributescontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Shippingattributes = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n\n  \n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  \n  async function createtax(taxcontent)\n  {\n    console.log(JSON.stringify(taxcontent))\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\n     getmaster()\n  }\n  async function getmastervalues()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n      \n        setMasters({\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\n          \"ranges\":[{\n            \"id\":1,\n            \"name\":\"By Weight\"\n          },{\n            \"id\":1,\n            \"name\":\"By Value\"\n          }]\n        })\n\n      })\n      .catch(console.error)\n\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['displayAttributes'] = element.displayAttributes;\n\n            shipobj['isActive'] = element.isActive;\n            \n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmastervalues()\n    getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n\n        <Attributescontent title= {\"Shipment Settings II\"} \n        masters={masters}\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Shippingattributes;","import React, { useEffect,useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {CategoryComponents} from './../../components'\nimport { DateTimePicker } from \"@material-ui/pickers\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  Card,\n  Grid,\n  Chip,\n  Button, \n  TextField,\n  CardHeader,\n  CardContent,\n  Tabs, Tab, \n  Divider,\n  colors\n} from '@material-ui/core';\nimport { VoucherContext } from '../../../../context';\nconst tabs = [\n  { value: 'Category', label: 'Category' },\n  { value: 'Producttype', label: 'Product type' },\n  { value: 'Material', label: 'Material' },\n  { value: 'Collections', label: 'Collections' },\n  { value: 'Occations', label: 'Occations' },\n  { value: 'Styles', label: 'Styles' },\n  { value: 'Themes', label: 'Themes' }\n\n\n];\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  option: {\n    border: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    alignItems: 'flex-center',\n    padding: theme.spacing(1),\n    maxWidth: '100%',\n    minWidth: '100%',\n    '& + &': {\n      marginLeft: theme.spacing(2)\n    }\n  \n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  cardcontent:{\n    display: 'flex',\n    alignItems: 'flex-center',\n\n  },\n  selectedOption: {\n    backgroundColor: colors.grey[200]\n  },\n  optionRadio: {\n    margin: -10\n  },\n  content: {\n    marginTop: theme.spacing(2),\n    padding: theme.spacing(1)\n\n  },\n  optionDetails: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(2)\n  },\n  \n}));\n\nconst AttributeComponent = props => {\n  const { className, ...rest } = props;\n  const classes = useStyles();\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\n  const [attrobj, setAttrobj] = useState(props.attributes);\n  const [isgold, setIsgold] = useState(false);\n  const [isdiamond, setIsdiamond] = useState(false);\n  const [tabnames, setTabnames] = useState([\n    \"Category\",\n    \"Producttype\",\n    \"Material\",\n    \"Collections\",\n    \"Occations\",\n    \"Styles\",\n    \"Themes\"\n\n  ]);\n\n  const [selected, setSelected] = useState(1);\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\n  const [selectedDate, handleDateChange] = useState(new Date());\n  const handleChange = (event, option) => {\n    setSelected(option);\n\n  };\n  useEffect(() => {\n    // alert(JSON.stringify(props.attributes))\n    // setAttrobj(props.attributes)\n  }, [props.attributes])\n const myFunction = () => {\n    props.onAdded(attrobj)\n  }\n  const handleoptionChange = type => (event, value) => {\n    if(type === 'materials')\n    {\n      let elements_arr = []\n      value.forEach(element => {\n        elements_arr.push(element.name)\n        \n      });\n      if(elements_arr.indexOf(\"Gold\") > -1)\n      {\n        setIsgold(true)\n      }else\n      {\n        setIsgold(false)\n      }\n\n      if(elements_arr.indexOf(\"Diamond\") > -1)\n      {\n        setIsdiamond(true)\n      }else\n      {\n        setIsdiamond(false)\n      }\n    }\n      setAttrobj({\n        ...attrobj,\n        [type]: value\n      })\n      \n     // props.onAdded(type,value)\n\n  }\n  const handleTabsChange = (event, value) => {\n    if(value == 'Material')\n    {\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\n      // )\n      if(tabnames.indexOf(\"Purity\") === -1)\n      {\n        tabnames.splice(3, 0, \"Purity\");\n\n      }\n\n    }\n    setSelectedtab(value);\n  };\n  useEffect(() => {\n  }, []);\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n  \n      \n      <div className={classes.content}>\n      <Grid container  spacing={2}>  \n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       disabled\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                        options={props.masters.shiprates}\n                       value={props.selectedrate}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Shipping Rate\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n      <Grid   item xs={4} sm={4} >\n                  <Autocomplete\n                       id=\"free-solo-2-demo\"\n                       multiple\n                       value={attrobj ? attrobj.category : []}\n                       className={classes.fixedTag}\n                       fullWidth\n                       getOptionLabel={option => option.name}\n                       options={props.masters.product_categories}\n                       onChange={handleoptionChange('category')}\n                       renderTags={(value, getTagProps) =>\n                       value.map((option, index) => (\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n                       ))\n                       }\n                       renderInput={params => (\n                       <TextField\n                       {...params}\n                       label=\"Product Category\"\n                       margin=\"dense\"\n                       variant=\"outlined\"\n                       fullWidth\n                       />\n                       )}\n                       />\n        </Grid>\n       \n        <Grid   item xs={4} sm={4} >\n           <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n\n           value={attrobj.product_types}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.product_types}\n           onChange={handleoptionChange('product_types')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Product Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n        </Grid>\n        <Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n           value={attrobj.materials}\n           className={classes.fixedTag}\n           fullWidth\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\n           options={props.masters.materials}\n           onChange={handleoptionChange('materials')}\n           getOptionLabel={option => option.name}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Materials\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>\n{isgold ||  attrobj.purities ? \n  <Grid   item xs={4} sm={4} >\n            \n  <Autocomplete\n id=\"free-solo-2-demo\"\n multiple\n  value={attrobj.purities}\n className={classes.fixedTag}\n fullWidth\n options={props.masters.purities}\n onChange={handleoptionChange('purities')}\n getOptionLabel={option => option.name}\n //value={attrobj.purities}\n renderTags={(value, getTagProps) =>\n value.map((option, index) => (\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n ))\n }\n renderInput={params => (\n <TextField\n {...params}\n label=\"Purity\"\n margin=\"dense\"\n variant=\"outlined\"\n fullWidth\n//  error = {productCtx.error_message.selected_sizes}\n\n//  InputProps={{ ...params.InputProps, type: 'search' }}\n />\n )}\n />\n</Grid>  : null\n}\n{isdiamond || attrobj.components ? \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.components}\n           className={classes.fixedTag}\n           fullWidth\n           getOptionLabel={option => option.diamondtype}\n\n           options={props.masters.diamondtypes}\n           onChange={handleoptionChange('components')}\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Diamond Types\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>  : null }\n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.collections}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.collections}\n           onChange={handleoptionChange('collections')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\n\n                   renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Collections\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid>   \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.occations}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.occations}\n           onChange={handleoptionChange('occations')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Occassions\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.styles}\n           className={classes.fixedTag}\n           fullWidth\n           options={props.masters.styles}\n           onChange={handleoptionChange('styles')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Styles\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n<Grid   item xs={4} sm={4} >\n            \n            <Autocomplete\n           id=\"free-solo-2-demo\"\n           multiple\n            value={attrobj.themes}\n           className={classes.fixedTag}\n           fullWidth\n            options={props.masters.themes}\n           onChange={handleoptionChange('themes')}\n           getOptionLabel={option => option.name}\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\n\n           renderTags={(value, getTagProps) =>\n           value.map((option, index) => (\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\n           ))\n           }\n           renderInput={params => (\n           <TextField\n           {...params}\n           label=\"Themes\"\n           margin=\"dense\"\n           variant=\"outlined\"\n           fullWidth\n          //  error = {productCtx.error_message.selected_sizes}\n\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\n           />\n           )}\n           />\n</Grid> \n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\n\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\n           </Grid> }\n        </Grid>    \n     \n      \n        </div>\n    </Card>\n  );\n};\n\nAttributeComponent.propTypes = {\n  className: PropTypes.string,\n  match: PropTypes.object.isRequired\n\n};\nexport default AttributeComponent;\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\nimport { SHIPPINGMASTER } from '../../services/queries';\nimport { useHistory } from \"react-router-dom\";\n\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {AttributesComponent} from './components'\nimport { parse } from 'date-fns';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Addshippingattributes = withRouter(props => {\n  let history = useHistory()\n  const [isadd, setIsadd] = React.useState(false)\n  const [rateid, setRateid] = React.useState('')\n\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({})\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [selectedrate, setSelectedrate] = React.useState({})\n  const [selectedattr, setSelectedattr] = React.useState({})\n  const [isloaded, setIsloaded] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  function addattributes(value)\n  {\n\n    let attrs = []\n  let display_arr = []\n    let keys = Object.keys(value);\n    keys.forEach(key => {\n      let values = []\n      let alias_arr = []\n      value[key].forEach(valueobj =>{\n        values.push(valueobj.name)\n        alias_arr.push(valueobj.alias)\n        attrs.push(valueobj.name)\n      })\n      \n      let displaytext = key + ' : ' + values.join(' , ')\n      display_arr.push(displaytext)\n    })\n\n  updateattributes(value,display_arr.join(' | '))\n\n  }\n  async function updateattributes(taxcontent,displaytext)\n  {\n    let reqbody = {\n      rateid : rateid,\n      attributes : taxcontent,\n      display_text : displaytext\n    } \n\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\n    //  getmaster()\n     //   alert(JSON.stringify(response))\n     history.push('/shippingattributes')\n    \n  }\n  async function getmastervalues(ratevalue)\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let selectedattributes = [];\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\n          ..._,\n          \"alias\": _.shortCode,\n          \"diamondtype\":_.diamondColor+_.diamondClarity\n      }))\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n        \n          if(element.id == ratevalue)\n          {\n            let attr = {}\n            setSelectedrate(element)\n            let categories = element.productAttributes;\n            var selectedcategory = []\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['category'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['product_types'] = selectedcategory\n\n            selectedcategory = []\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['materials'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['purities'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['collections'] = selectedcategory\n            selectedcategory = []\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            \n            attr['occations'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['styles'] = selectedcategory\n            selectedcategory =[]\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n            attr['themes'] = selectedcategory\n            selectedcategory =[]\n            diamondtypes.forEach(catobj => {\n              if(categories.indexOf(catobj.alias) > -1)\n              {\n                selectedcategory.push(catobj)\n              }\n            })\n\n            attr['components'] = selectedcategory\n            setSelectedattr(attr)\n          }\n        })\n       \n      \n      setIsloaded(true)\n        setMasters({\n          product_categories : fatchvalue.data.allMasterProductCategories.nodes,\n          product_types : fatchvalue.data.allMasterProductTypes.nodes,\n          materials :  fatchvalue.data.allMasterMaterials.nodes,\n          purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\n          diamondtypes : diamondtypes,\n          collections : fatchvalue.data.allMasterCollections.nodes,\n          occations : fatchvalue.data.allMasterOccasions.nodes,\n          styles : fatchvalue.data.allMasterStyles.nodes,\n          themes : fatchvalue.data.allMasterThemes.nodes,\n          shiprates : fatchvalue.data.allShippingCharges.nodes\n        })\n\n      })\n      .catch(console.error)\n      \n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let shipmentcharges = []\n\n        if(fatchvalue.data.allShippingCharges.nodes)\n        {\n\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\n            let shipobj = {}\n            shipobj['id'] = element.id;\n\n            shipobj['name'] = element.name;\n            shipobj['rangeFrom'] = element.rangeFrom;\n            shipobj['rangeTo'] = element.rangeTo;\n            shipobj['shipmentCharge'] = element.shipmentCharge;\n            shipobj['isActive'] = element.isActive;\n\n                if(element.shippingZoneByZoneId)\n                {\n                  let zines_arr = []\n                  zines_arr.push(element.shippingZoneByZoneId)\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\n\n                }\n\n                if(element.chargeType == 1)\n                {\n                  shipobj['rangetype'] = {\n                    \"id\":1,\n                    \"name\":\"By Weight\"\n                  }\n                  shipobj['range'] = \"By Weight\"\n                }else{\n                  shipobj['rangetype'] = {\n                    \"id\":2,\n                    \"name\":\"By Value\"\n                  }\n                  shipobj['range'] = \"By Value\"\n                }\n                shipmentcharges.push(shipobj)\n          });\n        }\n        setMastervalue(shipmentcharges)\n        setFiltervalue(shipmentcharges)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    let prod_id = props.location.pathname.split('/')[2];\n    setRateid(prod_id)\n    getmastervalues(prod_id)\n    //getmaster()\n  }, [])\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n \n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n    <Breadcrumbs></Breadcrumbs>\n    \n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \n\n    </Page>\n    </>\n  )\n});\n\nexport default Addshippingattributes;","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nimport Container from '@material-ui/core/Container';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport data from \"./data.json\"\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./Configuration.css\"\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  contantview: {\n   \n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\"\n  },\n}));\nexport const Userconfiguration = withRouter(props => {\n  const master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\n\n  const [raised, setRaised] = React.useState(false);\n  const [cardindex, setCardindex] = React.useState(-1);\n  const classes = useStyles();\n\n  const onMouseOver = () => \n  {\n      setRaised(true);\n  }\n  const onMouseOut = () => \n  { \n      setRaised(false);\n     // setCardindex(-1)\n\n  }\n\n  \n  return (\n    <Grid container  spacing={3}>  \n    {/* <AddContact contactlist={[]}/> */}\n    <Grid container item xs={12} sm={12} spacing={2}>\n            <Typography component=\"h5\" variant=\"h5\">\n            User and Roles Management\n          </Typography>\n    </Grid>\n    \n    {data.options.map((menu, index) => (\n    <Grid  item xs={6} sm={4} lg={3} >\n    <Link underline='none' component={RouterLink} to={menu.url}>\n     <Card fullwidth\n     className=\"card2\">\n        <CardContent >\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\n            {menu.title}\n          </Typography>\n          \n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\n            Lorem Ipsum\n          </Typography> */}\n        </CardContent>\n        \n     \n    </Card>\n    </Link>\n    </Grid>\n    ))}\n\n    \n    </Grid>\n  )\n});\n\nexport default Userconfiguration;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport {Paper,Button,Grid,Typography, \n  FormControlLabel,\n  Checkbox,\n  Divider} from '@material-ui/core';\n\nimport { Query, withApollo } from 'react-apollo';\nimport { useHistory } from \"react-router-dom\";\n\nimport { NetworkContext } from '../../context/NetworkContext';\n\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'fit-content',\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 120,\n  },\n  formControlLabel: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst   Addpermissions=(props)=> {\n  let history = useHistory();\n  const classes = useStyles();\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [permissions, setPermissions] = React.useState(props.permissions);\n\n  const handleClose = () => {\n    props.onClose()\n\n  };\n  const handleSave = () => {\n    //setOpen(false);\n    props.onSave(permissions, props.role_id)\n\n  };\n  const updateread = (permission_id,key) => (event) => {\n    var permissonobj = {}\n\n      if(permissions[permission_id])\n      {\n        permissonobj = permissions[permission_id];\n       \n      }\n      permissonobj[key] = event.target.checked\n    setPermissions({...permissions,[permission_id] :permissonobj})\n    //setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  return (\n    <>\n        <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={props.isopen}\n        onClose={handleClose}\n        aria-labelledby=\"max-width-dialog-title\"\n      >\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\n        <Divider />\n        <DialogContent>\n          <DialogContentText>\n          {props.pages.map((pagecontent, index) => (\n            <Grid container xs= {12} spacing={3}>\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n               <Typography variant=\"h6\" component=\"h5\">\n               {pagecontent.displayname}\n              </Typography>\n              </Grid>\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\n\n              <FormControlLabel\n                control={\n                  <Checkbox\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\n                     onChange={updateread(pagecontent.id,'isview')}\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"View\"\n              />\n               <FormControlLabel\n                control={\n                  <Checkbox\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\n\n                  onChange={updateread(pagecontent.id,'iswrite')}\n\n                    name=\"checkedB\"\n                    color=\"primary\"\n                  />\n                }\n                label=\"Edit\"\n              />\n              </Grid>\n            </Grid>\n          ))}\n          </DialogContentText>\n          </DialogContent>\n          <Divider />\n\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\n            Update \n          </Button>\n        </DialogActions>\n      </Dialog>\n\n       \n      </>\n  );\n}\nexport default withApollo(Addpermissions);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport Addpermissions from '../../components/Addpermissions/Addpermissions';\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterroles = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false)\n  const [masterpages, setMasterpages] = React.useState([])\n  const [editroleid, setEditroleid] = React.useState('')\n  const [editpermissons, setEditpermissions] = React.useState({})\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n\n\n    let response =  await sendNetworkRequest('/manageroles', {}, taxcontent)\n     getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMasterpages(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n    setMastervalue(response.roles)\n    setFiltervalue(response.roles)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n  async function showpermissions(rowcontent)\n  {\n    let response =  await sendNetworkRequest('/getrolepermissions', {}, {role_id: rowcontent.id})\n    setEditpermissions(response.permissions)\n    setEditroleid(rowcontent.id)\n    setIsshowpermissions(true)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function updatepermissions(rowcontent)\n  {\n    let bodydata = {\n      permissions: rowcontent,\n      role_id : editroleid\n    }\n    console.log(JSON.stringify(bodydata))\n    setIsshowpermissions(false)\n    let response =  await sendNetworkRequest('/managepermissions', {}, bodydata)\n     getmaster()\n\n    \n  }\n  function cancelpermissions(rowcontent)\n  {\n    setIsshowpermissions(false)\n   // alert(JSON.stringify(rowcontent))\n  }\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        {isshowpermissions ? <Addpermissions role_id={editroleid} isopen={isshowpermissions} permissions={editpermissons} pages={masterpages} onClose={cancelpermissions} onSave={updatepermissions} /> : null}\n        <Mastercontent title= {\"Master Category\"} button_title=\"Add New\" onPermissionadd={showpermissions} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterroles;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Masterscreens = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  \n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let response =  await sendNetworkRequest('/managepages', {}, taxcontent)\n    getmaster()\n  }\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: MASTERPAGES  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        setMastervalue(fatchvalue.data.allUniquepages.nodes)\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Master Screens\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns}  values={filtervalue}/>\n\n    </Page>\n    </>\n  )\n});\n\nexport default Masterscreens;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageadminusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster()\n  }\n  async function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getadminusers', {}, {})\n    let adminusers = response.users;\n    let users = []\n    adminusers.forEach(element => {\n        let userobj = {}\n        userobj['id'] = element.id;\n        userobj['username'] = element.username;\n        userobj['password'] = element.password;\n        userobj['email'] = element.email;\n        userobj['mobile'] = element.mobile;\n        userobj['status'] = element.status === 'Active' ? true : false;\n        let roles = []\n        let rolesnames = []\n\n        let userroles = element.user_roles;\n        userroles.forEach(userroleobj => {\n\n          let roleobj = {}\n          roleobj['id'] = userroleobj.master_role.id\n          roleobj['name'] = userroleobj.master_role.name\n          roles.push(roleobj)\n          rolesnames.push(userroleobj.master_role.name)\n        })\n        userobj['roles'] = roles\n        userobj['rolenames'] = rolesnames.join(' , ')\n        users.push(userobj)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    const filteredHomes = mastervalue.filter( x => \n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \n    );\n    setFiltervalue(filteredHomes)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n    <Breadcrumbs></Breadcrumbs>\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Admin Users\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageadminusers;","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\nimport {Card,TextField,Checkbox} from '@material-ui/core';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Goldpriceupdate = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervendors, setMastervendors] = React.useState([])\n  const [goldprice, setGoldprice] = React.useState({\n    cost_price : '',\n    selling_price : ''\n  })\n  const [defaultpurity, setDefaultpurity] = React.useState({})\n  const [purityprices, setPurityprices] = React.useState({})\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\n  const [defaultmetal, setDefaultmetal] = React.useState({})\n  const [pricetype, setPricetype] = React.useState({})\n\n  const [selectedvendors, setSelectedvendors] = React.useState([])\n  const [materials, setMaterials] = React.useState([])\n  \n  const [masterpurities, setMasterpurities] = React.useState([])\n\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function updateprice()\n  {\n    let bodycondent = {\n      costprices : purityprices,\n      sellingprices : puritysellingprices,\n      vendors : selectedvendors,\n      metal : defaultmetal,\n      pricetype : pricetype\n    }\n    alert(JSON.stringify(bodycondent))\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\n     alert(\"price updated successfully\")\n  }\n  const handleChange = type => (event) => {\n    let vendorids =[]\n    selectedvendors.forEach(element => {\n      vendorids.push(element)\n    })\n    if(event.target.checked)\n    {\n\n      if(type == 'All')\n      {\n        mastervendors.forEach(element => {\n          vendorids.push(element.shortCode)\n        })\n        setSelectedvendors(vendorids)\n      }else\n      {\n        vendorids.push(type)\n        setSelectedvendors(vendorids)\n\n      }\n    }else{\n      if(type == 'All')\n      {\n        setSelectedvendors([])\n\n      }else{\n\n        let indexval = selectedvendors.indexOf(type)\n        vendorids.splice(indexval,1)\n        let allindexval = selectedvendors.indexOf('All')\n        if(allindexval >  -1)\n        {\n          vendorids.splice(allindexval,1)\n\n        }\n\n        setSelectedvendors(vendorids)\n\n      }\n    }\n   // setChecked(event.target.checked);\n  };\n  async function getmaster()\n  {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        let allobj =  {\n          \"name\": \"All Vendors\",\n          \"id\": \"All\",\n          \"shortCode\": \"All\"\n        }\n        let vendors = [];\n        vendors.push(allobj)\n\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\n          vendors.push(vendorobj)\n          selectedvendors.push(vendorobj.shortCode)\n        })\n         setMastervendors(vendors)\n      })\n      .catch(console.error)\n  }\n  useEffect(() => {\n    getmaster()\n  }, [])\n  const handleoptionChange = type => (event, value) => {\n   // setEditcontent({ ...editcontent, [type]: value  })\n   let vendorid = []\n   value.forEach(element => {\n    vendorid.push(element.shortCode)\n   })\n   setSelectedvendors(vendorid)\n  }\n  const handlepricetypeChange = (event, value) => {\n    setPricetype(value)\n  }\n  const handlemetalChange = type => (event, value) => {\n    // setEditcontent({ ...editcontent, [type]: value  })\n    //alert(JSON.stringify(value))\n    if(value)\n    { \n    if(value.shortCode === 'G')\n    {\n      setIspricecalculated(false)\n    }else\n    {\n      setIspricecalculated(true)\n    }\n    if(data[value.name])\n    {\n      setDefaultpurity(data[value.name])\n\n    }\n  }else\n  {\n    setIspricecalculated(false)\n\n  }\n    setDefaultmetal(value)\n   //setDefaultpurity(value)\n   }\n  const handleInputChange = type => event => {\n   // setGoldprice(event.target.value);\n   //alert(JSON.stringify(goldprice))\n   if(defaultmetal.name === 'Gold')\n    {\n    }else\n    {\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\n      if(type === 'cost_price')\n      {\n        setPurityprices(sellingpricejson)\n\n      }\n      if(type === 'selling_price')\n      {\n        setPuritysellingprices(sellingpricejson)\n\n      }\n    }\n    setGoldprice({...goldprice,[type]: event.target.value })\n  }\n  const handlePriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    setPurityprices({...purityprices,[type]:event.target.value});\n\n    \n  }\n  const handlesellingPriceChange = type => event => {\n\n    // let goldpriceval = purityprices;\n    // goldpriceval[type] = event.target.value;\n    \n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\n  }\n  function getgoldvalue()\n  {\n    if(defaultmetal.name === 'Gold')\n    {\n       let default_purity = parseInt()\n     let pricejson = {}\n     let sellingpricejson = {}\n    data.goldpurity.forEach(element => {\n      let priceratio = element.shortCode / defaultpurity.shortCode;\n\n      let goldprice_val = priceratio*goldprice.cost_price\n      let goldsellingprice_val = priceratio*goldprice.selling_price\n      sellingpricejson[element.shortCode] = goldsellingprice_val\n\n      pricejson[element.shortCode] = goldprice_val\n    })\n    setPuritysellingprices(sellingpricejson)\n    setPurityprices(pricejson)\n    }else{\n      let pricejson = {}\n      let sellingpricejson = {}\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\n\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\n      setPuritysellingprices(sellingpricejson)\n      setPurityprices(pricejson)\n    }\n\n    \n     setIspricecalculated(true)\n   \n  }\n\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n     <Card className={classes.root} variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          <Grid container item row alignItems=\"center\" >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={materials}\n                  margin=\"dense\"\n                  fullWidth\n                \n                 value={defaultmetal}\n                   onChange={handlemetalChange(\"material\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\n                /> \n\n                \n\n\n\n          <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.cost_price}\n                             onChange={handleInputChange(\"cost_price\")}\n                            label=\"Cost Price\"\n                          />\n                            <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={data.pricetype}\n                  margin=\"dense\"\n                  fullWidth\n                  style={{marginLeft: 16}}\n                 value={pricetype}\n                  onChange={handlepricetypeChange}\n                  getOptionLabel={(option) => option.label}\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\n                /> \n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            style={{marginLeft: 16}}\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                            value={goldprice.selling_price}\n                             onChange={handleInputChange(\"selling_price\")}\n                            label=\"Selling Price\"\n                          />\n              \n             {defaultpurity.name ?  <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={masterpurities}\n                  margin=\"dense\"\n                  fullWidth\n                  disabled\n                  style={{marginLeft: 16, width:200}}\n                  value={defaultpurity}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\n                  variant=\"outlined\" />}\n                />  : null }\n                {defaultmetal.name == 'Gold' ? \n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\n                  Get Price\n               </Button> : null}\n          </Grid>\n          {ispricecalculated ?\n          <>\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\n          {data.goldpurity.map((purityname, index) =>(\n           \n           <Grid container item row alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n               Price for {purityname.name}\n             </Typography>\n                 \n                 <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={purityprices[purityname.shortCode]}\n                      onChange={handlePriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n                    <TextField\n                     variant=\"outlined\"\n                     margin=\"dense\"\n                     autoComplete=\"off\"\n                     style={{marginLeft: 16}}\n\n                     id=\"vendordeliverydays\"\n                     name=\"vendordeliverydays\"\n                     value={puritysellingprices[purityname.shortCode]}\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\n                     label=\"Price\"\n                   />\n   </Grid>\n          ))} </>:null }\n          <Grid item xs={12} sm={6} lg={3} >\n          <Autocomplete\n                  id=\"combo-box-demo\"\n                  options={mastervendors}\n                    multiple\n                  // value={editcontent[columnname.defaultkey]}\n                   onChange={handleoptionChange(\"defaultpurity\")}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\n                /> \n        </Grid>\n          </> : null}\n          \n         </Grid>\n         <Grid item  >\n\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n            </Grid>\n      </CardContent>\n      </Card>\n\n{/* \n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\n      <CardContent>\n          <Grid container>\n          \n           {mastervendors.map((vendors, index) =>(\n            <Grid container item row alignItems=\"center\" >\n              <Grid item xs={3} alignItems=\"center\" >\n\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\n              {vendors.name}\n             </Typography>\n             </Grid>\n             <Grid item xs={3} alignItems=\"center\" >\n\n             <Checkbox\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\n                onChange={handleChange(vendors.shortCode)}\n                inputProps={{ 'aria-label': 'primary checkbox' }}\n              />\n                   </Grid>\n   </Grid>\n          ))}\n         </Grid>\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\n                  Update Vendor Gold Price\n               </Button>\n\n      </CardContent>\n      </Card> : null}\n    */}\n    </Page>\n    </>\n  )\n});\n\nexport default Goldpriceupdate;","import React, { useEffect, useContext, useState } from 'react';\n\nimport clsx from 'clsx';\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport {Paper, TextField} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { Query, withApollo } from 'react-apollo';\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\nimport { useMutation,useQuery } from '@apollo/react-hooks';\nimport Moment from 'react-moment';\nimport {BASE_URL} from '../../config'\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport HomeIcon from '@material-ui/icons/Home';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport GrainIcon from '@material-ui/icons/Grain';\n// const columns = [\n//   { id: 'name', label: 'Name' },\n//   { id: 'vendorcode', label: 'Vendor Code' },\n//   { id: 'Address', label: 'Address' },\n//   { id: 'City', label: 'City' },\n//   { id: 'gstNo', label: 'gstNo' },\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\n//   { id: 'updatedAt', label: 'updated on' },\n//   { id: 'actions', label: 'actions' }\n\n// ];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n \n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n];\n\n\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n          \n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n}));\n\nconst   Vendor=(props)=> {\n  let history = useHistory();\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\n  const [offsetValue,setOffsetValue] = React.useState(0)\n  const [masterlist,setMasterlist] = React.useState(props.values)\n\n  const [productlists,setProductlists] = React.useState([])\n  const [allproductlists,setAllProductlists] = React.useState([])\n  const [mastercategories,setMastercategories] = React.useState([])\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [searchtext,setSearchtext] = React.useState('')\n  const [editcontent,setEditcontent] = React.useState({})\n  const [isadd,setIsadd] = React.useState(false)\n  const [isedit,setIsedit] = React.useState(false)\n  const [filtercontent,setFiltercontent] = React.useState({\n    \"seacrchtext\" : props.fitltercontent.searchtext,\n    \"size\": props.fitltercontent.size,\n    \"offset\":props.fitltercontent.offset\n  })\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function addnewvendor()\n  {\n    setEditcontent({\n      ...editcontent,\n      isedit : false\n    })\n    let masters = masterlist;\n    masters.insert(0, []);\n\n    setMasterlist(masters)\n     setIsadd(true)\n     setBtnEdit({ ...btnEdit, id:null, action: true })\n\n  }\n  Array.prototype.insert = function ( index, item ) {\n    this.splice( index, 0, item );\n};\n  function Editvendor(vendordata) {\n    delete vendordata['action'];\n\n    \n    setEditcontent({\n      ...editcontent,\n      ...vendordata,\n      isedit : true\n    })\n\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\n\n  }\n  async function Savevendor(refetch) {\n      props.onCreate(editcontent)\n      setIsadd(false)\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n   // refetch()\n  }\n  function Cancelcreate() {\n\n    props.onCancel();\n\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  function searrchcontent()\n  {\n   // alert(editcontent.searchcontent)\n    props.onSearch(editcontent.searchcontent)\n\n  }\n  \n  function CancelEdit(diamondData) {\n   if(isadd)\n   {\n     let masters = masterlist;\n\n    masters.splice(0, 1)\n    setMasterlist(masterlist)\n\n   }\n      setIsadd(false)\n    setEditcontent({})\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n  }\n  const handleInputChange = type => e => {\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\n}\nconst handleoptionChange = type => (event, value) => {\n  setEditcontent({ ...editcontent, [type]: value  })\n\n}\nconst handleSearchChange = type => e => {\n  props.onSearch(e.target.value)\n}\nconst handleChange = type => (event) => {\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\n\n};\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\n  function handleChangePage(event, newPage) {\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\n\n    setPage(newPage);\n    setOffsetValue(newPage*rowsPerPage)\n    props.onPagechange((newPage*rowsPerPage))\n  }\n\n  useEffect( () => {\n  \n    setMasterlist(props.values)\n  }, [props.values])\n  function handleChangeRowsPerPage(event) {\n   \n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n    props.onPagesizechange(parseInt(event.target.value, 10))\n  }\n  function handleClick(event) {\n    event.preventDefault();\n    console.info('You clicked a breadcrumb.');\n  }\n  \n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    \n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n\n\n\n  };\n  \n  return (\n    <Paper className={classes.root}>\n      \n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\n        <Grid fullwidth item xs={3} sm={3}>\n\n            <Typography component=\"h6\" variant=\"h6\">\n            {props.title}\n\n          </Typography>\n          </Grid>\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\n          <Grid fullwidth item xs={9} sm={9}  >\n                <TextField\n                            variant=\"outlined\"\n                            margin=\"dense\"\n                            fullWidth\n                            autoComplete=\"off\"\n                            id=\"vendordeliverydays\"\n                            name=\"vendordeliverydays\"\n                             value={editcontent.searchcontent}\n                            onChange={handleInputChange(\"searchcontent\")}\n                            label=\"Search text\"\n                          />\n                     </Grid>\n                     <Grid fullwidth item xs={3} sm={3}  >\n\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\n            Search\n        </Button>\n        </Grid>\n        </Grid>\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\n           {props.button_title}\n        </Button> : null }\n        \n        </Grid>\n    </Grid>\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n        {/* <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead> */}\n           <EnhancedTableHead\n              columns={props.columns}\n              classes={classes}\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={handleRequestSort}\n            />\n          <TableBody>\n          {masterlist.map((row, index) => (\n            <>\n           \n            \n            <TableRow>\n              {props.columns.map((columnname, index) => (\n                <>\n                {columnname.key === 'action' ?                  \n                <TableCell align=\"center\" style = {{width: 20}}>\n                   {\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\n                     </Button>\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\n                </Button>\n                    } \n              </TableCell> :\n                <>\n                {btnEdit.action && btnEdit.id == row.id  ?\n                <TableCell align=\"left\">\n                {columnname.type === 2 ?  <Switch\n                  onChange={handleChange(columnname.key)}\n                  checked={editcontent[columnname.key]}\n                  color=\"primary\"\n                  name=\"checkedB\"\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                /> : null}  \n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                {columnname.type == 3 ? \n                  <Autocomplete\n                  multiple\n                  id=\"combo-box-demo\"\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  margin=\"dense\"\n                  fullWidth\n                  value={editcontent[columnname.defaultkey]}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                 {columnname.type == 5 ? \n                  <Autocomplete\n                  \n                  id=\"combo-box-demo\"\n                  options={props.masters[columnname.mastervaluekey]}\n                  margin=\"dense\"\n                  fullWidth\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\n                  onChange={handleoptionChange(columnname.defaultkey)}\n                  value={editcontent[columnname.defaultkey]}\n                  getOptionLabel={(option) => option.name}\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\n                /> : null }\n                {columnname.type == 4 ?\n                <Typography> {row[columnname.key]}</Typography> : null}\n                {!columnname.type || columnname.type == 1 ? <TextField\n                      variant=\"outlined\"\n                      margin=\"dense\"\n                      \n                      id={columnname.key}\n                      name={columnname.key}\n                      value={editcontent[columnname.key]}\n                      onChange={handleInputChange(columnname.key)}\n  \n                      label={columnname.label}\n                     />:null }  </TableCell>  :\n                   <TableCell>\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\n                                         {row[columnname.key]} \n                                       </Moment>:null } \n                                       {columnname.type == 8 ?  <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/customerdetails/'+row['id']}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>:null }                 \n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\n                                                  {columnname.controllabel}\n                                                </Button> : null}  \n                      {columnname.type === 2 ?  <Switch\n                        color=\"primary\"\n                        name=\"checkedB\"\n                        onChange={handleInputChange(columnname.key)}\n                        checked={row[columnname.key]}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      /> : null}  \n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \n\n                     \n                    </TableCell>\n                }\n                    </>\n                \n\n                }\n                </>\n              ))}\n            </TableRow>\n            </>\n          ))}\n\n          \n          {/* {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}  */}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[50,100,200,500]}\n               \n                count={[props.totalcount]}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                // ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\nexport default withApollo(Vendor);\n","import React,{useState,useEffect} from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport Vendor from '../../components/Vendor/Vendor'\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Mastercontent from './Mastercontent';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport data from \"./data.json\"\nimport Page from '../../components/Page'\nimport { NetworkContext } from '../../context/NetworkContext';\nimport {Breadcrumbs} from '../../components'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n  //  padding: theme.spacing(3)\n  },\n  results: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nexport const Manageusers = withRouter(props => {\n  const [isadd, setIsadd] = React.useState(false)\n  const [searchtext, setSearchtext] = useState(\"\");\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [mastervalue, setMastervalue] = React.useState([])\n  const [masterroles, setMasterroles] = React.useState([])\n  const [totalcount, setTotalcount] = React.useState(0)\n\n  const [bodycontent, setBodycontent] = React.useState({\n    \"seacrchtext\" : '',\n    \"size\": 50,\n    \"offset\":0\n  })\n\n  const classes = useStyles();\n\n  const [filtervalue, setFiltervalue] = React.useState([])\n\n  async function createtax(taxcontent)\n  {\n    let roles = []\n    taxcontent.roles.forEach(element => {\n      roles.push(element.name)\n    })\n    let bodydata = { \n      username : taxcontent.username,\n      password : '123456789',\n      email: taxcontent.email,\n      roles : roles\n\n    }\n\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\n     getmaster()\n  }\n  async function getmasterroles()\n  {\n\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\n  \n    \n    setMasterroles(response.roles) \n\n     getmaster(50,0)\n  }\n  function changeresult(filtercontent)\n  {\n    setBodycontent(filtercontent)\n  }\n  async function getmaster(size,offset,searchtext)\n  {\n   \n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\n    let adminusers = response.users.rows;\n    let users = []\n    setTotalcount(response.users.count)\n    adminusers.forEach(element => {\n      //   let userobj = {}\n      //   userobj['id'] = element.id;\n      //  // userobj['username'] = element.username;\n      //  // userobj['password'] = element.password;\n      //   userobj['email'] = element.email;\n      //   userobj['mobile'] = element.mobile;\n      //   userobj['status'] = element.status === 'Active' ? true : false;\n      //   let roles = []\n      //   let rolesnames = []\n\n      //   let userroles = element.user_roles;\n      //   userroles.forEach(userroleobj => {\n\n      //     let roleobj = {}\n      //     roleobj['id'] = userroleobj.master_role.id\n      //     roleobj['name'] = userroleobj.master_role.name\n      //     roles.push(roleobj)\n      //     rolesnames.push(userroleobj.master_role.name)\n      //   })\n      //   userobj['roles'] = roles\n      //   userobj['rolenames'] = rolesnames.join(' , ')\n        if(element.orders)\n        {\n          element['orders'] = element.orders.length\n        }else{\n          element['orders'] = 0\n        }\n        users.push(element)\n    });\n\n    setFiltervalue(users)\n    setMastervalue(users)\n    //getmaster()\n  }\n  useEffect(() => {\n    getmasterroles()\n  }, [])\n\n  function applysearch(searchcontent)\n  {\n    //setSearchtext(searchcontent)\n  }\n  function addcategory()\n  {\n    setIsadd(true)\n  }\n  function cancelcreation()\n  {\n    setIsadd(false)\n  }\n\n  async function search(taxcontent)\n  {\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\n  }\n  async function changepageoffset(taxcontent)\n  {\n    setBodycontent({...bodycontent,offset: taxcontent})\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\n  }\n  async function changepagesize(taxcontent)\n  {\n    setBodycontent({...bodycontent,size: taxcontent})\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\n  }\n  return (\n    <>\n    <Page\n    className={classes.root}\n    title=\"Orders Management List\"\n  >\n\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\n    {/* <Results\n       className={classes.results}\n      searchtext={searchtext}\n      isadd={isadd}\n      onCancel={cancelcreation}\n    /> */}\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\n\n    </Page>\n    </>\n  )\n});\n\nexport default Manageusers;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const customer = {\n    name: 'Ekaterina Tankova'\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        component=\"h2\"\n        gutterBottom\n        variant=\"overline\"\n      >\n        Customers\n      </Typography>\n      <Typography\n        component=\"h1\"\n        variant=\"h3\"\n      >\n        {customer.name}\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\n\nimport Page from '../../components/Page/Page'\nimport { Header } from './components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    marginTop: theme.spacing(3)\n  },\n  divider: {\n    backgroundColor: colors.grey[300]\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  }\n}));\nexport const CustomerManagementDetails = withRouter(props => {\n\n  const { match, history } = props;\n  const classes = useStyles();\n  const { id, tab } = match.params;\n\n  const handleTabsChange = (event, value) => {\n    history.push(value);\n  };\n\n  const tabs = [\n    { value: 'summary', label: 'Summary' },\n    { value: 'invoices', label: 'Invoices' },\n    { value: 'logs', label: 'Logs' }\n  ];\n\n  if (!tab) {\n    //return <Redirect to={`/customerdetails`} />;\n  }\n\n  if (!tabs.find(t => t.value === tab)) {\n   // return <Redirect to=\"/errors/error-404\" />;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customer Management Details\"\n    >\n      <Header />\n       <Tabs\n        className={classes.tabs}\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        value={tab}\n        variant=\"scrollable\"\n      >\n        {tabs.map(tab => (\n          <Tab\n            key={tab.value}\n            label={tab.label}\n            value={tab.value}\n          />\n        ))}\n      </Tabs>\n      <Divider className={classes.divider} />\n     {/* <div className={classes.content}>\n        {tab === 'summary' && <Summary />}\n        {tab === 'invoices' && <Invoices />}\n        {tab === 'logs' && <Logs />}\n      </div> */}\n    </Page>\n  );\n});\n\nCustomerManagementDetails.propTypes = {\n  history: PropTypes.object.isRequired,\n  match: PropTypes.object.isRequired\n};\n\nexport default CustomerManagementDetails;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  }\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n      //     setInvoices(response.data.invoices);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title=\"Customer invoices\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>ID</TableCell>\n                    <TableCell>Date</TableCell>\n                    <TableCell>Description</TableCell>\n                    <TableCell>Payment Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {invoices.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  colors\n} from '@material-ui/core';\n\nimport { Label } from '../../../../components'\n\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n  //  minWidth: 1150\n  },\n  tableWrapper: {\n    // overflowX: 'auto',\n    // overflowY: 'auto',\n    // width: '100%',\n    // maxHeight: '100vh'\n  },\n}));\n\nconst Invoices = props => {\n  const { className, ...rest } = props;\n\n  const classes = useStyles();\n  const [invoices, setInvoices] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchInvoices = () => {\n      // axios.get('/api/management/customers/1/invoices').then(response => {\n      //   if (mounted) {\n           setInvoices([\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 10.0\n            },\n            {\n           //   id: uuid(),\n              type: 'paid',\n              value: 15.0\n            },\n            {\n            //  id: uuid(),\n              type: 'due',\n              value: 5\n            },\n            {\n             /// id: uuid(),\n              type: 'income',\n              value: 10.0\n            }\n          ]);\n      //   }\n      // });\n    };\n\n    fetchInvoices();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  const statusColors = {\n    pending: colors.orange[600],\n    paid: colors.green[600],\n    rejected: colors.red[600]\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Card>\n        <CardHeader\n         // action={<GenericMoreButton />}\n          title={props.title}\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                  {props.columns.map(column => (\n                    <TableCell>{column.label}</TableCell>\n                  ))\n                  }                    \n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {props.masters.map(invoice => (\n                    <TableRow key={invoice.id}>\n                      {/* <TableCell>#{invoice.id}</TableCell>\n                      <TableCell>\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\n                      </TableCell>\n                      <TableCell>{invoice.description}</TableCell>\n                      <TableCell>{invoice.paymentMethod}</TableCell>\n                      <TableCell>\n                        {invoice.currency}\n                        {invoice.value}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={statusColors[invoice.status]}\n                          variant=\"outlined\"\n                        >\n                          {invoice.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to={'/management/invoices/1'}\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                  </TableCell> */}\n                   {props.columns.map(column => (\n                     <>\n                     {column.type === 2 ?  <TableCell>\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\n                    </TableCell> : \n                     <TableCell>\n                     {invoice[column.key]}\n                   </TableCell>\n                    }\n                    </>\n                     \n                   ))}\n                    </TableRow> \n\n\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nInvoices.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invoices;\n","import React,{useState} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\n// import {  SnackBarContext } from '../../../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = props => {\n  const { className, ...rest } = props;\n  const [openApplication, setOpenApplication] = useState(false);\n  // const showSnackbar = React.useContext(SnackBarContext);\n  const [searchcontent, setSearchcontent] = useState(\"\");\n  const handleinputchange = type => (event,option) =>{\n    setSearchcontent(event.target.value)\n    }\n  const handleApplicationOpen = () => {\n    \n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n  const handleApplicationsave = () => {\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\n    setOpenApplication(false);\n\n  };\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid container \n                alignItems=\"flex-start\"       \n           item   xs={6} spacing={2}> \n        {/* <Grid item > \n\n        <TextField\n          variant=\"outlined\"\n          margin=\"dense\"\n          fullWidth\n          id=\"size\"\n          label=\"Search\"\n          name=\"size\"\n          onChange={handleinputchange('searchtext')}\n          autoComplete=\"size\"\n          value={searchcontent}\n          />\n          </Grid>\n         <Grid item > \n\n           <Button\n            color=\"default\"\n            variant=\"contained\"\n            onClick={()=>props.onSearch(searchcontent)}\n          >\n            Search\n          </Button>\n          </Grid> */}\n        </Grid>\n        <Grid item>\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\n\n          {/* <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={()=>props.onAdd()}\n\n          >\n            Add New \n          </Button> */}\n          </Link>\n         \n        </Grid>\n      </Grid>\n      \n    </div>\n   \n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Button,\n  Divider,\n  Table,\n  TableBody,\n  TableRow,\n  TableCell,\n  colors\n} from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutline';\n\nimport { Label } from '../../../../components';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  actions: {\n    flexDirection: 'column',\n    alignItems: 'flex-start',\n    '& > * + *': {\n      marginLeft: 0\n    }\n  },\n  buttonIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst General = props => {\n  const { customer, className, ...rest } = props;\n\n  const classes = useStyles();\n\n  const [openEdit, setOpenEdit] = useState(false);\n\n  const handleEditOpen = () => {\n    setOpenEdit(true);\n  };\n\n  const handleEditClose = () => {\n    setOpenEdit(false);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer info\" />\n      <Divider />\n      <CardContent className={classes.content}>\n        <Table>\n          <TableBody>\n            <TableRow selected>\n              <TableCell>Name</TableCell>\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Email</TableCell>\n              <TableCell>\n                {customer ? customer.email : \"\"}\n                <div>\n                  <Label\n                    color={\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.isemailverified\n                      ? 'Email verified'\n                      : 'Email not verified'} \n                  </Label>\n                </div>\n              </TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Phone</TableCell>\n              <TableCell>{customer.mobile}\n              <div>\n                  <Label\n                    color={\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\n                    }\n                  >\n                    \n                  {customer.ismobileverified\n                      ? 'Mobile verified'\n                      : 'Mobile not verified'} \n                  </Label>\n                </div>\n                </TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>State/Region</TableCell>\n              <TableCell>{customer.city}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Country</TableCell>\n              <TableCell>{customer.country}</TableCell>\n            </TableRow>\n            <TableRow>\n              <TableCell>Address 1</TableCell>\n              <TableCell>{customer.address}</TableCell>\n            </TableRow>\n            <TableRow selected>\n              <TableCell>Pincode</TableCell>\n              <TableCell>{customer.pincode}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </CardContent>\n      {/* <CardActions className={classes.actions}>\n        <Button onClick={handleEditOpen}>\n          <EditIcon className={classes.buttonIcon} />\n          Edit\n        </Button>\n        <Button>\n          <LockOpenIcon className={classes.buttonIcon} />\n          Reset &amp; Send Password\n        </Button>\n        <Button>\n          <PersonIcon className={classes.buttonIcon} />\n          Login as Customer\n        </Button>\n      </CardActions> */}\n      {/* <CustomerEdit\n        customer={customer}\n        onClose={handleEditClose}\n        open={openEdit}\n      /> */}\n    </Card>\n  );\n};\n\nGeneral.propTypes = {\n  className: PropTypes.string,\n  customer: PropTypes.object.isRequired\n};\n\nexport default General;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport { withRouter } from \"react-router-dom\";\nimport {General, Results} from './components'\nimport Mastercontent from '../../components/Mastercontent'\nimport data from './data.json'\nimport { NetworkContext } from '../../context/NetworkContext';\n\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Grid,\n  Divider,\n  Switch,\n  TextField,\n  Typography,\n  colors\n} from '@material-ui/core';\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vertical-tabpanel-${index}`}\n      aria-labelledby={`vertical-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `vertical-tab-${index}`,\n    'aria-controls': `vertical-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    display: 'flex',\n    height: '80vh'\n  },\n  tabs: {\n    minWidth: '250px',\n    maxWidth: '250px',\n    backgroundColor: theme.palette.background.paper,\n    marginRight : theme.spacing(2),\n    borderRight: `2px solid ${theme.palette.divider}`,\n  },\n}));\nexport const Customerdetails = withRouter(props => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [masters, setMasters] = React.useState({});\n  const [customer, setCustomer] = React.useState({});\n\n  let user_id = props.location.pathname.split('/')[2];\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\nasync function getmaster()\n  {\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\n    setMasters(response.userinfo)\n    setCustomer(response.userprofile)\n  }\n  React.useEffect(() => {\n    getmaster()\n  }, [])\n  return (\n    <div className={classes.root}>\n      \n      <Tabs\n        orientation=\"vertical\"\n        variant=\"standard\"\n        value={value}\n        onChange={handleChange}\n        aria-label=\"Vertical tabs example\"\n        className={classes.tabs}\n      >\n        <Tab label=\"Personal Information\" {...a11yProps(0)} />\n        <Tab label=\"Address Book\" {...a11yProps(1)} />\n        <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\n        <Tab label=\"Wish list\" {...a11yProps(3)} />\n        <Tab label=\"All Orders\" {...a11yProps(4)} />\n \n      </Tabs>\n      <TabPanel value={value} style={{width :  '50%'}} index={0}>\n      <General customer ={customer} /> </TabPanel>\n      <TabPanel style={{width :  '100%'}} value={value} index={1}>      \n          <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\n      </TabPanel>\n      <TabPanel style={{width :  '100%'}} value={value} index={2}>\n\n      <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\n      \n      </TabPanel>\n      <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\n      <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\n      </TabPanel>\n      <TabPanel style={{width :  '100%'}} value={value} index={4}>\n      <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\n      </TabPanel>\n      \n     \n    </div>\n  );\n});\n\nexport default Customerdetails;","import { makeStyles, fade } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n\n    },\n    title: {\n      display: 'none',\n      color: 'red',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(3),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      width: theme.spacing(7),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 7),\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('md')]: {\n        width: 200,\n      },\n    },\n    sectionDesktop: {\n      display: 'none',\n      [theme.breakpoints.up('md')]: {\n        display: 'flex',\n      },\n    },\n    sectionMobile: {\n      display: 'flex',\n      [theme.breakpoints.up('md')]: {\n        display: 'none',\n      },\n    },\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        marginLeft: \"0px\",\n        width:\"100%\"\n      },\n    },\n \n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      width:\"100%\",\n      overflow:\"auto\",\n      padding: theme.spacing(3),\n    },\n  }));","import { makeStyles } from '@material-ui/core/styles';\nconst drawerWidth = 240;\n\nexport const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n    menuButton: {\n      marginRight: 36,\n     \n    },\n    hide: {\n      display: 'none',\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n      [theme.breakpoints.down('md')]: {\n        flex: \"1 0 auto\",\n        height: \"100%\",\n        display: \"flex\",\n        outline: 0,\n        zIndex: 1200,\n        position: \"fixed\",\n        overflowY: \"auto\",\n        flexDirection: \"column\",\n       \n      },\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n    drawerClose: {\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n      }),\n      overflowX: 'hidden',\n      width: theme.spacing(7) + 1,\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n      },\n    },\n    toolbar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar,\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing(3),\n    },\n    profile: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      minHeight: 'fit-content'\n    },\n    avatar: {\n      width: 60,\n      height: 60\n    },\n    name: {\n      marginTop: theme.spacing(1)\n    },\n    divider: {\n      marginTop: theme.spacing(2)\n    },\n  }));","import React from 'react';\nimport clsx from 'clsx';\nimport {  useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\n  import ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport { withRouter } from 'react-router-dom';\nimport { useStyles } from './styles';\nimport Collapse from '@material-ui/core/Collapse';\nimport StarBorder from '@material-ui/icons/StarBorder';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { ProductContext } from '../../context';\nimport { Link as RouterLink } from 'react-router-dom'\nimport Link from '@material-ui/core/Link'\nimport { GlobalContext } from '../../context';\nimport {NetworkContext}  from '../../context/NetworkContext';\n\nimport {  Paper, Avatar, Typography } from '@material-ui/core';\nimport data from \"../menupages.json\"\n\nfunction SideBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const { isreload,setIsreload } = React.useState(false);\n  let accesspages = localStorage.getItem('accesspages')\n  const handleDrawer = () => {\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n  const handleClick = type => e => {\n    if(type === 'Pricing')\n    {\n      setGlobalCtx({ ...globalCtx, \"optionname\": type,selectedIndex: 5 , isExpand: !globalCtx.isExpand})\n\n    }else{\n      setGlobalCtx({ ...globalCtx, \"optionname\": type , isExpand: false})\n\n    }\n\n  }\n  async function getmasterpages()\n  {\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\n    let pages = [];\n    let pagepermissions = [];\n\n    pageaccess.pages.forEach(element => {\n      pages.push(element.pageurl)\n      if(element.is_write)\n      {\n        pagepermissions.push(element.pageurl)\n      }\n    });\n   // setPages(pageaccess)\n  // setGlobalCtx({ ...globalCtx, pageaccess: pages })\n   //setIsreload(true)\n\n   localStorage.setItem('accesspages', pages);\n   localStorage.setItem('pagepermissions', pagepermissions);\n\n    window.location.reload()\n  }\n  React.useEffect( () => {\n   //alert(globalCtx.accesspages)\n   if(!accesspages)\n   {\n   // getmasterpages()\n\n   }else{\n   //  setIsreload(true)\n   }\n //setGlobalCtx({...globalCtx,\"accesspages\":pages})\n},[])\n  function handleListItemClick(event, index)\n  {\n    setGlobalCtx({ ...globalCtx, selectedIndex: index})\n\n  }\n\n  return (\n      <>\n     \n      <Drawer\n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\n          }),\n        }}\n        open={globalCtx.sideBarOpen}\n      >\n        <div className={classes.toolbar}>\n          <IconButton onClick={handleDrawer}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n        </div>\n        <Divider />\n       \n        <List>\n          {\n            data.menus.map((menuobj, index) => (\n              <>\n             {menuobj.submenu  ?  \n             <>\n          {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <>\n             <ListItem button  onClick={handleClick(menuobj.name)}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary={menuobj.name} />\n              {globalCtx.isExpand  && globalCtx.optionname === menuobj.name ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === menuobj.name} timeout=\"auto\" unmountOnExit>\n            <List component=\"div\" disablePadding>\n            {menuobj.submenu.map((submenuobj, subindex) => (\n              <>\n              {accesspages && accesspages.indexOf(submenuobj.url) > -1 ?\n                          <Link underline='none' component={RouterLink} to={submenuobj.url}>\n              <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === subindex} onClick={event => handleListItemClick(event, subindex)}>\n                <ListItemIcon>\n                  <StarBorder />\n                </ListItemIcon>\n                <ListItemText primary={submenuobj.name} />\n              </ListItem>\n              </Link> : null }\n\n              </>\n            ))}\n\n            </List>\n            </Collapse> </>: null}\n            </>\n             :<> {accesspages && accesspages.indexOf(menuobj.url) > -1 ?\n              <Link underline='none' component={RouterLink} to={menuobj.url}>\n              <ListItem button key={\"Product List\"} selected={globalCtx.optionname === menuobj.name} onClick={handleClick(menuobj.name)} >\n              <ListItemIcon><InboxIcon /> </ListItemIcon>\n                <ListItemText primary={menuobj.name} />\n              </ListItem>\n              </Link> : null\n             } </>}\n              </>\n            ))\n          }\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\n\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Product List\"} />\n            </ListItem>\n            </Link>\n            <ListItem button  onClick={handleClick('Pricing')}>\n              <ListItemIcon>\n                <InboxIcon />\n              </ListItemIcon>\n              <ListItemText primary=\"Pricing\" />\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\n\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\n  <ListItemIcon>\n    <StarBorder />\n  </ListItemIcon>\n  <ListItemText primary=\"Gold Price Setup\" />\n</ListItem>\n</Link>\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Vendor Price Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Selling Price Markup Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Discount Setup\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Price Run\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse>\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User List\" />\n      </ListItem> \n      </Link>\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Vendorlist\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\n\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Order List\"} />\n            </ListItem>\n            </Link>\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\n\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n              <ListItemText primary={\"Configuration\"} />\n            </ListItem>\n            </Link>\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\n\n                  <ListItemText primary={\"Vouchers\"} />\n                </ListItem>\n                </Link>\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary=\"User and Roles Management\" />\n      </ListItem> \n      </Link> */}\n      {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding>\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Sales Discount\" />\n          </ListItem>\n          </Link>\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\n\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <StarBorder />\n            </ListItemIcon>\n            <ListItemText primary=\"Voucher Discount\" />\n          </ListItem>\n          </Link>\n        </List>\n      </Collapse> */}\n\n\n        </List>\n      </Drawer>\n    </>\n  );\n}\n\nexport default withRouter(SideBar);","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { useStyles } from './styles';\nimport { withRouter } from 'react-router-dom';\nimport SideBar from '../SideBar';\nimport { GlobalContext } from '../../context';\nimport { CssBaseline } from '@material-ui/core';\nimport clsx from 'clsx';\nimport './style.css'\n\n\nfunction PAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  function handleProfileMenuOpen(event) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function handleMobileMenuClose() {\n    setMobileMoreAnchorEl(null);\n  }\n\n  function handleMenuClose() {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  }\n  function handlelogout() {\n    localStorage.removeItem(\"accesstoken\")\n    window.location = '/'\n  }\n\n  \n  function handleDrawer(){\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen })\n  }\n\n  function handleMobileMenuOpen(event) {\n    setMobileMoreAnchorEl(event.currentTarget);\n\n  }\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\n\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem> */}\n      {/* <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem> */}\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <>\n      <AppBar position=\"fixed\" className={clsx(classes.appBar, {\n              [classes.appBarShift]: globalCtx.sideBarOpen,\n            })} >\n        <Toolbar>\n          <IconButton\n            className=\"hide\"\n            edge=\"start\"\n            className={classes.hide}\n            className={clsx(classes.menuButton, {\n              [classes.hide]: globalCtx.sideBarOpen,\n            })}\n            onClick={handleDrawer}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography style={{color: '#fff'}}  variant=\"h4\" noWrap>\n           Stylori\n          </Typography>\n          \n          <div className={classes.grow} />\n          <div className={classes.sectionDesktop}>\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton> */}\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </>\n  );\n}\n\nconst PrimaryAppBar = withRouter(PAppBar);\n\nconst MainWrapper = props => {\n  const classes = useStyles();\n  let { component: Component, ...rest } = props;\n\n  return(\n    <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Component {...rest} />\n      </main>\n  )\n}\n\nexport const withAppBar = (component, props) => {\n\n  return(\n    <>\n      <CssBaseline />\n      <PrimaryAppBar {...props} />\n      <SideBar {...props} />\n      <MainWrapper component={component} />\n    </>\n  );\n}\n\nexport default PrimaryAppBar;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport route from './route';\nimport { withAppBar } from '../components/PrimaryAppBar';\n\nconst PrivateRoute = props => {\n    const { component, ...rest } = props;\n\n    const checkAuth = () => {\n        let accesstoken = localStorage.getItem('accesstoken')\n        if(accesstoken)\n        {\n            return true;\n        }else{\n            return false;\n        }\n        \n    }\n\n    const Component = props => withAppBar(component, props);\n    return checkAuth() ? (rest.path === '/' || rest.path === '/login' ? <Redirect to={route.productlist} /> : <Component {...rest} />) : <Redirect to={route.login} />\n}\n\n\nexport default PrivateRoute;","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Diamond', label: 'Diamond' },\n  { id: 'Colour', label: 'Colour' },\n  { id: 'Clarity', label: 'Clarity' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Shape', label: 'Shape' },\n\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 80,\n    maxWidth: 80,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    \n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    display: 'flex',\n    \n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    //marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function DiamondDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  });\n  let [diamondEditObject,setDiamondEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond&&props.diamond.length - page * rowsPerPage);\n  function DiamondEdit(diamondData) {\n    setDiamondEditObject({\n      ...diamondEditObject,\n      edit:JSON.parse(JSON.stringify(diamondData))\n    })\n    setProductCtx({\n      ...productCtx,\n      diamondsettings:productCtx.masterData.diamondsettings.filter((settingData,index)=>settingData.name===diamondData.diamondSettings)[0],\n      diamondshape: productCtx.masterData.diamondshapes.filter((shapeData,index)=>shapeData.name===diamondData.diamondShape)[0],\n      diamondcount:diamondData.stoneCount,\n      diamondweight:diamondData.stoneWeight,\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\n  }\n  function DiamondSave(id){\n    // alert(JSON.stringify(productCtx.diamondsettings))\n    // alert(JSON.stringify(productCtx.diamondshape))\n    // alert(JSON.stringify(productCtx.diamondcount))\n    // alert(JSON.stringify(id))\n    var bodydata = {}\n    if(productCtx.diamondsettings && productCtx.diamondshape && productCtx.diamondcount && productCtx.diamondweight){\n      let list_data=props.diamond;\n      let DiamondChangeData = list_data.map((diamondListData,index)=>{\n        if(id===diamondListData.id){\n          diamondListData.diamondSettings=productCtx.diamondsettings.name;\n          diamondListData.diamondShape = productCtx.diamondshape.name;\n          diamondListData.stoneCount = productCtx.diamondcount;\n          diamondListData.stoneWeight = productCtx.diamondweight;\n          bodydata['diamondSettings'] = productCtx.diamondsettings.name\n          bodydata['diamondShape'] = productCtx.diamondshape.name\n          bodydata['stoneCount'] = productCtx.diamondcount;\n          bodydata['stoneWeight'] = productCtx.diamondweight;\n          bodydata['diamondid'] = id;\n          return diamondListData;\n        }\n        return diamondListData;\n      }); \n      sendNetworkRequest('/editproductdiamond', {}, bodydata)\n\n      console.log(\"------******\")\n      console.log(JSON.stringify(bodydata))\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    \n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      // let editDiamondLists = productCtx.editDiamondLists;\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ? \n      //   editDiamondLists = editDiamondLists && editDiamondLists\n      //   .map((diamond_list,index)=>{\n      //     if(diamond_list.id === editDiamondList.id){\n      //       return editDiamondList;\n      //     }\n      //     return diamond_list;\n      //   }) \n      //   : editDiamondLists.push(editDiamondList); \n      // }\n      // // console.log(editDiamondLists,'editDiamondList')\n      // setSnackMessage({\n      //   ...snackMessage,\n      //   message:\"This is successfully saved\",\n      //   severity:\"success\"\n      // })\n      // handleClick();\n      // setProductCtx({\n      //   ...productCtx,\n      //   diamondlist:DiamondChangeData,\n      //   editDiamondLists,\n      //   diamondsettings:\"\",\n      //   diamondshape: \"\",\n      //   diamondcount:\"\",\n      //   diamondweight:\"\",\n      // })\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\n    }else{\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n    \n    setProductCtx({ ...productCtx, [type]: value})\n\n}\nconst handleInputChange = type => e => {\n  setProductCtx({ ...productCtx, [type]: e.target.value  })\n}\n  return (\n    <Paper className={classes.root}>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n      {/* <CircularProgress color=\"secondary\"/> */}\n\n         <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.diamond&&props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.id}>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondType}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondColour}\n                </TableCell>\n                <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.diamondClarity}\n                </TableCell>\n\n                {btnEdit.action && btnEdit.id == row.id ?  \n                 <TableCell align={\"center\"} component=\"th\" scope=\"row\"> \n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"Weight\"\n              name=\"size\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondweight')}\n              value={productCtx.diamondweight}\n              />\n              </TableCell>    :\n                  <TableCell align={\"center\"} style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?     \n                <TableCell component=\"th\" scope=\"row\">\n                <Input\n              variant=\"outlined\"\n              style = {{width: 40}}\n              id=\"size\"\n              margin=\"dense\"\n              label=\"#of Stones\"\n              name=\"size\"\n              type=\"number\"\n              autoComplete=\"size\"\n              onChange={handleInputChange('diamondcount')}\n              value={productCtx.diamondcount}\n              />\n         \n              </TableCell> :\n                  <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                   \n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                <TableCell component=\"th\" scope=\"row\">\n                  <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondsettings}\n                    options={productCtx.masterData.diamondsettings}\n                    onChange={handleoptionChange('diamondsettings')}\n                    renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                        <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                    }\n                    renderInput={params => (\n                      <TextField\n                        {...params}\n                        label=\"Diamond Setting\"\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                        InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                    )}\n                  /> \n                  </TableCell>:\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondSettings}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ? \n                  <TableCell component=\"th\" scope=\"row\">   \n                <Autocomplete\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    value={productCtx.diamondshape}\n                    options={productCtx.masterData.diamondshapes}\n                    onChange={handleoptionChange('diamondshape')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Shape\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n                    </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.diamondShape}\n                  </TableCell>\n                }\n              \n\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondSave(row.id)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style={{width: 80}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 ? <>\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n              </> : null\n            }\n          </TableBody>\n           <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n               \n                count={props.diamond&&props.diamond.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>  \n        </Table>         \n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { NetworkContext } from '../../context/NetworkContext';\n\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\nconst columns = [\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\n  { id: 'Shape', label: 'Shape' },\n  { id: 'Setting', label: 'Setting' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Weight', label: 'Weight' },\n  { id: 'Number', label: 'Number' },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    minWidth: 120,\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root': {\n      padding: 0,\n    }\n  },\n  root: {\n    marginTop: theme.spacing(2)\n  },\n  table: {\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function GemstoneDetails(props) {\n  const [open, setOpen] = React.useState(false);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  let [gemstoneEditObject,setGemstoneEditObject ] = React.useState({\n    edit:''\n  }) ;\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\n  function GemstoneEdit(gemstoneData) {\n    setGemstoneEditObject({\n      ...gemstoneEditObject,\n      edit:JSON.parse(JSON.stringify(gemstoneData))\n    })\n    setProductCtx({\n      ...productCtx,\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter((settingData, index) => settingData.name === gemstoneData.gemstoneSetting)[0],\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter((shapeData, index) => shapeData.name === gemstoneData.gemstoneShape)[0],\n      gemstonecount: gemstoneData.stoneCount,\n      gemstoneweight: gemstoneData.stoneWeight,\n      gemstonesize: gemstoneData.gemstoneSize\n    })\n    setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\n  }\n async function GemstoneSave(id) {\n    if (productCtx.gemstonesettings && productCtx.gemstoneshape && productCtx.gemstonecount && productCtx.gemstoneweight && productCtx.gemstonesize) {\n      let list_data = props.gemstone;\n      var bodydata = {}\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\n        if (id === gemstoneListData.id) {\n          gemstoneListData.gemstoneSetting = productCtx.gemstonesettings.name;\n          gemstoneListData.gemstoneShape = productCtx.gemstoneshape.name;\n          gemstoneListData.stoneCount = productCtx.gemstonecount;\n          gemstoneListData.stoneWeight = productCtx.gemstoneweight;\n          gemstoneListData.gemstoneSize = productCtx.gemstonesize;\n          bodydata['gemstoneSetting'] = productCtx.gemstonesettings.name\n          bodydata['gemstoneShape'] = productCtx.gemstoneshape.name\n          bodydata['stoneCount'] = productCtx.gemstonecount;\n          bodydata['gemstoneSize'] = productCtx.gemstonesize;\n          bodydata['stoneWeight'] = productCtx.gemstoneweight;\n          bodydata['id'] = id;\n          return gemstoneListData;\n        }\n        return gemstoneListData;\n      });\n\n      let response =  await sendNetworkRequest('/editproductgemstone', {}, bodydata)\n      let editGemstoneList = gemstoneChangeData && gemstoneChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\n      let editGemstoneLists = productCtx.editGemstoneLists;\n      if(JSON.stringify(editGemstoneList)!==JSON.stringify(gemstoneEditObject.edit)){\n        let status = editGemstoneLists&& editGemstoneLists.some((check_edit,index)=>check_edit.id===editGemstoneList.id) ? \n        editGemstoneLists = editGemstoneLists && editGemstoneLists\n        .map((gemstone_list,index)=>{\n          if(gemstone_list.id === editGemstoneList.id){\n            return editGemstoneList;\n          }\n          return gemstone_list;\n        }) \n        : editGemstoneLists.push(editGemstoneList); \n      }\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      setProductCtx({\n        ...productCtx,\n        gemstonelist: gemstoneChangeData,\n        editGemstoneLists,\n        gemstonesettings: \"\",\n        gemstoneshape: \"\",\n        gemstonecount: \"\",\n        gemstoneweight: \"\",\n        gemstonesize: \"\"\n      })\n      setBtnEdit({ ...btnEdit, id: \"\", action: false })\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not fill all item\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  const handleoptionChange = type => (event, value) => {\n\n    setProductCtx({ ...productCtx, [type]: value })\n\n  }\n  const handleInputChange = type => e => {\n    setProductCtx({ ...productCtx, [type]: e.target.value })\n  }\n  return (\n    <Paper className={classes.root}>\n          <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.gemstone && props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.gemstoneType}\n                </TableCell>\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstoneshape}\n                      options={productCtx.masterData.gemstonshapes}\n                      onChange={handleoptionChange('gemstoneshape')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Shape\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneShape}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Autocomplete\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      value={productCtx.gemstonesettings}\n                      options={productCtx.masterData.gemstonesettings}\n                      onChange={handleoptionChange('gemstonesettings')}\n                      renderTags={(value, getTagProps) =>\n                        value.map((option, index) => (\n                          <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                        ))\n                      }\n                      renderInput={params => (\n                        <TextField\n                          {...params}\n                          label=\"Gemstone Setting\"\n                          margin=\"dense\"\n                          variant=\"outlined\"\n                          fullWidth\n                          InputProps={{ ...params.InputProps, type: 'search' }}\n                        />\n                      )}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSetting}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Gemstone Size\"\n                      name=\"size\"\n                      onChange={handleInputChange('gemstonesize')}\n                      autoComplete=\"size\"\n                      value={productCtx.gemstonesize}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.gemstoneSize}\n                  </TableCell>}\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"Weight\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstoneweight')}\n                      value={productCtx.gemstoneweight}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneWeight}\n                  </TableCell>\n                }\n                {btnEdit.action && btnEdit.id == row.id ?\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Input\n                      variant=\"outlined\"\n                      fullWidth\n                      id=\"size\"\n                      margin=\"dense\"\n                      label=\"#of Stones\"\n                      name=\"size\"\n                      autoComplete=\"size\"\n                      onChange={handleInputChange('gemstonecount')}\n                      value={productCtx.gemstonecount}\n                    />\n                  </TableCell> :\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.stoneCount}\n                  </TableCell>\n                }\n                {\n                  btnEdit.action && btnEdit.id == row.id ?\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneSave(row.id)}><SaveIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\">\n                      <Button onClick={(e) => GemstoneEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.gemstone && props.gemstone.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\nimport SaveIcon from '@material-ui/icons/Save';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU'},\n  { id: 'Metal Colour', label: 'Metal Colour' },\n  { id: 'Metal Purity', label: 'Metal Purity' },\n  { id: 'Gold Weight', label: 'Gold Weight' },\n  { id: 'Size', label: 'Size' },\n  { id: 'Vendor lead Time', label: 'Vendor lead Time' },\n  { id: 'Ready to Ship', label: 'Ready to Ship' },\n  { id: 'Default', label: 'Default' },\n  {\n    id: 'Active',\n    label: 'Active',\n    align: 'center',\n    format: value => value.toFixed(2),\n  },\n  {\n    id: 'Edit',\n    label: 'Edit',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n  \n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n \n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  \n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    id: ''\n  })\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n  function handleChangeisdefault(variantId) {\n    \n  }\n\n  const handleChangeswitch = name => event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked})\n\n  //  setState({ ...state, [name]: event.target.checked });\n  };\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editleadtime:diamondData.vendorDeliveryTime,\n      discount:diamondData.discountDesc,\n      editreadytoship: diamondData.isReadyToShip,\n      editisdefault:diamondData.isdefault,\n      editisactive:diamondData.isActive\n    })\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n    var bodydata = {}\n    if(productCtx.editleadtime){\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.vendorDeliveryTime = productCtx.editleadtime;\n          skulistdata.isdefault = productCtx.editisdefault;\n          skulistdata.isActive =  productCtx.editisactive;\n          skulistdata.isReadyToShip = productCtx.editreadytoship\n\n          skulistdata.discountDesc =  productCtx.discount;\n          // diamondListData.stoneCount = productCtx.diamondcount;\n          // diamondListData.stoneWeight = productCtx.diamondweight;\n           bodydata['vendorDeliveryTime'] = productCtx.editleadtime\n           bodydata['isdefault'] = productCtx.editisdefault\n           bodydata['isActive'] = productCtx.editisactive;\n           bodydata['discount'] = productCtx.discount;\n\n           bodydata['isReadyToShip'] = productCtx.editreadytoship;\n           bodydata['generatedSku'] = id;\n          console.log(JSON.stringify(bodydata))\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n    }\n\n    sendNetworkRequest('/updateskuinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  }\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n               {props.displycolumns.indexOf('SKU') > -1 ?  <TableCell component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Metal Colour') > -1 ?  <TableCell align=\"center\" style = {{width: 40}}  scope=\"row\">\n                  {row.metalColor}\n            </TableCell> : null } \n            {props.displycolumns.indexOf('Metal Purity') > -1 ?  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {row.purity}\n                </TableCell> : null }\n                {props.displycolumns.indexOf('Gold Weight') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuWeight}\n                  </TableCell>: null}\n                  {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\n                    {row.diamondType}\n                  </TableCell> */}\n                  {props.displycolumns.indexOf('Size') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                    {row.skuSize}\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Vendor lead Time') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editleadtime}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Vendor Lead Time\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('editleadtime')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.vendorDeliveryTime}</Typography>\n\n                  } </TableCell> : null }\n\n{props.displycolumns.indexOf('Discount') > -1 ? <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  {btnEdit.action && btnEdit.id == row.generatedSku  ?  <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.discount}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('discount')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                    \n                    \n                    <Typography className={classes.heading}>{row.discountDesc}</Typography>\n\n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Ready To Ship') > -1 ? \n                  <TableCell align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editreadytoship : row.isReadyToShip}\n                       // onChange={()=>handleChange(row.id)}\n                        value=\"checkedA\"\n                        // onChange={handleChangeswitch('editreadytoship')}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editreadytoship') : null}\n\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                  {props.displycolumns.indexOf('Default') > -1 ? \n                  <TableCell  align=\"center\" style = {{width: 40}} component=\"th\" scope=\"row\">\n                  <Switch\n                        checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisdefault : row.isdefault}\n                        value=\"checkedA\"\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisdefault') : null}\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                  </TableCell> : null }\n                {props.displycolumns.indexOf('Active') > -1 ?<TableCell  style = {{width: 40}} align=\"center\">\n                       <Switch\n                        checked={row.isActive}\n                       checked={btnEdit.action && btnEdit.id == row.generatedSku ? productCtx.editisactive : row.isActive}\n                        onChange={btnEdit.action && btnEdit.id == row.generatedSku ? handleChangeswitch('editisactive') : null}\n\n                        value=\"checkedA\"\n                        inputProps={{ 'aria-label': 'secondary checkbox' }}\n                      />\n                    </TableCell> : null \n                }\n                    {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 20}} align=\"center\">\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell align=\"center\" style = {{width: 20}}>\n                      <Button onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, Input, CircularProgress } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\n\nconst columns = [\n  { id: 'SKU', label: 'SKU' },\n  { id: 'Cost Price', label: 'Cost Price' },\n  { id: 'Cost Price Tax', label: 'Cost Price Tax' },\n  { id: 'Selling Price', label: 'Selling Price' },\n  { id: 'Selling Price Tax', label: 'Selling Price Tax' },\n  { id: 'Markup Price', label: 'Markup Price' },\n  { id: 'Markup Price Tax', label: 'Markup Price Tax' },\n  { id: 'Discount Price', label: 'Discount Price' },\n  { id: 'Discount Price Tax', label: 'Discount Price Tax' },\n  { id: 'Margin On Sale', label: 'Margin On Sale' },\n  { id: 'Discount', label: 'Discount' },\n\n  {\n    id: 'Disable',\n    label: 'Price Update',\n    align: 'center',\n    format: value => value.toFixed(2),\n  }\n];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n  \n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n}));\n\nexport default function Variants(props) {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  const [btnEdit, setBtnEdit] = React.useState({\n    action: false,\n    pricerun: false,\n    id: ''\n  })\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n  });\n\n  function handleChange(variantId) {\n    let variantslist = productCtx.variants;\n    variantslist = productCtx.variants && productCtx.variants.map((variant,index)=>{\n      if(variant.id===variantId){\n        let status = variant.isActive ? variant.isActive=false : variant.isActive= true;\n      }\n      return variant;\n    })\n    let filterVariant = variantslist&& variantslist.filter((filter_data,index)=>filter_data.id===variantId)[0];\n    let editVaraint = {\n      id:filterVariant.id,\n      isActive:filterVariant.isActive\n    }\n    let editVariants = productCtx.editVariants;\n    let editStatus = editVariants && editVariants.some((check_variant,index)=>check_variant.id===variantId) ?editVariants= editVariants && editVariants.filter((edit_variant_filter,index)=>edit_variant_filter.id!==variantId):editVariants.push(editVaraint);\n    setProductCtx({\n      ...productCtx,\n      variants:variantslist,\n      editVariants\n    })\n  };\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.variants&&props.variants.length - page * rowsPerPage);\n  // function VariantEdit(id) {\n  //   alert(id)\n  //   setBtnEdit({ ...btnEdit, id, action: true })\n  // }\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n  const handleinputChange =type => e => {\n    // const re = /^[a-zA-Z \\b]+$/;\n    // if (e.target.value === '' || re.test(e.target.value)) {\n      setProductCtx({ ...productCtx, [type]: e.target.value})\n   // }\n  }\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n  function CancelEdit(diamondData) {\n    setBtnEdit({ ...btnEdit, id:'', action: false })\n\n  }\n async function Skupricesync(diamondData) {\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, pricerun: true })\n\n    \n    let bodydata = {\n      req_product_id: diamondData.productId,\n      generatedSku:  diamondData.generatedSku\n    }\nconsole.log(JSON.stringify(bodydata))\n   await sendNetworkRequest('/productpriceupdate',{},bodydata)\n   setBtnEdit({ ...btnEdit, id:'', pricerun: false })\n\n  }\n  function DiamondEdit(diamondData) {\n    setProductCtx({\n      ...productCtx,\n      editcostprice:diamondData.costPrice,\n      editcostpricetax: diamondData.costPriceTax,\n      editsellingprice:diamondData.sellingPrice,\n      editsellingpricetax:diamondData.sellingPriceTax,\n      editmarkupprice: diamondData.markupPrice,\n      editmarkuppricetax : diamondData.markupPriceTax,\n      editdiscountprice: diamondData.discountPrice,\n      editdiscountpricetax: diamondData.discountPriceTax\n    })\n\n    setBtnEdit({ ...btnEdit, id:diamondData.generatedSku, action: true })\n\n  }\n  function DiamondSave(id){\n\n    var bodydata = {}\n      let list_data=props.variants;\n      let Skuchangedata = list_data.map((skulistdata,index)=>{\n        if(id===skulistdata.generatedSku){\n          skulistdata.costPrice = productCtx.editcostprice;\n          skulistdata.costPriceTax = productCtx.editcostpricetax;\n          skulistdata.sellingPrice =  productCtx.editsellingprice;\n          skulistdata.sellingPriceTax = productCtx.editsellingpricetax\n          skulistdata.markupPrice = productCtx.editmarkupprice\n          skulistdata.markupPriceTax = productCtx.editmarkuppricetax\n          skulistdata.discountPrice = productCtx.editdiscountprice\n          skulistdata.discountPriceTax = productCtx.editdiscountpricetax\n\n           bodydata['costPrice'] = parseFloat(productCtx.editcostprice)\n           bodydata['costPriceTax'] = parseFloat(productCtx.editcostpricetax)\n           bodydata['sellingPrice'] = parseFloat(productCtx.editsellingprice)\n           bodydata['sellingPriceTax'] = parseFloat(productCtx.editsellingpricetax)\n           bodydata['markupPrice'] = parseFloat(productCtx.editmarkupprice)\n           bodydata['markupPriceTax'] = parseFloat(productCtx.editmarkuppricetax)\n           bodydata['discountPrice'] = parseFloat(productCtx.editdiscountprice)\n           bodydata['discountPriceTax'] = parseFloat(productCtx.editdiscountpricetax)\n           bodydata['generatedSku'] = id;\n          return skulistdata;\n        }\n        return skulistdata;\n      });\n\n      sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\n\n    setBtnEdit({ ...btnEdit, id:\"\", action: false })\n\n  \n}\n//   const handleoptionChange = type => (event, value) => {\n    \n//     setProductCtx({ ...productCtx, [type]: value})\n\n// }\n// const handleInputChange = type => e => {\n//   setProductCtx({ ...productCtx, [type]: e.target.value  })\n// }\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}  border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\n          <TableHead>\n            <TableRow>\n              {props.columns.map(column => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.name}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {props.variants&& props.variants.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell   component=\"th\" scope=\"row\">\n                  {row.generatedSku}\n                </TableCell>\n                {props.displycolumns.indexOf('Cost Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ? \n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    style = {{width: 40}}\n                    value={productCtx.editcostprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price\"\n                    onChange={handleinputChange('editcostprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                 :\n                <Typography className={classes.heading}> {row.costPrice}</Typography> \n                  } </TableCell> : null }\n                  {props.displycolumns.indexOf('Cost Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editcostpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Cost Price Tax\"\n                    onChange={handleinputChange('editcostpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> \n               :\n               <Typography className={classes.heading}> {row.costPriceTax} </Typography>\n                } : </TableCell> : null }\n                {props.displycolumns.indexOf('Selling Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price\"\n                    onChange={handleinputChange('editsellingprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> :\n                  <Typography className={classes.heading}> \n                {row.sellingPrice} </Typography> \n                } </TableCell> : null }\n               \n               {props.displycolumns.indexOf('Selling Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editsellingpricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Selling Price Tax\"\n                    onChange={handleinputChange('editsellingpricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                    //onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                : \n                  <Typography className={classes.heading}> \n                  {row.sellingPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkupprice}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price\"\n                    onChange={handleinputChange('editmarkupprice')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />: \n                  <Typography className={classes.heading}> \n                  {row.markupPrice} </Typography> \n                  } </TableCell> : null }\n             \n             {props.displycolumns.indexOf('Markup Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editmarkuppricetax}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Markup Price Tax\"\n                    onChange={handleinputChange('editmarkuppricetax')}\n\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                  : \n                  <Typography className={classes.heading}> \n                  {row.markupPriceTax} </Typography> \n                  } </TableCell> : null }\n\n            {props.displycolumns.indexOf('Discount Price') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountprice}\n                    id=\"productname\"\n                    onChange={handleinputChange('editdiscountprice')}\n\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPrice} </Typography> \n                  } </TableCell> : null }\n                {props.displycolumns.indexOf('Discount Price Tax') > -1 ? <TableCell component=\"th\" scope=\"row\">\n                {btnEdit.action  && btnEdit.id == row.generatedSku ?\n                <Input\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    value={productCtx.editdiscountpricetax}\n                    onChange={handleinputChange('editdiscountpricetax')}\n\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Discount Price Tax\"\n                    //onInput={keyPress.bind(this)}\n                   // onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  /> : \n                  <Typography className={classes.heading}> \n                  {row.discountPriceTax} </Typography> \n                  } </TableCell> : null }\n             \n                  {props.displycolumns.indexOf('Margin on Sale Percentage') > -1 ?\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.marginOnSalePercentage}\n                </TableCell> : null}\n                {props.displycolumns.indexOf('Discount') > -1 ?\n\n                <TableCell  style = {{width: 40}} component=\"th\" scope=\"row\">\n                {row.discount} \n                </TableCell> : null }\n                \n                {\n                  btnEdit.action && btnEdit.id == row.generatedSku ?\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                      <Button onClick={(e) => DiamondSave(row.generatedSku)}><SaveIcon />\n                      </Button>\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\n                      </Button>\n                    </TableCell> :\n                    <TableCell  style = {{width: 40}} align=\"center\">\n                      {btnEdit.pricerun && btnEdit.id == row.generatedSku ? <CircularProgress size={15}/> : <Button onClick={(e) => Skupricesync(row)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                      ₹ Run\n                      </Button>\n                        } \n                      <Button  onClick={(e) => DiamondEdit(row)}><EditIcon />\n                      </Button>\n                    </TableCell>\n                }\n              </TableRow>\n            ))}\n            {emptyRows == 0 && (\n              <TableRow style={{ height: 1 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                \n                count={props.variants&&props.variants.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n","import React, { useState } from 'react';\nimport { Grid, FormGroup, FormControlLabel, Checkbox, TextField, Button } from '@material-ui/core';\nimport { withRouter } from \"react-router-dom\";\nimport { ProductContext, ProductProvider } from '../../context';\nimport axios from 'axios';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { API_URL } from '../../config';\nimport { isString } from 'util';\nimport { makeStyles } from '@material-ui/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport 'filepond/dist/filepond.min.css';\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\n import { NetworkContext } from '../../context/NetworkContext';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport {\n  \n  Chip\n  \n} from '@material-ui/core';\n\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\nconst useStyle = makeStyles(theme => ({\n    helperinput: {\n        '& .MuiFormHelperText-root': {\n            color: \"#e53935\",\n        }\n    },\n    variantFontSize: {\n        fontSize: '.9rem'\n    },\n    variantMarginTop:{\n        marginTop: \"20px\"\n    }\n    \n}))\nexport function CreateVariant(props) {\n    const classes = useStyle();\n    let prod_id = props.productId;\n    let colors = []\n    let purities = []\n    let diamondtypes = []\n    let oldpurity = []\n\n    const TOKEN = 'token'\n    const { productCtx, setProductCtx } = React.useContext(ProductContext);\n    const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor)\n    productCtx.oldproductMetalColor.forEach(colorobj => {\n        colors.push(colorobj.productColor)\n    })\n    productCtx.oldproductMetalPurity.forEach(colorobj => {\n        purities.push(colorobj.purity)\n        oldpurity.push(colorobj)\n    })\n\n    productCtx.oldproductDiamondTypesArray.forEach(diamondobj => {\n\n        diamondtypes.push(diamondobj.diamondType)\n        \n    })\n    \n  \n    const [variant, setVariant] = useState({\n        metal_color: [],\n        metal_purity: [],\n        diamond_color: [],\n        diamond_clarity: [],\n        variant_diamond_type:[],\n        product_images: {},\n        size: []\n\n    });\n    \n    function handleMetalColor(status_data) {\n        let color = variant.metal_color;\n        color.some(color_data => color_data.id === status_data.id) ? color = color.filter(color_fil => color_fil.id !== status_data.id) : color.push(status_data)\n        setVariant({\n            ...variant,\n            metal_color: color\n        })\n    }\n    const handleoptionChange = type => (event, value) => {\n        let color_arr = []\n        value.map((color, index) => {\n          if(productCtx.productMetalColor.some(item => item.productColor === color.productColor)){\n           }else{ let color_obj = {\n                ...color,\n                metal_color: color.productColor\n            }\n            color_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            metal_color: color_arr\n        })\n\n        setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n      }\n    const sendNetworkRequest = async (url, params, data, auth = false) => {\n        alert(url)\n        url = API_URL + url;\n        console.info('URL', url, data)\n        const method = data ? 'POST' : 'GET',\n            headers = {\n                'Content-Type': 'application/json'\n            };\n        let resdata = null;\n        if (auth) {\n            const token = localStorage.getItem(TOKEN)\n            if (token) headers[\"auth\"] = token\n            else window.location = '/'\n        }\n        const response = await fetch(url, {\n            method, body: isString(data) ? data : JSON.stringify(data), headers\n        })\n\n        if (response.status < 400) {\n            resdata = await response.json();\n        } else {\n            alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\n        }\n        return resdata;\n    }\n\n    const handleMetalPurity = type => (event, value) => {        \n\n        let purity_arr = []\n         setProductCtx({\n            ...productCtx,\n            [type]:value\n          })\n        value.map((color, index) => {\n            let color_obj = {\n                ...color,\n                purity: color.purity\n            }\n            purity_arr.push(color_obj)\n        })\n        setVariant({\n            ...variant,\n            metal_purity: purity_arr\n        })\n\n       \n    }\n    // function handleMetalPurity(status_data) {\n    //     status_data.metal_weight = \"\";\n    //     status_data.error_message = false;\n    //     // alert(JSON.stringify(status_data));\n    //     let purity = variant.metal_purity;\n    //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         metal_purity: purity\n    //     })\n    // }\n    const diamondTypeChange = type => (event, value) => {        \n\n        let diamondtype_arr = []\n        value.map((color, index) => {\n                if(color.label)\n                {\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.label\n                    }\n                    diamondtype_arr.push(color_obj)\n                }else{\n                    let color_obj = {\n                        ...color,\n                        diamondType: color.diamondType\n                    }\n                    diamondtype_arr.push(color_obj)\n                }\n                    \n        //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\n        //    }else{ let color_obj = {\n        //         ...color,\n        //         diamondType: color.label\n        //     }\n        //     diamondtype_arr.push(color_obj)\n        //   }\n        })\n        setVariant({\n            ...variant,\n            variant_diamond_type: diamondtype_arr\n        })\n        alert(JSON.stringify(value))\n         setProductCtx({\n            ...productCtx,\n            [type]:diamondtype_arr\n          })\n    }\n\n   \n    // function diamondTypeChange(status_data){\n    //     let diamond__type = variant.variant_diamond_type;\n    //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         variant_diamond_type: diamond__type\n    //     })\n    // }\n\n    const sizeChange = type => (event, value) => {   \n        let size_arr = []\n        value.map((color, index) => {\n          if(productCtx.productDiamondTypes.some(item => item === color)){\n           }else{ let color_obj = {\n                ...color,\n                label: color\n            }\n            size_arr.push(color_obj)\n          }\n        })\n        setVariant({\n            ...variant,\n            size: size_arr\n        })\n    }\n    // function sizeChange(status_data) {\n    //     let variantSize = variant.size;\n    //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\n    //     setVariant({\n    //         ...variant,\n    //         size: variantSize\n    //     })\n\n    // }\n  \n    function setMetalWeightInput(e, metalPurityId) {\n        // alert(e.target.value)\n        let metalWeight = variant.metal_purity;\n        metalWeight = metalWeight && metalWeight.map((metal_weight, index) => {\n            if (metalPurityId === metal_weight.id) {\n                metal_weight.metal_weight = e.target.value;\n            }\n            return metal_weight;\n        });\n        setVariant({\n            ...variant,\n            metal_purity: metalWeight\n        })\n    }\n    function saveCreateVariant(){\n        let createVariant={\n            productId: prod_id,\n            productMetalcoloursByProductId:variant.metal_color,\n            productPuritiesByProductId:variant.metal_purity,\n            productDiamondTypes:variant.variant_diamond_type,\n            productSize:variant.size,\n            product_images:variant.product_images\n            // productImage:variant.product_images\n        }\n\n        \n        let metal_color_image_length = Object.entries(variant.product_images);\n        let metal_purity_weight = false;\n        let metal_purity = variant.metal_purity && variant.metal_purity.map((metal_weight_check)=>{\n            if(metal_weight_check.metal_weight === \"\"){\n                metal_weight_check.error_message = true;\n                metal_purity_weight = true;\n            }\n            return metal_weight_check;\n        });\n        variant['metal_purity'] = metal_purity\n        setVariant({\n            ...variant,\n            variant\n        })\n        if(metal_color_image_length.length !== variant.metal_color.length){\n            alert('Select Metal Color Images');\n        }\n        if(variant.metal_color.length>0 && variant.metal_color.length === metal_color_image_length.length || variant.metal_purity.length>0 && metal_purity_weight===false || variant.size.length>0 || variant.variant_diamond_type.length>0 ){\n            let createVariants = productCtx.createVariantList;\n            let editVariants = productCtx.editVariants;\n            let variants = productCtx.variants;\n            let productImages = productCtx.productImages;\n            productImages = [...productImages,variant.product_images];\n            createVariants.push(createVariant);\n            let params = {\n                method:'POST',\n                headers: { \n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(createVariant)\n            }\n          \n            \n        }else{\n            alert('please fill the Create variant');\n        }\n    }\n    function backToProductAttribute(){\n        props.changeVariant();\n    }\n    async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\n        let prodimages = variant.product_images;\n        // if(true)\n        // {\n        var prodid = prod_id;\n        let imagecolourobj = variant.product_images[imagecolor];\n        var imagecount = 1;\n        if (imagecolourobj) {\n            imagecount = imagecolourobj.length + 1;\n        }\n        \n  \n        let imagename = (prodid + \"_\" + (imagecount) + imagecolor.charAt(0));\n        let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\n        var returnData = responsedata && responsedata.data && responsedata.data.returnData;\n        var signedRequest = returnData && returnData.signedRequest;\n        var url = returnData && returnData.url;\n        console.log(\"responseurl\" + url);\n        var filepathname = returnData && returnData.filepath;\n        var options = {\n            headers: {\n                'Content-Type': bodaydata.fileExtension,\n                'Access-Control-Allow-Origin': '*'\n            }\n        };\n\n        if (imagecolourobj) {\n            const imageobj = {\n                \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            if (uploadtype === 'edit') {\n                imagecolourobj[imageposition] = imageobj;\n\n            } else {\n                imagecolourobj.push(imageobj)\n\n            }\n            prodimages[imagecolor] = imagecolourobj;\n\n        } else {\n            const imageobj = {\n                \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\n                \"position\": imageposition,\n                \"color\": imagecolor,\n                \"image_url\": filepathname,\n                \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\n            }\n            imagecolourobj = [];\n            imagecolourobj.push(imageobj)\n        }\n        prodimages[imagecolor] = imagecolourobj;\n        setVariant({ ...variant, product_images: prodimages })\n        // setFiles([])\n        // }\n\n        await axios.put(signedRequest, bodaydata.file, options)\n    }\n   \n    return (\n        <Grid container  spacing={2} >\n            <Grid item xs={6} sm={6} md={6} lg={6} >\n            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    fullWidth\n                    margin=\"dense\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.productColor}\n                    getOptionDisabled={option => colors.indexOf(option.productColor) > -1 }\n                    defaultValue={productCtx.oldproductMetalColor}\n                    options={productCtx.masterData.metalcolour}\n                    value={productCtx.productMetalColor}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.productColor}  {...getTagProps({ index })} disabled={colors.indexOf(option.productColor) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Colours\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n            </Grid>\n                \n            <Grid item xs={6} sm={6} md={6} lg={6}>\n                    \n                      \n                        {/* <Grid item>\n                            <FormGroup row>\n                                {\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\n\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\n                                            <FormControlLabel\n                                                disabled\n                                                control={\n                                                    <Checkbox checked={true} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            /> :\n                                            <FormControlLabel\n                                                control={\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\n                                                }\n                                                label={data.name}\n                                            />\n\n                                    ))\n                                }\n                            </FormGroup>\n                            {\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"124px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Metal Weight${metal_purity.name}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                     */}\n\n                    <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    margin=\"dense\"\n                    getOptionLabel={option => option.name}\n                    getOptionDisabled={option => purities.indexOf(option.name) > -1 }\n                    defaultValue={productCtx.oldproductMetalPurity}\n                    options={productCtx.masterData.metalpurity}\n                    value={productCtx.productMetalPurity}\n                    onChange={handleMetalPurity('productMetalPurity')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.purity}  {...getTagProps({ index })} disabled={purities.indexOf(option.purity) > -1}  />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Metal Purity\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n{\n                                productCtx.productMetalPurity && productCtx.productMetalPurity.map(metal_purity => (\n                                    <TextField\n                                        className={classes.helperinput}\n                                        style={{ width: \"100px\", marginLeft: \"8px\" }}\n                                        variant=\"outlined\"\n                                        margin=\"dense\"\n                                        fullWidth\n                                        type=\"number\"\n                                        value={metal_purity.metal_weight}\n                                        id=\"metal_weight\"\n                                        error={metal_purity && metal_purity.error_message }\n                                        name=\"metal_weight\"\n                                        label={`Weight ${metal_purity.purity}`}\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\n                                    />\n                                ))\n                            }\n                </Grid>\n\n            <Grid item  xs={6} sm={6} md={6} lg={6}>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    getOptionDisabled={option => diamondtypes.indexOf(option.label) > -1 }\n                    defaultValue={productCtx.oldproductDiamondTypesArray}\n                    options={productCtx.masterData.diamondtypes}\n                    value={productCtx.productDiamondTypesArray ? productCtx.productDiamondTypesArray : [] }\n                    onChange={diamondTypeChange('productDiamondTypesArray')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.diamondType} {...getTagProps({ index })}  disabled={diamondtypes.indexOf(option.diamondType) > -1}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                           \n                </Grid>\n\n                <Grid item  xs={6} sm={6} md={6} lg={6}>\n                {productCtx.variant_size && productCtx.variant_size.length > 0 ?  <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    fullWidth\n                    getOptionLabel={option => option}\n                    options={productCtx.productVariantSize}\n                    value={productCtx.variant_size}\n                    onChange={sizeChange('productSizes')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Sizes\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    /> : null }\n                </Grid>\n\n\n                {/* {\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\n                    <Grid item>\n                       \n                        <Grid item>\n                            <FormGroup row>\n                            <Autocomplete\n                    multiple\n                    id=\"free-solo-2-demo\"\n                    className={classes.fixedTag}\n                    getOptionLabel={option => option.label}\n                    options={productCtx.masterData.diamondtypes}\n                    defaultValue={productCtx.productDiamondTypes}\n                    onChange={handleoptionChange('productMetalColor')}\n                    renderTags={(value, getTagProps) =>\n                    value.map((option, index) => (\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\n                    ))\n                    }\n                    renderInput={params => (\n                    <TextField\n                    {...params}\n                    label=\"Diamond Types\"\n                    margin=\"dense\"\n                    variant=\"outlined\"\n                    fullWidth\n                    InputProps={{ ...params.InputProps, type: 'search' }}\n                    />\n                    )}\n                    />\n\n                              \n                            </FormGroup>\n                        </Grid>\n                    </Grid>\n                </Grid> : ''\n                } */}\n                \n            <Grid container>\n                {variant.metal_color === undefined ? null : variant.metal_color.map((value, index) => (\n                    <Grid xs={12} container spacing={1} item>\n                        <Grid xs={12} item>\n\n                            <Typography component=\"h6\" variant=\"h6\" align=\"left\">\n                                {value.productColor}\n                            </Typography>\n                        </Grid>\n                        <Grid xs={12} sm={12} md={12} item>\n                            <FilePond\n                                allowImageValidateSize\n                                imageValidateSizeMinWidth=\"2400\"\n                                imageValidateSizeMinHeight=\"2400\"\n                                imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\n\n                                })}\n                                labelIdle=\"Upload Image\"\n                                allowMultiple={true}\n                                //files = {files}\n                                onupdatefiles={fileItem => {\n                                    // Set currently active file objectsfiles to this.state\n\n                                }}\n                                onaddfile={(error, fileItem) => {\n                                    uploadimagetoserver(fileItem, index, value.name, \"add\")\n                                }}\n                                onremovefile={(error, fileItem) => {\n\n                                }}\n                                fileRenameFunction={\n                                    (file) => new Promise(resolve => {\n                                        var prodid = prod_id;\n                                        let imagecolourobj = variant.product_images[value.name];\n                                        var imagecount = 1;\n                                        if (imagecolourobj) {\n                                            imagecount = imagecolourobj.length + 1;\n                                        }\n                                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\n                                        resolve(imagename)\n\n                                    })\n                                }\n                            >\n                            </FilePond>\n                        </Grid>\n\n                    </Grid>\n                ))}\n            </Grid>\n            { <Grid container style={{display:\"flex\",justifyContent:\"center\", marginTop: \"16px\"}}>\n                    <Grid item >\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveCreateVariant()}>\n                Save\n                </Button>\n                </Grid>\n                <Grid item >\n                {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\n                Back\n                </Button> */}\n                </Grid>\n            </Grid> }\n        </Grid>\n    )\n}\nexport default CreateVariant;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = props.columns\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    const [showcolumns,setshowColumns ] = React.useState()\n    \n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(!data.disabled)\n            {\n                data.isActive = false;\n            }    \n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function saveaction(){\n        // let listOfValue = columns.listOfValue.map((data,index)=>{\n        //     if(data.isActive){\n        //               }\n        //               return data;  \n\n        // })\n        let columnnames = []\n        columns.listOfValue.forEach(element => {\n            if(element.isActive)\n            {\n                columnnames.push(element)\n            }\n        });\n        props.selectcolumnfilter(columnnames,props.displytype);\n        props.columnclose()\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #ddd\", width: \"100%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                               disabled = {head.disabled}\n                            onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"small\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button  size=\"small\" color=\"primary\" onClick={()=>saveaction()}  backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(props){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [options, setOptions] = React.useState(props.columnnames);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h4 className=\"products\">Variants Table</h4>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5} style={{display: 'flex', justifyContent: 'flex-end'}}>\n                        <Button className=\"product\" size=\"small\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\"  color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columns={options} selectcolumnfilter={props.getColumnnames} displytype={props.displytype} columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid> */}\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport axios from 'axios';\nimport { makeid } from '../../utils/commonmethod';\n\nimport {Paper,    Card,CardHeader,\n  CardContent,\nGrid} from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport TableHead from '@material-ui/core/TableHead';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Typography, Button, Chip, TextField, Input } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { ProductContext } from '../../context';\nimport Switch from '@material-ui/core/Switch';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport \"./upload.css\"\n\n\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    height: 100,\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n  fixedTag: {\n    padding: 0,\n    '& .MuiOutlinedInput-root':{\n      padding: 0,\n    }\n  },\n  root:{\n    marginTop: theme.spacing(2)\n  },\n  table:{\n    width: '100%'\n   // marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(0),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: '100%'\n  },\n  gempapper: {\n    padding: theme.spacing(2),\n    marginTop: theme.spacing(2),\n    width: '100%'\n  },\n  leftIcon: {\n    marginRight: theme.spacing(1),\n  },\n  rightIcon: {\n    marginLeft: theme.spacing(1),\n  },\n  iconSmall: {\n    fontSize: 20,\n  },\n  styleFile: {\n    paddingTop: \"10px\"\n},\n  card: {\n    minHeight: \"150px\",\n    textAlign: \"left\",\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\"\n},\nformContainer: {\n    paddingLeft: 40,\n    paddingRight: 40,\n    paddingTop: 20,\n    paddingBottom: 30\n}\n\n}));\n\nexport default function Productimages(props) {\n  const classes = useStyles2();\n  let image_count = 0;\n  let product_id = '';\n\n  const [title, setTitle] = React.useState(props.color);\n  const [productimages, setProductimages] = React.useState(props.prodimages);\n  // const [totalimages, setTotalimages] = React.useState(1);\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n\n  productimages.forEach(imgobj => {\n      if(props.color === imgobj.productColor)\n      {\n        image_count = image_count + 1;\n        if(imgobj.productId)\n        {\n          product_id = imgobj.productId\n\n        }\n        // setTotalimages(image_count)\n      }\n  })\n  async function uploadimagetoserver(fileobj,filetype, imagename, prodid, imagecontent, isedit,position)\n  {\n    let responsedata = await sendNetworkRequest('/uploadimage', {}, {image:filetype, filename :imagename, product_id: prodid },false)\n        var returnData = responsedata.data.returnData;\n        var signedRequest = returnData.signedRequest;\n        var url = returnData.url;\n        var filepathname = returnData.filepath\n        filepathname = filepathname.replace(\"base_images\", \"product/\"+prodid);\n        var options = {\n            headers: {\n                'Content-Type': filetype,\n                'Access-Control-Allow-Origin':'*'\n            }\n        };\n        if(isedit)\n        {\n          imagecontent['imageUrl'] = filepathname.replace(\"jpeg\",\"jpg\")\n\n        }else{\n          const imageobj = {\n            \"name\": (product_id+\"_\"+(image_count+1)+props.color.charAt(0)),\n            \"imagePosition\":(image_count+1),\n            \"productColor\":props.color,\n            \"productId\":product_id,\n            \"imageUrl\":filepathname.replace(\"jpeg\",\"jpg\"),\n            \"url\":'https://s3.ap-south-1.amazonaws.com/styloribaseimages/'+filepathname\n          } \n          imagecontent = imageobj;\n        }\n        if(!isedit)\n      {\n        var productimgs = [];\n        productimages.forEach(img => {\n          productimgs.push(img)\n        })\n        productimgs.push(imagecontent)\n      }\n      await axios.put(signedRequest, fileobj, options)\n      let responsecontent = await sendNetworkRequest('/updateproductimage', {}, {imageobj:imagecontent, isedit: isedit },false)\n      image_count =  image_count + 1;\n      if(!isedit)\n      {\n      setProductimages(productimgs)\n      }\n\n  }\n  const handlenewAssetChange =  (e) => {\n    const files = e.target.files;\n    Object.keys(files).map((file, index) => { \n      // const size = files[index].size;\n      var imagecount  = 1;\n      if(productimages)\n      {\n        imagecount = image_count + 1;\n      }\n      let imagename = (product_id+\"-\"+(imagecount)+props.color.charAt(0));\n      const fileParts = files[index].type.split(\"/\");\n      const fileType = fileParts[1];\n     \n      uploadimagetoserver(files[index],fileType,imagename,product_id,{}, false)\n\n\n        \n    })\n  }\n  const handleAssetChange =  (e,imageposition, category, endPoint) => {\n    const files = e.target.files;\n      Object.keys(files).map((file, index) => { \n        const size = files[index].size;\n        alert(imageposition)\n        let productimageobj = {}\n        productimages.forEach(content => {\n          if(content.productColor === props.color && imageposition === content.imagePosition)\n          {\n            productimageobj = content;\n          }\n        })\n        var prodid = productimageobj.productId;\n        var prodcolor = productimageobj.productColor;\n        var imagecount  = 1;\n      let randomnum =  makeid(1,\"\",1)\n        if(productimages)\n        {\n        //  imagecount = image_count + 1;\n        }\n        let imagename = (prodid+\"-\"+(imageposition)+randomnum+prodcolor.charAt(0));\n        const fileParts = files[index].type.split(\"/\");\n        const fileType = fileParts[1];\n        //alert(imagename)\n        uploadimagetoserver(files[index],fileType,imagename,prodid,productimageobj, true)\n       // alert(imagename)\n      });\n  };\n\n  return (\n    <Paper className={classes.root} >\n       <Card className={classes.card}>\n       <CardHeader\n       \n        title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color}\n      />\n                        <CardContent>\n                            <Grid container spacing={2} className={classes.styleFile}>\n                          \n                            {productimages.map(url => (\n                             <>\n                             {props.color === url.productColor  ? \n                               <div style={{ position: \"relative\" }}>\n                                 \n                                                <i className=\"fa fa-window-edit\" style={{ position: \"absolute\", right: 10, top: 11, color: \"red\", zIndex: '12' }}  />\n                                                \n                                                 <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\", position: \"relative\" }} className=\"container\" >\n                                                          <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handleAssetChange(e,url.imagePosition, \"\", \"\"\n                                                        )}\n\n                                                                ></input>\n                                                      \n                                                            <img src={\"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\"+url.imageUrl.replace(url.productId, url.productId+'/1000X1000')}\n                                                                style={{ width: \"100%\", height: \"100%\", borderRadius: \"4px\" }} />\n                                                    \n                                                </Grid>\n                                                <Typography style={{textAlign: \"center\"}}  variant=\"h5\"> {url.imagePosition} </Typography>\n\n                                                <Typography style={{textAlign: \"center\"}} variant=\"h6\"> {url.ishover ? 'hover' : ''} </Typography>\n\n\n                          </div> : null }\n                                </> \n                              ))}   \n                                <Grid item style={{ width: \"150px\", wordBreak: \"break-all\", height: \"150px\", padding: '8px', margin: '0', cursor: \"pointer\",textAlign: \"center\", position: \"relative\" }} className=\"container\">\n                            {\n                                                            (<label class=\"custom-file-upload\" style={{ display: \"flex\" }}>\n                                                                <i className=\"fa fa-plus\" aria-hidden=\"true\" style={{ color: \"rgba(60,64,67,.15)\", fontSize: \"45px\", margin: \"auto\" }}></i>\n                                                                <input\n                                                                    type=\"file\"\n                                                                    className=\"custom-file-input\"\n                                                                    multiple\n                                                                    onChange={e => handlenewAssetChange(e\n                                                                    )}\n                                                                ></input>\n                                                            </label>)\n                                                        }\n                              </Grid>                      \n                            </Grid>\n                            \n                      </CardContent>\n                </Card>\n    </Paper>\n  );\n}\n","import React, { useEffect, useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, TextField, Button, Fab } from '@material-ui/core';\nimport { Input } from '../../components/Input.js'\nimport { ProductContext, ProductProvider } from '../../context';\nimport { withRouter } from \"react-router-dom\";\nimport DiamondDetails from './DiamondDetails';\nimport GemstoneDetails from './GemstoneDetails';\nimport Variants from './Variants';\nimport Skupricing from './Skupricing';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\nimport { productCategory } from '../../services/mapper';\nimport { useQuery } from 'react-apollo';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"../Productupload/Productupload.css\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { PRODUCTEDIT, PRODUCTDIAMONDTYPES } from '../../graphql/query';\nimport CreateVariant from './CreateVariant';\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { NetworkContext } from '../../context/NetworkContext';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SortHeader from './Components/SortHeader';\nimport columnnames from './columnnames.json';\nimport Productimages from './Productimages'\nimport FullLoader from '../../components/Loader'\n\nimport {\n  Card,\n  CardHeader,\n  Chip,\n  CardContent,\n  Divider,\n  Switch,\n  RadioGroup,\n  Radio,\n  FormLabel,\n  FormControlLabel,\n  Checkbox\n} from '@material-ui/core';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyle = makeStyles(theme => ({\n  helperinput: {\n    '& .MuiFormHelperText-root': {\n      color: \"#e53935\",\n    }\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    verticalAlign: 'bottom',\n    height: 20,\n    width: 20,\n  },\n  details: {\n    alignItems: 'center',\n  },\n  column: {\n    flexBasis: '33.33%',\n  },\n  helper: {\n    borderLeft: `2px solid ${theme.palette.divider}`,\n    padding: theme.spacing(1, 2),\n  },\n  link: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline',\n    },\n  },\n}))\n\nexport function Component(props) {\n  const [open, setOpen] = React.useState(false);\n  const [expand, setExpand] = React.useState(false);\n  const [varientcolumns, setVarientcolumns] = React.useState(columnnames.defaultvarients);\n  const [displycolumns, setDisplycolumns] = React.useState(columnnames.defaultvarientnames);\n  const [pricingcolumns, setPricingcolumns] = React.useState(columnnames.defaultpricing);\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(columnnames.defaultpricingnames);\n  const [loadopen, setLoadopen] = React.useState(true);\n\n  \n  const { sendNetworkRequest } = React.useContext(NetworkContext);\n  const [snackMessage,setSnackMessage] = React.useState({\n    message:\"\",\n    severity:\"\"\n  });\n  const handleClick = () => {\n    setOpen(true);\n  };\n  \n  const handleChange = panel => (event, isExpanded) => {\n    createVariant()\n    setExpand(isExpanded ? true : false);\n    \n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setOpen(false);\n  };\n\n  const { productCtx, setProductCtx } = useContext(ProductContext);\n  const [state, setstate] = useState({\n    create_variant: false,\n    duplicate_productName: \"\"\n  })\n  let prod_id = props.location.pathname.split('/')[2];\n  const classes = useStyle();\n  function keyPress(evt) {\n    const productname = (evt.target.validity.valid) ? evt.target.value : productCtx.productname;\n    setProductCtx({ ...productCtx, productname })\n  }\n  function changeVariant() {\n    setstate({ ...state, create_variant: false })\n  }\n  const handleoptionChange = type => (event, value) => {\n      setProductCtx({ ...productCtx, [type]: value})\n}\n\nconst handleinputChange =type => e => {\n  const re = /^[a-zA-Z \\b]+$/;\n  if (e.target.value === '' || re.test(e.target.value)) {\n    setProductCtx({ ...productCtx, [type]: e.target.value})\n  }\n}\n// const handleinputChange = type => (event, value) => {\n//   alert(event.target.value)\n//       setProductCtx({ ...productCtx, [type]: value})\n// }\nfunction getColumnnames(columnnames,displytype) {\n  let displycolumns = [];\n    columnnames.forEach(element => {\n      displycolumns.push(element.name)\n    })\n  if(displytype === 1)\n  {\n    setDisplycolumns(displycolumns)\n    setVarientcolumns(columnnames)\n  }else{\n    setPricingcolumns(columnnames)\n    setDisplypricingcolumns(displycolumns)\n  }\n    \n   \n\n}\n  function createVariant() {\n    let diamondTypesArray = [];\n    // let diamondClaritySku = [];\n    productCtx.diamondlist && productCtx.diamondlist.map(diamond_type => {\n      let diamond_data = {\n        id: diamond_type.id,\n        diamondType: diamond_type.diamondType\n      }\n      let status = diamondTypesArray.some(store_dia => store_dia.diamondType == diamond_type.diamondType) ? '' : diamondTypesArray.push(diamond_data);\n      return diamond_type;\n    })\n    productCtx['productDiamondTypesArray'] = diamondTypesArray\n    productCtx['oldproductDiamondTypesArray'] = diamondTypesArray\n\n    setProductCtx({\n      ...productCtx,\n      productCtx\n    })\n    let params = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES })\n    }\n    fetch(GRAPHQL_DEV_CLIENT, params)\n      .then(res => res.json())\n      .then(diamondtypesData => {\n        console.log(diamondtypesData.data.allMasterDiamondTypes.nodes, 'diamondtypesdata');\n        setProductCtx({\n          ...productCtx,\n          productDiamondTypes: diamondtypesData.data.allMasterDiamondTypes.nodes\n        })\n      })\n      .catch(console.error)\n\n    //setstate({ ...state, create_variant: true })\n  }\nasync function saveProductEditItem() {\n    let productEditItem = {\n      productId: prod_id,\n      productName: productCtx.productname,\n      themes: productCtx.themes,\n      styles: productCtx.prod_styles,\n      occassions : productCtx.occassions,\n      collections : productCtx.collections,\n      stonecount : productCtx.stonecount,\n      stonecolour : productCtx.stonecolour,\n      gender : productCtx.product_gender\n      // productDiamondsByProductSku: productCtx.editDiamondLists,\n      // productGemstonesByProductSku: productCtx.editGemstoneLists,\n      // transSkuListsByProductId: productCtx.editVariants,\n      // productImages:productCtx.productImages,\n      // createVariants: productCtx.createVariantList\n    }\n  let response =  await sendNetworkRequest('/editproduct', {}, productEditItem)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(productEditItem))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n      console.log(JSON.stringify(productEditItem))\n      // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n    // const opts = {\n    //   method: \"POST\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify(productEditItem)\n    // }\n    // fetch(GRAPHQL_DEV_CLIENT,opts)\n    // .then(res=>res.json())\n    // .then(fetchValue=>{\n\n    // })\n    // .catch(console.error)\n    console.log(JSON.stringify(productEditItem))\n    // props.history.push('/productlist')\n  }\n\n  const handledisableproduct = name => async event => {\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\n    let bodycontent = {\n      \"productid\": prod_id,\n      \"isactive\" : event.target.checked\n    }\n    let esbody = {\n      \"product_id\": prod_id\n    }\n    var endpoint = '/reindex'\n    if(event.target.checked)\n    {\n      endpoint = '/esearch_forceindex'\n    }\n    let response =  await sendNetworkRequest('/disableproduct', {}, bodycontent)\n\n    let esresponse =  await sendNetworkRequest(endpoint, {}, esbody)\n\n    console.log(\"************\")\n    console.log(JSON.stringify(bodycontent))\n    if (response) {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"This is successfully saved\",\n        severity:\"success\"\n      })\n      handleClick();\n        // setTimeout(()=>{  window.location='/productlist'},1000)\n    } else {\n      setSnackMessage({\n        ...snackMessage,\n        message:\"You are not edit product\",\n        severity:\"info\"\n      })\n      handleClick();\n    }\n  };\n\n  function Skupricesync(diamondData) {\n    let bodydata = {\n      req_product_id: diamondData\n    }\n    sendNetworkRequest('/productpriceupdate',{},bodydata)\n\n  }\n  function backProductList() {\n    window.location='/productlist';\n  }\n  useEffect(() => {\n    const url = GRAPHQL_DEV_CLIENT;\n    const opts = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query: PRODUCTEDIT, variables: { \"productId\": prod_id }  })\n    };\n    // console.log(\"helo\",setProductCtx)\n    fetch(url, opts)\n      .then(res => res.json())\n      .then(fatchvalue => {\n        var genders = fatchvalue.data.productListByProductId.gender\n        var size_obj = fatchvalue.data.productListByProductId.sizeVarient\n        let sizes_arr = []\n        if(size_obj)\n        {\n          let sizes = size_obj.split(',')\n          sizes.forEach(element => {\n            \n            sizes_arr.push(element)\n          });\n        }\n        let gender_arr = []\n        if(genders)\n        {\n        genders = genders.split(',')\n        genders.forEach(element => {\n          let gender_obj = {\n            label: element\n          }\n          gender_arr.push(gender_obj)\n        });\n      }\n        let defaultcolour = \"\";\n       var images_arr = fatchvalue.data.productListByProductId.productImagesByProductId.nodes\n       images_arr.forEach(element => {\n          if(element.isdefault)\n          {\n            defaultcolour = element.productColor\n          }\n      });\n      var metalcolors = []\n      Array.prototype.insert = function ( index, item ) {\n        this.splice( index, 0, item );\n    };\n     let metalcolor =  fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes\n     metalcolor.forEach(colorobj => {\n          if(colorobj.productColor === defaultcolour)\n          {\n            colorobj['isdefault'] = true\n            metalcolors.insert(0, colorobj);\n\n          }else\n          {\n            colorobj['isdefault'] = false\n            metalcolors.push(colorobj)\n          }\n     })\n        setProductCtx({\n          ...productCtx,\n          productname: fatchvalue.data.productListByProductId.productName,\n          isactive: fatchvalue.data.productListByProductId.isactive,\n          product_type: fatchvalue.data.productListByProductId.productType,\n          product_categoy: fatchvalue.data.productListByProductId.productCategory,\n          gemstonelist: fatchvalue.data.productListByProductId.productGemstonesByProductSku.nodes,\n          diamondlist: fatchvalue.data.productListByProductId.productDiamondsByProductSku.nodes,\n          variants: fatchvalue.data.productListByProductId.transSkuListsByProductId.nodes,\n          product_images: fatchvalue.data.productListByProductId.productImagesByProductId.nodes,\n          productMetalColor: metalcolors,\n          oldproductMetalColor: fatchvalue.data.productListByProductId.productMetalcoloursByProductId.nodes,\n          productMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          oldproductMetalPurity: fatchvalue.data.productListByProductId.productPuritiesByProductId.nodes,\n          variant_size: sizes_arr,\n          productmaterials: fatchvalue.data.productListByProductId.productMaterialsByProductSku.nodes,\n          vendorcode:fatchvalue.data.productListByProductId.vendorCode,\n          product_gender:gender_arr,\n          themes: fatchvalue.data.productListByProductId.productThemesByProductId.nodes,\n          prod_styles: fatchvalue.data.productListByProductId.productStylesByProductId.nodes,// productDiamondColor:diamondTypesArray,\n          occassions:fatchvalue.data.productListByProductId.productOccassionsByProductId.nodes,\n          collections:fatchvalue.data.productListByProductId.productCollectionsByProductId.nodes,\n          stonecount:fatchvalue.data.productListByProductId.productStonecountsByProductId.nodes,\n          stonecolour:fatchvalue.data.productListByProductId.productStonecolorsByProductId.nodes\n          // productDiamondClarity:diamondClaritySku,\n        })\n        setstate({\n          ...state,\n          duplicate_productName: JSON.parse(JSON.stringify(fatchvalue.data.productListByProductId.productName))\n        })\n        setLoadopen(false)\n\n      })\n      .catch(console.error)\n  }, [])\n  return (\n    state.create_variant ? <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} /> :\n           <Grid container>\n             <FullLoader title=\"Getting Product Details\" isopen={loadopen}/>\n             <React.Fragment>\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\n          {snackMessage.message}\n        </Alert>\n      </Snackbar>\n        </React.Fragment>\n          <Grid item container spacing={1} >\n          <Grid item xs={12} sm={12} md={3} lg={3} spacing={2} style={{padding:\"15px\",  backgroundColor: \"#FFFFFF\" }}>\n              \n              \n              <TextField\n                    className={classes.helperinput}\n                    variant=\"outlined\"\n                    margin=\"dense\"\n                    fullWidth\n                    pattern=\"[a-zA-Z]*\"\n                    value={productCtx.productname}\n                    id=\"productname\"\n                    error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                    name=\"productname\"\n                    label=\"Product Name\"\n                    //onInput={keyPress.bind(this)}\n                    onChange={handleinputChange('productname')}\n\n                   //onChange={(e)=>handleinputChange(e,'productname')}\n                  />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_categoy}\n                  id=\"product_category\"\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_categoy}\n                  name=\"product_category\"\n                  label=\"Product Category\"\n  \n                />\n                <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  value={productCtx.product_type}\n                  id=\"product_type\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.product_type}\n                  InputProps={{\n                    readOnly: true,\n                  }}\n                  name=\"product_type\"\n                  label=\"Product Type\"\n  \n                />\n                  <Input\n                        variant=\"outlined\"\n                        margin=\"dense\"\n                        label=\"Vendor Name\"\n                        fullWidth\n                        className={classes.helperinput}\n                        value={productCtx.vendorcode}\n                        id=\"productvendorcode\"\n                        InputProps={{\n                          readOnly: true,\n                        }}\n                        name=\"Vendor Name\"\n                        />\n  \n                 <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"seo_text\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"seo_text\"\n                  label=\"Minimum Order Quantity\"\n  \n                /> \n               <TextField\n                  className={classes.helperinput}\n                  variant=\"outlined\"\n                  margin=\"dense\"\n                  fullWidth\n                  defaultValue={productCtx.productname}\n                  id=\"url\"\n                  error={productCtx && productCtx.error_message && productCtx.error_message.productname}\n                  \n                  name=\"url\"\n                  label=\"Maximum Order Quantity\"\n                /> \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productmaterials}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.materialName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Product Materials\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\n                      />\n                      )}\n                      />\n                 <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalColor}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.productColor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      disabled\n                      className={classes.fixedTag}\n                      value={productCtx.productMetalPurity}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.purity} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Metal Purity\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.product_gender}\n                      getOptionLabel={option => option.label}\n                      onChange={handleoptionChange('product_gender')}\n                      options={productCtx.masterData.gender}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Gender\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.themes}\n                      options={productCtx.masterData.themes}\n                      value={productCtx.themes}\n                      onChange={handleoptionChange('themes')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.themeName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Themes\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                      <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.prod_styles}\n                      options={productCtx.masterData.styles}\n                      onChange={handleoptionChange('prod_styles')}\n                      value={productCtx.prod_styles}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.styleName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Styles\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                    <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.occassions}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.occassions}\n                      options={productCtx.masterData.occasions}\n                      onChange={handleoptionChange('occassions')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.occassionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Occasions\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.collections}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.collections}\n                      options={productCtx.masterData.collections}\n                      onChange={handleoptionChange('collections')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.collectionName} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Collections\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecount}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecount}\n                      options={productCtx.masterData.stones}\n                      onChange={handleoptionChange('stonecount')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecount} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"No of Stones\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n  \n                  <Autocomplete\n                      multiple\n                      id=\"free-solo-2-demo\"\n                      className={classes.fixedTag}\n                      value={productCtx.stonecolour}\n                      getOptionLabel={option => option.label}\n                      defaultValue={productCtx.stonecolour}\n                      options={productCtx.masterData.gemstonecolor}\n                      onChange={handleoptionChange('stonecolour')}\n                      renderTags={(value, getTagProps) =>\n                      value.map((option, index) => (\n                      <Chip variant=\"outlined\" size=\"small\" label={option.stonecolor} {...getTagProps({ index })} />\n                      ))\n                      }\n                      renderInput={params => (\n                      <TextField\n                      {...params}\n                      label=\"Stone Colour\"\n                      margin=\"dense\"\n                      variant=\"outlined\"\n                      fullWidth\n                      InputProps={{ ...params.InputProps, type: 'search' }}\n                      />\n                      )}\n                      />\n              \n              <FormControlLabel\n                                label={productCtx.isactive ? \"Disable this product\" : \"Enable this product\"}\n\n                  control={\n                    <Switch checked={productCtx.isactive} onChange={handledisableproduct('isactive')} value=\"checkedA\" />\n                  }\n                />\n              \n              \n              <Grid item container style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              marginTop: \"16px\"\n            }}>\n              <Grid item>\n                <Button color=\"primary\" variant=\"contained\" onClick={(e) => saveProductEditItem()}>\n                  Update\n             </Button>\n                {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\n                  Back\n              </Button> */}\n              </Grid>\n            </Grid>\n              \n              </Grid>\n             \n            <Grid item xs={12} sm={12} md={9} lg={9}  spacing={2} style={{ padding: \"15px\" }}>\n              <Grid container item md={6}>\n                \n              </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Diamond Table</Grid>\n              <DiamondDetails diamond={productCtx.diamondlist} />\n              {productCtx.gemstonelist.length > 0 ? <> <Grid style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}>Gemstone Table</Grid>\n              <GemstoneDetails gemstone={productCtx.gemstonelist} /> </> : null }\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>Variant Creation</Grid>\n\n              <Grid style={{\n                \n              }}>\n                {/* <Grid style={{ fontSize: \".9rem\", display: \"flex\", alignItems: \"center\" }}>Create Variant</Grid> */}\n               \n                  <ExpansionPanel expanded={expand} onChange={handleChange()}>\n                    <ExpansionPanelSummary\n                      expandIcon={expand? <CloseIcon /> : <AddIcon />}\n                      aria-controls=\"panel1c-content\"\n                      id=\"panel1c-header\"\n                    >\n                      <div className={classes.column}>\n                        <Typography className={classes.heading}>Add New variant</Typography>\n                      </div>\n                    \n                    </ExpansionPanelSummary>\n                    <Divider />\n                    <ExpansionPanelDetails className={classes.details}>\n                    <CreateVariant productMetalColor={productCtx.productMetalColor} productMetalPurity={productCtx.productMetalPurity} changeVariant={changeVariant} productId={prod_id} />  \n                    </ExpansionPanelDetails>\n                    <Divider />\n                    {/* <ExpansionPanelActions>\n                      <Button size=\"small\">Cancel</Button>\n                      <Button size=\"small\" color=\"primary\">\n                        Save\n                      </Button>\n                    </ExpansionPanelActions> */}\n                    </ExpansionPanel>\n                    \n                \n                </Grid>\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}><SortHeader columnnames={columnnames.varients}  getColumnnames={getColumnnames} displytype={1}/>  </Grid>\n\n              <Variants variants={productCtx.variants} columns={varientcolumns} displycolumns={displycolumns} />\n                  \n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" , marginTop: \"16px\" }}>  \n              <SortHeader columnnames={pricingcolumns} displycolumns={displypricingcolumns}  getColumnnames={getColumnnames} displytype={2}/>\n              <Button onClick={(e) => Skupricesync(prod_id)} size=\"small\" variant=\"outlined\" color=\"primary\">\n                        Price Run For This Product\n              </Button>\n            </Grid>\n\n              <Skupricing variants={productCtx.variants} columns={pricingcolumns} displycolumns={displypricingcolumns} />\n              <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>Product Images</Grid>\n              {productCtx.productMetalColor.map(colors => (\n                    <Productimages color={colors.productColor} isdefault={colors.isdefault  } prodimages={productCtx.product_images} />\n\n              ))}\n            \n            </Grid>\n            \n            \n          </Grid>\n        </Grid>\n\n  )\n}\n\n\n\nconst useStyles2 = makeStyles(theme => ({\n  progress: {\n    margin: 'auto'\n  },\n}));\n\nexport const ProductAttributes = withRouter(props => {\n\n  const classes = useStyles2();\n\n  const { data, loading, error } = useQuery(productCategory.query);\n\n  if (loading) return <div className=\"loaderdiv\"><CircularProgress className={classes.progress} />\n  </div>\n  if (error) return <div>error</div>\n\n  const _content = <ProductProvider value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }} >\n    <Component {...props} />\n  </ProductProvider>\n  return _content\n});\nexport default withRouter(ProductAttributes);","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Grid } from '@material-ui/core';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport './table.css'\n\n\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n    },\n    conatainerRow:{\n        width:\"300px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 256px\",\n    fontSize:\"9px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"24px\",\n    gridTemplateColumns: \"repeat(2, 1fr)\",\n\n    [theme.breakpoints.up(\"sm\")]: {\n        width:\"500px\",\n        color:\"#6f6f6f\",\n        display: \"grid\",\n    padding: \"16px 24px\",\n    maxHeight:\" 270px\",\n    fontSize:\"14px\",\n    overflowX: \"visible\",\n    overflowY: \"scroll\",\n    gridColumnGap: \"20px\",\n    gridTemplateColumns: \"repeat(3, 1fr)\"\n    }\n\n    }\n}));\n\n\n\nexport default function Columns(props) {\n    const classes = useStyles();\n\n    const checkboxrow = [\n        {\n            id:1,\n            name:\"Published\",\n            isActive: false,       \n        },\n        {\n            id:2,\n            name:\"AVB\",\n            isActive:false,      \n        },\n        {\n            id:3,\n            name:\"Price\",\n            isActive: false,       \n        },\n        {\n            id:4,\n            name:\"Type\",\n            isActive:  false,      \n        },\n        {\n            id:5,\n            name:\"Flavour\",\n            isActive: false ,     \n        },\n        {\n            id:6,\n            name:\"Flavour\",\n            isActive:false,        \n        },\n        {\n            id:7,\n            name: \"Material\",\n            isActive:false,        \n        },\n        {\n            id:8,\n            name:\"Medium\",\n            isActive:false,        \n        },\n        {\n            id:9,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:10,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:11,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:12,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:13,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:14,\n            name:\"Shoe size\",\n            isActive:false,        \n        },\n        {\n            id:15,\n            name:\"Shoe size\",\n            isActive:false,        \n        }\n        \n        \n        \n        \n        \n    ]\n    const [columns,setColumns ] = React.useState({\n        listOfValue:checkboxrow\n    })\n    function stateChange(id){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n            if(id===data.id){\n                data.isActive = data.isActive?false:true;\n            }\n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    function resetButton(){\n        let listOfValue = columns.listOfValue.map((data,index)=>{\n                data.isActive = false;\n            \n            return data;\n        })\n        setColumns({\n            listOfValue\n        })\n    }\n    // const lists = columns.listOfValue.map((head) =>\n    //     (\n    //         <Grid conatiner>\n    //             <Grid item xs={4}><Checkbox\n    //                 value=\"secondary\"\n    //                 color=\"primary\"\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\n    //                 checked = {head.isActive}\n    //                 onChange = {()=>stateChange(head.id)}\n                \n    //             />\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\n    //             </Grid>\n    //         </Grid>\n    //     )\n\n    // );\n\n   \n\n\n\n\n    return (\n        \n         <div style={{ maxHeight: \"420px\"}}>\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\n                <Grid conatiner>\n              <Grid item   className={classes.conatainerRow}>\n                   {columns.listOfValue.map((head) =><Grid container>\n                        <Checkbox\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                               checked = {head.isActive}\n                    onChange = {()=>stateChange(head.id)}\n                            \n                        />\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\n                <Grid>\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\n                </Grid>\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\n                        SAVE\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n        \n    );\n}\n","import React from 'react';\nimport { Form, Grid,Select } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport Columns from \"./columns\"\nimport './table.css'\n\n\n\n\nconst useStyless = makeStyles(theme => ({\n  button: {\n    color: \"#06847B\",\n    border: \"1px solid #7bbcb7\",\n    '&:hover': {\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n      border: \"1px solid #06847B\",\n    }\n  },\n}));\n\n\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n\n}));\n\nconst options = [\n  \"Show some love to Material-UI\",\n  \"Show all notification content\",\n  \"Hide sensitive notification content\",\n  \"Hide all notification content\"\n];\n\nexport default function FormPropsTextFields() {\n  const classess = useStyless();\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClickListItem = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setAnchorEl(null);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\n      <Grid lg={2} md={2} sm={3}>\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\n\n        </Button>\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n        >\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\n\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\n          \n              <Select\n              className={classes.notchedOutline}\n                fullWidth\n                variant=\"outlined\"\n                margin=\"dense\"\n                labelId=\"demo-controlled-open-select-label\"\n                id=\"demo-controlled-open-select\"\n                \n        >\n         \n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\n        </Select>\n         \n            <Menu\n              id=\"lock-menu\"\n              // anchorEl={anchorEl}\n\n              keepMounted\n              // open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              {options.map((option, index) => (\n                <MenuItem\n                  key={option}\n\n\n                  onClick={event => handleMenuItemClick(event, index)}\n                >\n                  {option}\n                </MenuItem>\n              ))}\n            </Menu>\n          </div>\n\n\n\n        </Popover>\n\n      </Grid>\n      <Grid lg={10} md={10} sm={9}>\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\n        </form>\n      </Grid>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Grid} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Columns from './columns';\nimport Popover from '@material-ui/core/Popover';\nimport './table.css';\n\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        color:\"#06847B\",\n        border: \"1px solid #7bbcb7\",\n        '&:hover':{\n            backgroundColor: \"rgba(6, 132, 123, 0.1)\",\n            border: \"1px solid #06847B\",\n        }\n      },\n\n}));\n\nfunction SortHeader(){\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n \n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n      };\n      const handleClose = () => {\n        setAnchorEl(false);\n      };\n      const open = Boolean(anchorEl);\n      const id = open ? 'simple-popover' : undefined;\n    \n     \n        return(\n            <Grid container lg={12} md={12} sm={12} xs={12} style={{display:\"flex\",justifyContent:\"space-between\",marginBottom:\"17px\",marginTop:\"25px\"}}>\n                <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\n                     <h2 className=\"products\" style={{fontSize:\"24px\",fontWeight:\"400\"}}>Products</h2>   \n                </Grid>\n                <Grid container xl={4} lg={3} md={4} sm={5} xs={12} lassName=\"column\" style={{display:\"flex\",justifyContent:\"space-between\"}}>\n                    <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\n                        <Button className=\"product\" id=\"one\" color=\"primary\" backgroundColor=\"secondary\"  onClick={handleClick} variant=\"outlined\" size=\"large\" color=\"primary\" style={{fontSize:\"15px\",padding:\"6px 6px\"}}>\n                            COLUMNS<ArrowDownwardIcon fontSize=\"inherit\" />\n                        </Button>\n                        <Popover\n                            id={id}\n                            open={open}\n                            anchorEl={anchorEl}\n                            onClose={handleClose}\n                            anchorOrigin={{\n                            vertical: 'bottom',\n                            horizontal: 'center',\n                            }}\n                            transformOrigin={{\n                            vertical: 'top',\n                            horizontal: 'center',\n                            }}\n                        >\n                            <Columns columnclose={handleClose}/>\n                        </Popover>\n\n\n\n                    </Grid>\n                    <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\n                        CREATE PRODUCT\n                        </Button>\n                    </Grid>\n                </Grid>\n            </Grid>\n        ) \n\n}\nexport default SortHeader","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport {TableBody,Grid} from '@material-ui/core';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Filterandsearch from './filterandsearch';\nimport SortHeader from './SortHeader';\nimport './table.css';\n\n\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\n  return { name, calories, fat, carbs, protein , protein1, protein2};\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\n];\n\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n\n   <React.Fragment >\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n    </React.Fragment> \n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n     \n    <Toolbar\n    \n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\n          Nutrition\n          \n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            {/* <FilterListIcon /> */}\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(0),\n  },\n  table: {\n    // minWidth: 750,\n    width:\"100%\", \n    overflowX:\"scroll\"\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n      \n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };    \n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \n                <FormControlLabel\n               \n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                // label=\"Dense padding\"\n            />\n        </div>    */}\n\n\n        <SortHeader lg={12} md={12} sm={12}  />\n\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n        <Filterandsearch/>\n\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n            \n                        {stableSort(rows, getComparator(order, orderBy))\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        .map((row, index) => {\n                        const isItemSelected = isSelected(row.name);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\n                    </TableRow>\n                    \n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n        \n              )}\n                   \n                     \n              \n              \n            </TableBody>\n          </Table>\n        \n        \n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      </Grid>  \n    </div>\n\n    \n  );\n}\n","import React from 'react';\nimport ProductTable from './ProductTable';\nimport './table.css'\nfunction newmaterial1() {\n    return (\n        <div style={{ width: \"100%\" }}>\n            <ProductTable />\n        </div>\n    )\n}\nexport default newmaterial1","import React from 'react';\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\nimport './style.css'\n\n\nconst IOSSwitch = withStyles(theme => ({\n    root: {\n        width: 42,\n        height: 26,\n        padding: 0,\n        margin: theme.spacing(1),\n    },\n    switchBase: {\n        padding: 1,\n        '&$checked': {\n            transform: 'translateX(16px)',\n            color: theme.palette.common.white,\n            '& + $track': {\n                backgroundColor: '#52d869',\n                opacity: 1,\n                border: 'none',\n            },\n        },\n        '&$focusVisible $thumb': {\n            color: '#52d869',\n            border: '6px solid #fff',\n        },\n    },\n    thumb: {\n        width: 24,\n        height: 24,\n    },\n    track: {\n        borderRadius: 26 / 2,\n        border: `1px solid ${theme.palette.grey[400]}`,\n        backgroundColor: theme.palette.grey[50],\n        opacity: 1,\n        transition: theme.transitions.create(['background-color', 'border']),\n    },\n    checked: {},\n    focusVisible: {},\n}))(({ classes, ...props }) => {\n    return (\n        <Switch\n            focusVisibleClassName={classes.focusVisible}\n            disableRipple\n            classes={{\n                root: classes.root,\n                switchBase: classes.switchBase,\n                thumb: classes.thumb,\n                track: classes.track,\n                checked: classes.checked,\n            }}\n            {...props}\n        />\n    );\n});\n\n\n\n\n\nexport default function Editcategory(props) {\n\n    const [state, setState] = React.useState({\n        checkedA: true,\n        checkedB: true,\n        checkedC: true,\n    });\n\n\n    const handleChange = name => event => {\n        setState({ ...state, [name]: event.target.checked });\n    };\n\n\n\n\n    return (\n        <div>\n            <Grid>\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\n            </Grid>\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={6} xs={12}>\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                    <Grid lg={4} md={4} sm={12} xs={12}>\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\n                    </Grid>\n                </Grid>\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\n                        <div className=\"z\">\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                \n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedA}\n                                        onChange={ handleChange('checkedA')}\n                                        value=\"checkedA\"\n                                        \n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                         </div>  \n\n                        \n                    </Grid>\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedB}\n                                        onChange={ handleChange('checkedB')}\n                                        value=\"checkedB\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\n                        <div className=\"z\">\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\n                            <FormControlLabel\n                                control={\n                                    <IOSSwitch\n                                        checked={state.checkedC}\n                                        onChange={ handleChange('checkedC')}\n                                        value=\"checkedC\"\n                                    />\n                                }\n                                label=\"Y\"\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Cancel\n                            </Button>\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\n                            Save\n                            </Button>\n                    </Grid>\n                    <Grid>\n\n                    </Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport route from './route';\nimport {\n    Dashboard, Login, Productupload, Configuration,Manageusers,Customerdetails,\n    Priceupdate, Vendorprice, Vendorlist, Markupprice,Goldpriceupdate,\n    Productlist, Materiallist, Masterorderstatus, Shippingzones,Manageadminusers,\n    Shipmentsettings,Addshippingattributes,Userconfiguration,Masterroles,Masterscreens,\n    Materialmaster, CategoryList, Mastermetalcolors, Masterpurities, Masterdesigns, Shippingattributes, Voucherdiscount, Masterstyles, Masterthemes, Masteroccassions, Masterpaymentstatus, Salediscount, Masterweights, Taxsettings, Masterstones, Masterstonecolors, Masterstoneshapes, Masterattribute, Mastercategories, OrderList, Mastergemsettings, Seopriority, Mastergenders, Mastergemshapes, Mastergemtypes, Earringbacking, Masterproducttypes, Masterdiamondshapes, Taxsetup, Masterdiamonds, Masterdiamondsettings, DiscountList, VoucherdiscountListing, Mastercollections, Masterpages\n} from '../screens';\nimport PrivateRoute from './PrivateRoute';\nimport { NetworkProvider } from '../context/NetworkContext';\nimport { GlobalContext } from '../context';\nimport { ApolloProvider } from 'react-apollo';\nimport { ProductAttributes } from '../screens/ProductEdit/ProductAttributes';\nimport { CreateVariant } from '../screens/ProductEdit/CreateVariant';\nimport { ProductContext, ProductProvider } from '../context/ProductuploadContext';\nimport newmaterial from '../screens/CategoryList/components/newmaterial/newmaterial';\nimport Editcategory from '../screens/CategoryList/components/editpage/editcategory';\n\nconst MainApp = () => {\n\n    const { globalCtx } = React.useContext(GlobalContext);\n    const { productCtx } = React.useContext(ProductContext);\n    const client = new ApolloClient({ uri: globalCtx.gqlClient, });\n\n    return (\n        <ApolloProvider client={client} >\n            {/* <ProductProvider > */}\n            <NetworkProvider>\n                <Switch>\n                    <PrivateRoute exact path=\"/\" component={Login} />\n                    <Route path={route.login} component={Login} />\n                    <PrivateRoute path={route.dashboard} component={Dashboard} />\n                    <PrivateRoute path={route.productupload} component={Productupload} />\n                    <PrivateRoute path={route.configuration} component={Configuration} />\n                    <PrivateRoute path={route.vendor} component={Vendorlist} />\n                    <PrivateRoute path={route.productlist} component={Productlist} />\n                    <PrivateRoute path={route.materiallist} component={CategoryList} />\n                    <PrivateRoute path={route.editCategory} component={Editcategory} />\n                    <PrivateRoute path={route.materiallistpage} component={newmaterial} />\n                    <PrivateRoute path={route.producttypes} component={Masterproducttypes} />\n                    <PrivateRoute path={route.voucherdiscount} component={Voucherdiscount} />\n                    <PrivateRoute path={route.priceupdate} component={Priceupdate} />\n                    <PrivateRoute path={route.orderlist} component={OrderList} />\n                    <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\n                    <PrivateRoute path={route.markupPrice} component={Markupprice} />\n                    <PrivateRoute path={route.salediscount} component={Salediscount} />\n                    <PrivateRoute path={route.taxsetup} component={Taxsetup} />\n                    <PrivateRoute path={route.taxsettings} component={Taxsettings} />\n                    <PrivateRoute path={route.category} component={Mastercategories} />\n                    <PrivateRoute path={route.masterattributes} component={Masterattribute} />\n                    <PrivateRoute path={route.masterstones} component={Masterstones} />\n                    <PrivateRoute path={route.masterstonecolors} component={Masterstonecolors} />\n                    <PrivateRoute path={route.masterstoneshapes} component={Masterstoneshapes} />\n                    <PrivateRoute path={route.weights} component={Masterweights} />\n                    <PrivateRoute path={route.masteroccassions} component={Masteroccassions} />\n                    <PrivateRoute path={route.masterroles} component={Masterroles} />\n                    <PrivateRoute path={route.masterpages} component={Masterscreens} />\n                    <PrivateRoute path={route.manageadminusers} component={Manageadminusers} />\n                    <PrivateRoute path={route.goldpriceupdate} component={Goldpriceupdate} />\n                    <PrivateRoute path={route.manageusers} component={Manageusers} />\n                    <PrivateRoute path={route.customerdetails} component={Customerdetails} />\n\n                    \n                    \n                    <PrivateRoute path={route.userconfiguration} component={Userconfiguration} />\n\n                    <PrivateRoute path={route.masterstyles} component={Masterstyles} />\n                    <PrivateRoute path={route.masterthemes} component={Masterthemes} />\n\n\n                    <PrivateRoute path={route.mastermaterial} component={Materialmaster} />\n                    <PrivateRoute path={route.mastercolors} component={Mastermetalcolors} />\n                    <PrivateRoute path={route.masterpurities} component={Masterpurities} />\n                    <PrivateRoute path={route.salediscountlist} component={DiscountList} />\n                    <PrivateRoute path={route.voucherdiscountlist} component={VoucherdiscountListing} />\n                    <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\n                    <PrivateRoute path={route.mastercollections} component={Mastercollections} />\n                    <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\n                    <PrivateRoute path={route.masterdiamonds} component={Masterdiamonds} />\n                    <PrivateRoute path={route.diamondsettings} component={Masterdiamondsettings} />\n                    <PrivateRoute path={route.diamondshapes} component={Masterdiamondshapes} />\n                    <PrivateRoute path={route.earringbacking} component={Earringbacking} />\n                    <PrivateRoute path={route.gemsettings} component={Mastergemsettings} />\n                    <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\n                    <PrivateRoute path={route.masterpaymentstatus} component={Masterpaymentstatus} />\n                    <PrivateRoute path={route.masterorderstatus} component={Masterorderstatus} />\n                    <PrivateRoute path={route.shippingzones} component={Shippingzones} />\n                    <PrivateRoute path={route.shippingattributes} component={Shippingattributes} />\n                    <PrivateRoute path={route.addshippingattributes} component={Addshippingattributes} />\n\n\n\n\n                    <PrivateRoute path={route.gender} component={Mastergenders} />\n                    <PrivateRoute path={route.seo} component={Seopriority} />\n\n\n                    <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\n\n                    <PrivateRoute exact path={route.editdiscount} component={Salediscount} />\n\n                    <PrivateRoute exact path={`${route.productAttributes}/:id`} component={ProductAttributes} />\n                    <PrivateRoute exact path={`${route.createVariant}`} component={CreateVariant} />\n                    <PrivateRoute path={route.shipmentsettings} component={Shipmentsettings} />\n\n                </Switch>\n            </NetworkProvider>\n            {/* </ProductProvider> */}\n        </ApolloProvider>\n    )\n}\n\n\nexport default MainApp;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport MainApp from './routes';\nimport { GlobalProvider } from './context';\nimport { CssBaseline } from '@material-ui/core';\nimport theme from './theme';\n\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n// const theme = createMuiTheme({\n//   typography: {\n//     fontFamily: [\n   \n//       'Roboto'\n  \n//     ].join(','),\n//   },\n// });\nfunction App() {\n  \n  return (\n    <GlobalProvider>\n    <MuiThemeProvider theme={theme}>\n        <div className=\"App\">\n          <CssBaseline />\n            <Router>\n              <MainApp />\n            </Router>\n        </div>\n        </MuiThemeProvider  >\n    </GlobalProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}