{"version":3,"sources":["components/inputField/inputField.js","defaultState/login.js","config.js","utils/request.js","utils/setAuthToken.js","actions/authentication.js","actions/types.js","pages/Login/loginPage.js","pages/Login/index.js","pages/Listing/index.js","components/ErrorComp.js","utils/PrivateRoute.js","reducers/authentication.js","reducers/errors.js","reducers/index.js","reduxStore.js","App.js","serviceWorker.js","index.js"],"names":["Inputfield","props","react_default","a","createElement","style","paddingBottom","name","Object","assign","className","undefined","login","username","password","error","config","apiURL","loginType","request","axios","url","arguments","length","method","data","headers","setAuthToken","token","defaults","common","setCurrentUser","decoded","type","payload","Loginpage","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","commonStateChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","value","wrap","_context","prev","next","setState","defineProperty","target","stop","_x","_x2","apply","loginSubmit","_ref2","_callee2","evt","_data","_this$state","_context2","preventDefault","state","logMeIn","_x3","bind","assertThisInitialized","JSON","parse","stringify","defaultState","user","user_id","history","push","_ref3","_this2","errors","_this$state2","onSubmit","defaultValue","onChange","email","color","paddingTop","Button","React","Component","connect","userData","dispatch","concat","then","res","status","localStorage","setItem","jwt_decode","catch","err","response","withRouter","withAlert","Login","loginPage","Listing","testing","setTimeout","window","location","replace","textAlign","component","pageType","rest","objectWithoutProperties","react_router","render","keys","to","initialState","combineReducers","action","objectSpread","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","options","position","positions","BOTTOM_CENTER","timeout","offset","transition","transitions","SCALE","jwtToken","ReduxStore","currentTime","Date","now","exp","href","App","es","react_alert","template","AlertTemplate","react_router_dom","path","exact","utils_PrivateRoute","ErrorComp","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ddfb900.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Inputfield(props) {\n  return (\n    <div style={{ paddingBottom: \"10px\" }}>\n      <b>\n        <div style={{ paddingBottom: \"7px\" }}>\n          <label>{props.name}</label>\n        </div>\n      </b>\n      <div>\n        <input\n          {...props}\n          className={\n            \"inputField \" +\n            (props.className !== undefined ? props.className : \"\")\n          }\n        />\n      </div>\n    </div>\n  );\n}\n","const login = {\n  username: null,\n  password: null,\n  error: null\n};\nexport default login;\n","const config = {\n    apiURL:'localhost:7080',\n    loginType:'email'\n}\n\nexport default config; ","import axios from 'axios';\n\nconst request = (...params) => axios({\n        url : params[0],\n        method:params[1],\n        data :params[2] ? params[2] : null ,\n        headers:params[3] ? params[3] : null\n    });\n\nexport default request;","import axios from 'axios';\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\nexport default setAuthToken;\n","import { SET_CURRENT_USER, LOGIN_ERROR } from \"../actions/types\";\nimport request from \"../utils/request\";\nimport config from \"../config\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\nexport const logMeIn = userData => dispatch => {\n  request(`${config.apiURL}/api/users`, \"POST\", userData)\n    .then(res => {\n      if (res.data.status === 200) {\n        const { token } = res.data;\n        localStorage.setItem(\"jwtToken\", token);\n        setAuthToken(token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded));\n      }\n    })\n    .catch(err => {\n      if(err && err.response && err.response.data && err.response.data.errors) {\n        dispatch({\n          type: LOGIN_ERROR,\n          payload: err.response.data.errors\n        });\n      } else {\n        dispatch({\n          type:LOGIN_ERROR,\n          payload:{\n            password:\"Internal Server Error\"\n          }\n        })\n      }\n    });\n};\n\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n\nexport const logoutUser = decoded => {\n  return {\n    type:SET_CURRENT_USER,\n    payload:{}\n  }\n}","const INIT = 'INIT';\nconst SET_CURRENT_USER = 'SET_CURRENT_USER';\nconst LOGIN_ERROR = 'LOGIN_ERROR';\nexport { INIT,SET_CURRENT_USER, LOGIN_ERROR };","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./stylesheet/stylesheet.css\";\nimport { withRouter } from \"react-router-dom\";\nimport Inputfield from \"../../components/inputField/inputField\";\nimport { Button } from \"reactstrap\";\nimport defaultState from \"../../defaultState/login\";\nimport { withAlert } from \"react-alert\";\nimport config from \"../../config\";\nimport { logMeIn } from \"../../actions/authentication\";\nclass Loginpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.loginSubmit = this.loginSubmit.bind(this);\n    this.commonStateChange = this.commonStateChange.bind(this);\n    this.state = JSON.parse(JSON.stringify(defaultState));\n  }\n  commonStateChange = async (e, value) => {\n    this.setState({\n      [value]: e.target.value\n    });\n  };\n  loginSubmit = async (evt) => {\n    evt.preventDefault();\n    const { username, password } = this.state;\n    let data = {\n      type: config.loginType,\n      [config.loginType]: username,\n      password\n    };\n    this.props.logMeIn(data);\n  };\n  componentDidMount() {\n    const { user } = this.props;\n    if (user && user.user_id) {\n      this.props.history.push(\"/listing\");\n    }\n  }\n  componentWillReceiveProps({ user }) {\n    if (user && user.user_id) {\n      this.props.history.push(\"/listing\");\n    }\n  }\n  render() {\n    const { errors } = this.props;\n    const { username, password } = this.state;\n    return (\n      <div>\n        <div className=\"login\">\n          <div>\n            <h2>NAC Admin login</h2>\n          </div>\n          <form onSubmit={e => this.loginSubmit(e)}>\n            <Inputfield\n              name=\"Username:\"\n              type=\"text\"\n              defaultValue={username}\n              onChange={e => this.commonStateChange(e, \"username\")}\n            />\n            {errors.email}\n            <Inputfield\n              name=\"Password:\"\n              type=\"password\"\n              defaultValue={password}\n              onChange={e => this.commonStateChange(e, \"password\")}\n            />\n            <span\n              style={{\n                color: \"red\"\n              }}\n            >\n              {errors.password}\n            </span>\n\n            <div style={{ paddingTop: \"32px\" }}>\n              <Button className=\"loginButton\" type=\"submit\">\n                Log in\n              </Button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  user: state.user,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { logMeIn }\n)(withRouter(withAlert()(Loginpage)));\n","import React from \"react\";\nimport Loginpage from \"./loginPage\"\n\nexport default class Login extends React.Component{\n    render(){\n        return(\n            <div>\n                <Loginpage />\n            </div>\n        )\n    }\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nclass Listing extends React.Component {\n  render() {\n    return <div>Listing page</div>;\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  {  }\n)(withRouter(Listing));\n","import React from \"react\";\n\nclass testing extends React.Component {\n  componentDidMount() {\n    setTimeout(() => {\n      window.location.replace(\"/listing\");\n    }, 3000);\n  }\n  render() {\n    return (\n      <div\n        style={{\n          textAlign: \"center\"\n        }}\n      >\n        <h3>This page is not found. You will be redirected in 3 secs.</h3>\n      </div>\n    );\n  }\n}\n\nexport default testing;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ component: Component, pageType,type, user, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      (Object.keys(user) && Object.keys(user).length > 0) ? (\n        <Component {...props}/>\n      ) : (\n          <Redirect to=\"/login\" />\n        )\n    }\n  />\n)\n\nPrivateRoute.propTypes = {\n  user: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  user: state.user\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import { SET_CURRENT_USER } from '../actions/types';\nconst initialState = {\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","\nimport { LOGIN_ERROR } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_ERROR: \n            return action.payload;\n        default:\n            return state;\n    }\n}","import { combineReducers } from 'redux';\nimport authenticator from './authentication';\nimport errors from './errors';\nexport default combineReducers({\n  user: authenticator,\n  errors,\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware)\n  ),\n      // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Login from \"./pages/Login\";\nimport Listing from \"./pages/Listing\";\nimport ErrorComp from \"./components/ErrorComp\";\nimport AlertTemplate from \"react-alert-template-basic\";\nimport { Provider } from \"react-redux\";\nimport PrivateRoute from \"./utils/PrivateRoute\";\nimport ReduxStore from \"./reduxStore\";\nimport { transitions, positions, Provider as AlertProvider } from \"react-alert\";\nimport setAuthToken from './utils/setAuthToken';\nimport jwt_decode from \"jwt-decode\";\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nconst options = {\n  position: positions.BOTTOM_CENTER,\n  timeout: 1500,\n  offset: \"30px\",\n  transition: transitions.SCALE\n};\n\nif (localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  ReduxStore.dispatch(setCurrentUser(decoded));\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    ReduxStore.dispatch(logoutUser());\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n    return (\n      <Provider store={ReduxStore}>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <BrowserRouter>\n            <Switch>\n              <Route path=\"/login\" exact={true} component={Login} />\n              <PrivateRoute path=\"/listing\" exact={true} component={Listing} />\n              <Route path=\"*\" exact={true} component={ErrorComp} />\n            </Switch>\n          </BrowserRouter>\n        </AlertProvider>\n      </Provider>\n    );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}