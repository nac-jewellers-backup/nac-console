{"version":3,"sources":["components/Categoryrow/Categoryrow.js","components/Label/Label.js","config.js","components/Breadcrumbs/Breadcrumbs.js","graphql/query.js","services/queries.js","services/mapper.js","context/NetworkContext.js","components/ProductFilter/components/downloadcsv.js","components/ProductFilter/components/Filter/Filter.js","components/ProductFilter/components/Search/Search.js","context/AlertContext.js","components/ProductFilter/components/FullCSVData.js","components/ProductFilter/ProductFilter.js","components/Alert/index.js","components/Table/style.js","components/Table/TableBodyRow.js","components/Table/TableComponent.js","components/FeaturedProduct/Component/FeaturedProductComponent.js","components/FeaturedProduct/FeaturedProduct.js","components/Newarrival/component/NewarrivalComponent.js","components/Newarrival/NewArrival.js","components/Review/Component/Reviewcoponent.js","components/Review/Review.js","context/GlobalContext.js","context/ProductuploadContext.js","context/MaterialContext.js","context/VoucherContext.js","context/OrderContext.js","screens/Productlist/filterandsearch.js","components/Vendor/Vendor.js","components/Page/Page.js","screens/Addshippingattributes/components/AttributesComponent/AttributesComponent.js","screens/Addshippingattributes/Addshippingattributes.js","screens/Addtaxattributes/components/AttributesComponent/AttributesComponent.js","screens/Addtaxattributes/Addtaxattributes.js","screens/CategoryList/components/Header/Header.js","screens/CategoryList/components/Results/Results.js","screens/CategoryList/Categorycontent.js","screens/CategoryList/CategoryList.js","screens/Configuration/Configuration.js","screens/Customerdetails/components/Header/Header.js","screens/Customerdetails/components/Results/Results.js","screens/Customerdetails/components/General/General.js","components/EnhancedTableHead/EnhancedTableHead.js","components/Mastercontent/components/EditContent/EditContent.js","components/Mastercontent/Mastercontent.js","screens/Customerdetails/Customerdetails.js","screens/CustomerManagementDetails/CustomerManagementDetails.js","screens/CustomerManagementDetails/components/Header/Header.js","screens/CustomerManagementDetails/components/Invoices/Invoices.js","components/Input.js","screens/Dashboard/Dashboard.js","screens/DiscountList/components/Header/Header.js","components/ConformationAlert/ConformationAlert.js","screens/DiscountList/components/Results/Results.js","screens/DiscountList/DiscountList.js","screens/Earringbacking/Earringbacking.js","screens/Goldpriceupdate/Goldpriceupdate.js","graphql/mutation.js","screens/HolidayManager/HolidayModal.js","screens/HolidayManager/index.js","screens/Inventory/InventoryModal.js","screens/Inventory/index.js","utils/gradients.js","screens/Login/components/LoginForm/LoginForm.js","screens/Login/Login.js","screens/Manageadminusers/Manageadminusers.js","screens/manageshedule/shedulemodal.js","screens/manageshedule/shedulemodalshow.js","screens/manageshedule/index.js","screens/Manageusers/Mastercontent.js","screens/Manageusers/Manageusers.js","screens/mangeappoinment/index.js","screens/Markuppricesetup/components/Addmarkup.js","screens/Markuppricesetup/components/Product.js","screens/Markuppricesetup/components/Diamonds.js","screens/Markuppricesetup/components/Gemstones.js","screens/Markuppricesetup/components/Makingcharge.js","screens/Markuppricesetup/Markupprice.js","screens/Masterattribute/Masterattribute.js","screens/Mastercategories/Mastercategories.js","screens/Mastercollections/components/Header/Header.js","screens/Mastercollections/components/Results/Results.js","screens/Mastercollections/Mastercollections.js","screens/Masterdesigns/components/Header/Header.js","screens/Masterdesigns/components/Results/Results.js","screens/Masterdesigns/Masterdesigns.js","screens/Masterdiamonds/Masterdiamonds.js","screens/Masterdiamondsettings/Masterdiamondsettings.js","screens/Masterdiamondshapes/Masterdiamondshapes.js","screens/Mastergemsettings/components/Header/Header.js","screens/Mastergemsettings/components/Results/Results.js","screens/Mastergemsettings/Mastergemsettings.js","screens/Mastergemshapes/components/Header/Header.js","screens/Mastergemshapes/components/Results/Results.js","screens/Mastergemshapes/Mastergemshapes.js","screens/Mastergemtypes/components/Header/Header.js","screens/Mastergemtypes/components/Results/Results.js","screens/Mastergemtypes/Mastergemtypes.js","screens/Mastergenders/components/Header/Header.js","screens/Mastergenders/components/Results/Results.js","screens/Mastergenders/Mastergenders.js","screens/Mastermetalcolors/Mastermetalcolors.js","screens/Masteroccassions/Masteroccassions.js","screens/Masterorderstatus/Masterorderstatus.js","screens/Masterpaymentstatus/Masterpaymentstatus.js","screens/Masterproducttypes/Masterproducttypes.js","screens/Masterpurities/components/Header/Header.js","screens/Masterpurities/components/Results/Results.js","screens/Masterpurities/Masterpurities.js","components/Addpermissions/Addpermissions.js","screens/Masterroles/Masterroles.js","screens/Masterscreens/Masterscreens.js","screens/Masterstonecolors/Masterstonecolors.js","screens/Masterstones/Masterstones.js","screens/Masterstoneshapes/Masterstoneshapes.js","screens/Masterstyles/components/Header/Header.js","screens/Masterstyles/components/Results/Results.js","screens/Masterstyles/Masterstyles.js","screens/Masterthemes/components/Header/Header.js","screens/Masterthemes/components/Results/Results.js","screens/Masterthemes/Masterthemes.js","screens/Masterweights/Masterweights.js","screens/Materialmaster/Materialmaster.js","screens/OrderList/OrderList.js","screens/OrderManagementDetails/components/Header/Header.js","screens/OrderManagementDetails/components/OrderInfo/OrderInfo.js","screens/OrderManagementDetails/components/OrderItems/OrderItems.js","screens/OrderManagementDetails/components/OrderDetails/OrderDetails.js","screens/OrderManagementDetails/OrderManagementDetails.js","screens/AppointmentManagementDetails/components/AppointmentInfo.js","screens/AppointmentManagementDetails/components/AppointmentExtra.js","screens/AppointmentManagementDetails/AppointmentManagement.js","screens/Priceupdate/components/Header/Header.js","screens/Priceupdate/components/Results/Results.js","utils/commonmethod.js","screens/Priceupdate/components/AboutVoucher/AboutVoucher.js","components/Loader/Fullloader.js","screens/Priceupdate/components/CategoryComponents/CategoryComponents.js","screens/Priceupdate/PriceupdateContent.js","screens/Priceupdate/Priceupdate.js","components/Products/Product.js","screens/Productlist/ProductSync.js","screens/Productlist/Productlist.js","screens/Productupload/AddressForm.js","components/SelectPlaceholder.js","screens/Productupload/PaymentForm.js","screens/Productupload/Review.js","components/Select/MultiSelect.js","components/Select/Select.js","screens/Productupload/Step4.js","screens/Productupload/Step5.js","screens/Productupload/Step6.js","screens/Productupload/Step7.js","screens/Productupload/Step8.js","screens/Productupload/Component.js","screens/Productupload/ProductUpload.js","theme/palette.js","theme/typography.js","theme/overrides/index.js","theme/overrides/MuiButton.js","theme/overrides/MuiIconButton.js","theme/overrides/MuiPaper.js","theme/overrides/MuiTableCell.js","theme/overrides/MuiTableHead.js","theme/overrides/MuiTypography.js","theme/index.js","screens/Salediscount/components/Header/Header.js","screens/Salediscount/components/Results/Results.js","screens/Salediscount/components/AboutVoucher/AboutVoucher.js","screens/Salediscount/components/VoucherComponent/VoucherComponent.js","screens/Salediscount/components/CategoryComponents/CategoryComponents.js","screens/Salediscount/components/Viewsku.js","screens/Salediscount/components/Products/Products.js","screens/Salediscount/Salediscountcontent.js","screens/Salediscount/Salediscount.js","screens/Seopriority/components/Header/Header.js","screens/Seopriority/components/Results/Results.js","screens/Seopriority/Seopriority.js","screens/Shipmentsettings/Shipmentsettings.js","screens/Shippingattributes/Attributescontent/Attributescontent.js","screens/Shippingattributes/Shippingattributes.js","screens/Shippingzones/Shippingzones.js","screens/Taxsettings/Attributescontent/Attributescontent.js","screens/Taxsettings/Taxsettings.js","screens/Taxsetup/Taxsetup.js","screens/Useraddresses/components/Results/Results.js","screens/Useraddresses/Useraddresses.js","screens/Userconfiguration/Userconfiguration.js","screens/Userwishlist/components/Results/Results.js","screens/Userwishlist/Userwishlist.js","components/Newvendor/Newvendor.js","screens/Vendorlist/Vendorlist.js","screens/Vendorpricesetup/components/Addmetalprice.js","screens/Vendorpricesetup/components/Product.js","screens/Vendorpricesetup/components/Adddiamondprice.js","screens/Vendorpricesetup/components/Diamonds.js","screens/Vendorpricesetup/components/Addgemstoneprice.js","screens/Vendorpricesetup/components/Gemstones.js","screens/Vendorpricesetup/components/Addmakingchargeprice.js","screens/Vendorpricesetup/components/Makingcharge.js","screens/Vendorpricesetup/Vendorprice.js","screens/Voucherdiscount/components/Header/Header.js","screens/Voucherdiscount/components/Results/Results.js","screens/Voucherdiscount/components/AboutVoucher/AboutVoucher.js","screens/Voucherdiscount/components/VoucherComponent/VoucherComponent.js","screens/Voucherdiscount/VoucherdiscountContent.js","screens/Voucherdiscount/components/CategoryComponents/CategoryComponents.js","screens/Voucherdiscount/Voucherdiscount.js","screens/VoucherdiscountListing/components/Header/Header.js","screens/VoucherdiscountListing/components/Results/Results.js","screens/VoucherdiscountListing/VoucherdiscountListing.js","screens/Warehouse/WarehouseModal.js","screens/Warehouse/index.js","screens/AbandonedCart/cart_details.js","screens/AbandonedCart/index.js","screens/PriceUpload/index.js","screens/MasterCountries/index.js","screens/DailyMetalPrice/index.js","screens/PriceLogs/index.js","utils/imageUpload.js","screens/ImageUpload/index.js","screens/CmsComponent/style.js","screens/CmsComponent/components/styles.js","screens/CmsComponent/components/TableHeadComp.js","screens/CmsComponent/components/bannerCMS.js","graphql/cmsQuery.js","screens/CmsComponent/components/storeLocatorCMS.js","screens/CmsComponent/components/richTextEditor.js","screens/CmsComponent/components/titleDescriptionCMS.js","screens/CmsComponent/components/queryFormCMS.js","screens/CmsComponent/components/slidingImageCardCMS.js","screens/CmsComponent/components/customCareerBannerCMS.js","screens/CmsComponent/components/customCareerCardCMS.js","screens/CmsComponent/components/customCollectionHeaderCMS.js","screens/CmsComponent/components/customCollectionCardsCMS.js","screens/CmsComponent/components/customNewsCMS.js","screens/CmsComponent/components/spclTitleDescrCMS.js","screens/CmsComponent/components/bookYourAppointmentCMS.js","screens/CmsComponent/components/testimonialCMS.js","screens/CmsComponent/components/aboutCollectionCMS.js","screens/CmsComponent/components/titleCompCMS.js","screens/CmsComponent/components/titleWithDescription.js","screens/CmsComponent/components/customAdvertisementCMS.js","screens/CmsComponent/components/experienceBannerCMS.js","screens/CmsComponent/components/experienceCardCMS.js","screens/CmsComponent/components/experienceTableCards.js","screens/CmsComponent/components/storeLocatorDetailsCMS.js","screens/CmsComponent/cmsComponent.js","screens/CategoryList/components/editpage/editcategory.js","screens/CategoryList/components/newmaterial/columns.js","screens/CategoryList/components/newmaterial/filterandsearch.js","screens/CategoryList/components/newmaterial/SortHeader.js","screens/CategoryList/components/newmaterial/ProductTable.js","screens/CategoryList/components/newmaterial/newmaterial.js","screens/cms/cmshome.js","screens/cms/silverbanner/components/silverlandingpage.js","screens/cms/silverbanner/components/silverlistingpage.js","screens/cms/silverbanner/components/specificListPages.js","screens/cms/silverbanner/components/silverbottmpage.js","screens/cms/silverbanner/components/silverlistingroutingpage.js","screens/cms/silverbanner/silverbanner.js","screens/cms/silverbanner/silverListingBanner/silverListingBanner.js","screens/ProductEdit/CreateVariant.js","screens/ProductEdit/Components/columns.js","screens/ProductEdit/Components/SortHeader.js","screens/ProductEdit/Components/EditDiamond/EditDiamond.js","screens/ProductEdit/DiamondDetails.js","screens/ProductEdit/Components/EditGemstone/EditGemstone.js","screens/ProductEdit/GemstoneDetails.js","screens/ProductEdit/Components/Mastercontent/Mastercontent.js","screens/ProductEdit/Pricedetails.js","screens/ProductEdit/Productimages.js","screens/ProductEdit/Components/EditPrice/EditPrice.js","screens/ProductEdit/Skupricing.js","screens/ProductEdit/Variants.js","screens/ProductEdit/ProductAttributes.js","routes/route.js","components/SideBar/styles.js","components/SideBar/index.js","components/PrimaryAppBar/styles.js","components/PrimaryAppBar/index.js","routes/PrivateRoute.js","routes/index.js","App.Alert.js","App.js","serviceWorker.js","index.js"],"names":["makeStyles","theme","card","width","padding","spacing","marginTop","buttonPadding","marginLeft","media","height","paddingTop","expand","transform","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","chip","color","palette","success","contrastText","main","pendingchip","secondary","useStyles","root","display","alignItems","justifyContent","flexGrow","flexShrink","borderRadius","shape","lineHeight","fontSize","minWidth","whiteSpace","rounded","Label","props","_clsx","className","variant","children","style","rest","Object","objectWithoutProperties","_excluded","classes","rootClassName","clsx","defineProperty","finalStyle","objectSpread2","border","concat","react_default","a","createElement","Typography","assign","defaultProps","colors","grey","API_URL","APP_URL","GRAPHQL_DEV_CLIENT","StyledBreadcrumb","withStyles","fontWeight","typography","fontWeightRegular","&:hover, &:focus","&:active","boxShadow","shadows","emphasize","Chip","CustomizedBreadcrumbs","Breadcrumbs","aria-label","component","href","label","name","icon","ArrowBackIos_default","PRODUCTCATEGORY","gql","_templateObject","taggedTemplateLiteral","PRODUCTFILTERMASTER","_templateObject2","VENDORLISTS","_templateObject3","_templateObject5","TaxList","_templateObject6","MASTERMATERIAL","MASTERMATERIALCOLORS","MASTERPRODUCTPURITIES","DESIGNMASTER","COLLECTIONMASTER","OCCASSIONSMASTER","STYLEMASTER","THEMEMASTER","DIAMONDMASTER","PAYMENTSTATUSMASTER","DIAMONDSETTINGS","DIAMONDSHAPES","MASTERPRODUCTTYPES","MASTERCATEGORIES","MASTERPAGES","GOLDPRICESETUPMASTER","EARRINGBACKING","MASTERSTONES","MASTERCOUNTRIES","SHIPPINGCHARGES","ACTIVESHIPPINGZONES","SHIPPINGZONES","MASTERSTONECOLORS","MASTERWEIGHTS","MASTERSTONESHAPES","MASTERATTRIBUTES","MASTERGEMSETTINGS","MASTERGEMSHAPES","MASTERGEMTYPES","MASTERGENDER","SEOPRIORITIES","GOLDPRICELIST","_templateObject7","DIAMONDMARKUP","_templateObject8","DIAMONDPRICELIST","_templateObject9","CATGORYLIST","_templateObject10","MATERIALMASTER","_templateObject11","_templateObject12","SALEDISCOUNTS","_templateObject13","_templateObject14","VOUCHERDISCOUNTS","_templateObject15","METALMASTER","_templateObject16","MAKINGCHARGEPRICELIST","_templateObject17","GEMPRICELIST","_templateObject18","VOUCHERSTATUSEDIT","_templateObject19","_templateObject20","_templateObject21","DISCOUNTSTATUSEDIT","_templateObject22","DELETEMARKUPPRICE","_templateObject23","DELETEGOLDPRICE","_templateObject24","DELETESALEDISCOUNT","_templateObject25","DELETEVOUCHERDISCOUNT","_templateObject26","DELETEMAKINGCHARGE","_templateObject27","DELETEGEMCHARGE","_templateObject28","DELETEDIAMONDCHARGE","_templateObject29","PRODUCTDIAMONDTYPES","PRODUCTEDIT","_templateObject30","ALLMASTERRINGSIZE","HOLIDAYLIST","_templateObject31","WAREHOUSELIST","_templateObject32","INVENTORYLIST","_templateObject33","VALIDATEGENERATEDSKU","_templateObject34","STOCKSTATUS","_templateObject35","VERIFYTAGNO","_templateObject36","ALLSPECIFICLISTINGPAGE","CREATESPECIFICLISTINGPAGE","IMAGEDELETE","_templateObject37","ABANDONEDCART","_templateObject38","CARTBYID","_templateObject39","DELETESILVERLANDINGBANNER","ALLFEATUREDPRODUCT","ALLNEWARRIVALPRODUCT","MUTATE_STATUS","GETORDERCOMMUNICATIONLOGS","FILTER_APPOINTEMENTS","_templateObject40","ALL_APPOINTMENTS_TIMESLOT","appointmentDateId","appointmentTypeId","_templateObject41","CHECK_TIMESLOT","_templateObject42","APPOINTMENTS_TYPE","SHOW_APPOINMENT_DETAILS","_templateObject43","SHOW_ALL_PPOINMENT_DETAILS","_templateObject44","PRICE_RUN_LOGS","_templateObject45","ORDERS","queries_templateObject","queries_templateObject2","queries_templateObject3","VOUCHERMASTER","queries_templateObject4","queries_templateObject5","SHIPPINGMASTER","TAXMASTER","productCategory","query","mapper","response","category","allMasterProductCategories","nodes","map","_","value","id","product_type","allMasterProductTypes","shortCode","title","material","allMasterMaterials","gender","allMasterGenders","vendorcode","allMasterVendors","diamondsettings","allMasterDiamondsSettings","diamondshapes","allMasterDiamondsShapes","themes","allMasterThemes","themeName","styles","allMasterStyles","styleName","occasions","allMasterOccasions","occassionName","collections","allMasterCollections","collectionName","gemstonecolor","allMasterStonesColors","stonecolor","stones","allMasterStones","stonecount","metalcolour","allMasterMetalsColors","productColor","metalpurity","allMasterMetalsPurities","purity","diamondcolors","allMasterDiamondsColors","diamondclarities","allMasterDiamondClarities","productseries","allProductLists","productSeries","gemstontypes","allMasterGemstonesTypes","gemstonshapes","allMasterGemstonesShapes","alias","gemstonesettings","allMasterGemstonesSettings","earringbacking","allMasterEarringBackings","diamondtypes","allMasterDiamondTypes","diamondColor","diamondClarity","hashtags","allMasterHashTags","metals","apidata","materialMaster","materials","vendors","product_categories","product_types","pricing_components","allMasterPricingComponents","purities","occations","diamondtype","initialNetworkCtx","networkCtx","status","called","data","loading","error","parsedData","notRequested","setNetworkCtx","sendNetworkRequest","_ref","asyncToGenerator","regenerator_default","mark","_callee","url","params","auth","method","headers","resdata","token","_args","arguments","wrap","_context","prev","next","length","undefined","console","info","Content-Type","Access-Control-Allow-Origin","localStorage","getItem","fetch","body","isString","JSON","stringify","sent","json","abrupt","stop","_x","_x2","_x3","apply","this","NetworkContext","React","createContext","NetworkProvider","Consumer","_React$useState","useState","_React$useState2","slicedToArray","Provider","DownloadCsv","_useState","_useState2","loader","setLoader","_useState3","_useState4","showdownload","setShowDownload","_useState5","keyCSV","valueCSV","_useState6","dataCSV","setDataCSV","useContext","fetchCSVdata","event","done","responseCSV","responseData","keyData","_i","_Object$entries","_Object$entries$_i","key","res_json","statuscode","entries","push","Fragment","Button","disabled","marginRight","CircularProgress","size","react_csv","header","filename","onClick","textDecoration","flexDirection","drawer","maxWidth","buttonIcon","content","contentSection","contentSectionHeader","cursor","contentSectionContent","formGroup","fieldGroup","field","marginBottom","addButton","tags","minAmount","maxAmount","radioGroup","actions","& > * + *","Filter","open","onClose","masters","onFilter","Filter_excluded","initialValues","company","mobile","city","version","commodity","values","setValues","handleoptionchange","type","Drawer","anchor","paper","onSubmit","preventDefault","Close_default","Grid","container","xs","Autocomplete","options","margin","fullWidth","product_category","getOptionLabel","option","onChange","renderInput","TextField","item","DeleteOutlined_default","search","searchIcon","searchInput","searchButton","Search","onSearch","Search_excluded","searchcontent","setSearchcontent","Paper","elevation","Search_default","Input_Input","disableUnderline","placeholder","e","target","AlertProps","vertical","top","bottom","horizontal","left","right","center","severity","warning","AlertContext","msg","onclose","setSnack","Transition","forwardRef","ref","Slide","direction","FullCSVData","setOpen","_React$useState3","_React$useState4","setOptions","_React$useState5","_React$useState6","_React$useState7","_React$useState8","productType","setProductType","_React$useState9","_React$useState10","include","setInclude","client","useApolloClient","snack","handleClose","useEffect","FullCSVData_templateObject","then","res","filter","i","catch","err","Dialog","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControlLabel","control","Switch","checked","DialogActions","exportFromJSON","fileName","exportType","flexWrap","flexBasis","filterButton","filterIcon","ProductFilter","ProductFilter_excluded","openFilter","setOpenFilter","components_Search_Search","window","location","pathname","downloadcsv","components_FullCSVData","FilterList_default","components_Filter_Filter","Alert","Alert_Alert","Alerts","reason","Snackbar","anchorOrigin","autoHideDuration","components_Alert_Alert","imagecontainer","& > *","table","tableWrapper","overflowX","link","link_style","TableBodyRow","_ref$tableData","tableData","_ref$rowData","rowData","_ref$rowIndex","rowIndex","_ref$handleViewStores","handleViewStores","_ref$handleDelete","handleDelete","_ref$handleEdit","handleEdit","TableRow","val","TableCell","customWidth","lineBreak","parse","_data$rowData","alt","src","gap","Edit_default","Delete_default","paddingBottom","getComponent","TableComp","_ref$header","_ref$data","Table","borderColor","stickyHeader","TableHead","TableBody","index","Table_TableBodyRow","useStyles2","FeaturedProuductComponent","allFeaturedProudct","setAllFeaturedProduct","productId","isActive","createFeaturedProduct","setCreateFeaturedProduct","_styloribannerfetch","opts","fatchvalue","allFeaturedProducts","styloribannerfetch","_ref2","_callee3","ProductId","_context3","variables","reload","onsubmitvalue","_ref3","_callee4","create_featured_Product","_context4","sm","fullwidth","text-align","autoFocus","inputProps","labelPlacement","_val$productListByPro","_val$productListByPro2","_val$productListByPro3","_val$productListByPro4","_val$isActive","productListByProductId","productName","productImagesByProductId","imageUrl","_callee2","_context2","FeaturedProduct","FeaturedProductComponent","allNewArrivalProducts","NewarrivalComponent","columns","CustomerReview","page","setPage","rowsPerPage","setRowsPerPage","allReview","setAllReview","allCustomerReviews","log","handleChangeIsActive","Id","headCell","align","numeric","disablePadding","slice","row","_row$isPublish","_row$isActive","productSku","customerName","rating","message","isPublish","TableFooter","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","Reviewcoponent","globalCtxInitial","globalCtx","loggedIn","userData","sideBarOpen","isExpand","selectedIndex","gqlClient","setGlobalCtx","GlobalContext","GlobalProvider","productuploadCtxInitial","productCtx","product_categoy","steps","productname","description","minOrderQty","maxOrderQty","product_type_shortcode","metalColour","metalpurities","selectedgender","selected_metal_colour","product_gender","sizes","selected_sizes","productSize","masterProductSize","metal","product_code","isactive","gemstonelist","diamondlist","variants","oldproductMetalColor","oldproductMetalPurity","productMetalColor","productMetalPurity","productDiamondColor","productDiamondClarity","productDiamondTypes","productImages","productDiamondTypesArray","oldproductDiamondTypesArray","productmaterials","createVariantList","editVariants","editDiamondLists","editGemstoneLists","productVariantSize","variant_size","gemstonetype","gemstoneshape","gemstonesize","gemstonecount","gemstoneweight","stonetype","isactiveVariant","editleadtime","editreadytoship","editisdefault","editisactive","editcostprice","editsellingprice","editmarkupprice","editdiscountprice","editcostpricetax","editsellingpricetax","editmarkuppricetax","editdiscountpricetax","diamondclarity","diamondcolor","diamondshape","diamondcount","diamondweight","diamonditemname","diamondsubitemname","diamonddescription","gemstoneitemname","gemstonesubitemname","gemstonedescription","metalindex","prod_styles","occassions","stonecolour","product_images","metal_purity","metal_color","metal_weight","diamond_colour","diamond_clarity","metal_height","metal_width","metal_length","metal_object","error_message","showPriceBreakup","masterData","setProductCtx","ProductContext","mapDataToCtx","apiData","mappertype","keys","ProductProvider","materialCtxInitial","materialCtx","setMaterialCtx","MaterialContext","MaterialProvider","setmaterialCtx","voucherCtxInitial","voucherCtx","voucher","attrobj","voucherMaster","setVoucherCtx","VoucherContext","VoucherProvider","orderCtxInitial","orderCtx","orderMaster","orders","setOrderCtx","OrderContext","button","&:hover","text","EnhancedTableHead","order","onSelectAllClick","orderBy","onRequestSort","numSelected","rowCount","sortDirection","TableSortLabel","active","property","visuallyHidden","paddingLeft","paddingRight","highlight","lighten","light","primary","dark","flex","clip","overflow","position","contantview","placeItems","withApollo","useHistory","pageCount","setPageCount","offsetValue","setOffsetValue","setProductlists","_React$useState11","_React$useState12","_React$useState13","_React$useState14","setMastercategories","_React$useState15","_React$useState16","setMasterproducttypes","_React$useState17","_React$useState18","_React$useState19","_React$useState20","editcontent","setEditcontent","_React$useState21","_React$useState22","_React$useState23","_React$useState24","isadd","setIsadd","_React$useState25","_React$useState26","newvendorcode","setNewvendorcode","_React$useState27","action","_React$useState28","btnEdit","setBtnEdit","_addnewvendor","Savevendor","_Savevendor","refetch","isedit","onCancel","handleInputChange","_React$useState29","_React$useState30","setOrder","_React$useState31","_React$useState32","setOrderBy","fetchPolicy","getproductlist","_x4","_x5","_x6","_x7","_x8","_getproductlist","searchtext","productcategory","producttype","pagesize","offsetvalue","sort","orderby","bodydata","offset","products","rows","addnewvendor","isAsc","react_components_esm","onCompleted","totalCount","Veiw","Offset","contentEditable","taxValue","hsnNumber","dist_default","format","Date","Save_default","CancelOutlined_default","scope","address","gstNo","vendorDelivaryDays","createdAt","vendordata","pincode","SelectProps","native","parseInt","process","REACT_APP_GA_MEASUREMENT_ID","Page","Page_excluded","divider","& + &","cardcontent","selectedOption","optionRadio","optionDetails","AttributeComponent","AttributesComponent_excluded","_React$useContext","attributes","setAttrobj","isgold","setIsgold","isdiamond","setIsdiamond","_useState7","_useState8","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","handleoptionChange","elements_arr","forEach","element","indexOf","Card","fixedTag","shiprates","selectedrate","renderTags","getTagProps","multiple","components","textAlign","onAdded","results","Addshippingattributes","withRouter","history","rateid","setRateid","setMasters","setSelectedrate","selectedattr","setSelectedattr","isloaded","setIsloaded","_updateattributes","taxcontent","displaytext","reqbody","display_text","_getmastervalues","ratevalue","allShippingCharges","attr","categories","productAttributes","selectedcategory","catobj","prod_id","split","getmastervalues","AttributesComponent","attrs","display_arr","alias_arr","valueobj","join","updateattributes","aboutvoucher","AttributesComponent_AttributesComponent_excluded","Addtaxattributes","allMasterTaxSettings","AttributesComponent_AttributesComponent","Header","Header_excluded","justify","autoComplete","onAdd","inner","Results","Results_excluded","orange","green","CardHeader","Divider","CardContent","CardActions","Categorycontent","setOrders","setSearchtext","uuid","created_at","customer","payment","total","currency","components_Header_Header","components_Results_Results","progress","CategoryList","_useQuery","useQuery","MaterialContext_MaterialProvider","Configuration","master_options_url","lg","Link","underline","RouterLink","to","General","General_excluded","first_name","last_name","email","isemailverified","components_Label_Label","ismobileverified","registerPlugin","FilePondPluginImageExifOrientation","FilePondPluginImagePreview","helperText","author","applyButton","white","EditContent","diamond","onApply","EditContent_excluded","showpreview","setShowpreview","previewurl","_uploadimagetoserver","bodaydata","keyvalue","uploadtype","imagename","responsedata","returnData","signedRequest","filepathname","imageurl","previmagenames","previmages","moment","image","fileExtension","foldername","product_id","filepath","axios","put","file","gutterBottom","columnname","index_es","class","mainSrc","onCloseRequest","onMovePrevRequest","alert","onMoveNextRequest","mastervaluekey","defaultkey","controllabel","AvatarGroup","max","Avatar","small","react_filepond","oninit","labelIdle","onaddfile","fileItem","uploadimagetoserver","masterlist","setMasterlist","openedit","setOpenedit","editEmail","setEditEmail","aliasName","setaliasName","_React$useState33","_React$useState34","onCreate","Array","prototype","insert","splice","setpreviewurl","_React$useState35","_React$useState36","_React$useState37","_React$useState38","toLowerCase","fxSyncAPI","button_title","sort_id","filterOrder","prefix","components_EnhancedTableHead_EnhancedTableHead","Badge","overlap","badgeContent","HighlightOff_default","newimages","removeimage","onPermissionadd","components_EditContent_EditContent","editemail","tabs","background","borderRight","master_options","Customerdetails","setCustomer","user_id","_getmaster","userinfo","userprofile","getmaster","components_General_General","match","_match$params","tab","find","t","Input","_props$isNumber","isNumber","pattern","maxLength","minLength","Input_excluded","onKeyPress","which","input-label","textOverflow","input","&::placeholder","Dashboard_","Container","components_Input_Input","Component","Dashboard","DiscountList_components_Header_Header_excluded","ConformationAlert","isshow","dividers","DialogContentText","onSuccess","positivebtn","components_Results_Results_excluded","isconformation","setIsconformation","deleteid","handledelete","_handledelete","datacontent","elementId","mutate","mutation","hidedeleteconformation","_handledelete2","handleChange","voucherid","_handlestatusChange","handlestatusChange","discountId","tablecolumns","allSaleDiscounts","negativebtn","discountName","discountType","discountValue","productAttributesText","Visibility_default","colimns","DiscountList","addcategory","DiscountList_components_Header_Header","DiscountList_components_Results_Results","Earringbacking","mastervalue","setMastervalue","filtervalue","setFiltervalue","_createtax","_search","filteredHomes","x","Mastercontent","Goldpriceupdate","mastervendors","setMastervendors","cost_price","selling_price","goldprice","setGoldprice","defaultpurity","setDefaultpurity","purityprices","setPurityprices","puritysellingprices","setPuritysellingprices","defaultmetal","setDefaultmetal","pricetype","setPricetype","selectedvendors","setSelectedvendors","setMaterials","masterpurities","setMasterpurities","ispricecalculated","setIspricecalculated","_updateprice","bodycondent","costprices","sellingprices","vendorobj","vendorid","sellingpricejson","handlesellingPriceChange","disableClearable","pricejson","goldpurity","sellingprice","parseFloat","priceratio","goldprice_val","goldsellingprice_val","purityname","CREATE_HOLIDAY","mutation_templateObject","UPDATE_HOLIDAY","mutation_templateObject2","DELETE_HOLIDAY","mutation_templateObject3","CREATE_WAREHOUSE","mutation_templateObject4","UPDATE_WAREHOUSE","mutation_templateObject5","DELETE_WAREHOUSE","mutation_templateObject6","CREATE_INVENTORY","mutation_templateObject7","UPDATE_INVENTORY","mutation_templateObject8","DELETE_INVENTORY","mutation_templateObject9","UPDATE_ORDER","mutation_templateObject10","CREATE_APPOINTMENT_DATE","mutation_templateObject11","CREATE_APPOINTMENT_TIME","mutation_templateObject12","DELETE_APPOINTMENT_TIME","mutation_templateObject13","DELETE_APPOINTMENT_DATE","mutation_templateObject14","closeButton","inputField","HolidayModal","disableTypography","IconButton","holiday","editItem","useUtils_cfb96ac9","utils","DateFnsUtils","DatePicker","inputVariant","date","handleSave","HolidayManager","_data$allHolidayManag","_data$allHolidayManag2","_data$allHolidayManag3","_data$allHolidayManag4","first","networkStatus","setType","setItem","accept","files","bodyFormData","FormData","set","post","handleUpload","htmlFor","Tooltip","CloudUpload_default","document","setAttribute","click","GetApp_default","AddCircle_default","TableContainer","NetworkStatus","colSpan","LinearProgress","allHolidayManagers","updatedAt","DeleteForever_default","HolidayManager_HolidayModal","__typename","InventoryModal","_data$allWarehouses","setError","required","generatedSku","Boolean","onBlur","_res$data","_res$data$allTransSku","_res$data$allTransSku2","allTransSkuLists","numberOfItems","allWarehouses","getOptionSelected","warehouse","InputProps","endAdornment","iconButton","& .MuiOutlinedInput-root","StockStatus","_item$inventoriesByWa","_item$inventoriesByWa2","_item$inventoriesByWa3","inventoriesByWarehouseId","aggregates","sum","disableRipple","setWarehouse","Store_default","Inventory","_filter","_data$allInventories","_data$allInventories2","_data$allInventories3","_data$allInventories4","setSearch","_useQuery2","includesInsensitive","startAdornment","InputAdornment","Inventory_StockStatus","allInventories","Inventory_InventoryModal","newValue","warehouseId","buildGradient","start","end","gradients","blue","indigo","validate","require","schema","presence","allowEmpty","password","borderTopRightRadius","borderBottomRightRadius","breakpoints","down","backgroundImage","loginForm","person","fields","submitButton","LoginForm_excluded","_React$useContext2","isValid","touched","errors","formState","setFormState","showmessage","setShowmessage","persist","handleSubmit","signinobj","pageaccess","pages","pagepermissions","accessToken","pageurl","is_write","hasError","LoginForm_Alert","Login","_React$Component","inherits","_super","createSuper","classCallCheck","createClass","components_LoginForm_LoginForm","Manageadminusers","masterroles","setMasterroles","roles","username","_getmasterroles","adminusers","users","userobj","rolesnames","user_roles","userroleobj","roleobj","master_role","getmasterroles","SheduleModal","_props$date","minDate","datecard","available","availableTitle","time","notchedOutline","day","backdrop","zIndex","SheduleModalShow","_props$timeValue$star","_props$timeValue","_props$timeValue$endT","_props$timeValue2","appointmentTypes","getTime","_x$split","_x$split2","hour","minute","second","d","setHours","setMinutes","setSeconds","close","Backdrop","Select","labelId","defaultValue","filterType","MenuItem","timing","deleteTime","DeleteOutline","startTime","endTime","TimePicker","timeValue","handleTimeValue","handleSubmitTime","endDate","deleteDate","ManageShedule","setAppointmentDateId","setLoading","modalloading","setModalLoading","setDate","appointmentDate","setAppointmentDate","setAppointmentTypes","appointmentSlots","setAppointmentSlots","openAppointmentTime","setOpenAppointmentTime","showTime","setShowTime","setTimeValue","startOf","endOf","filterDate","setFilterDate","borderTop","calenderCard","& .MuiOutlinedInput-input","closedCard","GetAllAppointmentTypes","FilterDates","CheckAppointment","startDate","_res$data$allAppointm","allAppointmentDateTimeSlots","GetAllAppointment_TimeSlots","_ref4","loc","source","_ref5","_callee5","_context5","allAppointmentTypeMasters","_ref6","_callee6","_context6","CheckTimeslot","_ref7","_callee7","_context7","_res$data2","_res$data2$allAppoint","_ref8","_callee8","_context8","startDateTime","endDateTime","_x9","_ref9","_callee9","_context9","_x10","_ref10","_callee10","_context10","_x11","handleDateChange","_ref11","_callee11","_context11","_x12","_ref12","_callee12","_context12","allAppointmentDates","_x13","_x14","FilterTimeSlotes","views","Box","isSameOrAfter","shedulemodalshow","shedulemodal","fitltercontent","seacrchtext","filtercontent","setFiltercontent","_React$createElement","totalcount","onPagechange","onPagesizechange","Manageusers","setTotalcount","bodycontent","setBodycontent","_changepageoffset","_changepagesize","Manageusers_Mastercontent","select","& .MuiInputBase-root","filterData","Manageappoinment","_data$allAppointments","_data$allAppointments2","setStartDate","setEndDate","isNull","appointmentFilter","setAppointmentFilter","selectedStatus","setSelectedStatus","selectedType","setSelectedType","limit","appointment_filter","order_by","allAppointments","appointmentDateTimeSlotBySlotId","appointmentDateByAppointmentDateId","greaterThanOrEqualTo","lessThanOrEqualTo","ActionIcon","tConvert","toString","or","KeyboardButtonProps","autoOk","equalTo","_row$id","_row$customerName","_row$email","_row$mobile","_row$appointmentDateT","_row$appointmentDateT2","_row$appointmentDateT3","_row$appointmentDateT4","_row$appointmentDateT5","_row$appointmentDateT6","_row$type$name","_row$type","_row$status","onPageChange","other","Addmarkup_excluded","MuiDialogContent","MuiDialogActions","Addmarkup","markup","setMarkup","handleinputChange","actionclose","Addmarkup_DialogTitle","Addmarkup_DialogContent","readOnly","materiallist","puritylist","Addmarkup_DialogActions","actionSave","cardroot","editmarkup","setEditmarkup","setGoldpricelist","setDeleteid","setIsdelete","pricecomponent","setPriceomponent","updatemarkup","_updatemarkup","markupcontent","material_list","purity_list","sellpricemin","sellpricemax","markuptype","_handleSave","column","allPricingMarkups","vendorCode","producttypes","heading","sellingPriceMin","sellingPriceMax","markupType","helperinput","markupValue","diamondData","markupid","editdiamond","setEditdiamond","allDiamondPriceSettings","diamondColour","costPrice","sellingPrice","sellingPriceType","descendingComparator","b","allGemstonePriceSettings","array","comparator","stabilizedThis","el","stableSort","getComparator","gemstoneType","weightStart","weightEnd","price","useStyle","allMakingChargeSettings","Markupprice","categorylist","setCategorylist","setProducttypes","setMateriallist","setPuritylist","Product","vendor","Masterattribute","_Masterattribute","allAttributeMasters","Mastercategories","Mastercollections_components_Results_Results_excluded","Mastercollections","Masterdesigns_components_Results_Results_excluded","Masterdesigns","allMasterDesigns","Masterdiamonds","Masterdiamondsettings","Masterdiamondshapes","Mastergemsettings_components_Results_Results_excluded","Mastergemsettings","Mastergemshapes_components_Results_Results_excluded","Mastergemshapes","Mastergemtypes_components_Results_Results_excluded","Mastergemtypes","Mastergenders_components_Results_Results_excluded","Mastergenders","Mastermetalcolors","Masteroccassions","Masterorderstatus","allOrderStatusMasters","Masterpaymentstatus","allPaymentStatusMasters","Masterproducttypes","Masterpurities_components_Results_Results_excluded","Masterpurities","form","formControl","formControlLabel","permissions","setPermissions","updateread","permission_id","permissonobj","isopen","pagecontent","displayname","Checkbox","isview","iswrite","onSave","role_id","Masterroles","isshowpermissions","setIsshowpermissions","masterpages","setMasterpages","editroleid","setEditroleid","editpermissons","setEditpermissions","allUniquepages","_showpermissions","rowcontent","_updatepermissions","components_Addpermissions_Addpermissions","Masterscreens","_x$name","_x$name2","Masterstonecolors","Masterstones","Masterstoneshapes","allMasterStonesShapes","Masterstyles_components_Results_Results_excluded","Masterstyles","Masterthemes_components_Results_Results_excluded","Masterthemes","Masterweights","allMasterWeights","Materialmaster","getGiftMessage","giftFrom","giftTo","getPaymentStatus","paymentMode","paymentStatus","paymentResponse","payment_response","APTRANSACTIONID","MESSAGE","TRANSACTIONPAYMENTSTATUS","defaultColumns","Order ID","is_active","is_default","identifier","Order Date","Customer Name","SKUs","Email","Phone Number","Shipping Address","Gift Message","Order Status","Payment Mode","Payment Status","Waybill No","Comments","Actions","OrderList","_data$allOrders","_data$allOrders2","userProfileId","columnName","setColumnName","orderFilter","setOrderFilter","paymentMaster","setMasterData","orderStatus","fromDate","setFromDate","ToDate","setToDate","anchorEl","setAnchorEl","OrderList_templateObject","toConsumableArray","order_filter","allOrders","_item$shoppingCartByC","_item$shoppingCartByC2","_item$shoppingCartByC3","_item$shoppingCartByC4","_item$shoppingCartByC5","_item$shoppingCartByC6","_item$shoppingCartByC7","_item$shoppingCartByC8","_item$shoppingCartByC9","_item$shoppingCartByC10","_item$shoppingCartByC11","_item$shoppingCartByC12","_item$shoppingCartByC13","_item$shoppingCartByC14","_item$shoppingCartByC15","_item$shoppingCartByC16","_item$shoppingCartByC17","_item$paymentDetailsB","_item$paymentDetailsB2","_item$paymentDetailsB3","_item$smsDeliveredId","order_date","shoppingCartByCartId","shoppingCartItemsByShoppingCartId","_i$transSkuListByProd","transSkuListByProductSku","customer_name","cartAddressesByCartId","firstname","userProfileByUserprofileId","phone_number","contactNumber","shipping_address","addressline1","addressline2","state","gift_message","payment_mode","order_status","payment_status","paymentDetailsByOrderId","emailMessageId","smsDeliveredId","replace","waybill","awbNumber","comments","some","disableFuture","currentTarget","ViewColumn_default","Menu","PaperProps","_columnName$item","_columnName$column","OrderList_ActionIcon","toolbar","deleteButton","deleteIcon","OrderManagementDetails_components_Header_Header_excluded","OrderInfo","OrderInfo_excluded","paymentstatus","setPaymentstatus","orderstatus","setOrderstatus","errorMsg","setErrorMsg","waybillNum","updateOrder","setUpdateOrder","setCommunicationLogs","_updateOrder$comments","_order$awb_number","_order$payment_status","_order$order_status","_order$comments","awb_number","getOrderCommunicationLogs","_fatchvalue$data$orde","_fatchvalue$data","_fatchvalue$data$orde2","_fatchvalue$data$orde3","orderById","communicationLogsByOrderId","sendEmail","order_id","user_profile","shopping_cart","cart_addresses","country","contact_number","discounted_price","giftwraps","_updateOrder$comments2","_updateOrder$waybillN","_updateOrder$comments3","OrderItems","OrderItems_excluded","lib_default","shopping_cart_items","product_sku","qty","inner_card","image_container","product_image","objectFit","text_heading","text_content","final_total_text","OrderDetails","OrderDetails_excluded","md","trans_sku_list","sku_weight","diamond_type","Math","round","discount_price","markup_price","discount","gross_amount","OrderManagementDetails","productDetails","setProductDetails","communicationLogs","_fetchorderdetails","product_detail","com_id","fetchorderdetails","OrderManagementDetails_components_Header_Header","xl","components_OrderInfo_OrderInfo","components_OrderItems_OrderItems","components_OrderDetails_OrderDetails","senderResponseId","messageType","AppointmentInfo","_order$allAppointment","_order$allAppointment2","_order$allAppointment3","_order$allAppointment4","_order$allAppointment5","_order$allAppointment6","_order$allAppointment7","_order$allAppointment8","_order$allAppointment9","_order$allAppointment10","_order$allAppointment11","_order$allAppointment12","_order$allAppointment13","_order$allAppointment14","_order$allAppointment15","_order$allAppointment16","_order$allAppointment17","_order$allAppointment18","_order$allAppointment19","_order$allAppointment20","_order$allAppointment21","_order$allAppointment22","_order$allAppointment23","_order$allAppointment24","_order$allAppointment25","_order$allAppointment26","_order$allAppointment27","_order$allAppointment28","_order$allAppointment29","_order$allAppointment30","_order$allAppointment31","_order$allAppointment32","_order$allAppointment33","_order$allAppointment34","_order$allAppointment35","_order$allAppointment36","_order$allAppointment37","_order$allAppointment38","_order$allAppointment39","_order$allAppointment40","_order$allAppointment41","_order$allAppointment42","_order$allAppointment43","_order$allAppointment44","_order$allAppointment45","_order$allAppointment46","_order$allAppointment47","_order$allAppointment48","AppointmentInfo_excluded","textTransform","metalType","Radio","isOnline","isItRequired","areMoreMembersJoining","overflowWrap","specialRequests","AppointmentExtra","AppointmentExtra_excluded","selected","setSelected","meetingLink","setmeetingLink","handleMeeting","handleSelect","appointment_id","meeting_link","AppointmentManagementDetails","_fatchvalue$data$appo","_fatchvalue$data$appo2","_fatchvalue$data$appo3","appointmentById","appointmentCommunicationLogsByAppointmentId","notifyOnNetworkStatusChange","components_AppointmentInfo","components_AppointmentExtra","_val$senderResponseId","_val$communicationTyp","_val$type","communicationType","_val$senderResponseId2","_val$communicationTyp2","_val$type2","Priceupdate_components_Results_Results_excluded","setStatus","_handlestatus","pricingrows","update","handleAdd","handlestatus","Refresh_default","resumeupdate","handleupdate","downloadlog","makeid","couponcount","codes","codelength","result","characters","charactersLength","generatecode","generatedcount","charAt","floor","random","toUpperCase","metaloption","selectedOptiondefault","common","optionmaterialDetails","selectedtext","AboutVoucher","AboutVoucher_excluded","productids","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","formData","setFormData","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","isdisabled","vendorlist","vendorsarray","producttypelist","FullLoader","PriceupdateContent","setProducts","setCategories","setVendors","startrun","setStartrun","_updateprices","req_product_id","_rerun","history_id","update_products","pricingcomponent","_filterapllied","filterdata","_downloadlog","Fullloader","components_AboutVoucher_AboutVoucher","Priceupdate_components_Results_Results","Priceupdate","productlists","showproductdetails","_showproductdetails","productid","filterparams","categoryname","Products_Product_EnhancedTableHead","_row$trans_sku_lists","trans_sku_lists","sku_id","product_name","vendor_code","appBar","textarea","resize","errorTable","LinearProgressWithLabel","mr","ChooseWareHouse","_data$allWarehouses$n","ProductSync","action_type","sync_url","new_tagno","setData","setProgress","errorTagNo","setErrorTagNo","validatedTagNo","setValidatedTagNo","backDrop","setBackDrop","_event$target","socket","socketIOClient","on","completed","timeElapsed","fullScreen","AppBar","Toolbar","edge","errorStatus","tagno","isEmpty","startIcon","AssignmentTurnedInOutlined_default","Product_lists","Sync_default","FormControl","RadioGroup","ProductSync_ChooseWareHouse","ChipInput_default","_data$list","_data$list2","list","onDelete","newChipKeyCodes","newChipKeys","rowSpan","borderBottom","tooltip","arrow","download","CloudDownload_default","Productlist","setFilterparams","components_ProductFilter_ProductFilter","filterobj","Products_Product","Productlist_ProductSync","dropdownlayout","& .menu","& .MuiFormHelperText-root","fieldHint","dateField","AddressForm","initailRingSize","updateRingSize","AddressForm_excluded","allMasterRingsSizes","handleTextChange","_objectSpread4","test","material_names","_objectSpread9","handleMaterialChange","_objectSpread8","sizeValue","handleGenderChange","productvendorcode","vendorleadtime","InputLabelProps","shrink","FormLabel","isreorderable","default_metal_colour","default_metal_purity","freeSolo","default_size","PlaceholderText","styled","Text","placeholderUp","pointerEvents","placeholderzindex","isDisabled","SelectContainer","View","selectzindex","SelectView","react_select_browser_esm","isClearable","PaymentForm","PaymentForm_excluded","includes","gempapper","leftIcon","rightIcon","iconSmall","Review","useTheme","useRef","Review_excluded","editmaterial","metalobj","indexval","clearmetalvalue","metalname","settings","clarity","weight","handleClick","metalsarr","stonedetails","isvalid","deletematerial","valueContainer","chipFocused","noOptionsMessage","singleValue","selectEmpty","createData","calories","fat","carbs","protein","Step4_excluded","default_metal_size","Step5_excluded","FilePondPluginImageValidateSize","FilePondPluginFileRename","img","setMetalcolour","imageposition","imagecolor","prodimages","prodid","imagecolourobj","imagecount","imageobj","_imageobj","image_url","unshift","allowImageValidateSize","imageValidateSizeMinWidth","imageValidateSizeMinHeight","imageValidateSizeMeasure","Promise","resolve","reject","allowMultiple","onupdatefiles","onremovefile","fileRenameFunction","extension","Plot","createPlotlyComponent","Plotly","createPlotlyRenderers","_paper","layout","up","stepper","buttons","nested","Productupload","activeStep","setActiveStep","failure","setSuccess","handleNext","error_content","formdata","sleep","_sleep","millis","setTimeout","Stepper","Step","StepLabel","step","Review_Review","Step5_Review","Step4_Review","Step6_Review","Step7_Review","Error","getStepContent","ProductuploadContext_ProductProvider","Component_Productupload","black","blueGrey","default","h1","letterSpacing","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","caption","overline","overrides","MuiButton","contained","MuiIconButton","MuiPaper","elevation1","MuiTableCell","MuiTableHead","MuiTypography","createMuiTheme","Salediscount_components_Results_Results_excluded","Create_default","AboutVoucher_AboutVoucher_excluded","discountobj","setDiscountobj","discountname","discounttitle","componenets","ButtonGroup","optionvalue","discounttype","discountvalue","VoucherComponent","VoucherComponent_excluded","Viewsku_excluded","productcontent","errorchip","textColor","Viewsku","Viewsku_DialogTitle","Viewsku_DialogContent","generated_sku","Viewsku_DialogActions","Products","Products_excluded","selectskus","Salediscountcontent","skus","setSkus","isloading","setIsloading","productattr","setProductattr","productattrtext","setProductattrtext","errorskus","setErrorskus","isshowpriceupdate","setIsshowpriceupdate","statusmessage","setStatusmessage","titlecontent","setTitlecontent","discount_id","setDiscount_id","loadingtitle","setLoadingtitle","_useState27","_useState28","attributeobj","setAttributeobj","snackMessage","_getdiscountvalue","comparr","discountid","discunt","comp","product_ids","discount_name","discount_value","discount_type","discount_title","skucount","displaycomp","product_attributes","allkeys","_creatediscount","ispricerun","skuarray","sku_content","updatediscount","discount_count","product_attributes_text","eror_skus","getdiscountvalue","Salediscountcontent_Alert","components_VoucherComponent_VoucherComponent","componentsstring","filterapllied","components_Products_Products","Salediscount_components_AboutVoucher_AboutVoucher","discountcontent","creatediscount","Salediscount","VoucherContext_VoucherProvider","Seopriority_components_Results_Results_excluded","Seopriority","allSeoUrlPriorities","attributeName","attributeValue","priority","seoUrl","seoText","Shipmentsettings","zones","allShippingZones","ranges","shipmentcharges","shipobj","rangeFrom","rangeTo","shipmentCharge","isCart","shippingZoneByZoneId","chargeType","Shippingattributes","displayAttributes","Attributescontent","Shippingzones","mastercountries","setMastercountries","_getmastercountries","allMasterCountries","countries","countrydefault","shippingcharges","shippingZoneCountriesByZoneId","countryobj","masterCountryByCountryId","shippingChargesByZoneId","zoneobj","charges","zonecountry","getmastercountries","Taxsettings","taxName","Attributescontent_Attributescontent","Taxsetup","Invoices","Useraddresses_components_Results_Results_excluded","setInvoices","invoice","Useraddresses","addressess","Useraddresses_components_Results_Results","addressbook","Userconfiguration","menu","Userwishlist_components_Results_Results_excluded","Userwishlist","wishlists","Userwishlist_components_Results_Results","Newvendor","Vendorlist","components_Vendor_Vendor","Addmetalprice_excluded","Addmetalprice","metaldata","setMetaldata","Addmetalprice_DialogTitle","Addmetalprice_DialogContent","Addmetalprice_DialogActions","save","metalmaster","setMetalmaster","puritymaster","setPuritymaster","_handleAdd","metalcontent","costprice","priceid","allGoldPriceSettings","selectedsellingPriceType","Adddiamondprice_excluded","diamonddata","setDiamonddata","Adddiamondprice_DialogTitle","Adddiamondprice_DialogContent","diamonds","Adddiamondprice_DialogActions","diamondmaster","setDiamondmaster","Adddiamondprice_Addmetalprice","Addgemstoneprice_excluded","Addgemstoneprice","gemstonedata","setGemstonedata","Addgemstoneprice_DialogTitle","Addgemstoneprice_DialogContent","gems","viewtype","Addgemstoneprice_DialogActions","stonecountcolumns","gemmaster","setGemmaster","editgem","setEditgem","gemlist","setgemlist","diamondcontent","_variables","getgemlist","weightstart","weightend","_getgemlist","ratetype","gemstone_type","weight_start","weight_end","sellprice","selling_price_type","cost_price_id","selling_price_id","deleteids","Addmakingchargeprice_excluded","Addmakingchargeprice","makingcharge","setMakingcharge","Addmakingchargeprice_DialogTitle","Addmakingchargeprice_DialogContent","Addmakingchargeprice_DialogActions","editmc","setEditmc","setMchargelist","add","makingcontent","getmclist","_getmclist","Vendorprice","setVendorcode","setVendorlist","components_Product","components_Diamonds","components_Gemstones","components_Makingcharge","Voucherdiscount_components_Results_Results_excluded","components_AboutVoucher_AboutVoucher_excluded","vouchercode","setVouchercode","vouchercount","setVouchercount","voucherprefix","setVoucherprefix","selectedDate","setSelectedDate","selectedendDate","setSelectedendDate","handlevaluechange","vouchername","vouchercodes","multiline","voucherdescription","isloggedin","handleisloggedin","minimumqty","voucherdiscount","maxvoucherdiscount","isonce","limittouse","minorder","DateTimePicker","startdate","enddate","strictCompareDates","VoucherComponent_VoucherComponent_excluded","Voucherdiscountcontent","setAttributes","setDiscountid","attributesadded","attributedata","voucherobj","discounttypeval","selectedcategories","selectedmaterials","selectedproduct_types","selectedcollections","selectedoccassions","selectedthemes","selectedstyles","matobj","protypeobj","collectionobj","occassionobj","themeobj","styleobj","voucher_codes","isloginneeded","max_discount","max_uses_user","max_uses","discount_amount","min_cart_value","starts_at","expires_at","VoucherdiscountContent_Alert","Voucherdiscount_components_AboutVoucher_AboutVoucher","Voucherdiscount_components_VoucherComponent_VoucherComponent","Voucherdiscount","VoucherdiscountListing_components_Header_Header_excluded","VoucherdiscountListing_components_Results_Results_excluded","voucherId","allVouchers","voucherCodes","code","uses","maxUses","VoucherdiscountListing","VoucherdiscountListing_components_Header_Header","VoucherdiscountListing_components_Results_Results","WarehouseModal","shippingInDays","Warehouse","_data$allWarehouses2","_data$allWarehouses3","Warehouse_WarehouseModal","fieldset","boxSizing","gridArea","legend","font","textfield","inline","CartDetails","_state$data","_state$data$cart","_state$data$cart$user","_state$data2","_state$data2$cart","_state$data2$cart$use","_state$data3","_state$data3$cart","_state$data3$cart$use","_state$data4","_state$data4$cart","_state$data4$cart$use","_state$data5","_state$data5$cart","_state$data5$cart$use","_state$data$user$isem","_state$data6","_state$data6$user","_state$data$user$ismo","_state$data7","_state$data7$user","_state$data8","_state$data8$cart","_state$data8$cart$add","_state$data9","_state$data9$cart","_state$data9$cart$add","_state$data10","_state$data10$cart","_state$data$cart$gros","_state$data11","_state$data11$cart","_state$data$cart$disc","_state$data12","_state$data12$cart","_state$data$cart$taxA","_state$data13","_state$data13$cart","_state$data14","_state$data14$cart","_state$data14$cart$ca","_state$data15","_state$data15$cart","_state$data15$cart$fo","setState","cart","user","firstName","lastName","FormGroup","_item$salutation","salutation","lastname","countryCode","grossAmount","discountedPrice","taxAmount","List","dense","cart_items","_item$transSkuListByP","_product$productImage","_item$transSkuListByP2","_item$transSkuListByP3","skuDetails","product","ListItem","disableGutters","ListItemAvatar","material_ui_image_lib_default","ListItemText","markupPrice","markupPriceTax","follow_ups","ListItemIcon","Mail_default","Sms_default","Call_default","Headers","Cart ID","User Details","asc","desc","Total Products in cart","Contact","Status","Created On","Last Updated On","filterVariables","ordersByCartIdExist","withoutContact","userprofileId","withContact","emptyCart","every","AbandonedCart","_Headers$sort$by$sort","_filterVariables$filt","_filterVariables$filt2","_data$allShoppingCart","_data$allShoppingCart2","_data$allShoppingCart3","_data$allShoppingCart4","setFilter","by","setSort","condition","handleClickFilter","_filterVariables$valu","_filterVariables$valu2","_filterVariables$with","cartDetails","allShoppingCarts","_item$user","_item$user2","_item$user3","_item$user4","_item$cart_items","_item$cart_items$node","_item$cart_items$node2","_item$cart_items2","_item$cart_items2$nod","_item$cart_items2$nod2","_item$cart_items3","_item$cart_items3$nod","_item$cart_items3$nod2","cart_id","discountAmount","mobile_no","sku_ids","skuId","generated_skus","_i$transSkuListByProd2","product_names","_i$transSkuListByProd3","_i$transSkuListByProd4","downloadAbandonedCart","CloudDownloadOutlined_default","_Headers$item","_Headers$by$direction","_filterVariables$filt3","_filterVariables$filt4","applySort","_item$user5","_item$user6","_item$user7","_item$cart_items4","_item$cart_items5","_item$user8","_item$user9","_item$user10","_item$user11","_item$user12","userName","Email_default","disableElevation","disableFocusRipple","CircularProgressWithLabel","PriceUpload","BackupOutlined_default","fetchMasterCountries","MasterCountries_templateObject","addMutationMasterCountry","MasterCountries_templateObject2","updateMutationMasterCountry","MasterCountries_templateObject3","MasterCountry","_data$allMasterCountr","MasterCountries_excluded","currentTimeStamp","masterCountryPatch","fxConversionRate","Number","fetchDailyMetalPrices","DailyMetalPrice_templateObject","DailyMetalPrice_templateObject2","DailyMetalPrice_templateObject3","DailyMetalRate","_data$allDailyMetalPr","DailyMetalPrice_excluded","dailyMetalPricePatch","displayPrice","allDailyMetalPrices","PriceLogs","_data$allPriceRunning","_data$allPriceRunning2","_data$allPriceRunning3","_data$allPriceRunning4","allPriceRunningHistories","_item$completedProduc","_item$pricingComponen","_item$logs","_item$logs$nodes$","_item$logs2","_item$logs2$nodes$","_item$logs3","_item$logs3$nodes$","_item$logs3$nodes$$re","_item$logs4","_item$logs4$nodes$","_item$logs5","_item$logs5$nodes$","_item$logs6","_item$logs6$nodes$","_item$logs6$nodes$$su","_item$logs7","_item$logs7$nodes$","_item$logs8","_item$logs8$nodes$","_item$logs9","_item$logs9$nodes$","_item$logs9$nodes$$fa","completedProductCount","pricingComponent","wordWrap","logs","requestedProducts","req","successfullyExecutedProducts","failedProducts","UploadImage","Axios","Accept-Language","_boundary","ImageUpload","imgLink","setImgLink","disableButton","setDisableButton","_res$data$web","web","navigator","clipboard","writeText","dialogPaper","dialogPaperMid","dialogHeader","TableHeaderComp","_props$handleAddNew","handleAddNew","_props$noAddNew","noAddNew","BannerCMS","_props$data7","_props$data7$props","initialState","urlParam","initialEdit","isEdit","editIndex","editData","setEditData","onChangeData","_props$data","_props$data$props","_props$data2","editBanner","getData","_props$data3","_props$data4","_props$data4$props","_getData","banners","TableHeadComp","TableComponent","_props$data5","_props$data5$props","_props$data6","ALLCDNPAGES","storeHeader","viewStoreHeader","tableStoreData","tableStoreView","initialStoreDetails","para","StoreLocatorCMS","openStores","setOpenStores","stores","setStores","addStoresOpens","setAddStores","showStoreFields","setShowStoreFields","storeState","setStoreState","storesEdit","setStoresEdit","handleCloseStores","handleAddNewStoresClose","onChangeStoreData","validationHead","storeData","storeDetailsValidate","editStores","newState","newStore","deleteStores","storeDataEdit","EditorConvertToHTML","_this","call","onEditorStateChange","editorState","draftToHtml","convertToRaw","getCurrentContent","handleChangeState","EditorState","createEmpty","parentState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","wrapperClassName","editorClassName","toolbarClassName","fontFamily","dropdownClassName","TitleDescriptionCMS","richEditor","titleDesc","setTitleDesc","handleClickOpen","richTextEditor","QueryFormCMS","setImage","offerPrice","placeImage","hoverImage","diamondType","skuID","skuUrl","SlidingImageCardCMS","constructedData","setConstructedData","_props$data$props$lis","dataConstruct","listingProducts","_val$image","_val$image$placeImage","_props$data2$props","_getData$props","_getData$props$listin","_getData$props2","_getData$props2$listi","_dataConstruct","_val$image2","_val$image2$placeImag","_val$image3","_val$image3$placeImag","_props$data6$props","_getData$props3","_getData$props3$listi","_val$image4","_val$image4$placeImag","_res$data3","CustomCareerBannerCMS","CustomCareerCardCMS","job_Role","button_Text","editContent","cardContent","CustomCollectionHeaderCMS","editHeader","innerHeader","innerTableData","initialButtonState","CustomCollectionCardsCMS","buttonState","setButtonState","buttonEditState","setButtonEditState","editCard","onChangeButtonData","editButton","CustomNewsCMS","button_text","Title","Description","SpclTitleDescr","spclTitleDescr","setSpclTitleDescr","_data$props","_data$props2","_data$props3","BookYourAppointmentCMS","feed","TestimonialCMS","_props$data3$props","sub","sub2","AboutCollection","_data$props4","TitleComp","setTitle","TitleWithDescription","CustomAdvertisementCMS","italic_text","ExperienceBannerCMS","background_Image","header_Image","form_Title","submit_Content","ExperienceCardCMS","sendData","setSendData","ExperienceTableCardCMS","contactNo","StoreLocatorDetailsCMS","deleteContent","CmsComponent","useLocation","cloneDialog","setCloneDialog","cloneState","setCloneState","fetchCall","handleCloneDialogClose","pageName","dataRecieved","cdnByPage","propsKey","replaceIndex","stringifyState","findIndex","newStateSet","bannerCMS","storeLocatorCMS","titleDescriptionCMS","queryFormCMS","slidingImageCardCMS","customCareerBannerCMS","customCareerCardCMS","customCollectionHeaderCMS","customCollectionCardsCMS","customNewsCMS","spclTitleDescrCMS","bookYourAppointmentCMS","titleCompCMS","testimonialCMS","aboutCollectionCMS","titleWithDescription","customAdvertisementCMS","experienceCardCMS","experienceBannerCMS","experienceTableCards","storeLocatorDetailsCMS","getTheTable","cloneData","IOSSwitch","switchBase","&$checked","& + $track","opacity","&$focusVisible $thumb","thumb","track","focusVisible","editcategory_excluded","focusVisibleClassName","Editcategory","checkedA","checkedB","checkedC","spaceing","conatainerRow","maxHeight","overflowY","gridColumnGap","gridTemplateColumns","Columns","listOfValue","setColumns","conatiner","head","stateChange","resetButton","columnclose","useStyless","FormPropsTextFields","ArrowDownward_default","Popover","transformOrigin","FontWeight","noValidate","SortHeader","lassName","protein1","protein2","headCells","indeterminate","useToolbarStyles","EnhancedTableToolbar","EnhancedTable","emptyRows","min","newmaterial_SortHeader","ProductTable_EnhancedTableToolbar","filterandsearch_FormPropsTextFields","ProductTable_EnhancedTableHead","newSelecteds","n","isItemSelected","hover","newSelected","role","aria-checked","tabIndex","newmaterial1","CmsHome","allCdns","handleChangeActive","createdName","getThePageTitle","SilverLandingPage","alllandingbanner","setalllandingbanner","createlandingbanner","setCreatelandingbanner","setDisable","allBanners","create_banner_data","now","toISOString","ClearState","SilverListingPage","SpecificListPages","SilverListingBottom","Silverbanner","silverlandingpage","silverlistingpage","specificListPages","silverbottmpage","SilverListingbanner","variantFontSize","variantMarginTop","CreateVariant","oldpurity","colorobj","diamondobj","diamond_color","variant_diamond_type","setVariant","statusText","getOptionDisabled","color_arr","color_obj","purity_arr","handleMetalPurity","metalPurityId","metalWeight","setMetalWeightInput","diamondtype_arr","diamondTypeChange","size_arr","createVariant","productMetalcoloursByProductId","productPuritiesByProductId","metal_color_image_length","metal_purity_weight","metal_weight_check","createVariants","saveCreateVariant","checkboxrow","columnnames","selectcolumnfilter","displytype","saveaction","columns_Columns","getColumnnames","EditDiamond","_diamond$diamonditemn","_diamond$diamondsubit","_diamond$diamonddescr","_diamond$diamondClari","_diamond$diamondType","_diamond$diamondColou","EditDiamond_excluded","_Object$assign","toFixed","useStyles1","TablePaginationActions","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","ceil","DiamondDetails","setSnackMessage","edit","diamondEditObject","setDiamondEditObject","DiamondSave","_DiamondSave","list_data","diamondListData","_diamondobj$diamondco","_diamondobj$diamondcl","_diamondobj$diamondty","diamondSettings","diamondShape","stoneCount","stoneWeight","DiamondDetails_Alert","itemName","subItemName","stoneAmount","settingData","shapeData","ActionsComponent","Components_EditDiamond_EditDiamond","EditGemstone","_diamond$gemstonesett","_diamond$gemstonecoun","_diamond$gemstoneweig","_diamond$gemstonesize","_diamond$gemstoneitem","_diamond$gemstonesubi","_diamond$gemstonedesc","_diamond$gemstoneshap","_diamond$gemstonetype","EditGemstone_excluded","GemstoneDetails","gemstoneEditObject","setGemstoneEditObject","gemstone","GemstoneSave","_GemstoneSave","gemdata","gemstoneChangeData","editGemstoneList","gemstoneListData","gemstoneSetting","gemstoneShape","gemstoneSize","edit_data","check_edit","gemstone_list","GemstoneDetails_Alert","gemstoneData","Components_EditGemstone_EditGemstone","isNaN","ResponsiveDialog","Mastercontent_Mastercontent","pricesummary","minHeight","Productimages","image_count","productimages","setProductimages","pop","imgobj","deleteImage","imageData","productimageid","handlenewAssetChange","fileType","fileobj","filetype","imagecontent","productimgs","responsecontent","imagePosition","isdefault","styleFile","wordBreak","ishover","aria-hidden","EditPrice","EditPrice_excluded","Variants","pricerun","Skupricesync","_Skupricesync","priceobj","skulistdata","costPriceTax","sellingPriceTax","discountPrice","discountPriceTax","marginOnSalePercentage","displycolumns","onShow","Components_EditPrice_EditPrice","handleChangeswitch","metalColor","skuWeight","skuSize","vendorDeliveryTime","discountDesc","isReadyToShip","pxToRem","secondaryHeading","verticalAlign","details","helper","borderLeft","_productCtx$masterDat","_productCtx$product_t","_productCtx$product_t2","defaultvarients","varientcolumns","setVarientcolumns","defaultvarientnames","setDisplycolumns","pricing","pricingcolumns","setPricingcolumns","defaultpricing","displypricingcolumns","setDisplypricingcolumns","defaultpricingnames","displycolumnnames","setDisplycolumnnames","isshowpricesummary","setIsshowpricesummary","pricesummaryvalues","setPricesummaryvalue","loadopen","setLoadopen","_useContext","create_variant","duplicate_productName","setstate","_saveProductEditItem","_productCtx$product_t3","_productCtx$product_t4","_productCtx$productMe","_productCtx$vendorcod","_productCtx$vendorcod2","_productCtx$earringba","_productCtx$earringba2","productEditItem","earingBacking","_showpricesummary","sku","price_summary","skuprice","obj","material_name","_productListByProduct","_productListByProduct2","_productListByProduct3","_productListByProduct4","_productListByProduct5","_productListByProduct6","_productListByProduct7","_productListByProduct8","_productListByProduct9","_productListByProduct10","_productListByProduct11","_productListByProduct12","_productListByProduct13","genders","productTypes","earringBackings","earringBacking","size_obj","sizeVarient","vendorCodes","sizes_arr","gender_arr","gender_obj","earring_backing","defaultcolour","metalcolors","unfilterMetalColor","productGemstonesByProductSku","productDiamondsByProductSku","transSkuListsByProductId","productMaterialsByProductSku","productThemesByProductId","productStylesByProductId","productOccassionsByProductId","productCollectionsByProductId","productStonecountsByProductId","productStonecolorsByProductId","transSkuDescriptionsBySkuId","skuDescription","productHashTagsByProductId","ProductEdit_CreateVariant","changeVariant","ProductAttributes_Alert","materialName","esbody","endpoint","saveProductEditItem","Components_SortHeader","varients","Variants_Variants","ProductAttributes","ProductAttributes_Component","route","login","dashboard","profile","productupload","configuration","productlist","orderlist","orderdetails","appointmentdetails","userorders","userwishlist","cmshome","mastermaterial","mastercolors","salediscountlist","voucherdiscountlist","salediscount","priceupdate","priceupload","diamondDetails","gemstoneDetails","images","materiallistpage","editCategory","vendorPrice","taxsetup","editdiscount","editvoucher","masterstyles","masterthemes","masteroccassions","masterpaymentstatus","mastercollections","masterdesigns","masterorderstatus","shippingzones","shipmentsettings","shippingattributes","masterdiamonds","addshippingattributes","addtaxattributes","userconfiguration","manageadminusers","goldpriceupdate","manageusers","gemsettings","gemshapes","gemtypes","seo","taxsettings","masterattributes","dailyMetalRate","masterstones","masterstonecolors","masterstoneshapes","weights","customerdetails","holiday_manager","inventory","silverbanner","silverlistingbanner","Newarrival","Manageshedule","abandoned_cart","pricelogs","imageUpload","cmsComponents","easing","sharp","leavingScreen","appBarShift","enteringScreen","menuButton","hide","drawerOpen","outline","drawerClose","mixins","_clsx2","accesspages","isreload","setIsreload","optionname","ChevronRight_default","ChevronLeft_default","menus","menuobj","submenu","ExpandLess_default","ExpandMore_default","Collapse","in","timeout","unmountOnExit","submenuobj","subindex","icons","grow","fade","inputRoot","inputInput","sectionDesktop","sectionMobile","PrimaryAppBar","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","isMobileMenuOpen","handleProfileMenuOpen","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","removeItem","renderMobileMenu","aria-controls","aria-haspopup","AccountCircle_default","Menu_default","noWrap","MoreVert_default","MainWrapper","PrimaryAppBar_excluded","PrivateRoute","PrivateRoute_excluded","path","react_router","CssBaseline","components_SideBar","PrimaryAppBar_MainWrapper","withAppBar","MainApp","ApolloClient","uri","react_common_esm","NetworkContext_NetworkProvider","routes_PrivateRoute","exact","newmaterial","AppAlert","Alert_Alerts","App","GlobalContext_GlobalProvider","ThemeProvider","react_router_dom","App_Alert","routes","hostname","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.09930f76.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport clsx from 'clsx';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {Grid, Chip } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nconst useStyles = makeStyles(theme => ({\r\n    card: {\r\n      width: '100%',\r\n      padding: theme.spacing(1),\r\n      marginTop : theme.spacing(2)\r\n    },\r\n    buttonPadding: {    \r\n        marginLeft: theme.spacing(2),   \r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n    chip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.success.main,\r\n    },\r\n    pendingchip: {\r\n      color: theme.palette.success.contrastText,\r\n      backgroundColor: theme.palette.secondary,\r\n    }\r\n  }));\r\n\r\nexport default function Categoryrow(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n  \r\n    const handleExpandClick = () => {\r\n      setExpanded(!expanded);\r\n    };\r\n  return (\r\n    \r\n    <Card className={classes.card}>\r\n\r\n      <Grid container sm={12} xs={12} alignItems='center' spacing={2}>\r\n            <Grid item xs={6} sm={9}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                       mano\r\n                    </Typography>\r\n                    <Typography variant=\"caption\" gutterBottom>\r\n                    mani\r\n                    </Typography>\r\n            </Grid>\r\n            <Grid container item xs={3} spacing={2}   direction=\"row\"\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n                >\r\n              <Grid item xs={9}> <Chip  className={props.user.status_id === 1 ? classes.pendingchip : classes.chip }\r\n            label={props.user.status_id === 1 ? 'pending' : 'registered'}\r\n            size=\"small\" /></Grid>\r\n             <Grid item xs={3}>\r\n            {/* <IconButton aria-label=\"add to favorites\" onClick={() => props.handleedit(props.rowid)}>\r\n            <CreateIcon />\r\n            </IconButton> */}\r\n            <IconButton aria-label=\"add to favorites\" onClick={() => props.handledelete(props.rowid)}>\r\n            <DeleteIcon />\r\n            </IconButton>\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </Grid>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, colors } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexGrow: 0,\r\n    flexShrink: 0,\r\n    borderRadius: theme.shape.borderRadius,\r\n    lineHeight: '10px',\r\n    fontSize: '10px',\r\n    height: 20,\r\n    minWidth: 20,\r\n    whiteSpace: 'nowrap',\r\n    padding: theme.spacing(0.5, 1)\r\n  },\r\n  rounded: {\r\n    borderRadius: 10,\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst Label = props => {\r\n  const { className, variant, color, shape, children, style, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const rootClassName = clsx(\r\n    {\r\n      [classes.root]: true,\r\n      [classes.rounded]: shape === 'rounded'\r\n    },\r\n    className\r\n  );\r\n\r\n  const finalStyle = { ...style };\r\n\r\n  if (variant === 'contained') {\r\n    finalStyle.backgroundColor = color;\r\n    finalStyle.color = '#FFF';\r\n  } else {\r\n    finalStyle.border = `1px solid ${color}`;\r\n    finalStyle.color = color;\r\n  }\r\n\r\n  return (\r\n    <Typography\r\n      {...rest}\r\n      className={rootClassName}\r\n      style={finalStyle}\r\n      variant=\"overline\"\r\n    >\r\n      {children}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nLabel.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.oneOf(['square', 'rounded']),\r\n  style: PropTypes.object,\r\n  variant: PropTypes.oneOf(['contained', 'outlined'])\r\n};\r\n\r\nLabel.defaultProps = {\r\n  style: {},\r\n  color: colors.grey[600],\r\n  variant: 'contained',\r\n  shape: 'square'\r\n};\r\n\r\nexport default Label;\r\n","//export const GRAPHQL_DEV_CLIENT = \"http://auth-dev.ap-south-1.elasticbeanstalk.com/graphql\"\r\n//export const API_URL = \"http://auth-dev.ap-south-1.elasticbeanstalk.com\"\r\nexport const BASE_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const API_URL = \"https://api-staging.nacjewellers.net\";\r\nexport const APP_URL = \"https://staging.nacjewellers.net\";\r\nexport const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\";\r\nexport const URL = \"https://console-staging.nacjewellers.net\";\r\nexport const BASE_IMAGE_URL = \"https://styloriimages-staging.s3.ap-south-1.amazonaws.com/\";\r\n//  export const GRAPHQL_DEV_CLIENT = \"https://api-staging.nacjewellers.net/graphql\"\r\n//  export const API_URL = \"https://api-staging.nacjewellers.net\"\r\n//  export const BASE_URL = \"http://localhost:8000\"\r\n//  export const URL = \"https://localhost:3000\"\r\n","import React from \"react\";\r\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport ArrowBackIosIcon from \"@material-ui/icons/ArrowBackIos\";\r\nimport { URL } from \"../../config\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\n\r\nconst StyledBreadcrumb = withStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey[100],\r\n    height: theme.spacing(3),\r\n    color: theme.palette.grey[800],\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    \"&:hover, &:focus\": {\r\n      backgroundColor: theme.palette.grey[300],\r\n    },\r\n    \"&:active\": {\r\n      boxShadow: theme.shadows[1],\r\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\r\n    },\r\n  },\r\n}))(Chip); // TypeScript only: need a type cast here because https://github.com/Microsoft/TypeScript/issues/26591\r\n\r\nfunction handleClick(event) {\r\n  //event.preventDefault();\r\n  console.info(\"You clicked a breadcrumb.\");\r\n}\r\n\r\nexport default function CustomizedBreadcrumbs(props) {\r\n  return (\r\n    <Breadcrumbs aria-label=\"breadcrumb\">\r\n      <StyledBreadcrumb\r\n        component=\"a\"\r\n        href={\"/configuration\"}\r\n        label={props.name ? props.name : \"Configuration\"}\r\n        icon={<ArrowBackIosIcon fontSize=\"small\" />}\r\n      />\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import gql from \"graphql-tag\";\r\n\r\nconst PRODUCTCATEGORY = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        id\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterGenders {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondTypes {\r\n      nodes {\r\n        diamondClarity\r\n        diamondColor\r\n        id\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterDiamondsShapes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n      }\r\n    }\r\n    allMasterThemes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n\r\n    allMasterStyles {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterOccasions {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterCollections {\r\n      nodes {\r\n        id\r\n        alias\r\n        name\r\n      }\r\n    }\r\n    allMasterStonesColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterStones {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondsColors {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterDiamondClarities {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterVendors {\r\n      nodes {\r\n        id\r\n        name\r\n        shortCode\r\n        vendorDelivaryDays\r\n      }\r\n    }\r\n    allProductLists(orderBy: PRODUCT_SERIES_DESC, first: 1) {\r\n      nodes {\r\n        productSeries\r\n        id\r\n      }\r\n    }\r\n    allMasterGemstonesTypes {\r\n      nodes {\r\n        alias\r\n        colorCode\r\n        id\r\n        name\r\n        shortCode\r\n      }\r\n    }\r\n    allMasterGemstonesShapes {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterEarringBackings {\r\n      nodes {\r\n        name\r\n        createdAt\r\n        alias\r\n        id\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n    allMasterGemstonesSettings {\r\n      nodes {\r\n        alias\r\n        id\r\n        name\r\n      }\r\n    }\r\n    allMasterHashTags {\r\n      nodes {\r\n        id\r\n        name\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTFILTERMASTER = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n      }\r\n    }\r\n    allMasterProductTypes {\r\n      nodes {\r\n        updatedAt\r\n        shortCode\r\n        name\r\n        id\r\n        createdAt\r\n        alias\r\n        displayOrder\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLPRODUCTLIST = gql`\r\n  query {\r\n    allProductLists(first: 500) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLIST = (category) => gql`\r\n  query ($Veiw: Int!, $Offset: Int!) {\r\n    allProductLists(first: $Veiw, offset: $Offset) {\r\n      nodes {\r\n        id\r\n        nodeId\r\n        productName\r\n        productCategory\r\n        productType\r\n        productId\r\n        createdAt\r\n        isactive\r\n        transSkuListsByProductId(condition: { isdefault: true }) {\r\n          nodes {\r\n            skuUrl\r\n            discount\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLISTS = gql`\r\n  query {\r\n    allMasterVendors(orderBy: CREATED_AT_DESC) {\r\n      nodes {\r\n        vendorDelivaryDays\r\n        updatedAt\r\n        state\r\n        shortCode\r\n        partnerCategory\r\n        name\r\n        organization\r\n        gstNo\r\n        currency\r\n        createdAt\r\n        city\r\n        address\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst TaxList_1 = gql`\r\n  query {\r\n    allMasterTaxSettings {\r\n      nodes {\r\n        hsnNumber\r\n        taxName\r\n        taxValue\r\n        updatedAt\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`; /*********** configuration query */\r\n\r\nconst TaxList = `\r\nquery  {\r\n  allMasterTaxSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      hsnNumber\r\n      taxName\r\n      taxValue\r\n      igst\r\n      cgst\r\n      sgst\r\n      productAttributes\r\n      displayAttributes\r\n      updatedAt\r\n      id\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n`;\r\nconst TaxSettingList = `\r\nquery  {\r\n  allTaxsettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      value\r\n      hsnCode\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERMATERIAL = `\r\nquery  {\r\n  allMasterMaterials(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERMATERIALCOLORS = `\r\nquery  {\r\n  allMasterMetalsColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      shortCode\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPRODUCTPURITIES = `\r\nquery  {\r\n  allMasterMetalsPurities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DESIGNMASTER = `\r\nquery  {\r\nallMasterDesigns(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    alias\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n    id\r\n  }\r\n}\r\n}`;\r\nconst COLLECTIONMASTER = `\r\nquery  {\r\n  allMasterCollections(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst OCCASSIONSMASTER = `\r\nquery  {\r\n  allMasterOccasions {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst STYLEMASTER = `\r\nquery  {\r\nallMasterStyles {\r\n  nodes {\r\n    alias\r\n    createdAt\r\n    name\r\n    id\r\n    updatedAt\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}`;\r\nconst THEMEMASTER = `\r\nquery  {\r\n  allMasterThemes {\r\n    nodes {\r\n      createdAt\r\n      alias\r\n      id\r\n      name\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst DIAMONDMASTER = `\r\nquery  {\r\nallMasterDiamondTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    diamondClarity\r\n    diamondColor\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\n\r\nconst PAYMENTSTATUSMASTER = `\r\n{\r\n  allOrderStatusMasters {\r\n    nodes {\r\n      createdAt\r\n      id\r\n      isActive\r\n      name\r\n      updatedAt\r\n    }\r\n  }\r\n  allPaymentStatusMasters(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      createdAt\r\n      id\r\n      isActive\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\nconst DIAMONDSETTINGS = `\r\nquery  {\r\nallMasterDiamondsSettings(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    name\r\n    id\r\n    isFilter\r\n    isActive\r\n    filterOrder\r\n  }\r\n}\r\n}\r\n`;\r\nconst DIAMONDSHAPES = `\r\nquery  {\r\n  allMasterDiamondsShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\nconst MASTERPRODUCTTYPES = `\r\nquery  {\r\nallMasterProductTypes(orderBy: UPDATED_AT_DESC) {\r\n  nodes {\r\n    certificate\r\n    name\r\n    id\r\n    alias\r\n    isActive\r\n    isFilter\r\n    shortCode\r\n    displayOrder\r\n  }\r\n}\r\n}`;\r\nconst MASTERCATEGORIES = `\r\nquery{\r\n  allMasterProductCategories(orderBy: FILTER_ORDER_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst MASTERPAGES = `\r\nquery  {\r\n  allUniquepages(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      pagename\r\n      displayname\r\n      id\r\n    }\r\n  }\r\n}`;\r\nconst GOLDPRICESETUPMASTER = `\r\nquery  {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials(filter: {or: [{shortCode: {equalTo: \"G\"}},{shortCode: {equalTo: \"S\"}},{shortCode: {equalTo: \"P\"}}]}) {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\nconst EARRINGBACKING = `\r\nquery  {\r\n  allMasterEarringBackings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      updatedAt\r\n      createdAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONES = `\r\nquery  {\r\n  allMasterStones(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCOUNTRIES = `\r\nquery  {\r\n  allMasterCountries(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      iso\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGCHARGES = `query{\r\n  allShippingCharges {\r\n    nodes {\r\n      id\r\n      name\r\n      isActive\r\n      isCart\r\n      chargeType\r\n      rangeFrom\r\n      rangeTo\r\n      shipmentCharge\r\n      productAttributes\r\n      displayAttributes\r\n      shippingZoneByZoneId {\r\n        name\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst ACTIVESHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n    }\r\n  }\r\n}`;\r\nconst SHIPPINGZONES = `\r\nquery  {\r\n  allShippingZones {\r\n    nodes {\r\n      name\r\n      id\r\n      isActive\r\n      shippingZoneCountriesByZoneId {\r\n        nodes {\r\n          countryId\r\n          createdAt\r\n          id\r\n          masterCountryByCountryId {\r\n            name\r\n            nicename\r\n            id\r\n          }\r\n        }\r\n      }\r\n      shippingChargesByZoneId {\r\n        nodes {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n}`;\r\nconst MASTERSTONECOLORS = `\r\nquery  {\r\n  allMasterStonesColors(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERWEIGHTS = `\r\nquery  {\r\n  allMasterWeights(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      alias\r\n      createdAt\r\n      name\r\n      id\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERSTONESHAPES = `\r\nquery  {\r\n  allMasterStonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      createdAt\r\n      alias\r\n      updatedAt\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERATTRIBUTES = `\r\nquery  {\r\nallAttributeMasters {\r\n  nodes {\r\n    name\r\n    isFilter\r\n    id\r\n    isSearch\r\n    isActive\r\n    filterPosition\r\n    isTopMenu\r\n    createdAt\r\n    shortCode\r\n    updatedAt\r\n  }\r\n}\r\n}`;\r\n\r\nconst MASTERGEMSETTINGS = `\r\nquery  {\r\n  allMasterGemstonesSettings(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERGEMSHAPES = `\r\nquery  {\r\n  allMasterGemstonesShapes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      alias\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGEMTYPES = `\r\nquery  {\r\n  allMasterGemstonesTypes(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      id\r\n      name\r\n      colorCode\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst MASTERGENDER = `\r\nquery  {\r\n  allMasterGenders(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n      isFilter\r\n      isActive\r\n      filterOrder\r\n    }\r\n  }\r\n}`;\r\nconst SEOPRIORITIES = `\r\nquery  {\r\n  allSeoUrlPriorities(orderBy: UPDATED_AT_DESC) {\r\n    nodes {\r\n      priority\r\n      seoText\r\n      seoUrl\r\n      imageUrl\r\n        mobileImageUrl\r\n      id\r\n      attributeName\r\n      attributeValue\r\n    }\r\n  }\r\n}`;\r\n/**************** */\r\n\r\n// const PRODUCTLIST  = (category) =>  gql`\r\n// query  {\r\n//   allProductLists ${category ? `(${category ? 'filter: {productCategory: {equalTo: \"Jewellery\"}}' : ''})` : \"\"} {\r\n//     nodes {\r\n//       id\r\n//       nodeId\r\n//       productName,\r\n//       productCategory,\r\n//       productType\r\n//       productId,\r\n//       createdAt\r\n//       isactive,\r\n//       transSkuListsByProductId(condition: {isdefault: true}) {\r\n//         nodes {\r\n//           skuUrl\r\n//           discount\r\n//         }\r\n//       }\r\n//     }\r\n//     totalCount\r\n//   }\r\n// }\r\n// `;\r\n\r\nconst GOLDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGoldPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        purity\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        sellingPrice\r\n        material\r\n        id\r\n        createdAt\r\n        costPrice\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDMARKUP = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allPricingMarkups(\r\n      condition: { material: $vendorCode }\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        updatedAt\r\n        sellingPriceMin\r\n        sellingPriceMax\r\n        material\r\n        category\r\n        productType\r\n        markupValue\r\n        markupType\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst DIAMONDPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allDiamondPriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        costPrice\r\n        createdAt\r\n        diamondClarity\r\n        diamondColour\r\n        id\r\n        sellingPrice\r\n        sellingPriceType\r\n        updatedAt\r\n        vendorCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n// const CATGORYLIST = gql`\r\n// query {\r\n//   allMasterMaterials {\r\n//     nodes {\r\n//       name\r\n//       shortCode\r\n//     }\r\n// }`;\r\n\r\nconst CATGORYLIST = gql`\r\n  query {\r\n    allMasterProductCategories {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n        id\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTTYPEMASTER = gql`\r\n  query {\r\n    allMasterProductTypes {\r\n      nodes {\r\n        name\r\n        id\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MATERIALMASTER = gql`\r\n  query {\r\n    allMasterMaterials {\r\n      nodes {\r\n        alias\r\n        name\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERCOLORS = gql`\r\n  query {\r\n    allMasterMetalsColors {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst SALEDISCOUNTS = gql`\r\n  query {\r\n    allSaleDiscounts {\r\n      nodes {\r\n        id\r\n        discountName\r\n        discountType\r\n        discountValue\r\n        components\r\n        attributes\r\n        isActive\r\n        productAttributes\r\n        productAttributesText\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERDISCOUNTS = gql`\r\n  query {\r\n    allVouchers {\r\n      nodes {\r\n        id\r\n        name\r\n        code\r\n        uses\r\n        maxUses\r\n        isActive\r\n        voucherCodes\r\n        description\r\n      }\r\n\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst MASTERPURITIES = gql`\r\n  query {\r\n    allMasterMetalsPurities {\r\n      nodes {\r\n        name\r\n        alias\r\n        shortCode\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst VENDORLIST = `\r\nquery {\r\n  allMasterVendors {\r\n    nodes {\r\n      vendorDelivaryDays\r\n      updatedAt\r\n      state\r\n      shortCode\r\n      partnerCategory\r\n      name\r\n      organization\r\n      gstNo\r\n      currency\r\n      createdAt\r\n      city\r\n      address\r\n    }\r\n  }\r\n}`;\r\n\r\nconst METALMASTER = `\r\nquery {\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst MASTERCATEGORY = `\r\nquery {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMaterials {\r\n    nodes {\r\n      name\r\n      id\r\n      shortCode\r\n    }\r\n  }\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      shortCode\r\n    }\r\n  }\r\n}`;\r\n\r\nconst GEMSTONEMASTER = `\r\nquery {\r\n  allMasterGemstonesTypes {\r\n    nodes {\r\n      name\r\n      shortCode\r\n      colorCode\r\n    }\r\n  }  \r\n}`;\r\n\r\nconst MAKINGCHARGEPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!, $ratetype: Int!) {\r\n    allMakingChargeSettings(\r\n      condition: { vendorCode: $vendorCode, rateType: $ratetype }\r\n    ) {\r\n      nodes {\r\n        weightStart\r\n        weightEnd\r\n        vendorCode\r\n        updatedAt\r\n        sellingPriceType\r\n        rateType\r\n        purity\r\n        priceType\r\n        price\r\n        material\r\n        id\r\n        createdAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst GEMPRICELIST = gql`\r\n  query MyQuery($vendorCode: String!) {\r\n    allGemstonePriceSettings(condition: { vendorCode: $vendorCode }) {\r\n      nodes {\r\n        price\r\n        rateType\r\n        priceType\r\n        sellingPriceType\r\n        vendorCode\r\n        weightEnd\r\n        weightStart\r\n        updatedAt\r\n        id\r\n        createdAt\r\n        gemstoneType\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\nconst PRODUCTLISTSTATUSEDIT = gql`\r\n  mutation MyMutation($productId: String!, $isActive: Boolean!) {\r\n    __typename\r\n    updateProductListByProductId(\r\n      input: {\r\n        productId: $productId\r\n        productListPatch: { isactive: $isActive }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n      productList {\r\n        isactive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst REVIEWQUERY = `\r\n  query {\r\n    allCustomerReviews {\r\n      nodes {\r\n        customerName\r\n        id\r\n        isActive\r\n        isPublish\r\n        message\r\n        nodeId\r\n        productSku\r\n        rating\r\n        title\r\n        updatedAt\r\n        userprofileId\r\n        productId\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst CREATETAXSETUP = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $updatedAt: Date!\r\n    $createdAt: Date!\r\n    $taxValue: Double!\r\n    $taxName: String!\r\n    $hsnNumber: String!\r\n  ) {\r\n    __typename\r\n    createMasterTaxSetting(\r\n      input: {\r\n        masterTaxSetting: {\r\n          id: $id\r\n          updatedAt: $updatedAt\r\n          createdAt: $createdAt\r\n          taxValue: $taxValue\r\n          taxName: $taxName\r\n          hsnNumber: $hsnNumber\r\n        }\r\n      }\r\n    ) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst VOUCHERSTATUSEDIT = gql`\r\n  mutation MyMutation($voucherId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateVoucherById(\r\n      input: { id: $voucherId, voucherPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      voucher {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DISCOUNTSTATUSEDIT = gql`\r\n  mutation MyMutation($discountId: UUID!, $isActive: Boolean!) {\r\n    __typename\r\n    updateSaleDiscountById(\r\n      input: { id: $discountId, saleDiscountPatch: { isActive: $isActive } }\r\n    ) {\r\n      clientMutationId\r\n      saleDiscount {\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMARKUPPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deletePricingMarkupById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGOLDPRICE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGoldPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETESALEDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteSaleDiscountById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEVOUCHERDISCOUNT = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteVoucherById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEMAKINGCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteMakingChargeSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETEGEMCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteGemstonePriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\nconst DELETEDIAMONDCHARGE = gql`\r\n  mutation MyMutation($elementId: UUID!) {\r\n    __typename\r\n    deleteDiamondPriceSettingById(input: { id: $elementId }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nconst PRODUCTDIAMONDTYPES = `\r\nquery{\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      diamondClarity\r\n      diamondColor\r\n      id\r\n    }\r\n  }\r\n}\r\n`;\r\nconst PRODUCTEDIT = gql`\r\n  query MyQuery($productId: String!) {\r\n    productListByProductId(productId: $productId) {\r\n      productMetalcoloursByProductId {\r\n        nodes {\r\n          productColor\r\n          id\r\n        }\r\n      }\r\n      productName\r\n      productType\r\n      vendorCode\r\n      gender\r\n      earringBacking\r\n      isactive\r\n      prodDescription\r\n      productMaterialsByProductSku(condition: { isActive: true }) {\r\n        nodes {\r\n          materialName\r\n        }\r\n      }\r\n      productDiamondsByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          diamondClarity\r\n          diamondColour\r\n          diamondSettings\r\n          diamondShape\r\n          diamondType\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productGemstonesByProductSku {\r\n        nodes {\r\n          itemName\r\n          subItemName\r\n          description\r\n          gemstoneSetting\r\n          gemstoneShape\r\n          gemstoneSize\r\n          gemstoneType\r\n          gemstonsSize\r\n          id\r\n          stoneCount\r\n          stoneWeight\r\n          stoneAmount\r\n          stoneRate\r\n        }\r\n      }\r\n      productImagesByProductId(orderBy: IMAGE_POSITION_ASC) {\r\n        nodes {\r\n          id\r\n          imagePosition\r\n          productId\r\n          imageUrl\r\n          ishover\r\n          isdefault\r\n          productColor\r\n        }\r\n      }\r\n      productPuritiesByProductId {\r\n        nodes {\r\n          purity\r\n          id\r\n        }\r\n      }\r\n      productThemesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          themeName\r\n          id\r\n        }\r\n      }\r\n      productStonecolorsByProductId {\r\n        nodes {\r\n          id\r\n          stonecolor\r\n        }\r\n      }\r\n      productStylesByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          styleName\r\n          id\r\n        }\r\n      }\r\n      productCollectionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          collectionName\r\n          id\r\n        }\r\n      }\r\n      productOccassionsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          occassionName\r\n          id\r\n        }\r\n      }\r\n      productStonecountsByProductId {\r\n        nodes {\r\n          id\r\n          stonecount\r\n        }\r\n      }\r\n      productHashTagsByProductId(condition: { isActive: true }) {\r\n        nodes {\r\n          id\r\n          name: hashTag\r\n        }\r\n      }\r\n      transSkuListsByProductId {\r\n        nodes {\r\n          skuSize\r\n          diamondType\r\n          metalColor\r\n          purity\r\n          productId\r\n          skuWeight\r\n          generatedSku\r\n          costPrice\r\n          costPriceTax\r\n          discountPrice\r\n          discountPriceTax\r\n          markupPrice\r\n          marginOnSalePercentage\r\n          markupPriceTax\r\n          marginOnSalePercentage\r\n          sellingPrice\r\n          discountDesc\r\n          sellingPriceTax\r\n          isReadyToShip\r\n          discount\r\n          isActive\r\n          isdefault\r\n          vendorDeliveryTime\r\n          id\r\n          isActive\r\n          showPriceBreakup\r\n          calcType\r\n          transSkuDescriptionsBySkuId {\r\n            nodes {\r\n              skuDescription\r\n              certificate\r\n              ringsizeImage\r\n            }\r\n          }\r\n          maxOrderQty\r\n          minOrderQty\r\n        }\r\n      }\r\n      productCategory\r\n      sizeVarient\r\n      height\r\n      length\r\n      width\r\n\r\n      productVendorCode\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLMASTERRINGSIZE = `\r\n  query {\r\n    allMasterRingsSizes {\r\n      nodes {\r\n        gender\r\n        productType\r\n        name\r\n        size\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst HOLIDAYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: HolidayManagerFilter) {\r\n    allHolidayManagers(\r\n      first: $first\r\n      offset: $offset\r\n      filter: $filter\r\n      orderBy: DATE_ASC\r\n    ) {\r\n      nodes {\r\n        id\r\n        holiday\r\n        date\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst WAREHOUSELIST = gql`\r\n  query {\r\n    allWarehouses(orderBy: ID_ASC) {\r\n      nodes {\r\n        id\r\n        name\r\n        shippingInDays\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst INVENTORYLIST = gql`\r\n  query ($first: Int, $offset: Int, $filter: InventoryFilter) {\r\n    allInventories(first: $first, offset: $offset, filter: $filter) {\r\n      nodes {\r\n        id\r\n        generatedSku\r\n        numberOfItems\r\n        createdAt\r\n        updatedAt\r\n        warehouse: warehouseByWarehouseId {\r\n          id\r\n          name\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst VALIDATEGENERATEDSKU = gql`\r\n  query ($generatedSku: String!) {\r\n    allTransSkuLists(condition: { generatedSku: $generatedSku }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst STOCKSTATUS = gql`\r\n  query {\r\n    allWarehouses {\r\n      nodes {\r\n        name\r\n        isActive\r\n        inventoriesByWarehouseId {\r\n          aggregates {\r\n            sum {\r\n              numberOfItems\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst VERIFYTAGNO = gql`\r\n  query ($tagno: String!) {\r\n    list: allTransSkuLists(condition: { generatedSku: $tagno }) {\r\n      nodes {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst ALLBANNERSCOMPLETE = `\r\nquery MyQuery {\r\n  allBanners\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"landing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATEALLBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLLISTINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: {urlParam: \"listing\"})\r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam \r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATELISTINGBANNERS = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam : \"listing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n     banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALLSPECIFICLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners\r\n  (condition: {url: \"specificListingPage\"}) \r\n  {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst CREATESPECIFICLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $urlParam :String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: \"specificListingPage\"\r\n        web: $web\r\n        urlParam : $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst DELETEALLBANNER = `\r\nmutation MyMutation($id : Int!) {\r\n  deleteBannerById(input: {id: $id}) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLMASTERPRODUCTSIZE = gql`\r\n  query allproductsizes($productType: String) {\r\n    allMasterRingsSizes(condition: { productType: $productType }) {\r\n      nodes {\r\n        name\r\n        nodeId\r\n        id\r\n        size\r\n        updatedAt\r\n        productType\r\n        gender\r\n        sizeValue\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst IMAGEDELETE = `\r\nmutation MyMutation($productimageid: UUID!) {\r\n  deleteProductImageById(input: { id: $productimageid }) {\r\n    productListByProductId {\r\n      productId\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGBOTTOMBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"bottom\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLANDINGBANNERS = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"landing\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERLISTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: { urlParam: \"listingPage\" }) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst ALLSTYLORISILVERROUTINGPAGE = `\r\nquery MyQuery {\r\n  allBanners(condition: {url: \"#\"}) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n      urlParam\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLANDINGBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam :\"landing\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}`;\r\n\r\nconst CREATESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"bottom\"\r\n        position: $position\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n\r\n`;\r\n\r\nconst CREATESILVERLISTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $url: String\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: $url\r\n        web: $web\r\n        urlParam: \"listingPage\"\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ABANDONEDCART = gql`\r\n  query (\r\n    $first: Int\r\n    $offset: Int\r\n    $orderBy: [ShoppingCartsOrderBy!]\r\n    $condition: ShoppingCartCondition\r\n    $filter: ShoppingCartFilter\r\n  ) {\r\n    allShoppingCarts(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: $orderBy\r\n      condition: $condition\r\n      filter: $filter\r\n    ) {\r\n      nodes {\r\n        id\r\n        isActive\r\n        netAmount\r\n        status\r\n        taxAmount\r\n        userprofileId\r\n        user: userProfileByUserprofileId {\r\n          id\r\n          firstName\r\n          lastName\r\n          username\r\n          email\r\n          mobile\r\n        }\r\n        cart_items: shoppingCartItemsByShoppingCartId {\r\n          nodes {\r\n            productSku\r\n            qty\r\n            transSkuListByProductSku {\r\n              generatedSku\r\n              skuId\r\n              productListByProductId {\r\n                productName\r\n              }\r\n            }\r\n          }\r\n        }\r\n        grossAmount\r\n        discountedPrice\r\n        discount\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nconst CARTBYID = gql`\r\n  query ($id: UUID!) {\r\n    cart: shoppingCartById(id: $id) {\r\n      id\r\n      isActive\r\n      netAmount\r\n      status\r\n      taxAmount\r\n      userprofileId\r\n      grossAmount\r\n      discountedPrice\r\n      discount\r\n      createdAt\r\n      updatedAt\r\n      address: cartAddressesByCartId {\r\n        nodes {\r\n          id\r\n          addressline1\r\n          addressline2\r\n          city\r\n          contactNumber\r\n          country\r\n          countryCode\r\n          createdAt\r\n          firstname\r\n          lastname\r\n          pincode\r\n          salutation\r\n          state\r\n          updatedAt\r\n          addressType\r\n        }\r\n      }\r\n      user: userProfileByUserprofileId {\r\n        id\r\n        firstName\r\n        lastName\r\n        username\r\n        email\r\n        mobile\r\n        isemailverified\r\n        ismobileverified\r\n      }\r\n      cart_items: shoppingCartItemsByShoppingCartId {\r\n        nodes {\r\n          productSku\r\n          qty\r\n          transSkuListByProductSku {\r\n            markupPrice\r\n            markupPriceTax\r\n            discountPrice\r\n            discountPriceTax\r\n            generatedSku\r\n            skuId\r\n            productListByProductId {\r\n              productName\r\n              productImagesByProductId(\r\n                condition: { isdefault: true, imagePosition: 1 }\r\n              ) {\r\n                nodes {\r\n                  productId\r\n                  imageUrl\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      follow_ups: communicationLogsByCartId {\r\n        nodes {\r\n          type\r\n          messageType\r\n          senderResponseId\r\n          createdAt\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CREATESTYLORISILVERROUTINGPAGE = `\r\nmutation MyMutation(\r\n  $now: Datetime!\r\n  $web: String\r\n  $mobile: String\r\n  $position: Int\r\n  $urlParam: String\r\n) {\r\n  createBanner(\r\n    input: {\r\n      banner: {\r\n        createdAt: $now\r\n        updatedAt: $now\r\n        mobile: $mobile\r\n        position: $position\r\n        url: \"S\"\r\n        web: $web\r\n        urlParam: $urlParam\r\n      }\r\n    }\r\n  ) {\r\n    clientMutationId\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n      urlParam\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLANDINGBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      nodeId\r\n      mobile\r\n      position\r\n      updatedAt\r\n      url\r\n      web\r\n      createdAt\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst DELETESILVERLISTINGBOTTOMBANNER = `\r\nmutation MyMutation($id: Int!) {\r\n  deleteBannerById(input: { id: $id }) {\r\n    banner {\r\n      id\r\n      mobile\r\n      position\r\n      url\r\n      web\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLFEATUREDPRODUCT = `query MyQuery {\r\n  allFeaturedProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: { ishover: true }) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId {\r\n          nodes {\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId {\r\n              nodes {\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst CREATEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createFeaturedProduct(\r\n    input: { featuredProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateFeaturedProductByProductId(\r\n    input: {\r\n      featuredProductPatch: { isActive: $isActive }\r\n      productId: $ProductId\r\n    }\r\n  ) {\r\n    featuredProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETEFEATUREDPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteFeaturedProductByProductId(input: { productId: $ProductId }) {\r\n    featuredProduct {\r\n      productId\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CREATENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  createNewArrivalProduct(\r\n    input: { newArrivalProduct: { productId: $ProductId, isActive: $isActive } }\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ALLNEWARRIVALPRODUCT = `query MyQuery{\r\n  allNewArrivalProducts {\r\n    nodes {\r\n      productId\r\n      productListByProductId {\r\n        productName\r\n        productId\r\n        productImagesByProductId(condition: {ishover: false}) {\r\n          nodes {\r\n            imageUrl\r\n          }\r\n        }\r\n        transSkuListsByProductId{\r\n          nodes{\r\n            costPrice\r\n            markupPrice\r\n            skuUrl\r\n            transSkuDescriptionsBySkuId{\r\n              nodes{\r\n                skuDescription\r\n              }\r\n            }\r\n            sellingPrice\r\n          }\r\n        }\r\n      }\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst ISACTIVENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!, $isActive: Boolean) {\r\n  updateNewArrivalProductByProductId(\r\n    input: {newArrivalProductPatch: {isActive: $isActive}, productId: $ProductId}\r\n  ) {\r\n    newArrivalProduct {\r\n      productId\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\nconst DELETENEWARRIVALPRODUCT = `mutation MyMutation($ProductId: String!) {\r\n  deleteNewArrivalProductByProductId(input: {productId: $ProductId}) {\r\n    clientMutationId\r\n    deletedNewArrivalProductId\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst MUTATE_STATUS = `\r\nmutation($id: Int!, $status: String) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { status: $status } }\r\n  ) {\r\n    clientMutationId\r\n  }\r\n}\r\n`\r\n\r\nconst MUTATE_MEETING = `\r\nmutation($id :Int!,$meetingLink: String!) {\r\n  updateAppointmentById(\r\n    input: { id: $id, appointmentPatch: { meetingLink: $meetingLink } }\r\n  ) {\r\n    appointment {\r\n      id\r\n      meetingLink\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst GETORDERCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: UUID!) {\r\n  orderById(id: $id) {\r\n    awbNumber\r\n    cartId\r\n    comments\r\n    createdAt\r\n    id\r\n    paymentId\r\n    paymentMode\r\n    paymentStatus\r\n    updatedAt\r\n    userProfileId\r\n    communicationLogsByOrderId(orderBy: UPDATED_AT_DESC) {\r\n      nodes {\r\n        createdAt\r\n        id\r\n        messageType\r\n        orderId\r\n        senderResponseId\r\n        type\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst GETAPPLICATIONCOMMUNICATIONLOGS = `\r\nquery MyQuery($id: Int!) {\r\n  appointmentById(id: $id) {\r\n    storeLocationByLocationId {\r\n      id\r\n      address\r\n      name\r\n    }\r\n    appointmentCommunicationLogsByAppointmentId {\r\n      nodes {\r\n        id\r\n        appointmentId\r\n        communicationType\r\n        createdAt\r\n        senderResponseId\r\n        type\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_DATE = `\r\n  query MyQuery {\r\n    allAppointmentDates(\r\n      orderBy: START_DATE_TIME_ASC\r\n    ) {\r\n      nodes {\r\n        createdAt\r\n        createdBy\r\n        endDate\r\n        id\r\n        isActive\r\n        startDate\r\n        startDateTime\r\n        endDateTime\r\n        updatedAt\r\n        updatedBy\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst CHECK_APPOINTMENT = `\r\nquery($startDate: Date!,$endDate: Date!){\r\n  allAppointmentDates(\r\n    condition: {\r\n      startDate: $startDate,\r\n      endDate: $endDate\r\n    }\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n\r\n`\r\n\r\nconst FILTER_APPOINTEMENTS = gql`\r\nquery($startDate: Date!, $endDate: Date!) {\r\n  allAppointmentDates(\r\n    filter: {\r\n      startDate: {\r\n        greaterThanOrEqualTo: $startDate\r\n        lessThanOrEqualTo: $endDate\r\n      }\r\n    }\r\n    orderBy: START_DATE_ASC\r\n  ) {\r\n    nodes {\r\n      createdAt\r\n      createdBy\r\n      endDate\r\n      id\r\n      isActive\r\n      startDate\r\n      startDateTime\r\n      endDateTime\r\n      updatedAt\r\n      updatedBy\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nconst ALL_APPOINTMENTS_TIMESLOT =(appointmentDateId,appointmentTypeId) => gql`\r\n query{  \r\n   allAppointmentDateTimeSlots(\r\n    condition: {\r\n      appointmentDateId: \"${appointmentDateId}\"\r\n      appointmentTypeId: ${appointmentTypeId}\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n }\r\n`\r\n\r\nconst CHECK_TIMESLOT=gql`\r\nquery($startTime: Time,$endTime: Time){\r\n  allAppointmentDateTimeSlots(\r\n    filter: {\r\n      startTime: {\r\n        greaterThanOrEqualTo: $startTime\r\n        lessThanOrEqualTo: $endTime\r\n      }\r\n      endTime:{\r\n       greaterThanOrEqualTo: $startTime\r\n       lessThanOrEqualTo:$endTime \r\n      }\r\n    }\r\n  ) {\r\n    nodes {\r\n      id\r\n      appointmentDateId\r\n      appointmentTypeId\r\n      startTime\r\n      endTime\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`\r\n\r\n\r\nconst APPOINTMENTS_TYPE = `\r\n  query MyQuery {\r\n    allAppointmentTypeMasters {\r\n      nodes {\r\n        id\r\n        name\r\n        isActive\r\n        appointmentsByAppointmentTypeId{\r\n          edges {\r\n            node {\r\n              id\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nconst SHOW_APPOINMENT_DETAILS = gql`\r\nquery(\r\n  $limit: Int\r\n  $offset: Int\r\n  $appointment_filter: AppointmentFilter!\r\n  $order_by: [AppointmentsOrderBy!]\r\n){\r\n  allAppointments(\r\n    first: $limit\r\n    offset: $offset\r\n    filter: $appointment_filter\r\n    orderBy: $order_by\r\n    ) {\r\n    nodes {\r\n      id\r\n      mobile\r\n      mobileCountryCode\r\n      customerName\r\n      email\r\n      isActive\r\n      status\r\n      type: appointmentTypeMasterByAppointmentTypeId {\r\n        name\r\n      }\r\n      appointmentDateTimeSlotBySlotId{\r\n        startTime\r\n        startDateTime\r\n        endDateTime\r\n        createdBy\r\n        appointmentDateId\r\n        endTime\r\n      }\r\n      storeLocationByLocationId {\r\n        address\r\n        name\r\n      }\r\n      locationId\r\n    }\r\n    totalCount\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst SHOW_ALL_PPOINMENT_DETAILS = gql`\r\nquery(\r\n  $id: Int\r\n){\r\n  allAppointments(filter: {id: {equalTo: $id}}) {\r\n    nodes {\r\n      isVerified\r\n      isActive\r\n      email\r\n      customerName\r\n      status\r\n      locationId\r\n      storeLocationByLocationId {\r\n        address\r\n      }\r\n      specialRequests\r\n      productCategory\r\n      meetingLink\r\n      metalType\r\n      mobile\r\n      isOnline\r\n      isItRequired\r\n      id\r\n      areMoreMembersJoining\r\n      appointmentDateTimeSlotBySlotId {\r\n        appointmentTypeId\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n`;\r\n\r\nconst PRICE_RUN_LOGS = gql`\r\n  query ($first: Int, $offset: Int) {\r\n    allPriceRunningHistories(\r\n      first: $first\r\n      offset: $offset\r\n      orderBy: UPDATED_AT_DESC\r\n    ) {\r\n      nodes {\r\n        id\r\n        completedProductCount\r\n        pricingComponent\r\n        logs: pricingLogsByPriceRunningHistoryId {\r\n          nodes {\r\n            requestedProducts\r\n            successfullyExecutedProducts\r\n            failedProducts\r\n          }\r\n        }\r\n        createdAt\r\n        updatedAt\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  ALLBANNERS,\r\n  ALLLISTINGBANNERS,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  CREATEALLBANNERS,\r\n  CREATELISTINGBANNERS,\r\n  CREATESPECIFICLISTINGPAGE,\r\n  DELETEALLBANNER,\r\n  PRODUCTCATEGORY,\r\n  PRODUCTLIST,\r\n  PRODUCTEDIT,\r\n  PRODUCTLISTSTATUSEDIT,\r\n  PRODUCTDIAMONDTYPES,\r\n  GOLDPRICELIST,\r\n  DIAMONDPRICELIST,\r\n  GEMPRICELIST,\r\n  MAKINGCHARGEPRICELIST,\r\n  VENDORLIST,\r\n  ALLPRODUCTLIST,\r\n  DIAMONDMARKUP,\r\n  PRODUCTFILTERMASTER,\r\n  METALMASTER,\r\n  GEMSTONEMASTER,\r\n  MASTERCATEGORY,\r\n  DELETEMARKUPPRICE,\r\n  DELETEMAKINGCHARGE,\r\n  DELETEGEMCHARGE,\r\n  DELETEGOLDPRICE,\r\n  DELETESALEDISCOUNT,\r\n  CATGORYLIST,\r\n  DELETEDIAMONDCHARGE,\r\n  VENDORLISTS,\r\n  TaxList,\r\n  PRODUCTTYPEMASTER,\r\n  MATERIALMASTER,\r\n  MASTERCOLORS,\r\n  MASTERPURITIES,\r\n  SALEDISCOUNTS,\r\n  VOUCHERDISCOUNTS,\r\n  DELETEVOUCHERDISCOUNT,\r\n  VOUCHERSTATUSEDIT,\r\n  DISCOUNTSTATUSEDIT,\r\n  MASTERMATERIAL,\r\n  MASTERMATERIALCOLORS,\r\n  MASTERPRODUCTPURITIES,\r\n  COLLECTIONMASTER,\r\n  DESIGNMASTER,\r\n  DIAMONDMASTER,\r\n  DIAMONDSETTINGS,\r\n  DIAMONDSHAPES,\r\n  MASTERPRODUCTTYPES,\r\n  MASTERGEMSETTINGS,\r\n  MASTERGEMSHAPES,\r\n  MASTERGEMTYPES,\r\n  MASTERGENDER,\r\n  SEOPRIORITIES,\r\n  CREATETAXSETUP,\r\n  TaxSettingList,\r\n  MASTERCATEGORIES,\r\n  EARRINGBACKING,\r\n  MASTERATTRIBUTES,\r\n  MASTERSTONESHAPES,\r\n  MASTERSTONECOLORS,\r\n  MASTERSTONES,\r\n  MASTERWEIGHTS,\r\n  THEMEMASTER,\r\n  STYLEMASTER,\r\n  OCCASSIONSMASTER,\r\n  PAYMENTSTATUSMASTER,\r\n  SHIPPINGZONES,\r\n  MASTERCOUNTRIES,\r\n  SHIPPINGCHARGES,\r\n  ACTIVESHIPPINGZONES,\r\n  MASTERPAGES,\r\n  GOLDPRICESETUPMASTER,\r\n  ALLMASTERRINGSIZE,\r\n  HOLIDAYLIST,\r\n  WAREHOUSELIST,\r\n  INVENTORYLIST,\r\n  VALIDATEGENERATEDSKU,\r\n  STOCKSTATUS,\r\n  VERIFYTAGNO,\r\n  ALLMASTERPRODUCTSIZE,\r\n  IMAGEDELETE,\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  ALLSTYLORISILVERROUTINGPAGE,\r\n  CREATESILVERLANDINGBANNER,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  CREATESILVERLISTINGPAGE,\r\n  CREATESTYLORISILVERROUTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  REVIEWQUERY,\r\n  CREATENEWARRIVALPRODUCT,\r\n  ALLNEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n  ABANDONEDCART,\r\n  CARTBYID,\r\n  ALL_APPOINTMENTS_DATE,\r\n  SHOW_APPOINMENT_DETAILS,\r\n  PRICE_RUN_LOGS,\r\n  APPOINTMENTS_TYPE,\r\n  ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS,\r\n  SHOW_ALL_PPOINMENT_DETAILS,\r\n  MUTATE_STATUS,\r\n  GETAPPLICATIONCOMMUNICATIONLOGS,\r\n  CHECK_APPOINTMENT,\r\n  CHECK_TIMESLOT,\r\n  MUTATE_MEETING\r\n};\r\n","import { gql } from 'apollo-boost';\r\n\r\nexport const PRODUCTCATEGORY = gql`query {\r\n    allMasterProductCategories{\r\n        nodes {\r\n            alias\r\n            name\r\n            id\r\n          }\r\n    }\r\n    allMasterProductTypes {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n      shortCode\r\n    }\r\n  },\r\n  allMasterStonesColors {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterStones {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n  }`\r\n\r\n  export const USERORDERS = gql`query($userid: UUID!) {\r\n    allOrders(filter: {userProfileByUserProfileId: {id: {equalTo: $userid}}}) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n          \r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n  }`\r\n\r\n\r\n  export const ORDERS = gql`\r\n  query (\r\n    $order_filter: OrderFilter!\r\n    $limit: Int\r\n    $offset: Int\r\n    $order_by: [OrdersOrderBy!]\r\n  ) {\r\n    allOrders(\r\n      filter: $order_filter\r\n      first: $limit\r\n      offset: $offset\r\n      orderBy: $order_by\r\n    ) {\r\n      nodes {\r\n        paymentMode\r\n        paymentStatus\r\n        updatedAt\r\n        createdAt\r\n        awbNumber\r\n        cartId\r\n        orderStatus\r\n        comments\r\n        id\r\n        \r\n        shoppingCartByCartId {\r\n          shoppingCartItemsByShoppingCartId {\r\n            nodes {\r\n              transSkuListByProductSku {\r\n                generatedSku\r\n                productListByProductId {\r\n                  productCategory\r\n                  productType\r\n                  productCollectionsByProductId {\r\n                    nodes {\r\n                      collectionName\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          giftwrapsByCartId {\r\n            nodes {\r\n              message\r\n              giftFrom\r\n              giftTo\r\n            }\r\n          }\r\n\r\n          cartAddressesByCartId {\r\n            nodes {\r\n              firstname\r\n              contactNumber\r\n              addressline1\r\n              addressline2\r\n              city\r\n              pincode\r\n              state\r\n            }\r\n          }\r\n          userProfileByUserprofileId {\r\n            firstName\r\n            mobile\r\n            email\r\n            userAddressesByUserProfileId {\r\n              nodes {\r\n                contactNumber\r\n              }\r\n            }\r\n          }\r\n        }\r\n        paymentDetailsByOrderId {\r\n          nodes {\r\n            paymentResponse\r\n          }\r\n        }\r\n      }\r\n      totalCount\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport const MATERIALMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  }\r\n}`\r\n\r\nexport const VOUCHERMASTER = gql`query {\r\n  allMasterVendors {\r\n    nodes {\r\n      name\r\n      id\r\n      \r\n      \r\n    }\r\n  },\r\n  allMasterPricingComponents(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\nexport const SHIPPINGMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allShippingCharges(condition: {isActive: true}) {\r\n    nodes {\r\n      name\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n\r\n\r\n\r\nexport const TAXMASTER = `query {\r\n  allMasterProductCategories {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterProductTypes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n  allMasterMetalsPurities {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  },\r\n   allMasterMaterials {\r\n    nodes {\r\n      alias\r\n      id\r\n      name\r\n    }\r\n  },\r\n  allMasterCollections {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n\r\n  allMasterMetalsPurities{\r\n    nodes {\r\n      name\r\n      id\r\n    }\r\n  }\r\n  allMasterTaxSettings {\r\n    nodes {\r\n      hsnNumber\r\n      id\r\n      productAttributes\r\n    }\r\n  }\r\n  allMasterStyles {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n\r\n  allMasterThemes {\r\n    nodes {\r\n      name\r\n      id\r\n      alias\r\n    }\r\n  }\r\n  allMasterDiamondTypes {\r\n    nodes {\r\n      shortCode\r\n      diamondColor\r\n      diamondClarity\r\n      id\r\n    }\r\n  }\r\n  allMasterOccasions {\r\n    nodes {\r\n      name\r\n      alias\r\n      id\r\n    }\r\n  }\r\n}`\r\n\r\n","import { PRODUCTCATEGORY } from \"../graphql/query\";\r\nimport {\r\n  MATERIALMASTER,\r\n  ORDERS,\r\n  USERORDERS,\r\n  VOUCHERMASTER,\r\n} from \"../services/queries\";\r\nimport apidata from \"../screens/Productupload/data.json\";\r\n\r\nexport const productCategory = {\r\n  query: PRODUCTCATEGORY,\r\n  mapper: (response) => {\r\n    const category = response.allMasterProductCategories.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const product_type = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n      title: _.name,\r\n    }));\r\n    const material = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const gender = response.allMasterGenders.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const vendorcode = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      display: _.name + \" (\" + _.shortCode + \" )\",\r\n    }));\r\n\r\n    const diamondsettings = response.allMasterDiamondsSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const diamondshapes = response.allMasterDiamondsShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      themeName: _.name,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      styleName: _.name,\r\n    }));\r\n\r\n    const occasions = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      occassionName: _.name,\r\n    }));\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      collectionName: _.name,\r\n    }));\r\n    const gemstonecolor = response.allMasterStonesColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecolor: _.name,\r\n    }));\r\n    const stones = response.allMasterStones.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      stonecount: _.name,\r\n    }));\r\n    const metalcolour = response.allMasterMetalsColors.nodes.map((_) => ({\r\n      ..._,\r\n      productColor: _.name,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n    const metalpurity = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n      purity: _.name,\r\n    }));\r\n    const diamondcolors = response.allMasterDiamondsColors.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.id,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondclarities = response.allMasterDiamondClarities.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.id,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const productseries = response.allProductLists.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.productSeries,\r\n    }));\r\n    const gemstontypes = response.allMasterGemstonesTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.shortCode,\r\n      label: _.name,\r\n    }));\r\n\r\n    const gemstonshapes = response.allMasterGemstonesShapes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n    const gemstonesettings = response.allMasterGemstonesSettings.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n        value: _.alias,\r\n        label: _.name,\r\n      })\r\n    );\r\n    const earringbacking = response.allMasterEarringBackings.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.alias,\r\n      label: _.name,\r\n    }));\r\n\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.diamondColor + _.diamondClarity,\r\n      label: _.diamondColor + _.diamondClarity,\r\n    }));\r\n    const hashtags = response.allMasterHashTags.nodes.map((_) => ({\r\n      ..._,\r\n      value: _.name,\r\n      label: _.name,\r\n    }));\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._,\r\n    //     name: _.name,\r\n    //     size:_.size,\r\n    //     productType : _.productType ,\r\n    // }))\r\n\r\n    const metals = apidata.metals;\r\n\r\n    return {\r\n      category,\r\n      product_type,\r\n      material,\r\n      gender,\r\n      vendorcode,\r\n      metalcolour,\r\n      metals,\r\n      diamondsettings,\r\n      diamondshapes,\r\n      themes,\r\n      styles,\r\n      occasions,\r\n      collections,\r\n      gemstonecolor,\r\n      stones,\r\n      metalpurity,\r\n      diamondcolors,\r\n      diamondtypes,\r\n      diamondclarities,\r\n      productseries,\r\n      gemstontypes,\r\n      gemstonshapes,\r\n      gemstonesettings,\r\n      earringbacking,\r\n      // metalSizeMinToMax\r\n      hashtags,\r\n    };\r\n  },\r\n};\r\n\r\nexport const orderList = {\r\n  query: ORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const userOders = {\r\n  query: USERORDERS,\r\n  mapper: (response) => {\r\n    const orders = response.allOrders.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    return {\r\n      orders,\r\n    };\r\n  },\r\n};\r\nexport const materialMaster = {\r\n  query: VOUCHERMASTER,\r\n  mapper: (response) => {\r\n    const materials = response.allMasterMaterials.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const vendors = response.allMasterVendors.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const product_categories = response.allMasterProductCategories.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const product_types = response.allMasterProductTypes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const pricing_components = response.allMasterPricingComponents.nodes.map(\r\n      (_) => ({\r\n        ..._,\r\n      })\r\n    );\r\n    const collections = response.allMasterCollections.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const purities = response.allMasterMetalsPurities.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const styles = response.allMasterStyles.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n\r\n    const themes = response.allMasterThemes.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const occations = response.allMasterOccasions.nodes.map((_) => ({\r\n      ..._,\r\n    }));\r\n    const diamondtypes = response.allMasterDiamondTypes.nodes.map((_) => ({\r\n      ..._,\r\n      alias: _.shortCode,\r\n      diamondtype: _.diamondColor + _.diamondClarity,\r\n    }));\r\n\r\n    // const metalSizeMinToMax = response.masterRingsSize.nodes.map(_ => ({\r\n    //     ..._\r\n    // }))\r\n\r\n    // alert(JSON.stringify(product_types))\r\n    return {\r\n      vendors,\r\n      product_categories,\r\n      product_types,\r\n      materials,\r\n      pricing_components,\r\n      collections,\r\n      purities,\r\n      styles,\r\n      themes,\r\n      occations,\r\n      diamondtypes,\r\n      // metalSizeMinToMax\r\n    };\r\n  },\r\n};\r\n","import React from \"react\";\r\nimport { productCategory } from \"../services/mapper\";\r\nimport { API_URL } from \"../config\";\r\nimport { isString } from \"util\";\r\n\r\nconst TOKEN = \"accesstoken\";\r\n\r\nconst initialNetworkCtx = {\r\n  networkCtx: {\r\n    mapper: productCategory,\r\n    status: {\r\n      called: false,\r\n      data: [],\r\n      loading: true,\r\n      error: false,\r\n      parsedData: [],\r\n    },\r\n    notRequested: true,\r\n  },\r\n  setNetworkCtx: () => null,\r\n  sendNetworkRequest: () => null,\r\n};\r\n\r\nconst sendNetworkRequest = async (url, params, data, auth = false) => {\r\n  url = API_URL + url;\r\n  console.info(\"URL\", url, data);\r\n  const method = data ? \"POST\" : \"GET\",\r\n    headers = {\r\n      \"Content-Type\": \"application/json\",\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n    };\r\n  let resdata = null;\r\n  if (auth) {\r\n    const token = localStorage.getItem(TOKEN);\r\n    if (token) headers[\"x-access-token\"] = token;\r\n    // else window.location = '/'\r\n  }\r\n  const response = await fetch(\r\n    url,\r\n    method === \"GET\"\r\n      ? { method }\r\n      : {\r\n          method,\r\n          body: isString(data) ? data : JSON.stringify(data),\r\n          headers,\r\n        }\r\n  );\r\n\r\n  if (response.status < 400) {\r\n    resdata = await response.json();\r\n  } else {\r\n    resdata = await response.json();\r\n    // if(url === 'https://api-staging.stylori.com/api/auth/signin')\r\n    // {\r\n    //    if(!resdata.auth)\r\n    //    {\r\n    //     //alert(resdata.message)\r\n    //    }\r\n    // }else{\r\n    //   //  alert(`${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`)\r\n    // }\r\n  }\r\n  resdata[\"statuscode\"] = response.status;\r\n\r\n  return resdata;\r\n};\r\n\r\nexport const NetworkContext = React.createContext(initialNetworkCtx);\r\n\r\nexport const NetworkConsumer = NetworkContext.Consumer;\r\n\r\nexport const NetworkProvider = (props) => {\r\n  const [networkCtx, setNetworkCtx] = React.useState(\r\n    initialNetworkCtx.networkCtx\r\n  );\r\n\r\n  return (\r\n    <NetworkContext.Provider\r\n      value={{ networkCtx, setNetworkCtx, sendNetworkRequest }}\r\n    >\r\n      {props.children}\r\n    </NetworkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport { Button, CircularProgress } from \"@material-ui/core\";\r\nimport { CSVLink } from \"react-csv\";\r\nconst DownloadCsv = () => {\r\n  const [loader, setLoader] = useState(false);\r\n  const [showdownload, setShowDownload] = useState(false);\r\n  const [dataCSV, setDataCSV] = useState({ keyCSV: [], valueCSV: [] });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const fetchCSVdata = async (event, done) => {\r\n    setLoader(true);\r\n    let responseCSV = await sendNetworkRequest(\"/productdetails\", {}, {});\r\n    let responseData = responseCSV.res_json;\r\n\r\n    if (responseCSV.statuscode === 200) {\r\n      let keyData = [];\r\n\r\n      for (const [key] of Object.entries(responseData[0])) {\r\n        keyData.push({ label: key, key: key });\r\n      }\r\n\r\n      setDataCSV({ ...dataCSV, keyCSV: keyData, valueCSV: responseData });\r\n      setLoader(false);\r\n      setShowDownload(true);\r\n    }\r\n  };\r\n\r\n  const clearCsv = () => {\r\n    setDataCSV({ keyCSV: [], valueCSV: [] });\r\n    setShowDownload(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loader ? (\r\n        <Button variant=\"outlined\" disabled color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n          <CircularProgress size={20} />\r\n        </Button>\r\n      ) : showdownload ? (\r\n        <CSVLink\r\n          header={dataCSV.keyCSV}\r\n          data={dataCSV.valueCSV}\r\n          filename={\"product-details.csv\"}\r\n          onClick={() => {\r\n            clearCsv();\r\n          }}\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }}>\r\n            Download CSV\r\n          </Button>\r\n        </CSVLink>\r\n      ) : (\r\n        <Button variant=\"outlined\" color=\"primary\" style={{ marginRight: \"8px\" }} onClick={() => fetchCSVdata()}>\r\n          Load CSV\r\n        </Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DownloadCsv;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Collapse,\r\n  Divider,\r\n  Drawer,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Slider,\r\n  TextField,\r\n  Typography,\r\n  Grid\r\n} from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  drawer: {\r\n    width: 420,\r\n    maxWidth: '100%'\r\n  },\r\n  header: {\r\n    padding: theme.spacing(2, 1),\r\n    display: 'flex',\r\n    justifyContent: 'space-between'\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 3),\r\n    flexGrow: 1\r\n  },\r\n  contentSection: {\r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  contentSectionHeader: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    cursor: 'pointer'\r\n  },\r\n  contentSectionContent: {},\r\n  formGroup: {\r\n   \r\n    padding: theme.spacing(2, 0)\r\n  },\r\n  fieldGroup: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  field: {\r\n    marginTop: 0,\r\n    marginBottom: 0\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1\r\n  },\r\n  addButton: {\r\n    marginLeft: theme.spacing(1)\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  minAmount: {\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  maxAmount: {\r\n    marginLeft: theme.spacing(3)\r\n  },\r\n  radioGroup: {},\r\n  actions: {\r\n    padding: theme.spacing(3),\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2)\r\n    }\r\n  }\r\n}));\r\n\r\nconst Filter = props => {\r\n  const { open, onClose,masters, onFilter, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const initialValues = {\r\n      name: '',\r\n      company: '',\r\n      mobile: '',\r\n      city: '',\r\n      version: null,\r\n      commodity: []\r\n  };\r\n\r\n  const [expandProject, setExpandProject] = useState(true);\r\n  const [expandCustomer, setExpandCustomer] = useState(false);\r\n  const [values, setValues] = useState({ ...initialValues });\r\n\r\n  const handleClear = () => {\r\n    setValues({ \r\n      ...initialValues });\r\n  };\r\n\r\n  const handleFieldChange = (event, field, value) => {\r\n    event.persist && event.persist();\r\n    setValues(values => ({\r\n      ...values,\r\n      [field]: value\r\n    }));\r\n  };\r\n  const handleoptionchange = type => (event, value) => {\r\n    setValues(values => ({\r\n      ...values,\r\n      [type]: value\r\n    }));\r\n  }\r\n  const handleinputchange = type => (e) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleTagAdd = () => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      if (newValues.tag && !newValues.tags.includes(newValues.tag)) {\r\n        newValues.tags = [...newValues.tags];\r\n        newValues.tags.push(newValues.tag);\r\n      }\r\n\r\n      newValues.tag = '';\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n\r\n  const handleTagDelete = tag => {\r\n    setValues(values => {\r\n      const newValues = { ...values };\r\n\r\n      newValues.tags = newValues.tags.filter(t => t !== tag);\r\n\r\n      return newValues;\r\n    });\r\n  };\r\n  const handleDateChange = type => (date) => {\r\n    setValues({\r\n      ...values,\r\n      [type]: date\r\n    })\r\n  };\r\n  const handleToggleProject = () => {\r\n    setExpandProject(expandProject => !expandProject);\r\n  };\r\n\r\n  const handleToggleCustomer = () => {\r\n    setExpandCustomer(expandCustomer => !expandCustomer);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    onFilter && onFilter(values);\r\n    onClose && onClose()\r\n  };\r\n\r\n  const paymentStatusOptions = ['Pending', 'Canceled', 'Completed', 'Rejected'];\r\n  const customerAgeOption = ['18 - 30', '30 - 45', '50 - 60', '60+'];\r\n\r\n  return (\r\n    <Drawer\r\n      anchor=\"right\"\r\n      classes={{ paper: classes.drawer }}\r\n      onClose={onClose}\r\n      open={open}\r\n      variant=\"temporary\"\r\n    >\r\n      <form\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className={classes.header}>\r\n          <Button\r\n            onClick={onClose}\r\n            size=\"small\"\r\n          >\r\n            <CloseIcon className={classes.buttonIcon} />\r\n            Close\r\n          </Button>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <Grid container xs={12} spacing={1}>\r\n            {/* <Grid item xs={12}>\r\n                      <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={values.name}\r\n                            onChange={handleinputchange('name')}\r\n                           label=\"Name\"\r\n                          />\r\n            </Grid> */}\r\n             <Grid xs={12}>\r\n            <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_categories}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_category}\r\n                  getOptionLabel={(option) => option.name}\r\n                  onChange={handleoptionchange('product_category')}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Category\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n                      \r\n           \r\n            <Grid item xs={12}>\r\n            <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={masters.product_types}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={values.product_type}\r\n                  onChange={handleoptionchange('product_type')}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={\"Product Type\"} fullWidth margin=\"dense\" variant=\"outlined\" />}\r\n                /> \r\n            </Grid> \r\n           </Grid>\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            fullWidth\r\n            onClick={handleClear}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.buttonIcon} />\r\n            Clear\r\n          </Button>\r\n          <Button\r\n            color=\"primary\"\r\n            fullWidth\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n            Apply filters\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onClose: PropTypes.func,\r\n  onFilter: PropTypes.func,\r\n  masters : PropTypes.object,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Paper, Button, Input } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    height: 42,\r\n    padding: theme.spacing(0, 2),\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  searchIcon: {\r\n    marginRight: theme.spacing(2),\r\n    color: theme.palette.icon\r\n  },\r\n  searchInput: {\r\n    flexGrow: 1\r\n  },\r\n  searchButton: {\r\n    marginLeft: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Search = props => {\r\n  const { onSearch, className, ...rest } = props;\r\n  const [searchcontent, setSearchcontent] = React.useState('');\r\n\r\n  const classes = useStyles();\r\n  const handleinputchange = type => e => {\r\n    setSearchcontent(e.target.value)\r\n  }\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Paper\r\n        className={classes.search}\r\n        elevation={1}\r\n      >\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <Input\r\n          className={classes.searchInput}\r\n          disableUnderline\r\n          placeholder=\"Search by order id, Name and Mobile\"\r\n          onChange={handleinputchange('searchcontent')}\r\n        />\r\n      </Paper>\r\n      <Button\r\n        className={classes.searchButton}\r\n        onClick={() => onSearch(searchcontent)}\r\n        size=\"large\"\r\n        variant=\"contained\"\r\n      >\r\n        Search\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearch.propTypes = {\r\n  className: PropTypes.string,\r\n  onSearch: PropTypes.func\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nexport let AlertProps = {\r\n  vertical: {\r\n    top: \"top\",\r\n    bottom: \"bottom\",\r\n  },\r\n  horizontal: {\r\n    left: \"left\",\r\n    right: \"right\",\r\n    center: \"center\",\r\n  },\r\n  severity: {\r\n    success: \"success\",\r\n    error: \"error\",\r\n    warning: \"warning\",\r\n    info: \"info\",\r\n  },\r\n};\r\n\r\n/**\r\n * AlertContext store the props which are neccessary to show the Alert component,\r\n * which is provided at the /src/App.js using the /src/App.alert.js.\r\n */\r\nexport let AlertContext = React.createContext({\r\n  open: false,\r\n  severity: AlertProps.severity.success,\r\n  msg: \"\",\r\n  vertical: AlertProps.vertical.top,\r\n  horizontal: AlertProps.horizontal.center,\r\n  onclose: () => null,\r\n  setSnack: () => null,\r\n});\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  CircularProgress,\r\n  Grid,\r\n  Switch,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { AlertContext } from \"../../../context/AlertContext\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst FullCSVData = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [options, setOptions] = React.useState([]);\r\n  const [loader, setLoader] = React.useState(false);\r\n  const [productType, setProductType] = React.useState(\"\");\r\n  const [include, setInclude] = React.useState(false);\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            type: allMasterProductTypes(orderBy: NAME_ASC) {\r\n              nodes {\r\n                name\r\n              }\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((res) => {\r\n        setOptions(\r\n          res.data.type.nodes.filter((i) => i.name).map((i) => i.name)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }, []);\r\n\r\n  const onDownload = () => {\r\n    if (productType == null) {\r\n      return snack.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Please choose a product type!\",\r\n      });\r\n    }\r\n    setLoader(true);\r\n    sendNetworkRequest(\"/getcsvdata\", {}, { type: productType, include })\r\n      .then((data) => {\r\n        exportFromJSON({\r\n          data,\r\n          fileName: `${productType}`,\r\n          exportType: \"xls\",\r\n        });\r\n        setOpen(false);\r\n        setLoader(false);\r\n        setProductType(null);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setOpen(false);\r\n        setLoader(false);\r\n        return snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occurred while downloading, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Button\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onClick={handleClickOpen}\r\n        style={{ marginRight: \"8px\" }}\r\n      >\r\n        Full Data Download\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Choose Product Type to download data?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Autocomplete\r\n            id=\"type\"\r\n            options={options}\r\n            value={productType}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={(e, value) => {\r\n              setProductType(value);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product Type\" variant=\"outlined\" />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={include}\r\n                onChange={() => {\r\n                  setInclude(!include);\r\n                }}\r\n                color=\"primary\"\r\n                name=\"include\"\r\n              />\r\n            }\r\n            label={\"Include disabled products\"}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {loader && <CircularProgress size={28} />}\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={onDownload} color=\"primary\">\r\n            Download\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default FullCSVData;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport DownloadCsv from \"./components/downloadcsv\";\r\nimport { Search, Filter } from \"./components\";\r\nimport FullCSVData from \"./components/FullCSVData\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  search: {\r\n    flexGrow: 1,\r\n    maxWidth: 480,\r\n    flexBasis: 480,\r\n  },\r\n  filterButton: {\r\n    marginLeft: \"auto\",\r\n  },\r\n  filterIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst ProductFilter = (props) => {\r\n  const { onFilter, onSearch, masters, dataCSV, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const handleFilterOpen = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleFilterClose = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  return (\r\n    <Grid {...rest} className={clsx(classes.root, className)} container spacing={3}>\r\n      <Grid item>\r\n        <Search className={classes.search} onSearch={onSearch} />\r\n      </Grid>\r\n\r\n      <Grid item>\r\n        <Grid container>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <DownloadCsv />}</Grid>\r\n          <Grid>{window.location.pathname === \"/productlist\" && <FullCSVData />}</Grid>\r\n          <Grid>\r\n            <Button className={classes.filterButton} color=\"primary\" onClick={handleFilterOpen} size=\"small\" variant=\"outlined\">\r\n              <FilterListIcon className={classes.filterIcon} /> Filter\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Filter onClose={handleFilterClose} onFilter={onFilter} open={openFilter} masters={masters} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nProductFilter.propTypes = {\r\n  className: PropTypes.string,\r\n  onFilter: PropTypes.func,\r\n  onSearch: PropTypes.func,\r\n  masters: PropTypes.object,\r\n};\r\n\r\nexport default ProductFilter;\r\n","import React from \"react\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\n\r\n//MuiAlert component which is shown inside the Snackbar component\r\nlet Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n};\r\n\r\nexport const Alerts = (props) => {\r\n  const [open, setOpen] = React.useState(props.open);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    props.onclose();\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      id=\"main_alert_snackbar\"\r\n      anchorOrigin={{\r\n        vertical: props.vertical,\r\n        horizontal: props.horizontal,\r\n      }}\r\n      open={open}\r\n      autoHideDuration={6000}\r\n      onClose={handleClose}\r\n    >\r\n      <Alert id=\"main_alert\" severity={props.severity} onClose={handleClose}>\r\n        {props.msg}\r\n      </Alert>\r\n    </Snackbar>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\",\r\n    marginBottom:\"60px\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { TableCell, TableRow, Button } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport parse from \"html-react-parser\";\r\n\r\nconst getComponent = (data) => {\r\n  switch (data.type) {\r\n    case \"TEXT\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            width: data?.customWidth ? data?.customWidth : \"\",\r\n            lineBreak: data?.customWidth ? \"anywhere\" : \"unset\",\r\n          }}\r\n        >\r\n          {data.rowData}\r\n        </div>\r\n      );\r\n    }\r\n    case \"HTMLTEXT\":{\r\n      return(\r\n        <div>{parse(data.rowData)}</div>\r\n      )\r\n    }\r\n    case \"INCREMENT\": {\r\n      return <div>{data.rowIndex + 1}</div>;\r\n    }\r\n    case \"TOTAL_STORES\": {\r\n      return <div>{data?.rowData?.length}</div>;\r\n    }\r\n    case \"VIEW_STORES\": {\r\n      return (\r\n        <div\r\n          style={{ color: \"blue\", cursor: \"pointer\",textDecoration:\"underline\" }}\r\n          onClick={data?.handleViewStores}\r\n        >\r\n          View Stores\r\n        </div>\r\n      );\r\n    }\r\n    case \"MBL_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"WEB_IMAGE\": {\r\n      return (\r\n        <img\r\n          alt=\"nacimages\"\r\n          src={data.rowData}\r\n          style={{ width: \"150px\", height: \"auto\" }}\r\n        />\r\n      );\r\n    }\r\n    case \"ACTION\": {\r\n      return (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            gap: 6,\r\n          }}\r\n        >\r\n          <EditIcon onClick={data?.handleEdit} style={{cursor:\"pointer\"}} />\r\n          <DeleteIcon onClick={data?.handleDelete} style={{color:\"red\",cursor:\"pointer\"}} />\r\n        </div>\r\n      );\r\n    }\r\n    case \"EDIT\": {\r\n      return (<EditIcon style={{cursor:\"pointer\"}} onClick={data?.handleEdit} />)\r\n    }\r\n    case \"BUTTON_ARRAY\" :{\r\n      return <div>\r\n        {data.rowData.map((val) => (\r\n          <div style={{paddingBottom:\"4px\"}}>\r\n            <div>{val.name}</div>\r\n            {val.url.length > 0 && <div style={{color:\"blue\"}}>{val.url}</div>}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    }\r\n  }\r\n};\r\n\r\nconst TableBodyRow = ({\r\n  tableData = [],\r\n  rowData = {},\r\n  rowIndex = null,\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      {tableData.map((val, i) => (\r\n        <TableCell>\r\n          {getComponent({\r\n            type: val.type,\r\n            rowData: rowData[val.name],\r\n            rowIndex: rowIndex,\r\n            handleViewStores: (e) => {\r\n              handleViewStores(e, rowData, rowIndex);\r\n            },\r\n            handleDelete: (e) => {\r\n              handleDelete(e, rowData, rowIndex);\r\n            },\r\n            handleEdit: (e) => {\r\n              handleEdit(e, rowData, rowIndex);\r\n            },\r\n            customWidth: val?.width,\r\n          })}\r\n        </TableCell>\r\n      ))}\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default TableBodyRow;\r\n","import {\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Link,\r\n  Button,\r\n  Table,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport TableBodyRow from \"./TableBodyRow\";\r\n\r\nconst TableComp = ({\r\n  header = [],\r\n  tableData = [],\r\n  data = [],\r\n  handleViewStores = () => null,\r\n  handleDelete = () => null,\r\n  handleEdit = () => null,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.tableWrapper}>\r\n      <Table\r\n        className={classes.table}\r\n        border={1}\r\n        borderColor={\"#ddd\"}\r\n        size=\"small\"\r\n        stickyHeader\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            {header?.map((val) => (\r\n              <TableCell>{val}</TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        {data.length > 0 ?\r\n          <TableBody>\r\n            {data.map((val, index) => (\r\n              <TableBodyRow\r\n                tableData={tableData}\r\n                rowData={val}\r\n                rowIndex={index}\r\n                handleViewStores={handleViewStores}\r\n                handleDelete={handleDelete}\r\n                handleEdit={handleEdit}\r\n              />\r\n            ))}\r\n          </TableBody> :\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              padding: \"10px 0px\",\r\n            }}\r\n          >\r\n            <Typography variant=\"body1\"> No data Found </Typography>\r\n          </div>}\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLFEATUREDPRODUCT,\r\n  CREATEFEATUREDPRODUCT,\r\n  DELETEFEATUREDPRODUCT,\r\n  ISACTIVEFEATUREDPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLFEATUREDPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allFeaturedProducts.nodes;\r\n\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEFEATUREDPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETEFEATUREDPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATEFEATUREDPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Featured Product\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\n\r\nimport { Breadcrumbs } from \"../index\";\r\nimport FeaturedProductComponent from \"./Component/FeaturedProductComponent\";\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <FeaturedProductComponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport {\r\n  ALLNEWARRIVALPRODUCT,\r\n  CREATENEWARRIVALPRODUCT,\r\n  DELETENEWARRIVALPRODUCT,\r\n  ISACTIVENEWARRIVALPRODUCT,\r\n} from \"../../../graphql/query\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst FeaturedProuductComponent = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [allFeaturedProudct, setAllFeaturedProduct] = useState([]);\r\n  const [createFeaturedProduct, setCreateFeaturedProduct] = useState({\r\n    productId: \"\",\r\n    isActive: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLNEWARRIVALPRODUCT,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allNewArrivalProducts.nodes;\r\n          setAllFeaturedProduct(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const onChangeChecked = (event) => {\r\n    setCreateFeaturedProduct({\r\n      ...createFeaturedProduct,\r\n      [event.target.name]: event.target.checked,\r\n    });\r\n  };\r\n  const handleChangeIsActive = (productId) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVENEWARRIVALPRODUCT,\r\n        variables: { ProductId: productId, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleDelete = async (ProductId) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETENEWARRIVALPRODUCT,\r\n        variables: { ProductId: ProductId },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_featured_Product = {\r\n      ProductId: createFeaturedProduct.productId,\r\n      isActive: createFeaturedProduct.isActive,\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATENEWARRIVALPRODUCT,\r\n        variables: create_featured_Product,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - New Arrival\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            NAC - Landing Page - Featured Product :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"productId\"\r\n              label=\"Product Id\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createFeaturedProduct.productId}\r\n              name=\"productId\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <Switch\r\n                  checked={createFeaturedProduct.isActive}\r\n                  onChange={onChangeChecked}\r\n                  name=\"isActive\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                />\r\n              }\r\n              label=\"Product Active\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Product Id</TableCell>\r\n                <TableCell>Proudct Name</TableCell>\r\n                <TableCell>Image</TableCell>\r\n                <TableCell>Active</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {allFeaturedProudct.map((val, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>{val.productId}</TableCell>\r\n                  <TableCell>\r\n                    {val?.productListByProductId?.productName}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={\r\n                        val?.productListByProductId?.productImagesByProductId\r\n                          ?.nodes[0]?.imageUrl\r\n                      }\r\n                      style={{ width: \"50px\", height: \"auto\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Switch\r\n                      checked={val.isActive ?? false}\r\n                      onChange={handleChangeIsActive(val.productId)}\r\n                      color=\"primary\"\r\n                      name=\"isActive\"\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.productId)}\r\n                      style={{\r\n                        color: \"#fff\",\r\n                        backgroundColor: \"red\",\r\n                        cursor: \"pointer !important\",\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProuductComponent;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./component/NewarrivalComponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { REVIEWQUERY } from \"../../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_sku\", label: \"Product Sku\" },\r\n  { id: \"customerName\", label: \"customer Name\" },\r\n  { id: \"rating\", label: \"Rating\" },\r\n  { id: \"title\", label: \"Title\" },\r\n  { id: \"message\", label: \"Message\" },\r\n  { id: \"ispublish\", label: \"Publish\" },\r\n  { id: \"isactive\", label: \"Active\" },\r\n];\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\nconst ISACTIVEREVIEW = `mutation MyMutation($id: UUID!, $isActive: Boolean) {\r\n    updateCustomerReviewById(\r\n      input: { customerReviewPatch: { isActive: $isActive }, id: $id }\r\n    ) {\r\n      customerReview {\r\n        id\r\n        isActive\r\n        message\r\n        productId\r\n        title\r\n        customerName\r\n        productSku\r\n        rating\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst ISPUBLISHREVIEW = `mutation MyMutation($id: UUID!, $isPublish: Boolean) {\r\n  updateCustomerReviewById(\r\n    input: { customerReviewPatch: { isPublish: $isPublish }, id: $id }\r\n  ) {\r\n    customerReview {\r\n      id\r\n      isPublish\r\n      message\r\n      productId\r\n      title\r\n      customerName\r\n      productSku\r\n      rating\r\n    }\r\n  }\r\n}\r\n`;\r\nconst CustomerReview = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [allReview, setAllReview] = useState([]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: REVIEWQUERY }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allCustomerReviews.nodes;\r\n        console.log(data);\r\n        setAllReview(data);\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const handleChangeIsPublish = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISPUBLISHREVIEW,\r\n        variables: { id: Id, isPublish: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChangeIsActive = (Id) => async (event) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ISACTIVEREVIEW,\r\n        variables: { id: Id, isActive: event.target.checked },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {allReview\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row, index) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align=\"left\">{row.productSku}</TableCell>\r\n                  <TableCell align=\"left\">{row.customerName}</TableCell>\r\n                  <TableCell align=\"left\">{row.rating}</TableCell>\r\n                  <TableCell align=\"left\">{row.title}</TableCell>\r\n                  <TableCell align=\"left\">{row.message}</TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isPublish ?? false}\r\n                      onChange={handleChangeIsPublish(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    <Switch\r\n                      checked={row.isActive ?? false}\r\n                      onChange={handleChangeIsActive(row.id)}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={allReview.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default CustomerReview;\r\n","import React from \"react\";\r\nimport { Breadcrumbs } from \"../index\";\r\nimport Reviewcomponent from \"./Component/Reviewcoponent\";\r\n\r\nconst FeaturedProduct = (props) => {\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <Reviewcomponent />\r\n    </>\r\n  );\r\n};\r\nexport default FeaturedProduct;\r\n","import React from 'react';\r\nimport { GRAPHQL_DEV_CLIENT } from '../config';\r\n\r\nconst globalCtxInitial = {\r\n    globalCtx: {\r\n        auth:{\r\n            loggedIn: false,\r\n            userData: {}\r\n        },\r\n        sideBarOpen: false,\r\n        isExpand: false,\r\n        selectedIndex: 0,\r\n        gqlClient: GRAPHQL_DEV_CLIENT\r\n    },\r\n    setGlobalCtx: () => null\r\n}\r\n\r\nexport const GlobalContext = React.createContext(globalCtxInitial);\r\n\r\nexport const GlobalConsumer = GlobalContext.Consumer;\r\n\r\nexport const GlobalProvider = props => {\r\n    const [ globalCtx, setGlobalCtx  ] = React.useState(globalCtxInitial.globalCtx);\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n    return(\r\n        <GlobalContext.Provider value={{ globalCtx, setGlobalCtx }} >\r\n            {props.children}\r\n        </GlobalContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst productuploadCtxInitial = {\r\n  productCtx: {\r\n    product_categoy: \"\",\r\n    steps: [\"Step1\", \"Step2\", \"Step6\"],\r\n    product_type: [],\r\n    productname: \"\",\r\n    material: \"\",\r\n    description: \"\",\r\n    minOrderQty: \"\",\r\n    maxOrderQty: \"\",\r\n    height: \"\",\r\n    length: \"\",\r\n    earringbacking: [],\r\n    product_type_shortcode: \"\",\r\n    category: [],\r\n    metalColour: \"\",\r\n    metalpurities: \"\",\r\n    isExpand: false,\r\n    selectedgender: \"\",\r\n    selected_metal_colour: {},\r\n    gender: {},\r\n    product_gender: [],\r\n    vendorcode: [],\r\n    productseries: [],\r\n    size: 0,\r\n    sizes: [],\r\n    selected_sizes: [],\r\n    productSize: [],\r\n    masterProductSize: [],\r\n    metal: {\r\n      value: 1,\r\n      label: \"Diamond\",\r\n    },\r\n    materials: [\r\n      \"Diamond\",\r\n      \"Gold\",\r\n      \"Gemstone\",\r\n      \"Solitaire\",\r\n      \"Silver\",\r\n      \"Platinum\",\r\n    ],\r\n    gemstontypes: \"\",\r\n    gemstonshapes: \"\",\r\n    product_code: \"\",\r\n    isactive: false,\r\n    gemstonelist: [],\r\n    diamondlist: [],\r\n    variants: [],\r\n    oldproductMetalColor: [],\r\n    oldproductMetalPurity: [],\r\n    productMetalColor: [],\r\n    productMetalPurity: [],\r\n    productDiamondColor: [],\r\n    productDiamondClarity: [],\r\n    productDiamondTypes: [],\r\n    productImages: [],\r\n    productDiamondTypesArray: [],\r\n    oldproductDiamondTypesArray: [],\r\n    productmaterials: [],\r\n    createVariantList: [],\r\n    editVariants: [],\r\n    editDiamondLists: [],\r\n    editGemstoneLists: [],\r\n    productVariantSize: [\r\n      8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\r\n    ],\r\n    variant_size: [],\r\n    gemstonetype: \"\",\r\n    gemstoneshape: \"\",\r\n    gemstonesettings: \"\",\r\n    gemstonesize: \"\",\r\n    gemstonecount: \"\",\r\n    gemstoneweight: \"\",\r\n    stonetype: \"\",\r\n    isactiveVariant: \"\",\r\n    editleadtime: \"\",\r\n    editreadytoship: false,\r\n    editisdefault: false,\r\n    editisactive: null,\r\n\r\n    editcostprice: 0,\r\n    editsellingprice: 0,\r\n    editmarkupprice: 0,\r\n    editdiscountprice: 0,\r\n    editcostpricetax: 0,\r\n    editsellingpricetax: 0,\r\n    editmarkuppricetax: 0,\r\n    editdiscountpricetax: 0,\r\n\r\n    diamondclarity: \"\",\r\n    diamondcolor: \"\",\r\n    diamondsettings: \"\",\r\n    diamondshape: \"\",\r\n    diamondcount: \"\",\r\n    diamondweight: \"\",\r\n    diamonditemname: \"\",\r\n    diamondsubitemname: \"\",\r\n    diamonddescription: \"\",\r\n    gemstoneitemname: \"\",\r\n    gemstonesubitemname: \"\",\r\n    gemstonedescription: \"\",\r\n    metalindex: -1,\r\n    themes: [],\r\n    prod_styles: [],\r\n    occassions: [],\r\n    collections: [],\r\n    hashtags: [],\r\n    stonecount: [],\r\n    stonecolour: [],\r\n    product_images: {},\r\n    metalcolour: [],\r\n    metal_purity: [],\r\n    metalpurity: [],\r\n    metal_color: 0,\r\n    metal_weight: 0,\r\n    diamond_colour: 0,\r\n    diamond_clarity: 0,\r\n    metal_height: 0,\r\n    metal_width: 0,\r\n    metal_length: 0,\r\n    metal_object: 0,\r\n    diamondtype: 0,\r\n    metals: [],\r\n    error_message: {},\r\n    showPriceBreakup: null,\r\n  },\r\n  masterData: {},\r\n  setProductCtx: () => null,\r\n};\r\n\r\nexport const ProductContext = React.createContext(productuploadCtxInitial);\r\n\r\nexport const ProductConsumer = ProductContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  productuploadCtxInitial.productCtx[mappertype] = mapper(apiData);\r\n\r\n  return productuploadCtxInitial.productCtx;\r\n};\r\n\r\nexport const ProductProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [productCtx, setProductCtx] = React.useState(\r\n    mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype)\r\n  );\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"productCtx s\", productCtx);\r\n  }, [productCtx.material]);\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{\r\n        productCtx,\r\n        setProductCtx,\r\n        masterData: mapDataToCtx(\r\n          props.value.data,\r\n          props.value.mapper,\r\n          props.value.mappertype\r\n        ),\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ProductContext.Provider>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nconst materialCtxInitial = {\r\n    materialCtx: {\r\n        \r\n    },\r\n    materialMaster: {\r\n        materials: []\r\n    },\r\n    setMaterialCtx: () => null\r\n}\r\n\r\nexport const MaterialContext = React.createContext(materialCtxInitial);\r\n\r\nexport const MaterialConsumer = MaterialContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    materialCtxInitial.materialCtx[mappertype] = mapper(apiData);\r\n\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(materialCtxInitial.materialCtx))\r\n\r\n    return materialCtxInitial.materialCtx;\r\n}\r\n\r\nexport const MaterialProvider = props => {\r\n    console.info('PROPS',props,props.value.mappertype)\r\n    const [ materialCtx, setmaterialCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',materialCtx);\r\n    },[materialCtx.material])\r\n\r\n    return(\r\n        <MaterialContext.Provider value={{ materialCtx, setmaterialCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </MaterialContext.Provider>      \r\n    )\r\n}","import React from 'react';\r\n\r\nconst voucherCtxInitial = {\r\n    voucherCtx: {\r\n        voucher:\"\",\r\n        attrobj:{}\r\n    },\r\n    voucherMaster: {\r\n        materials: []\r\n    },\r\n    setVoucherCtx: () => null\r\n}\r\n\r\nexport const VoucherContext = React.createContext(voucherCtxInitial);\r\n\r\nexport const VoucherConsumer = VoucherContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n    if(Object.keys(apiData).length === 0) return {};\r\n    console.log(\"resposeobjvalue1\"+JSON.stringify(apiData))\r\n    voucherCtxInitial.voucherCtx[mappertype] = mapper(apiData);\r\n\r\n\r\n    return voucherCtxInitial.voucherCtx;\r\n}\r\n\r\nexport const VoucherProvider = props => {\r\n    const [ voucherCtx, setVoucherCtx  ] = React.useState(mapDataToCtx(props.value.data, props.value.mapper,props.value.mappertype));\r\n    // on Mount get Data from storage\r\n    // on Unmount store data to storage\r\n\r\n    React.useEffect(() => {\r\n        console.info('materialCtx s',voucherCtx);\r\n    },[voucherCtx.voucher])\r\n\r\n    return(\r\n        <VoucherContext.Provider value={{ voucherCtx, setVoucherCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }} >\r\n            {props.children}\r\n        </VoucherContext.Provider>      \r\n    )\r\n}","import React from \"react\";\r\n\r\nconst orderCtxInitial = {\r\n  orderCtx: {},\r\n  orderMaster: {\r\n    orders: [],\r\n  },\r\n  setOrderCtx: () => null,\r\n};\r\n\r\nexport const OrderContext = React.createContext(orderCtxInitial);\r\n\r\nexport const OrderConsumer = OrderContext.Consumer;\r\n\r\nconst mapDataToCtx = (apiData, mapper, mappertype) => {\r\n  if (Object.keys(apiData).length === 0) return {};\r\n\r\n  orderCtxInitial.orderCtx[mappertype] = mapper(apiData);\r\n\r\n  console.log(\"resposeobjvalue1\" + JSON.stringify(orderCtxInitial.orderCtx));\r\n\r\n  return orderCtxInitial.orderCtx;\r\n};\r\n\r\nexport const OrderProvider = (props) => {\r\n  console.info(\"PROPS\", props, props.value.mappertype);\r\n  const [orderCtx, setorderCtx] = React.useState(mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype));\r\n  // on Mount get Data from storage\r\n  // on Unmount store data to storage\r\n\r\n  React.useEffect(() => {\r\n    console.info(\"orderCtx s\", orderCtx);\r\n  }, [orderCtx.order]);\r\n\r\n  return (\r\n    <OrderContext.Provider\r\n      value={{ orderCtx, setorderCtx, masterData: mapDataToCtx(props.value.data, props.value.mapper, props.value.mappertype) }}\r\n    >\r\n      {props.children}\r\n    </OrderContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Form, Grid, Select } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nconst useStyless = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\",\r\n];\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [category, setCategory] = React.useState(\"\");\r\n  const [producttype, setProducttype] = React.useState(\"\");\r\n\r\n  // const handleinputChange =type => e => {\r\n  // props.searchproduct(e.target.value)\r\n  // }\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setSearchtext(e.target.value);\r\n  };\r\n  const handlecategoryChange = (type) => (event, value) => {\r\n    setCategory(value.name);\r\n    props.applyfilter(searchtext, value.name, producttype);\r\n  };\r\n  const handletypeChange = (type) => (event, value) => {\r\n    setProducttype(value.name);\r\n    props.applyfilter(searchtext, category, value.name);\r\n  };\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  function applyfilter() {\r\n    props.applyfilter(searchtext, category, producttype);\r\n  }\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <div\r\n      className=\"search\"\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-around\",\r\n        background: \"white\",\r\n        borderTop: \"1px solid #e4e4e4\",\r\n        borderBottom: \"1px solid #e4e4e4\",\r\n      }}\r\n    >\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          fullWidth\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.mastercategory}\r\n          onChange={handlecategoryChange(\"product_category\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Category\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Autocomplete\r\n          id=\"free-solo-2-demo\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"10px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.name}\r\n          options={props.masterproducttype}\r\n          onChange={handletypeChange(\"product_type\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.name}\r\n                {...getTagProps({ index })}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Filter By Product Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{\r\n                ...params.InputProps,\r\n                readOnly: true,\r\n                type: \"search\",\r\n              }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <TextField\r\n          fullWidth\r\n          margin=\"dense\"\r\n          onChange={handleinputChange(\"productname\")}\r\n          placeholder={\"Search by product name or product id\"}\r\n          onChange={handleinputChange(\"productname\")}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          style={{\r\n            margin: \"auto\",\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid lg={3} md={3} sm={3}>\r\n        <Button\r\n          onClick={(e) => applyfilter()}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          style={{\r\n            marginLeft: \"10px\",\r\n            marginTop: \"18px\",\r\n            marginBottom: \"10px\",\r\n          }}\r\n        >\r\n          Search\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VENDORLISTS,PRODUCTCATEGORY,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button,Grid, Switch, FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nconst columns = [\r\n  { id: 'vendorcode', label: 'Vendor Code' },\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'Address', label: 'Address' },\r\n  { id: 'City', label: 'City' },\r\n  { id: 'gstNo', label: 'gstNo' },\r\n  { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n  { id: 'updatedAt', label: 'updated on' },\r\n  { id: 'actions', label: 'actions' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  contantview: {\r\n   placeItems: \"center\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\"\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [add,setAdd] = React.useState(false)\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [newvendorcode, setNewvendorcode] = React.useState(\"\")\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  async function addnewvendor()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getnewvendorcode', {}, {})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false }) \r\n    setIsadd(true)\r\n    setNewvendorcode(response.newvendorcode)\r\n  }\r\n  function Cancelcreate(refetch) {\r\n    window.location.reload();\r\n    // props.onCancel();\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      shortCode : vendordata.shortCode,\r\n      name : vendordata.name,\r\n      address : vendordata.address,\r\n      city : vendordata.city,\r\n      pincode : vendordata.pincode,\r\n      gstNo : vendordata.gstNo,\r\n      vendorDelivaryDays : vendordata.vendorDelivaryDays,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n    if(!editcontent.isedit)\r\n    {\r\n      \r\n      editcontent['isedit'] = false\r\n      editcontent['shortCode'] = newvendorcode\r\n    }\r\n   \r\n     let response =  await sendNetworkRequest('/updatevendor', {}, editcontent)\r\n     props.onCancel()\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  // refetch()\r\n  if(!editcontent.isedit)\r\n    {\r\n      \r\n  window.location.reload();\r\n    }else{\r\n      refetch()\r\n    }\r\n\r\n  }\r\n  function CancelEdit(diamondData) {\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('product_id');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n   // getproductlist(\"\",\"\",\"\",\"\",newPage)\r\n\r\n  }\r\n  useEffect( () => {\r\n\r\n   // getproductlist(\"\",\"\",\"\",\"\",\"\",order,orderBy)\r\n  const query = props.client.query\r\n    query({\r\n      query: PRODUCTFILTERMASTER,\r\n      fetchPolicy: \"network-only\"\r\n    }).then((data) => {\r\n      if (data) {\r\n      // setProductlists(data.data.allProductLists.nodes)\r\n       setMastercategories(data.data.allMasterProductCategories.nodes)\r\n       setMasterproducttypes( data.data.allMasterProductTypes.nodes )\r\n      }else{\r\n      }\r\n    })\r\n  .catch((error) => {console.log(\"smbcj\")})\r\n  }, [])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\",\"\",\"\",event.target.value,\"\")\r\n\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n    getproductlist(\"\",\"\",\"\",\"\",\"\",isAsc ? 'desc' : 'asc',property)\r\n\r\n\r\n\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype)\r\n  {\r\n    let products = allproductlists.filter(l => {\r\n      return l.productId.toLowerCase().match( searchtext.toLowerCase()) || l.productName.toLowerCase().match( searchtext.toLowerCase());\r\n    });\r\n    setProductlists(products)\r\n  }\r\n  async function getproductlist(searchtext,productcategory,producttype,pagesize,offsetvalue,sort,orderby)\r\n{\r\n  let bodydata = {\r\n    size : pagesize ? pagesize : rowsPerPage,\r\n    offset : offsetValue,\r\n    searchtext: searchtext,\r\n    productcategory: productcategory,\r\n    producttype: producttype,\r\n    order: sort ? sort : order,\r\n    orderby : orderby ? orderby : orderBy\r\n  }\r\n\r\n  let response =  await sendNetworkRequest('/getproductlist', {}, bodydata)\r\n  setProductlists(response.products.rows)\r\n  setPageCount(response.products.count)\r\n}\r\nfunction applyfilter(searchtext, categoryname, typename)\r\n{\r\n  getproductlist(searchtext,categoryname,typename)\r\n}\r\n  // function productItemStatusChange(id,isactive){\r\n    // let variable = {\r\n    //   \"productId\": id\r\n    // };\r\n    // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n    async function productItemStatusChange(id,isactive,refetch){\r\n      let variables ={\r\n        productId:id,\r\n        isActive:isactive ?false:true\r\n      }\r\n      await props.client.mutate({mutation:PRODUCTLISTSTATUSEDIT,variables}).then(res=>{\r\n\r\n        if(res!==null){\r\n          refetch();\r\n        }\r\n      }).catch(console.error)\r\n    \r\n    }\r\n    // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Grid container item xs={12} sm={12} className={classes.contantview} >\r\n        <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"left\", padding:\"16px\"} } >\r\n          <Typography  component=\"h4\" variant=\"h4\" >\r\n            Vendors\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth item xs={6} sm={6} style={{\"text-align\":\"right\",\"padding\":\"8px\"} } >\r\n            <Button variant=\"contained\" onClick={() => addnewvendor()}  color=\"primary\" >\r\n              Add New Vendor\r\n            </Button>\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          { <Query\r\n              query={VENDORLISTS}\r\n              onCompleted={data => setPageCount( data.allMasterVendors.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> \r\n                              {data.allMasterVendors.nodes.map((row, index) => (\r\n                           <>\r\n                           {index == 0 && isadd ? \r\n                           <TableRow key={row.name}>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              contentEditable={false}\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={newvendorcode}\r\n                              onChange={handleInputChange('shortCode')}\r\n\r\n                              label=\"Vendor Code\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('name')}\r\n\r\n                              label=\"Vendor Name\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('address')}\r\n\r\n                              label=\"Address\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.taxValue}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"City\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              \r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.hsnNumber}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"vendordeliverydays\"\r\n                             />\r\n                           </TableCell>\r\n                           <TableCell align=\"left\">\r\n                           <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {new Date()}\r\n                                  </Moment>\r\n                           </TableCell>\r\n                           \r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => Cancelcreate(refetch)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                           </TableRow> : null }\r\n                              \r\n                                \r\n                                <TableRow key={row.name}>\r\n                                  <TableCell component=\"th\" scope=\"row\">\r\n                                    {row.shortCode}\r\n                                  </TableCell>\r\n                {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendorname\"\r\n                        name=\"vendorname\"\r\n                        value={editcontent.name}\r\n                        onChange={handleInputChange('name')}\r\n                        label=\"Vendor Name\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                           </TableCell> }\r\n                           {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                  <TableCell align=\"left\">\r\n                  <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        fullWidth\r\n                        id=\"vendoraddress\"\r\n                        name=\"vendoraddress\"\r\n                        value={editcontent.address}\r\n                        onChange={handleInputChange('address')}                        label=\"Vendor Address\"\r\n                        /> </TableCell> :  <TableCell align=\"left\">{row.address} \r\n                           </TableCell> }\r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendorcity\"\r\n                              name=\"vendorcity\"\r\n                              value={editcontent.city}\r\n                              onChange={handleInputChange('city')}\r\n\r\n                              label=\"Vendor City\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.city} \r\n                           </TableCell> }\r\n                                  \r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"gst_no\"\r\n                              name=\"gst_no\"\r\n                              value={editcontent.gstNo}\r\n                              onChange={handleInputChange('gstNo')}\r\n\r\n                              label=\"GST Number\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.gstNo} \r\n                           </TableCell> }  \r\n\r\n                           {\r\n                        btnEdit.action && btnEdit.id == row.shortCode && !isadd ? \r\n                        <TableCell align=\"left\">\r\n                        <TextField\r\n                              variant=\"outlined\"\r\n                              margin=\"dense\"\r\n                              fullWidth\r\n                              id=\"vendordeliverydays\"\r\n                              name=\"vendordeliverydays\"\r\n                              value={editcontent.vendorDelivaryDays}\r\n                              onChange={handleInputChange('vendorDelivaryDays')}\r\n\r\n                              label=\"Vendor Delivery Days\"\r\n                             /> </TableCell> :  <TableCell align=\"left\">{row.vendorDelivaryDays} \r\n                           </TableCell> }\r\n\r\n                                  <TableCell align=\"left\">            \r\n                                  <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {row.createdAt}\r\n                                  </Moment>\r\n                                  </TableCell>\r\n                                  {\r\n                  btnEdit.action && btnEdit.id == row.shortCode && !isadd ?\r\n                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                      </Button>\r\n                    </TableCell> :\r\n                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                      <Button ><EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                }\r\n                                  \r\n                                </TableRow>\r\n                                </>\r\n\r\n                              ))}\r\n                              \r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n// import { Helmet } from 'react-helmet';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst NODE_ENV = process.env.NODE_ENV;\r\nconst GA_MEASUREMENT_ID = process.env.REACT_APP_GA_MEASUREMENT_ID;\r\n\r\nconst useStyles = makeStyles({\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nexport default function Page(props) {\r\n  const classes = useStyles();\r\n  const { title, children, ...rest } = props;\r\n\r\n  // useEffect(() => {\r\n  //   if (NODE_ENV !== 'production') {\r\n  //     return;\r\n  //   }\r\n\r\n  //   if (window.gtag) {\r\n  //     window.gtag('config', GA_MEASUREMENT_ID, {\r\n  //       page_path: router.location.pathname,\r\n  //       page_name: title\r\n  //     });\r\n  //   }\r\n  // }, [title, router]);\r\n  return (\r\n    <div {...rest}>\r\n      {/* <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet> */}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Shipping Rate\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addshippingattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n  let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/manageshippingattributes', {}, reqbody)\r\n    //  getmaster()\r\n     //   alert(JSON.stringify(response))\r\n     history.push('/shippingattributes')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allShippingCharges.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n            var selectedcategory = []\r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            })\r\n\r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allShippingCharges.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addshippingattributes;","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst AttributeComponent = props => {\r\n  const { className, ...rest } = props;\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState(props.attributes);\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  useEffect(() => {\r\n    // alert(JSON.stringify(props.attributes))\r\n    // setAttrobj(props.attributes)\r\n  }, [props.attributes])\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       disabled\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.hsnNumber}\r\n                        options={props.masters.shiprates}\r\n                       value={props.selectedrate}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.hsnNumber} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Tax Settings\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={attrobj ? attrobj.category : []}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={props.masters.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n           value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n           value={attrobj.materials}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n         //  value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={props.masters.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ||  attrobj.purities ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n  value={attrobj.purities}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={props.masters.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n //value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond || attrobj.components ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.components}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           getOptionLabel={option => option.diamondtype}\r\n\r\n           options={props.masters.diamondtypes}\r\n           onChange={handleoptionChange('components')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.collections}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.occations}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.styles}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={props.masters.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n            value={attrobj.themes}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n            options={props.masters.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n          // value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Update</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAttributeComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default AttributeComponent;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport { SHIPPINGMASTER, TAXMASTER } from '../../services/queries';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {AttributesComponent} from './components'\r\nimport { parse } from 'date-fns';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Addtaxattributes = withRouter(props => {\r\n  let history = useHistory()\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [rateid, setRateid] = React.useState('')\r\n\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [selectedrate, setSelectedrate] = React.useState({})\r\n  const [selectedattr, setSelectedattr] = React.useState({})\r\n  const [isloaded, setIsloaded] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  function addattributes(value)\r\n  {\r\n\r\n    let attrs = []\r\n    let display_arr = []\r\n    let keys = Object.keys(value);\r\n    keys.forEach(key => {\r\n      let values = []\r\n      let alias_arr = []\r\n      value[key].forEach(valueobj =>{\r\n        values.push(valueobj.name)\r\n        alias_arr.push(valueobj.alias)\r\n        attrs.push(valueobj.name)\r\n      })\r\n      \r\n      let displaytext = key + ' : ' + values.join(' , ')\r\n      display_arr.push(displaytext)\r\n    })\r\n\r\n  updateattributes(value,display_arr.join(' | '))\r\n\r\n  }\r\n  async function updateattributes(taxcontent,displaytext)\r\n  {\r\n    let reqbody = {\r\n      rateid : rateid,\r\n      attributes : taxcontent,\r\n      display_text : displaytext\r\n    } \r\n\r\n    let response =  await sendNetworkRequest('/managetaxattributes', {}, reqbody)\r\n    //  getmaster()\r\n     history.push('/taxsettings')\r\n    \r\n  }\r\n  async function getmastervalues(ratevalue)\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TAXMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let selectedattributes = [];\r\n        const diamondtypes = fatchvalue.data.allMasterDiamondTypes.nodes.map(_ => ({\r\n          ..._,\r\n          \"alias\": _.shortCode,\r\n          \"diamondtype\":_.diamondColor+_.diamondClarity\r\n      }))\r\n        if(fatchvalue.data.allMasterTaxSettings.nodes.length == 0)\r\n        {\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        }\r\n        fatchvalue.data.allMasterTaxSettings.nodes.forEach(element => {\r\n           \r\n          if(element.id == ratevalue)\r\n          {\r\n            let attr = {}\r\n            setSelectedrate(element)\r\n            let categories = element.productAttributes;\r\n\r\n            var selectedcategory = []\r\n            \r\n            fatchvalue.data.allMasterProductCategories.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n                if(categories.indexOf(catobj.alias) > -1)\r\n                {\r\n                  selectedcategory.push(catobj)\r\n                }\r\n              }\r\n              \r\n\r\n            })\r\n\r\n            attr['category'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterProductTypes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['product_types'] = selectedcategory\r\n\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMaterials.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['materials'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterMetalsPurities.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['purities'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterCollections.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['collections'] = selectedcategory\r\n            selectedcategory = []\r\n            fatchvalue.data.allMasterOccasions.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['occations'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterStyles.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['styles'] = selectedcategory\r\n            selectedcategory =[]\r\n            fatchvalue.data.allMasterThemes.nodes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n\r\n            attr['themes'] = selectedcategory\r\n            selectedcategory =[]\r\n            diamondtypes.forEach(catobj => {\r\n              if(categories)\r\n              {\r\n              if(categories.indexOf(catobj.alias) > -1)\r\n              {\r\n                selectedcategory.push(catobj)\r\n              }\r\n            }\r\n            })\r\n            \r\n            attr['components'] = selectedcategory\r\n            setSelectedattr(attr)\r\n          }\r\n          setMasters({\r\n            product_categories : fatchvalue.data.allMasterProductCategories.nodes,\r\n            product_types : fatchvalue.data.allMasterProductTypes.nodes,\r\n            materials :  fatchvalue.data.allMasterMaterials.nodes,\r\n            purities :  fatchvalue.data.allMasterMetalsPurities.nodes,\r\n            diamondtypes : diamondtypes,\r\n            collections : fatchvalue.data.allMasterCollections.nodes,\r\n            occations : fatchvalue.data.allMasterOccasions.nodes,\r\n            styles : fatchvalue.data.allMasterStyles.nodes,\r\n            themes : fatchvalue.data.allMasterThemes.nodes,\r\n            shiprates : fatchvalue.data.allMasterTaxSettings.nodes\r\n          })\r\n          setIsloaded(true)\r\n        })\r\n\r\n\r\n        \r\n\r\n      })\r\n      .catch(console.error)\r\n     \r\n\r\n      \r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    let prod_id = props.location.pathname.split('/')[2];\r\n    setRateid(prod_id)\r\n    getmastervalues(prod_id)\r\n   // getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n    \r\n {isloaded ?  <AttributesComponent isedit={false} attributes={selectedattr ? selectedattr : {}} selectedrate={selectedrate} masters={masters} onAdded={addattributes} className={classes.aboutvoucher} /> : null} \r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Addtaxattributes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New Category\r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { CATGORYLIST } from \"../../../../graphql/query\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  const [editcontent, setEditcontent] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias: vendordata.alias,\r\n      name: vendordata.name,\r\n      isedit: true,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: vendordata.shortCode, action: true });\r\n  }\r\n  async function Savevendor(refetch) {}\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    props.onCancel();\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card>\r\n        <CardHeader title=\"Category\" />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n\r\n                  <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                  <TableCell align=\"left\">Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {\r\n                  <Query\r\n                    query={CATGORYLIST}\r\n                    onCompleted={(data) =>\r\n                      setPageCount(data.allMasterProductCategories.totalCount)\r\n                    }\r\n                    variables={{ Veiw: rowsPerPage, Offset: offsetValue }}\r\n                  >\r\n                    {({ data, loading, error, refetch }) => {\r\n                      if (loading) {\r\n                        // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>;\r\n                        // return false\r\n                      }\r\n                      if (data) {\r\n                        return (\r\n                          <>\r\n                            {data.allMasterProductCategories.nodes.map(\r\n                              (row, index) => (\r\n                                <>\r\n                                  {index == 0 && props.isadd ? (\r\n                                    <TableRow key={row.name}>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          contentEditable={false}\r\n                                          id=\"vendordeliverydays\"\r\n                                          name=\"vendordeliverydays\"\r\n                                          value={props.newvendorcode}\r\n                                          onChange={handleInputChange(\r\n                                            \"shortCode\"\r\n                                          )}\r\n                                          label=\"Vendor Code\"\r\n                                        />\r\n                                      </TableCell>\r\n\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button onClick={(e) => Cancelcreate()}>\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    </TableRow>\r\n                                  ) : null}\r\n                                  <TableRow key={row.name}>\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"categoryname\"\r\n                                          name=\"categoryname\"\r\n                                          value={editcontent.name}\r\n                                          onChange={handleInputChange(\"name\")}\r\n                                          label=\"Name\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.name}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell align=\"left\">\r\n                                        <TextField\r\n                                          variant=\"outlined\"\r\n                                          margin=\"dense\"\r\n                                          fullWidth\r\n                                          id=\"alias\"\r\n                                          name=\"alias\"\r\n                                          value={editcontent.alias}\r\n                                          onChange={handleInputChange(\"alias\")}\r\n                                          label=\"alias\"\r\n                                        />{\" \"}\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell align=\"left\">\r\n                                        {row.shortCode}\r\n                                      </TableCell>\r\n                                    )}\r\n                                    {btnEdit.action &&\r\n                                    btnEdit.id == row.shortCode &&\r\n                                    !props.isadd ? (\r\n                                      <TableCell\r\n                                        style={{ width: 20 }}\r\n                                        align=\"center\"\r\n                                      >\r\n                                        <Button\r\n                                          onClick={(e) => Savevendor(refetch)}\r\n                                        >\r\n                                          <SaveIcon />\r\n                                        </Button>\r\n                                        <Button\r\n                                          onClick={(e) => CancelEdit(row)}\r\n                                        >\r\n                                          <CancelIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    ) : (\r\n                                      <TableCell\r\n                                        align=\"center\"\r\n                                        onClick={(e) => Editvendor(row)}\r\n                                        style={{ width: 20 }}\r\n                                      >\r\n                                        <Button>\r\n                                          <EditIcon />\r\n                                        </Button>\r\n                                      </TableCell>\r\n                                    )}\r\n                                  </TableRow>\r\n                                </>\r\n                              )\r\n                            )}\r\n                          </>\r\n                        );\r\n                      } else {\r\n                        return <div>{\"Fetch Products\"}</div>;\r\n                      }\r\n                    }}\r\n                  </Query>\r\n                }\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { MaterialContext } from '../../context';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n  \r\nexport default function Categorycontent() {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const { materialCtx, setMaterialCtx ,materialMaster} = React.useContext(MaterialContext);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const [isadd, setIsadd] = useState(false);\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      setOrders( [\r\n        {\r\n          id: uuid(),\r\n          created_at: \"test\",\r\n          customer: {\r\n            name: 'Ekaterina Tankova'\r\n          },\r\n          payment: {\r\n            ref: 'FAD103',\r\n            method: 'CreditCard',\r\n            total: '500.00',\r\n            currency: '$',\r\n            status: 'pending'\r\n          },\r\n          status: 'inactive'\r\n        }])\r\n    };\r\n\r\n    fetchOrders();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Header onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n      className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n      orders={materialCtx.materialMaster.materials}\r\n    />\r\n    \r\n  </Page>\r\n  );\r\n}","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MaterialProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './Categorycontent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const CategoryList = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n        <MaterialProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"materialMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </MaterialProvider>\r\n\r\n)});\r\nexport default CategoryList;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Configuration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Daily Metal Rate\",\r\n    \"Countries & Fx Rates\",\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"daily_metal_rate\",\r\n    \"countries\",\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Configure\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {master_options.map((text, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link\r\n            underline=\"none\"\r\n            component={RouterLink}\r\n            to={master_options_url[index]}\r\n          >\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {text}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Configuration;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  CardActions,\r\n  Button,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  colors\r\n} from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpenOutlined';\r\nimport PersonIcon from '@material-ui/icons/PersonOutline';\r\n\r\nimport { Label } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  actions: {\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    '& > * + *': {\r\n      marginLeft: 0\r\n    }\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst General = props => {\r\n  const { customer, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [openEdit, setOpenEdit] = useState(false);\r\n\r\n  const handleEditOpen = () => {\r\n    setOpenEdit(true);\r\n  };\r\n\r\n  const handleEditClose = () => {\r\n    setOpenEdit(false);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Customer info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>{customer.first_name} {customer.last_name}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email</TableCell>\r\n              <TableCell>\r\n                {customer ? customer.email : \"\"}\r\n                {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.isemailverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.isemailverified\r\n                      ? 'Email verified'\r\n                      : 'Email not verified'} \r\n                  </Label>\r\n                </div>}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Phone</TableCell>\r\n               <TableCell>{customer.mobile}\r\n               {customer.isemailverified && <div>\r\n                  <Label\r\n                    color={\r\n                         customer.ismobileverified ? colors.green[600] : colors.orange[600]\r\n                    }\r\n                  >\r\n                    \r\n                  {customer.ismobileverified\r\n                      ? 'Mobile verified'\r\n                      : 'Mobile not verified'} \r\n                  </Label>\r\n                </div>}\r\n                </TableCell>\r\n            </TableRow>\r\n            \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      {/* <CardActions className={classes.actions}>\r\n        <Button onClick={handleEditOpen}>\r\n          <EditIcon className={classes.buttonIcon} />\r\n          Edit\r\n        </Button>\r\n        <Button>\r\n          <LockOpenIcon className={classes.buttonIcon} />\r\n          Reset &amp; Send Password\r\n        </Button>\r\n        <Button>\r\n          <PersonIcon className={classes.buttonIcon} />\r\n          Login as Customer\r\n        </Button>\r\n      </CardActions> */}\r\n      {/* <CustomerEdit\r\n        customer={customer}\r\n        onClose={handleEditClose}\r\n        open={openEdit}\r\n      /> */}\r\n    </Card>\r\n  );\r\n};\r\n\r\nGeneral.propTypes = {\r\n  className: PropTypes.string,\r\n  customer: PropTypes.object.isRequired\r\n};\r\n\r\nexport default General;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n \r\n  console.log(props);\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={rowCount > 0 && numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n              inputProps={{ 'aria-label': 'select all desserts' }}\r\n            />\r\n          </TableCell> */}\r\n        {props.columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            width={headCell.type == 9 ? 300 : null}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label ? headCell.label : headCell.name}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default EnhancedTableHead;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  colors, Dialog,\r\n\r\n\r\n  FormControlLabel,\r\n  Grid, Switch,\r\n\r\n\r\n  TextField,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\nimport \"../../tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    paddingBottom: theme.spacing(2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    marginRight: theme.spacing(2),\r\n    // backgroundColor: colors.green[600],\r\n    // '&:hover': {\r\n    //   backgroundColor: colors.green[900]\r\n    // }\r\n  },\r\n}));\r\n\r\nconst EditContent = (props) => {\r\n  const { diamond, attributes, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    ...diamond,\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  function previewimage(url) {\r\n    // setpreviewurl(url)\r\n    // setShowpreview(true)\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const toggleChecked = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: !editcontent[type] });\r\n  };\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl = \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => { }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            {props.title}\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          {attributes.map((columnname, index) => (\r\n            <>\r\n              {showpreview && (\r\n                <Lightbox\r\n                  class=\"fade\"\r\n                  mainSrc={previewurl}\r\n                  // nextSrc={images[(photoIndex + 1) % images.length]}\r\n                  // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n                  onCloseRequest={() => setShowpreview(false)}\r\n                  onMovePrevRequest={() => alert(\"prev\")}\r\n                  onMoveNextRequest={() => alert(\"next\")}\r\n                />\r\n              )}\r\n              <Grid container xs={12} spacing={2}>\r\n                {(!columnname.type || columnname.type == 1 || columnname.type === 10) && columnname.key != \"action\" ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n\r\n                {columnname.key == \"email\" && !diamond.isedit ? (\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n                      label={columnname.label}\r\n                      disabled={columnname.type === 10}\r\n                    />\r\n                  </Grid>\r\n                ) : null}\r\n                {columnname.type === 2 && (\r\n                  <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                      label={columnname.key}\r\n                      labelPlacement=\"start\"\r\n                      control={\r\n                        <Switch\r\n                          checked={editcontent[columnname.key]}\r\n                          name=\"checkedB\"\r\n                          color=\"primary\"\r\n                          onChange={toggleChecked(columnname.key)}\r\n                        />\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {columnname.type === 3 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      multiple\r\n                      id=\"combo-box-demo\"\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 4 && (\r\n                  <Grid item xs={12}>\r\n                    <Typography> {diamond[columnname.key]}</Typography>\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type == 5 && (\r\n                  <Grid item xs={12}>\r\n                    <Autocomplete\r\n                      id=\"combo-box-demo\"\r\n                      // options={props.masters[columnname.mastervaluekey]}\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                      onChange={handleoptionChange(columnname.defaultkey)}\r\n                      value={editcontent[columnname.defaultkey]}\r\n                      getOptionLabel={(option) => option.name}\r\n                      renderInput={(params) => (\r\n                        <TextField {...params} fullWidth margin=\"dense\" label={columnname.label} variant=\"outlined\" />\r\n                      )}\r\n                    />{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 6 && (\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"outlined\" color=\"primary\">\r\n                      {columnname.controllabel}\r\n                    </Button>{\" \"}\r\n                  </Grid>\r\n                )}\r\n\r\n                {columnname.type === 9 && (\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={12}>\r\n                      <AvatarGroup max={2}>\r\n                        {diamond[columnname.key]\r\n                          ? diamond[columnname.key]\r\n                            .split(\",\")\r\n                            .map((diamond, index) => (\r\n                              <Avatar\r\n                                alt=\"Remy Sharp\"\r\n                                src={diamond}\r\n                                onClick={() => previewimage(diamond)}\r\n                                className={classes.small}\r\n                              />\r\n                            ))\r\n                          : null}\r\n                      </AvatarGroup>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <FilePond\r\n                        style={{ height: \"100\", width: \"100\" }}\r\n                        oninit={() => handleInit()}\r\n                        labelIdle=\"Add Banner Image\"\r\n                        onaddfile={(error, fileItem) => {\r\n                          if (!error) {\r\n                            uploadimagetoserver(fileItem, columnname.key, \"add\");\r\n                          } else {\r\n                            // alert(row[columnname.key])\r\n                          }\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} color={\"primary\"} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n          <Button onClick={() => onClose()} variant=\"contained\">\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditContent.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  attributes: PropTypes.array,\r\n\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditContent;\r\n","import { Button, Grid, Paper, Switch, TextField } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport AvatarGroup from \"@material-ui/lab/AvatarGroup\";\r\nimport axios from \"axios\";\r\nimport clsx from \"clsx\";\r\n// Import the Image EXIF Orientation and Image Preview plugins\r\n// Note: These need to be installed separately\r\n// `npm i filepond-plugin-image-preview filepond-plugin-image-exif-orientation --save`\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EnhancedTableHead from \"../../components/EnhancedTableHead\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditContent from \"./components/EditContent\";\r\nimport \"./tmp.css\";\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview);\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\"></IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  button: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Vendor = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [masterlist, setMasterlist] = React.useState(props.values);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editEmail, setEditEmail] = React.useState(false);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [isedit, setIsedit] = React.useState(false);\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const [aliasName, setaliasName] = React.useState(\"\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function addnewvendor() {\r\n    let sort_id = masterlist.length > 0 ? masterlist[0].filterOrder + 1 : 1;\r\n    setaliasName(props.prefix + sort_id);\r\n\r\n    setEditcontent({\r\n      alias: aliasName,\r\n      ...editcontent,\r\n      isedit: false,\r\n    });\r\n\r\n    // let masters = masterlist;\r\n    // masters.insert(0, []);\r\n\r\n    //setMasterlist(masters)\r\n    setIsadd(true);\r\n    setOpenedit(true);\r\n    //setBtnEdit({ ...btnEdit, id:null, action: true })\r\n  }\r\n  Array.prototype.insert = function (index, item) {\r\n    this.splice(index, 0, item);\r\n  };\r\n  function Editvendor(vendordata) {\r\n    setEditEmail(true);\r\n    delete vendordata[\"action\"];\r\n\r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit: true,\r\n    });\r\n    setOpenedit(true);\r\n    // setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n  }\r\n  async function Savevendor(content) {\r\n    props.onCreate(content);\r\n    setIsadd(false);\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n    //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    //  setBtnEdit({ ...btnEdit, id:'', action: false })\r\n    // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function searrchcontent() {\r\n    props.onSearch(\r\n      editcontent.searchcontent ? editcontent.searchcontent.toLowerCase() : \"\"\r\n    );\r\n  }\r\n  function handleInit() {\r\n    console.log(\"FilePond instance has initialised\");\r\n  }\r\n  function removeimage(imagename, keyvalue) {\r\n    let previmagenames = editcontent[keyvalue];\r\n    let newimages = [];\r\n    let previmages = previmagenames.split(\",\");\r\n    previmages.forEach((element) => {\r\n      if (element == imagename) {\r\n      } else {\r\n        newimages.push(element);\r\n      }\r\n    });\r\n    setEditcontent({ ...editcontent, [keyvalue]: newimages.join(\",\") });\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    if (isadd) {\r\n      let masters = masterlist;\r\n\r\n      masters.splice(0, 1);\r\n      setMasterlist(masterlist);\r\n    }\r\n    setIsadd(false);\r\n    setEditcontent({});\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleSearchChange = (type) => (e) => {\r\n    props.onSearch(e.target.value);\r\n  };\r\n  const handleChange = (type) => (event) => {\r\n    setEditcontent({ ...editcontent, [type]: event.target.checked });\r\n  };\r\n  const [showpreview, setShowpreview] = useState(false);\r\n  const [previewurl, setpreviewurl] = useState(\"\");\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"hsnNumber\");\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n\r\n  async function uploadimagetoserver(bodaydata, keyvalue, uploadtype) {\r\n    let imagename = moment(new Date()).format(\"DD-MM-YYYYHH-MM-SS\");\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        foldername: \"banner_images\",\r\n        product_id: null,\r\n      },\r\n      false\r\n    );\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData.filepath;\r\n    let imageurl =\r\n      \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname;\r\n\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n    let previmagenames = editcontent[keyvalue];\r\n    let previmages = [];\r\n    if (previmagenames) {\r\n      previmages = previmagenames.split(\",\");\r\n      previmages.push(imageurl);\r\n    }\r\n    setEditcontent({ ...editcontent, [keyvalue]: previmages.join(\",\") });\r\n  }\r\n  useEffect(() => {\r\n    setMasterlist(props.values);\r\n  }, [props.values]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info(\"You clicked a breadcrumb.\");\r\n  }\r\n  function previewimage(url) {\r\n    setpreviewurl(url);\r\n    setShowpreview(true);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showpreview && (\r\n        <Lightbox\r\n          class=\"fade\"\r\n          mainSrc={previewurl}\r\n          // nextSrc={images[(photoIndex + 1) % images.length]}\r\n          // prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={() => setShowpreview(false)}\r\n          onMovePrevRequest={() => alert(\"prev\")}\r\n          onMoveNextRequest={() => alert(\"next\")}\r\n        />\r\n      )}\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={3} sm={3}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\">\r\n            <Grid fullwidth item xs={9} sm={9}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                fullWidth\r\n                autoComplete=\"off\"\r\n                id=\"vendordeliverydays\"\r\n                name=\"vendordeliverydays\"\r\n                //  /  value={editcontent.searchcontent}\r\n                onChange={handleInputChange(\"searchcontent\")}\r\n                label=\"Search text\"\r\n              />\r\n            </Grid>\r\n            <Grid fullwidth item xs={3} sm={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() => searrchcontent()}\r\n                color=\"primary\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            {props?.fxSyncAPI && (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => props.fxSyncAPI()}\r\n                color=\"primary\"\r\n              >\r\n                Sync Latest Fx Rate\r\n              </Button>\r\n            )}\r\n            {props.button_title ? (\r\n              <Button\r\n                className={classes.button}\r\n                variant=\"contained\"\r\n                onClick={() => addnewvendor()}\r\n                color=\"primary\"\r\n              >\r\n                {props.button_title}\r\n              </Button>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n            <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n            <TableBody>\r\n              {masterlist.map((row, index) => (\r\n                <>\r\n                  <TableRow>\r\n                    {props.columns.map((columnname, index) => (\r\n                      <>\r\n                        {columnname.key === \"action\" ? (\r\n                          <TableCell align=\"center\" style={{ width: 20 }}>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <>\r\n                                <Button onClick={(e) => Savevendor()}>\r\n                                  <SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}>\r\n                                  <CancelIcon />\r\n                                </Button>\r\n                              </>\r\n                            ) : (\r\n                              <Button onClick={(e) => Editvendor(row)}>\r\n                                <EditIcon />\r\n                              </Button>\r\n                            )}\r\n                          </TableCell>\r\n                        ) : (\r\n                          <>\r\n                            {btnEdit.action && btnEdit.id == row.id ? (\r\n                              <TableCell align=\"left\">\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    onChange={handleChange(columnname.key)}\r\n                                    checked={editcontent[columnname.key]}\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button variant=\"outlined\" color=\"primary\">\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type == 3 ? (\r\n                                  <Autocomplete\r\n                                    multiple\r\n                                    id=\"combo-box-demo\"\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 9 ? (\r\n                                  <>\r\n                                    <FilePond\r\n                                      oninit={() => handleInit()}\r\n                                      labelIdle=\"Add Banner Image\"\r\n                                      onaddfile={(error, fileItem) => {\r\n                                        if (!error) {\r\n                                          uploadimagetoserver(\r\n                                            fileItem,\r\n                                            columnname.key,\r\n                                            \"add\"\r\n                                          );\r\n                                        } else {\r\n                                          // alert(row[columnname.key])\r\n                                        }\r\n                                      }}\r\n                                    />\r\n                                    <div className={classes.imagecontainer}>\r\n                                      {editcontent[columnname.key]\r\n                                        ? editcontent[columnname.key]\r\n                                            .split(\",\")\r\n                                            .map((row, index) => (\r\n                                              <Badge\r\n                                                overlap=\"circle\"\r\n                                                anchorOrigin={{\r\n                                                  vertical: \"top\",\r\n                                                  horizontal: \"right\",\r\n                                                }}\r\n                                                badgeContent={\r\n                                                  <HighlightOffIcon\r\n                                                    fontSize=\"small\"\r\n                                                    onClick={() =>\r\n                                                      removeimage(\r\n                                                        row,\r\n                                                        columnname.key\r\n                                                      )\r\n                                                    }\r\n                                                  />\r\n                                                }\r\n                                              >\r\n                                                <Avatar\r\n                                                  alt=\"Remy Sharp\"\r\n                                                  src={row}\r\n                                                  className={classes.small}\r\n                                                />\r\n                                              </Badge>\r\n                                            ))\r\n                                        : null}\r\n                                    </div>\r\n                                  </>\r\n                                ) : null}\r\n                                {columnname.type == 5 ? (\r\n                                  <Autocomplete\r\n                                    id=\"combo-box-demo\"\r\n                                    // options={\r\n                                    //   props.masters[columnname.mastervaluekey]\r\n                                    // }\r\n                                    margin=\"dense\"\r\n                                    fullWidth\r\n                                    options={\r\n                                      columnname.mastervaluekey\r\n                                        ? props.masters[\r\n                                            columnname.mastervaluekey\r\n                                          ]\r\n                                        : props.masters\r\n                                    }\r\n                                    onChange={handleoptionChange(\r\n                                      columnname.defaultkey\r\n                                    )}\r\n                                    value={editcontent[columnname.defaultkey]}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label={columnname.label}\r\n                                        variant=\"outlined\"\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type == 4 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {!columnname.type || columnname.type == 1 ? (\r\n                                  <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    id={columnname.key}\r\n                                    name={columnname.key}\r\n                                    value={editcontent[columnname.key]}\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    label={columnname.label}\r\n                                  />\r\n                                ) : null}{\" \"}\r\n                              </TableCell>\r\n                            ) : (\r\n                              <TableCell>\r\n                                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                                {columnname.type == 8 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    View\r\n                                  </Button>\r\n                                ) : null}\r\n                                {columnname.type === 6 ? (\r\n                                  <Button\r\n                                    onClick={() => props.onPermissionadd(row)}\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    color=\"primary\"\r\n                                  >\r\n                                    {columnname.controllabel}\r\n                                  </Button>\r\n                                ) : null}\r\n\r\n                                {columnname.type === 9 ? (\r\n                                  <AvatarGroup max={2}>\r\n                                    {row[columnname.key]\r\n                                      ? row[columnname.key]\r\n                                          .split(\",\")\r\n                                          .map((row, index) => (\r\n                                            <Avatar\r\n                                              alt=\"Remy Sharp\"\r\n                                              src={row}\r\n                                              onClick={() => previewimage(row)}\r\n                                              className={classes.small}\r\n                                            />\r\n                                          ))\r\n                                      : null}{\" \"}\r\n                                    {/* className={classes.small} />)) : null } */}\r\n                                  </AvatarGroup>\r\n                                ) : null}\r\n                                {columnname.type === 2 ? (\r\n                                  <Switch\r\n                                    color=\"primary\"\r\n                                    name=\"checkedB\"\r\n                                    onChange={handleInputChange(columnname.key)}\r\n                                    checked={row[columnname.key]}\r\n                                    inputProps={{\r\n                                      \"aria-label\": \"primary checkbox\",\r\n                                    }}\r\n                                  />\r\n                                ) : null}\r\n                                {columnname.type != 2 &&\r\n                                columnname.type != 6 &&\r\n                                columnname.type != 8 &&\r\n                                columnname.type != 9 ? (\r\n                                  <Typography>\r\n                                    {\" \"}\r\n                                    {row[columnname.key]}\r\n                                  </Typography>\r\n                                ) : null}\r\n                              </TableCell>\r\n                            )}\r\n                          </>\r\n                        )}\r\n                      </>\r\n                    ))}\r\n                  </TableRow>\r\n                </>\r\n              ))}\r\n\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 200, 500]}\r\n                  count={[props.values.length]}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  SelectProps={{\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  // ActionsComponent={TablePaginationActions}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          {editcontent && (\r\n            <EditContent\r\n              diamond={editcontent}\r\n              attributes={props.columns}\r\n              title={props.title}\r\n              masters={props.masters}\r\n              onApply={Savevendor}\r\n              onClose={handleApplicationClose}\r\n              open={openedit}\r\n              prefix={aliasName}\r\n              editemail={editEmail}\r\n            />\r\n          )}\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Box from '@material-ui/core/Box';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport {General, Results} from './components'\r\nimport Mastercontent from '../../components/Mastercontent'\r\nimport data from './data.json'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Grid,\r\n  Divider,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  colors\r\n} from '@material-ui/core';\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Typography\r\n      component=\"div\"\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <Box p={3}>{children}</Box>}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    'aria-controls': `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    height: '80vh'\r\n  },\r\n  tabs: {\r\n    minWidth: '250px',\r\n    maxWidth: '250px',\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginRight : theme.spacing(2),\r\n    borderRight: `2px solid ${theme.palette.divider}`,\r\n  },\r\n}));\r\nconst master_options = ['Address Book','Wish List','Orders']\r\n  const master_options_url = ['/address','/userwishlist','/orderlist']\r\n\r\nexport const Customerdetails = withRouter(props => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [value, setValue] = React.useState(0);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({});\r\n  const [customer, setCustomer] = React.useState({});\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    // history.push(`orderlist/${id}`)\r\n    window.location.href = `orderlist/${id}`\r\n  }\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\nasync function getmaster()\r\n  {\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n\r\n    setCustomer(response.userprofile)\r\n  }\r\n  React.useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    {/* <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid> */}\r\n    <Grid container item xs={12} sm={12} lg={12} >\r\n    <Grid  item xs={12} sm={6} lg={6} >\r\n    <General customer ={customer} /> \r\n\r\n      </Grid>\r\n\r\n    </Grid>\r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={2} lg={2} >\r\n    <Link underline='none' component={RouterLink}  to={master_options_url[index]+'/'+user_id}>\r\n     <Card fullwidth\r\n    //  onClick={(e) => ProductEdit(customer.id)}\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <div className={classes.root}>\r\n      \r\n    //   <Tabs\r\n    //     orientation=\"vertical\"\r\n    //     variant=\"standard\"\r\n    //     value={value}\r\n    //     onChange={handleChange}\r\n    //     aria-label=\"Vertical tabs example\"\r\n    //     className={classes.tabs}\r\n    //   >\r\n    //     <Tab label=\"Personal Information\" {...a11yProps(0)} />\r\n    //     <Tab label=\"Address Book\" {...a11yProps(1)} />\r\n    //     <Tab label=\"Shopping Bag\" {...a11yProps(2)} />\r\n    //     <Tab label=\"Wish list\" {...a11yProps(3)} />\r\n    //     <Tab label=\"All Orders\" {...a11yProps(4)} />\r\n \r\n    //   </Tabs>\r\n    //   <TabPanel value={value} style={{width :  '50%'}} index={0}>\r\n    //   <General customer ={customer} /> </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={1}>      \r\n    //       <Results title={'Address Book'} masters={masters.addressess} columns={data.addressbook}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={2}>\r\n\r\n    //   <Results title={'Shopping Bag'} masters={[]} columns={data.shoppingbag}/>\r\n      \r\n    //   </TabPanel>\r\n    //   <TabPanel  style={{width :  '100%'}}  value={value} index={3}>\r\n    //   <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/>\r\n    //   </TabPanel>\r\n    //   <TabPanel style={{width :  '100%'}} value={value} index={4}>\r\n    //   <Results title={'All Orders'}   columns={data.orders} masters={masters.orders}/>\r\n    //   </TabPanel>\r\n      \r\n     \r\n    // </div>\r\n  );\r\n});\r\n\r\nexport default Customerdetails;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Tabs, Tab, Divider, colors } from '@material-ui/core';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Page from '../../components/Page/Page'\r\nimport { Header } from './components';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3)\r\n  },\r\n  tabs: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst master_options = ['Attribute Master','Categories','ProductTypes', 'Materials','Metal Colours','Metal Purities','Collections','Occassions','Styles','Themes','Designs','Weights','Diamond Types',\r\n'Diamond Settings','Diamond Shapes','Earring Backings','Gemstone Settings','Gemstone Shapes','Gemstone Types','Stones','Stone Colours','Stone Shapes',\r\n'Gender','SEO Priorities','Tax Settings 1','Tax Settings 2','Payment Status','Order Status','Shipping Zones','Shipment Setting I','Shipment Setting II']\r\n  const master_options_url = ['masterattributes','categories','producttypes', 'materialmaster','mastercolors','masterpurities','collections','masteroccassions','masterstyles','masterthemes','designs','weights','diamonds','diamondsettings','diamondshapes','earringbacking',\r\n  'gemstonesettings','gemstoneshapes','gemstonetypes','masterstones','masterstonecolors','masterstoneshapes','genders','seopriority','Taxsetup','taxsettings','paymentstatus','orderstatus','zones','shipmensettings','shippingattributes']\r\n\r\nexport const CustomerManagementDetails = withRouter(props => {\r\n\r\n  const { match, history } = props;\r\n  const classes = useStyles();\r\n  const { id, tab } = match.params;\r\n\r\n  const handleTabsChange = (event, value) => {\r\n    history.push(value);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'summary', label: 'Summary' },\r\n    { value: 'invoices', label: 'Invoices' },\r\n    { value: 'logs', label: 'Logs' }\r\n  ];\r\n\r\n  if (!tab) {\r\n    //return <Redirect to={`/customerdetails`} />;\r\n  }\r\n\r\n  if (!tabs.find(t => t.value === tab)) {\r\n   // return <Redirect to=\"/errors/error-404\" />;\r\n  }\r\n\r\n  return (\r\n    <Grid container  spacing={3}>  \r\n    {/* <AddContact contactlist={[]}/> */}\r\n    <Grid container item xs={12} sm={12} spacing={2}>\r\n            <Typography component=\"h5\" variant=\"h5\">\r\n            Configure\r\n          </Typography>\r\n    </Grid>\r\n    \r\n    {master_options.map((text, index) => (\r\n    <Grid  item xs={6} sm={4} lg={3} >\r\n    <Link underline='none' component={RouterLink} to={master_options_url[index]}>\r\n     <Card fullwidth\r\n     className=\"card2\">\r\n        <CardContent >\r\n          <Typography style={{textAlign: \"center\",marginTop:8}} component=\"h6\" variant=\"h5\">\r\n            {text}\r\n          </Typography>\r\n          \r\n          {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n        </CardContent>\r\n        \r\n     \r\n    </Card>\r\n    </Link>\r\n    </Grid>\r\n    ))}\r\n\r\n    \r\n    </Grid>\r\n    // <Page\r\n    //   className={classes.root}\r\n    //   title=\"Customer Management Details\"\r\n    // >\r\n    //   <Header />\r\n    //    <Tabs\r\n    //     className={classes.tabs}\r\n    //     onChange={handleTabsChange}\r\n    //     scrollButtons=\"auto\"\r\n    //     value={tab}\r\n    //     variant=\"scrollable\"\r\n    //   >\r\n    //     {tabs.map(tab => (\r\n    //       <Tab\r\n    //         key={tab.value}\r\n    //         label={tab.label}\r\n    //         value={tab.value}\r\n    //       />\r\n    //     ))}\r\n    //   </Tabs>\r\n    //   <Divider className={classes.divider} />\r\n    //  {/* <div className={classes.content}>\r\n    //     {tab === 'summary' && <Summary />}\r\n    //     {tab === 'invoices' && <Invoices />}\r\n    //     {tab === 'logs' && <Logs />}\r\n    //   </div> */}\r\n    // </Page>\r\n  );\r\n});\r\n\r\nCustomerManagementDetails.propTypes = {\r\n  history: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default CustomerManagementDetails;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const customer = {\r\n    name: 'Ekaterina Tankova'\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Typography\r\n        component=\"h2\"\r\n        gutterBottom\r\n        variant=\"overline\"\r\n      >\r\n        Customers\r\n      </Typography>\r\n      <Typography\r\n        component=\"h1\"\r\n        variant=\"h3\"\r\n      >\r\n        {customer.name}\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  }\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n      //     setInvoices(response.data.invoices);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title=\"Customer invoices\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>ID</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Description</TableCell>\r\n                    <TableCell>Payment Method</TableCell>\r\n                    <TableCell>Total</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell align=\"right\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {invoices.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      <TableCell>#{invoice.id.split('-').shift()}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React from \"react\";\r\nimport { TextField, Grid } from \"@material-ui/core\";\r\nimport propTypes from \"prop-types\";\r\n\r\n// NOTABLE POINTS\r\n//  Min and Max\r\n// Email ID\r\n// Confirm Email ID\r\n// Mobile Number\r\n// Number\r\n// Password\r\n// Repeat Password\r\n// On Button Submit\r\n// On Moving Out\r\n// Live\r\n\r\nexport const Input = props => {\r\n  let {\r\n    isNumber = false,\r\n    pattern,\r\n    maxLength,\r\n    minLength,\r\n    helperText,\r\n    ...rest\r\n  } = props;\r\n  const defaultStyle = {\r\n    margin: \"dense\",\r\n    variant: \"outlined\",\r\n    'input-label': {\r\n      textOverflow: 'ellipsis',\r\n      whiteSpace: 'nowrap',\r\n      overflow: 'hidden',\r\n      width: '100%',\r\n      color: 'red'\r\n    },\r\n  \r\n    'input': {\r\n      '&::placeholder': {\r\n        textOverflow: 'ellipsis !important',\r\n        color: 'red'\r\n      }\r\n    }\r\n  };\r\n\r\n  // INTEGRATE THEME HERE\r\n\r\n  const handleKeyPress = e => {\r\n    if (isNumber) {\r\n      if (!(e.which >= 48 && e.which <= 57)) e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <TextField\r\n                inputProps={{ pattern, maxLength, minLength  }}\r\n\r\n        style={{ width: \"100%\" }}\r\n        helperText={helperText}\r\n        onKeyPress={handleKeyPress}\r\n        {...defaultStyle}\r\n        {...rest}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  isNumber: propTypes.bool\r\n};\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport {Input} from '../../components/Input.js'\r\n\r\nimport \"./Dashboard.css\"\r\n\r\nclass Dashboard_ extends React.Component {\r\n  \r\n   \r\n  render() {\r\n  return (\r\n    <Container className=\"root\" component=\"main\">\r\n    <Input />\r\n  </Container>\r\n         \r\n  );\r\n}\r\n}\r\n\r\nexport const Dashboard = withRouter(Dashboard_);\r\n  export default Dashboard;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n\r\n          {/* <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button> */}\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Divider} from '@material-ui/core'\r\nexport default function ConformationAlert(props) {\r\n  \r\n  const handleOk = () => {\r\n    props.onSuccess(props.data, props.refetch)\r\n  };\r\n  const handleClose = () => {\r\n    props.onCancel()\r\n  };\r\n  return (\r\n    <div>\r\n\r\n      <Dialog\r\n        open={props.isshow}\r\n        onClose={handleClose}\r\n        fullWidth={true}\r\n        maxWidth={'sm'}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            {props.message}\r\n            Verify details before deleting\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"default\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleOk} variant={\"contained\"} color=\"primary\" autoFocus>\r\n          {props.positivebtn}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {SALEDISCOUNTS,DELETESALEDISCOUNT, DISCOUNTSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link'\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibileIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  FormControlLabel,\r\n  Switch,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n   // minWidth: 1150\r\n   overflowX: 'auto',\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  let history = useHistory();\r\n\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function DiscountEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n   // history.push(`product_attributes/${id}`)\r\n   history.push(`salediscount/${id}`)\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETESALEDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      discountId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:DISCOUNTSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n          action={\r\n            <Link underline='none' component={RouterLink} to={'/salediscount'}>\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={SALEDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allSaleDiscounts.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allSaleDiscounts.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                  \r\n                                 <>\r\n\r\n                                  <TableRow key={row.name}>\r\n                                  <TableCell align=\"left\">{row.discountName} \r\n                                              </TableCell>\r\n                                    <TableCell align=\"left\">{row.components.join(' , ')} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.discountType == 2 ? row.discountValue+'%' : row.discountValue} \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">{row.productAttributesText ? row.productAttributesText : \"\"\r\n                                              } \r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  value=\"checkedA\"\r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)}\r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    {/* <TableCell align=\"center\" onClick={(e) => handleDelete(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell> */}\r\n                                    <TableCell align=\"center\"  style = {{width: 20}}>\r\n                                      <Button onClick={(e) => DiscountEdit(row.id)}><VisibileIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"Components\",\r\n  \"discount_value\",\r\n  \"product attributes\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const DiscountList = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    \r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Sale Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      onAdd={addcategory}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default DiscountList;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { EARRINGBACKING, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Earringbacking = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageearring', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: EARRINGBACKING  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    \r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterEarringBackings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Earring Backings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Earringbacking;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { GOLDPRICESETUPMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\nimport {Card,TextField,Checkbox} from '@material-ui/core';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Goldpriceupdate = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervendors, setMastervendors] = React.useState([])\r\n  const [goldprice, setGoldprice] = React.useState({\r\n    cost_price : '',\r\n    selling_price : ''\r\n  })\r\n  const [defaultpurity, setDefaultpurity] = React.useState({})\r\n  const [purityprices, setPurityprices] = React.useState({})\r\n  const [puritysellingprices, setPuritysellingprices] = React.useState({})\r\n  const [defaultmetal, setDefaultmetal] = React.useState({})\r\n  const [pricetype, setPricetype] = React.useState({})\r\n\r\n  const [selectedvendors, setSelectedvendors] = React.useState([])\r\n  const [materials, setMaterials] = React.useState([])\r\n  \r\n  const [masterpurities, setMasterpurities] = React.useState([])\r\n\r\n  const [ispricecalculated, setIspricecalculated] = React.useState(false)\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function updateprice()\r\n  {\r\n    let bodycondent = {\r\n      costprices : purityprices,\r\n      sellingprices : puritysellingprices,\r\n      vendors : selectedvendors,\r\n      metal : defaultmetal,\r\n      pricetype : pricetype\r\n    }\r\n     let response =  await sendNetworkRequest('/updatevendorgoldprice', {}, bodycondent)\r\n     alert(\"price updated successfully\")\r\n  }\r\n  const handleChange = type => (event) => {\r\n    let vendorids =[]\r\n    selectedvendors.forEach(element => {\r\n      vendorids.push(element)\r\n    })\r\n    if(event.target.checked)\r\n    {\r\n\r\n      if(type == 'All')\r\n      {\r\n        mastervendors.forEach(element => {\r\n          vendorids.push(element.shortCode)\r\n        })\r\n        setSelectedvendors(vendorids)\r\n      }else\r\n      {\r\n        vendorids.push(type)\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }else{\r\n      if(type == 'All')\r\n      {\r\n        setSelectedvendors([])\r\n\r\n      }else{\r\n\r\n        let indexval = selectedvendors.indexOf(type)\r\n        vendorids.splice(indexval,1)\r\n        let allindexval = selectedvendors.indexOf('All')\r\n        if(allindexval >  -1)\r\n        {\r\n          vendorids.splice(allindexval,1)\r\n\r\n        }\r\n\r\n        setSelectedvendors(vendorids)\r\n\r\n      }\r\n    }\r\n   // setChecked(event.target.checked);\r\n  };\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GOLDPRICESETUPMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let allobj =  {\r\n          \"name\": \"All Vendors\",\r\n          \"id\": \"All\",\r\n          \"shortCode\": \"All\"\r\n        }\r\n        let vendors = [];\r\n        vendors.push(allobj)\r\n\r\n        setMaterials(fatchvalue.data.allMasterMaterials.nodes)\r\n        setMasterpurities(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        fatchvalue.data.allMasterVendors.nodes.forEach(vendorobj => {\r\n          vendors.push(vendorobj)\r\n          selectedvendors.push(vendorobj.shortCode)\r\n        })\r\n         setMastervendors(vendors)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  const handleoptionChange = type => (event, value) => {\r\n   // setEditcontent({ ...editcontent, [type]: value  })\r\n   let vendorid = []\r\n   value.forEach(element => {\r\n    if(element.shortCode == 'All')\r\n    {\r\n      mastervendors.forEach(element => {\r\n        vendorid.push(element.shortCode)\r\n      })\r\n      setSelectedvendors(vendorid)\r\n    }else{\r\n      vendorid.push(element.shortCode)\r\n      setSelectedvendors(vendorid)\r\n\r\n    }\r\n   })\r\n  }\r\n  const handlepricetypeChange = (event, value) => {\r\n    setPricetype(value)\r\n  }\r\n  const handlemetalChange = type => (event, value) => {\r\n    // setEditcontent({ ...editcontent, [type]: value  })\r\n    //alert(JSON.stringify(value))\r\n    if(value)\r\n    { \r\n    if(value.shortCode === 'G')\r\n    {\r\n      setIspricecalculated(false)\r\n    }else\r\n    {\r\n      setIspricecalculated(true)\r\n    }\r\n    if(data[value.name])\r\n    {\r\n      setDefaultpurity(data[value.name])\r\n\r\n    }\r\n  }else\r\n  {\r\n    setIspricecalculated(false)\r\n\r\n  }\r\n    setDefaultmetal(value)\r\n   //setDefaultpurity(value)\r\n   }\r\n  const handleInputChange = type => event => {\r\n   // setGoldprice(event.target.value);\r\n   //alert(JSON.stringify(goldprice))\r\n   if(defaultmetal.name === 'Gold')\r\n    {\r\n    }else\r\n    {\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = event.target.value\r\n      if(type === 'cost_price')\r\n      {\r\n        setPurityprices(sellingpricejson)\r\n\r\n      }\r\n      if(type === 'selling_price')\r\n      {\r\n        setPuritysellingprices(sellingpricejson)\r\n\r\n      }\r\n    }\r\n    setGoldprice({...goldprice,[type]: event.target.value })\r\n  }\r\n  const handlePriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    setPurityprices({...purityprices,[type]:event.target.value});\r\n\r\n    \r\n  }\r\n  const handlesellingPriceChange = type => event => {\r\n\r\n    // let goldpriceval = purityprices;\r\n    // goldpriceval[type] = event.target.value;\r\n    \r\n    setPuritysellingprices({...puritysellingprices,[type]:event.target.value});\r\n  }\r\n  function getgoldvalue()\r\n  {\r\n    if(defaultmetal.name === 'Gold')\r\n    {\r\n       let default_purity = parseInt()\r\n     let pricejson = {}\r\n     let sellingpricejson = {}\r\n    data.goldpurity.forEach(element => {\r\n      var sellingprice = goldprice.selling_price\r\n      if(pricetype.value == 2) \r\n      {\r\n        sellingprice = parseFloat(goldprice.cost_price) + parseFloat(goldprice.cost_price * (goldprice.selling_price/100))\r\n       \r\n      }\r\n      let priceratio = element.shortCode / defaultpurity.shortCode;\r\n\r\n      let goldprice_val = priceratio*goldprice.cost_price\r\n      let goldsellingprice_val = priceratio*sellingprice\r\n      sellingpricejson[element.shortCode] = goldsellingprice_val\r\n\r\n      pricejson[element.shortCode] = goldprice_val\r\n    })\r\n    setPuritysellingprices(sellingpricejson)\r\n    setPurityprices(pricejson)\r\n    }else{\r\n      let pricejson = {}\r\n      let sellingpricejson = {}\r\n      sellingpricejson[defaultpurity.shortCode] = goldprice.selling_price\r\n\r\n      pricejson[defaultpurity.shortCode] = goldprice.cost_price\r\n      setPuritysellingprices(sellingpricejson)\r\n      setPurityprices(pricejson)\r\n    }\r\n\r\n    \r\n     setIspricecalculated(true)\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n     <Card className={classes.root} variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          <Grid container item row alignItems=\"center\" >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={materials}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disableClearable={true}\r\n                 value={defaultmetal}\r\n                   onChange={handlemetalChange(\"material\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Material\"} variant=\"outlined\" />}\r\n                /> \r\n\r\n                \r\n\r\n\r\n\r\n          <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.cost_price}\r\n                             onChange={handleInputChange(\"cost_price\")}\r\n                            label=\"Cost Price\"\r\n                          />\r\n                <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={data.pricetype}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  style={{marginLeft: 16}}\r\n                 value={pricetype}\r\n                  onChange={handlepricetypeChange}\r\n                  getOptionLabel={(option) => option.label}\r\n                  renderInput={(params) => <TextField {...params} style={{width:200}} margin=\"dense\" label={\"Selling Price Type\"} variant=\"outlined\" />}\r\n                /> \r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{marginLeft: 16}}\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                            value={goldprice.selling_price}\r\n                             onChange={handleInputChange(\"selling_price\")}\r\n                            label=\"Selling Price\"\r\n                          />\r\n              \r\n             {defaultpurity.name ?  <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={masterpurities}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  disabled\r\n                  style={{marginLeft: 16, width:200}}\r\n                  value={defaultpurity}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" label={\"purity\"}                   style={{ width:200}}\r\n                  variant=\"outlined\" />}\r\n                />  : null }\r\n                {defaultmetal.name == 'Gold' ? \r\n                <Button variant=\"contained\" size=\"small\" onClick={getgoldvalue} style={{marginLeft: 16}}  color=\"primary\" >\r\n                  Get Price\r\n               </Button> : null}\r\n          </Grid>\r\n          {ispricecalculated ?\r\n          <>\r\n          {ispricecalculated  && defaultmetal.shortCode === 'G' ? <>\r\n          {data.goldpurity.map((purityname, index) =>(\r\n           \r\n           <Grid container item row alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n               Price for {purityname.name}\r\n             </Typography>\r\n                 \r\n                 <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={purityprices[purityname.shortCode]}\r\n                      onChange={handlePriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n                    <TextField\r\n                     variant=\"outlined\"\r\n                     margin=\"dense\"\r\n                     autoComplete=\"off\"\r\n                     style={{marginLeft: 16}}\r\n\r\n                     id=\"vendordeliverydays\"\r\n                     name=\"vendordeliverydays\"\r\n                     value={puritysellingprices[purityname.shortCode]}\r\n                      onChange={handlesellingPriceChange(purityname.shortCode)}\r\n                     label=\"Price\"\r\n                   />\r\n   </Grid>\r\n          ))} </>:null }\r\n          <Grid item xs={12} sm={6} lg={3} >\r\n          <Autocomplete\r\n                  id=\"combo-box-demo\"\r\n                  options={mastervendors}\r\n                    multiple\r\n                  // value={editcontent[columnname.defaultkey]}\r\n                   onChange={handleoptionChange(\"defaultpurity\")}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params}  margin=\"dense\" fullWidth label={\"Vendors\"} variant=\"outlined\" />}\r\n                /> \r\n        </Grid>\r\n          </> : null}\r\n          \r\n         </Grid>\r\n         <Grid item  >\r\n\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginTop: 16 }}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n            </Grid>\r\n      </CardContent>\r\n      </Card>\r\n\r\n{/* \r\n      {ispricecalculated  ? <Card style={{marginTop: 16}}  variant=\"outlined\">\r\n      <CardContent>\r\n          <Grid container>\r\n          \r\n           {mastervendors.map((vendors, index) =>(\r\n            <Grid container item row alignItems=\"center\" >\r\n              <Grid item xs={3} alignItems=\"center\" >\r\n\r\n            <Typography className={classes.title} style={{marginRight: 16}} color=\"textSecondary\" >\r\n              {vendors.name}\r\n             </Typography>\r\n             </Grid>\r\n             <Grid item xs={3} alignItems=\"center\" >\r\n\r\n             <Checkbox\r\n                 checked={selectedvendors.indexOf(vendors.shortCode) > -1}\r\n                onChange={handleChange(vendors.shortCode)}\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n                   </Grid>\r\n   </Grid>\r\n          ))}\r\n         </Grid>\r\n         <Button variant=\"contained\"  size=\"small\" onClick={updateprice} style={{marginLeft: 16 , textAlign:\"center\"}}  color=\"primary\" >\r\n                  Update Vendor Gold Price\r\n               </Button>\r\n\r\n      </CardContent>\r\n      </Card> : null}\r\n    */}\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Goldpriceupdate;","import gql from \"graphql-tag\";\r\n\r\nlet CREATE_HOLIDAY = gql`\r\n  mutation ($item: HolidayManagerInput!) {\r\n    createHolidayManager(input: { holidayManager: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_HOLIDAY = gql`\r\n  mutation ($id: Int!, $item: HolidayManagerPatch!) {\r\n    updateHolidayManagerById(input: { id: $id, holidayManagerPatch: $item }) {\r\n      holidayManager {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_HOLIDAY = gql`\r\n  mutation ($id: Int!) {\r\n    deleteHolidayManagerById(input: { id: $id }) {\r\n      clientMutationId\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_WAREHOUSE = gql`\r\n  mutation ($item: WarehouseInput!) {\r\n    createWarehouse(input: { warehouse: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_WAREHOUSE = gql`\r\n  mutation ($id: Int!, $item: WarehousePatch!) {\r\n    updateWarehouseById(input: { id: $id, warehousePatch: $item }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_WAREHOUSE = gql`\r\n  mutation ($id: Int!) {\r\n    deleteWarehouseById(input: { id: $id }) {\r\n      warehouse {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_INVENTORY = gql`\r\n  mutation ($item: InventoryInput!) {\r\n    createInventory(input: { inventory: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_INVENTORY = gql`\r\n  mutation ($id: UUID!, $item: InventoryPatch!) {\r\n    updateInventoryById(input: { id: $id, inventoryPatch: $item }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet DELETE_INVENTORY = gql`\r\n  mutation ($id: UUID!) {\r\n    deleteInventoryById(input: { id: $id }) {\r\n      inventory {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet UPDATE_ORDER = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $awbNumber: String\r\n    $comments: String\r\n    $orderStatus: String\r\n    $paymentStatus: String\r\n  ) {\r\n    updateOrderById(\r\n      input: {\r\n        orderPatch: {\r\n          awbNumber: $awbNumber\r\n          comments: $comments\r\n          orderStatus: $orderStatus\r\n          paymentStatus: $paymentStatus\r\n        }\r\n        id: $id\r\n      }\r\n    ) {\r\n      order {\r\n        id\r\n        paymentStatus\r\n        awbNumber\r\n        paymentMode\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $updatedAt: Datetime!\r\n    $isActive: Boolean\r\n    $date: Datetime\r\n    $startDate: Date\r\n  ) {\r\n    createAppointmentDate(\r\n      input: {\r\n        appointmentDate: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          startDateTime: $date\r\n          endDateTime: $date\r\n          isActive: $isActive\r\n          startDate: $startDate\r\n          endDate: $startDate\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDate {\r\n        createdAt\r\n        createdBy\r\n        isActive\r\n        updatedBy\r\n        startDateTime\r\n        id\r\n        endDateTime\r\n        isUnavailable\r\n        nodeId\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet CREATE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation(\r\n    $id: UUID!\r\n    $createdAt: Datetime!\r\n    $startDateTime: Datetime\r\n    $endDateTime: Datetime\r\n    $appointmentDateId: UUID\r\n    $updatedAt: Datetime!\r\n    $startTime: Time\r\n    $endTime: Time\r\n    $appointmentTypeId : Int!\r\n  ) {\r\n    createAppointmentDateTimeSlot(\r\n      input: {\r\n        appointmentDateTimeSlot: {\r\n          id: $id\r\n          createdAt: $createdAt\r\n          updatedAt: $updatedAt\r\n          endDateTime: $endDateTime\r\n          startDateTime: $startDateTime\r\n          isActive: true\r\n          appointmentDateId: $appointmentDateId\r\n          startTime: $startTime\r\n          endTime: $endTime\r\n          appointmentTypeId : $appointmentTypeId\r\n        }\r\n      }\r\n    ) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDateTime\r\n        endDateTime\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_APPOINTMENT_TIME = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateTimeSlotById(input: { id: $id }) {\r\n      appointmentDateByAppointmentDateId {\r\n        id\r\n        isActive\r\n        startDate\r\n        endDate\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst DELETE_APPOINTMENT_DATE = gql`\r\n  mutation MyMutation($id: UUID!) {\r\n    deleteAppointmentDateById(input: { id: $id }) {\r\n      appointmentDate {\r\n        id\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport {\r\n  CREATE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  CREATE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  CREATE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_ORDER,\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HolidayModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Holiday`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Holiday\"}\r\n              name=\"holiday\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.holiday}\r\n              onChange={props.editItem}\r\n            />\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <KeyboardDatePicker\r\n                className={classes.inputField}\r\n                label={\"Date\"}\r\n                name=\"date\"\r\n                fullWidth\r\n                inputVariant=\"outlined\"\r\n                value={props.item.date}\r\n                onChange={(_, value) => props.editItem(value, \"date\")}\r\n                format={\"yyyy-MM-dd\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default HolidayModal;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_HOLIDAY,\r\n  DELETE_HOLIDAY,\r\n  UPDATE_HOLIDAY,\r\n} from \"../../graphql/mutation\";\r\nimport { HOLIDAYLIST } from \"../../graphql/query\";\r\nimport HolidayModal from \"./HolidayModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const HolidayManager = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    HOLIDAYLIST,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ holiday: \"\", date: null });\r\n\r\n  const editItem = (event, type) => {\r\n    var name, value;\r\n    if (type == \"date\") {\r\n      name = type;\r\n      value = event;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ holiday: \"\", date: null });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type == \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_HOLIDAY,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type == \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_HOLIDAY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    // console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addholidays\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully added holidays!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Holiday Manager</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Holidays\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/holidays.csv\";\r\n            a.setAttribute(\"download\", \"holidays.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Holiday\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Holiday</TableCell>\r\n                <TableCell align={\"center\"}>Date</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allHolidayManagers?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Holidays found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allHolidayManagers?.nodes.length > 0 &&\r\n                data?.allHolidayManagers?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.holiday}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.date, \"YYYY-MM-DD\").format(\"MMM DD,YYYY\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allHolidayManagers?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <HolidayModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VALIDATEGENERATEDSKU, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst InventoryModal = (props) => {\r\n  const classes = useStyles();\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n\r\n  const client = useApolloClient();\r\n  const [error, setError] = React.useState(false);\r\n\r\n  const validateGeneratedSku = (generatedSku) => {\r\n    client\r\n      .mutate({\r\n        mutation: VALIDATEGENERATEDSKU,\r\n        variables: { generatedSku },\r\n      })\r\n      .then((res) => {\r\n        if (res?.data?.allTransSkuLists?.nodes?.length === 0) {\r\n          setError(\"Tag No doesn't exists!\");\r\n        } else {\r\n          setError(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Holiday-Modal\"}\r\n    >\r\n      <DialogTitle disableTypography className={classes.root}>\r\n        <Typography variant=\"h6\">{`${props.type} Inventory`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              label={\"Tag No\"}\r\n              name=\"generatedSku\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.generatedSku}\r\n              onChange={props.editItem}\r\n              error={Boolean(error)}\r\n              helperText={error}\r\n              onBlur={() => validateGeneratedSku(props.item.generatedSku)}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              required\r\n              type={\"Number\"}\r\n              label={\"Quantity\"}\r\n              name=\"numberOfItems\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.numberOfItems}\r\n              onChange={props.editItem}\r\n            />\r\n            <Autocomplete\r\n              loading={loading}\r\n              options={data?.allWarehouses?.nodes}\r\n              getOptionSelected={(option, value) => option.name === value.name}\r\n              getOptionLabel={(option) => option.name}\r\n              value={props.item.warehouse}\r\n              onChange={props.editItem}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Warehouse\"\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    ...params.InputProps,\r\n                    endAdornment: (\r\n                      <React.Fragment>\r\n                        {loading ? (\r\n                          <CircularProgress color=\"inherit\" size={20} />\r\n                        ) : null}\r\n                        {params.InputProps.endAdornment}\r\n                      </React.Fragment>\r\n                    ),\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default InventoryModal;\r\n","import React from \"react\";\r\nimport {\r\n  Badge,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport {\r\n  CREATE_INVENTORY,\r\n  DELETE_INVENTORY,\r\n  UPDATE_INVENTORY,\r\n} from \"../../graphql/mutation\";\r\nimport { INVENTORYLIST, STOCKSTATUS } from \"../../graphql/query\";\r\nimport InventoryModal from \"./InventoryModal\";\r\nimport { AlertContext } from \"../../context\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport moment from \"moment\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport StoreIcon from \"@material-ui/icons/Store\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  iconButton: {\r\n    margin: theme.spacing(2),\r\n    textAlign: \"center\",\r\n    flexDirection: \"column\",\r\n  },\r\n  icon: {\r\n    padding: 0,\r\n    \"&:hover\": {\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n  searchInput: {\r\n    \"& .MuiOutlinedInput-root\": {\r\n      borderRadius: 8,\r\n    },\r\n  },\r\n}));\r\n\r\nconst StockStatus = (props) => {\r\n  const classes = useStyles();\r\n  const { data } = useQuery(STOCKSTATUS);\r\n  return (\r\n    <>\r\n      {data &&\r\n        data.allWarehouses.nodes.length > 0 &&\r\n        data.allWarehouses.nodes.map((item, index) => (\r\n          <Badge\r\n            badgeContent={\r\n              item?.inventoriesByWarehouseId?.aggregates?.sum?.numberOfItems\r\n            }\r\n            max={99999999}\r\n            color={\"error\"}\r\n            key={index}\r\n            component=\"div\"\r\n            className={classes.iconButton}\r\n            overlap=\"circle\"\r\n          >\r\n            <IconButton\r\n              disableRipple\r\n              className={classes.icon}\r\n              onClick={() => {\r\n                props.setWarehouse(item?.name);\r\n              }}\r\n            >\r\n              <StoreIcon\r\n                style={{ fontSize: 35 }}\r\n                color={item?.name === props.warehouse ? \"secondary\" : \"default\"}\r\n              />\r\n            </IconButton>\r\n            <Typography variant=\"subtitle2\">{item?.name}</Typography>\r\n          </Badge>\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Inventory = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [search, setSearch] = React.useState(null);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    INVENTORYLIST,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        filter: {\r\n          [\"generatedSku\"]: search ? { includesInsensitive: search } : null,\r\n          warehouseByWarehouseId: {\r\n            name: {\r\n              includesInsensitive: warehouse,\r\n            },\r\n          },\r\n        },\r\n      },\r\n    }\r\n  );\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({\r\n    generatedSku: \"\",\r\n    numberOfItems: \"\",\r\n    warehouse: { id: \"\", name: \"\" },\r\n  });\r\n\r\n  const editItem = (event, newValue) => {\r\n    var name, value;\r\n    if (newValue) {\r\n      console.log(newValue);\r\n      name = \"warehouse\";\r\n      value = newValue;\r\n    } else {\r\n      name = event.target.name;\r\n      value = event.target.value;\r\n    }\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_INVENTORY,\r\n          variables: {\r\n            id,\r\n            item: {\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n              updatedAt: new Date(),\r\n            },\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_INVENTORY,\r\n          variables: {\r\n            item: {\r\n              id: uuid(),\r\n              generatedSku: item.generatedSku,\r\n              numberOfItems: parseInt(item.numberOfItems),\r\n              warehouseId: item.warehouse.id,\r\n            },\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      var id = item.id;\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_INVENTORY,\r\n          variables: {\r\n            id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/addinventories\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Inventory</Typography>\r\n\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Inventory\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            var a = document.createElement(\"a\");\r\n            a.href = \"/sample/inventory.csv\";\r\n            a.setAttribute(\"download\", \"inventory.csv\");\r\n            a.click();\r\n          }}\r\n        >\r\n          <Tooltip title=\"Download sample file\">\r\n            <GetAppIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n            setItem({\r\n              generatedSku: \"\",\r\n              numberOfItems: \"\",\r\n              warehouse: { id: \"\", name: \"\" },\r\n            });\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Inventory\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n        <TextField\r\n          className={classes.searchInput}\r\n          name=\"tagno\"\r\n          placeholder=\"Search Tag No.\"\r\n          size=\"medium\"\r\n          variant=\"outlined\"\r\n          onChange={(e) => {\r\n            setSearch(e.target.value);\r\n          }}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <StockStatus warehouse={warehouse} setWarehouse={setWarehouse} />\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Tag No</TableCell>\r\n                <TableCell align={\"center\"}>Quantity</TableCell>\r\n                <TableCell align={\"center\"}>Warehouse</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allInventories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No items in inventory!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allInventories?.nodes.length > 0 &&\r\n                data?.allInventories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.generatedSku}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.numberOfItems}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.warehouse.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={6}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allInventories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <InventoryModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst buildGradient = (start, end) =>\r\n  `linear-gradient(180deg, ${start} 0%, ${end} 100%)`;\r\n\r\nconst grey = buildGradient(colors.grey[400], colors.grey[600]);\r\nconst blue = buildGradient(colors.blue[700], colors.blue[900]);\r\nconst indigo = buildGradient(colors.indigo[400], colors.indigo[600]);\r\nconst green = buildGradient(colors.green[400], colors.green[600]);\r\nconst orange = buildGradient(colors.orange[400], colors.orange[700]);\r\nconst red = buildGradient(colors.red[500], colors.red[700]);\r\n\r\nexport default {\r\n  grey,\r\n  blue,\r\n  indigo,\r\n  green,\r\n  orange,\r\n  red\r\n};\r\n","/* eslint-disable no-unused-vars */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Button, TextField } from '@material-ui/core';\r\nimport gradients from '../../../../utils/gradients';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport { NetworkContext } from '../../../../context/NetworkContext';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { GlobalContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\nvar validate = require(\"validate.js\");\r\n\r\nconst schema = {\r\n  email: {\r\n    presence: { allowEmpty: false, message: 'is required' },\r\n    email: true\r\n  },\r\n  password: {\r\n    presence: { allowEmpty: false, message: 'is required' }\r\n  }\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n   \r\n  },\r\n  card: {\r\n    maxWidth: '100%',\r\n    overflow: 'unset',\r\n    display: 'flex',\r\n    position: 'relative',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      flexBasis: '50%',\r\n      width: '50%'\r\n    }\r\n  },\r\n  content: {\r\n    padding: theme.spacing(8, 4, 8, 4)\r\n  },\r\n  media: {\r\n    borderTopRightRadius: 4,\r\n    borderBottomRightRadius: 4,\r\n    color: theme.palette.white,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    [theme.breakpoints.down('md')]: {\r\n      display: 'none'\r\n    }\r\n  },\r\n  icon: {\r\n    backgroundImage: gradients.green,\r\n    color: theme.palette.white,\r\n    borderRadius: theme.shape.borderRadius,\r\n    padding: theme.spacing(1),\r\n    position: 'absolute',\r\n    top: -32,\r\n    left: theme.spacing(3),\r\n    height: 64,\r\n    width: 64,\r\n    fontSize: 32\r\n  },\r\n  loginForm: {\r\n\r\n  },\r\n  divider: {\r\n    margin: theme.spacing(2, 0)\r\n  },\r\n  person: {\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  fields: {\r\n    margin: theme.spacing(-1),\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      flexGrow: 1,\r\n      margin: theme.spacing(1)\r\n    }\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst LoginForm = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n\r\n  const [formState, setFormState] = useState({\r\n    isValid: false,\r\n    values: {},\r\n    touched: {},\r\n    errors: {}\r\n  });\r\n  const [open, setOpen] = React.useState(false);\r\n  const [showmessage, setShowmessage] = React.useState(\"\");\r\n  const [iserror, setIserror] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n   const errors = validate(formState.values, schema);\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      isValid: errors ? false : true,\r\n      errors: errors || {}\r\n    }));\r\n  }, [formState.values]);\r\n\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setFormState(formState => ({\r\n      ...formState,\r\n      values: {\r\n        ...formState.values,\r\n        [event.target.name]:\r\n          event.target.type === 'checkbox'\r\n            ? event.target.checked\r\n            : event.target.value\r\n      },\r\n      touched: {\r\n        ...formState.touched,\r\n        [event.target.name]: true\r\n      }\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    if(formState.isValid)\r\n    {\r\n      //alert(JSON.stringify(formState.values))\r\n   let signinobj =   await sendNetworkRequest('/api/auth/signin', {}, formState.values)\r\n   \r\n   if(signinobj.statuscode === 200)\r\n   {\r\n    localStorage.setItem('accesstoken', signinobj.accessToken);\r\n\r\n    let pageaccess =   await sendNetworkRequest('/getpageaccess', {}, {}, true)\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n    pageaccess.pages.forEach(element => {\r\n      pages.push(element.pageurl)\r\n      // pagepermissions[element.pageurl] = {\r\n      //   isread : element.is_view,\r\n      //   iswrite : element.is_write\r\n      // }\r\n      if(element.is_write)\r\n      {\r\n        pagepermissions.push(element.pageurl)\r\n      }\r\n    });\r\n    // setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n    //     setGlobalCtx({...globalCtx,\"accesspages\":pagepermissions})\r\n\r\n    localStorage.setItem('accesspages', pages);\r\n    localStorage.setItem('pagepermissions', pagepermissions);\r\n\r\n    \r\n    props.history.push('/productlist')\r\n\r\n\r\n   }else\r\n   {\r\n\r\n    setShowmessage(signinobj.message)\r\n    setOpen(true);\r\n   }\r\n  \r\n    }else{\r\n      alert(\"has some error\")\r\n    }\r\n\r\n\r\n    //alert(JSON.stringify(formState))\r\n    // dispatch(login());\r\n    //alert(\"i am here\")\r\n  };\r\n\r\n  const hasError = field =>\r\n    formState.touched[field] && formState.errors[field] ? true : false;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent className={classes.content}>\r\n        <Typography\r\n          gutterBottom\r\n          variant=\"h3\"\r\n        >\r\n        Log in Page\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n        {/* Sign in on the internal platform */}\r\n        </Typography>\r\n        \r\n        <form\r\n          {...rest}\r\n          className={clsx(classes.root, className)}\r\n          autoComplete={\"off\"}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          <div className={classes.fields}>\r\n            <TextField\r\n              error={hasError('email')}\r\n              fullWidth\r\n              helperText={hasError('email') ? formState.errors.email[0] : null}\r\n              label=\"Email address\"\r\n              name=\"email\"\r\n              \r\n              onChange={handleChange}\r\n              value={formState.values.email || ''}\r\n              variant=\"outlined\"\r\n            />\r\n            <TextField\r\n              error={hasError('password')}\r\n              fullWidth\r\n              helperText={\r\n                hasError('password') ? formState.errors.password[0] : null\r\n              }\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              onChange={handleChange}\r\n              type=\"password\"\r\n              value={formState.values.password || ''}\r\n              variant=\"outlined\"\r\n            />\r\n          </div>\r\n          <Button\r\n            className={classes.submitButton}\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n          >\r\n        Log in\r\n          </Button>\r\n          <Snackbar open={open} autoHideDuration={6000}\r\n          anchorOrigin={{vertical:'top', horizontal:'center'}}\r\n          onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity=\"error\">\r\n             {showmessage}\r\n            </Alert>\r\n      </Snackbar>\r\n        </form>\r\n       \r\n      </CardContent>\r\n     \r\n    </Card>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default withRouter(LoginForm);\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport {Input} from '../../components/Input.js'\r\nimport Page from '../../components/Page'\r\n\r\nimport \"./Login.css\"\r\nimport { LoginForm } from './components';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Divider,\r\n  Link,\r\n  Avatar\r\n} from '@material-ui/core';\r\n\r\n\r\nexport class Login extends React.Component {\r\n\r\n   \r\n  render() {\r\n  return (\r\n    <Page\r\n    className='root'\r\n      title=\"Login\"\r\n    >\r\n    <LoginForm />\r\n        </Page>\r\n         \r\n  );\r\n}\r\n}\r\n\r\n\r\n  \r\n  export default (withRouter(Login));","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Manageadminusers = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [masterroles, setMasterroles] = React.useState([]);\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let roles = [];\r\n    taxcontent.roles.forEach((element) => {\r\n      roles.push(element.name);\r\n    });\r\n    let bodydata = {\r\n      username: taxcontent.username,\r\n      password: \"123456789\",\r\n      email: taxcontent.email,\r\n      roles: roles,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/api/auth/signup\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  async function getmasterroles() {\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n\r\n    setMasterroles(response.roles);\r\n\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    let response = await sendNetworkRequest(\"/getadminusers\", {}, {});\r\n    let adminusers = response.users;\r\n    let users = [];\r\n    adminusers.forEach((element) => {\r\n      let userobj = {};\r\n      userobj[\"id\"] = element.id;\r\n      userobj[\"username\"] = element.username;\r\n      userobj[\"password\"] = element.password;\r\n      userobj[\"email\"] = element.email;\r\n      userobj[\"mobile\"] = element.mobile;\r\n      userobj[\"status\"] = element.status === \"Active\" ? true : false;\r\n      let roles = [];\r\n      let rolesnames = [];\r\n\r\n      let userroles = element.user_roles;\r\n      userroles.forEach((userroleobj) => {\r\n        let roleobj = {};\r\n        roleobj[\"id\"] = userroleobj.master_role.id;\r\n        roleobj[\"name\"] = userroleobj.master_role.name;\r\n        roles.push(roleobj);\r\n        rolesnames.push(userroleobj.master_role.name);\r\n      });\r\n      userobj[\"roles\"] = roles;\r\n      userobj[\"rolenames\"] = rolesnames.join(\" , \");\r\n      users.push(userobj);\r\n    });\r\n\r\n    setFiltervalue(users);\r\n    setMastervalue(users);\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Admin Users\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          masters={masterroles}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Manageadminusers;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst SheduleModal = (props) => {\r\n  const classes = makeStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Schedule-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Shedule-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`Add Schedule Date`}</Typography>\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n            className={classes.inputField}\r\n            name=\"date\"\r\n            placeholder=\"Select a date\"\r\n            fullWidth\r\n            inputVariant=\"outlined\"\r\n            value={props.date ?? null}\r\n            onChange={(_, value) => props.editItem(value)}\r\n            minDate={new Date()}\r\n            format={\"yyyy-MM-dd\"}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          Save\r\n        </Button>\r\n\r\n        <Button onClick={props.onClose} variant=\"contained\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModal;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  makeStyles,\r\n  Typography,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  IconButton,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport moment from \"moment\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { TimePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport { DeleteOutline } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  datecard: {\r\n    backgroundColor: \"white\",\r\n    padding: \"15px\",\r\n    cursor: \"pointer\",\r\n    boxShadow: \"0px 3px 6px #c1c1c1\",\r\n    position:\"relative\"\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n  title: {\r\n    fontSize: \"22px\",\r\n    paddingTop: \"8px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  available: {\r\n    fontSize: \"20px\",\r\n    paddingBottom: \"8px\",\r\n  },\r\n  availableTitle:{\r\n    fontSize: \"20px\",\r\n    paddingTop: \"10px\",\r\n  },\r\n  time: {\r\n    fontSize: \"16px\",\r\n  },\r\n  notchedOutline:{\r\n   width:\"20%\"\r\n  },\r\n  day:{\r\n    fontSize:\"14px\"\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nconst SheduleModalShow = (props) => {\r\n  const classes = useStyles();\r\n  const {appointmentTypes} = props;\r\n\r\n  const getTime=(time)=>{\r\n    let x = time;\r\n    const [ hour,minute,second] = x.split(\":\");\r\n    let d = new Date();\r\n    d.setHours(hour);\r\n    d.setMinutes(minute);\r\n    d.setSeconds(second)\r\n    return moment(d).format('hh:mm a');\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.close}\r\n      maxWidth=\"md\"\r\n      fullWidth={true}\r\n    >\r\n       <Backdrop className={classes.backdrop} open={props.loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <DialogTitle id=\"Schedule-Modal\">\r\n      <div style={{display:\"flex\",justifyContent:\"space-between\",}}>\r\n           <Typography className={classes.availableTitle}>\r\n            Available Timing - ({moment(props.date).format(\"MMM\")} -\r\n          {moment(props.date).format(\"DD\")} -\r\n          {moment(props.date).format(\"YYYY\")})\r\n          </Typography>\r\n          <Select\r\n                className={classes.notchedOutline}\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                defaultValue={1}\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.filterType(e.target.value)}\r\n           >\r\n         {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n        </Select>\r\n        </div>\r\n        <br/>\r\n        <Divider/>\r\n        \r\n      </DialogTitle>\r\n      <DialogContent>\r\n        \r\n        {props.timing && props.timing.length > 0 ? (\r\n          <Typography className={classes.available}>\r\n           \r\n          </Typography>\r\n        ) : (\r\n          <Typography className={classes.available}>No Data</Typography>\r\n        )}\r\n\r\n       <Grid container spacing={1}>\r\n          <Grid item xs={7} container spacing={1}>\r\n          {props.timing &&\r\n          props.timing.length > 0 &&\r\n          props.timing.map((val) => {\r\n            return (  \r\n              <Grid item xs={6}>\r\n                <div\r\n                  className={\r\n                    classes.datecard\r\n                  }\r\n                >\r\n                  <div  style={{ position: 'absolute',\r\n                    right: '5px',\r\n                    top: '30px',}}>\r\n                      <IconButton  onClick={() => props.deleteTime(val.id)}>\r\n                         <DeleteOutline style={{color:\"red\"}}/>\r\n                      </IconButton>\r\n                  </div>\r\n                \r\n\r\n                <div style={{paddingTop:\"20px\"}}>\r\n                  \r\n                 <Typography className={classes.day}>\r\n                  {`Start Time : ${getTime(val?.startTime)}`}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                  {`End Time : ${getTime(val?.endTime)}`}\r\n                  </Typography>\r\n                  \r\n                </div>\r\n                 \r\n                </div>       \r\n              </Grid>              \r\n            );\r\n          })}\r\n          </Grid>\r\n          <Grid item xs={1} style={{display: 'flex',\r\n              justifyContent: 'center',}}>\r\n            <Divider variant=\"vertical\"/>\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n          <>\r\n            {\" \"}\r\n            <Typography className={classes.available}>Start Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"startTime\"\r\n                placeholder=\"Select Start Time\"\r\n                inputVariant=\"outlined\"\r\n                value={props?.timeValue?.startTime ?? null}\r\n                fullWidth\r\n                onChange={(value) => props.handleTimeValue(value, \"startTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n            <Typography className={classes.available}>End Time :</Typography>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <TimePicker\r\n                className={classes.inputField}\r\n                name=\"endTime\"\r\n                placeholder=\"Select End Time\"\r\n                inputVariant=\"outlined\"\r\n                fullWidth\r\n                value={props?.timeValue?.endTime ?? null}\r\n                onChange={(value) => props.handleTimeValue(value, \"endTime\")}\r\n                minDate={new Date()}\r\n              />\r\n            </MuiPickersUtilsProvider>{\" \"}\r\n            {/* <Typography className={classes.available}>Type :</Typography>\r\n            <Select\r\n               className={classes.inputField}\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                placeholder=\"Select Type\"\r\n                onChange={(e) => props.handleTimeValue(e.target.value, \"type\")}\r\n             >\r\n            {appointmentTypes?.map((_)=>{\r\n              return(\r\n                <MenuItem value={_.id}>{_.name}</MenuItem>\r\n              )\r\n             })}\r\n             </Select> */}\r\n\r\n                     <Button\r\n                      onClick={() => props.handleSubmitTime(props.appointmentDateId,props.date,props.endDate)}\r\n                      color=\"primary\"\r\n                      variant=\"contained\"\r\n                     >\r\n                      Add Time\r\n                    </Button>\r\n          </>\r\n      \r\n          </Grid>\r\n        </Grid>\r\n\r\n       \r\n        <br />\r\n        <Divider />\r\n        <br />\r\n        \r\n      </DialogContent>\r\n      <DialogActions>\r\n  \r\n          {/* <Button\r\n            onClick={() => props.handleSubmitTime(props.appointmentDateId)}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Submit Time\r\n          </Button> */}\r\n        <Button onClick={props.close} variant=\"contained\">\r\n          {\" \"}\r\n          Close\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => props.deleteDate(props.appointmentDateId)}\r\n        >\r\n          Delete Date\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SheduleModalShow;\r\n","import {\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport uuid from \"uuid/v1\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport SheduleModal from \"./shedulemodal\";\r\nimport SheduleModalShow from \"./shedulemodalshow\";\r\nimport { ALL_APPOINTMENTS_DATE,APPOINTMENTS_TYPE,ALL_APPOINTMENTS_TIMESLOT,FILTER_APPOINTEMENTS ,CHECK_APPOINTMENT,CHECK_TIMESLOT} from \"../../graphql/query\";\r\nimport {\r\n  CREATE_APPOINTMENT_DATE,\r\n  CREATE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_TIME,\r\n  DELETE_APPOINTMENT_DATE,\r\n} from \"../../graphql/mutation\";\r\nimport { TimePicker, MuiPickersUtilsProvider,DatePicker,KeyboardDatePicker} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\n// import timeGridPlugin from \"@fullcalendar/timegrid\";\r\n\r\n\r\nexport const ManageShedule = (props) => {\r\n  // States\r\n  const [open, setOpen] = React.useState(false);\r\n  const [appointmentDateId, setAppointmentDateId] = React.useState(null);\r\n  const [type, setType] = React.useState();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [modalloading, setModalLoading] = React.useState(false);\r\n  const [date, setDate] = React.useState(new Date());\r\n  const [appointmentDate, setAppointmentDate] = useState([]);\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [appointmentSlots, setAppointmentSlots] = useState([]);\r\n  const [openAppointmentTime, setOpenAppointmentTime] = useState(false);\r\n  const [showTime, setShowTime] = useState(false);\r\n  const [timeValue, setTimeValue] = useState({\r\n    startTime: new Date(),\r\n    endTime: new Date(),\r\n    type: 1\r\n  });\r\n  const [filterDate, setFilterDate] = useState({\r\n    startTime: moment(new Date()).startOf('month').format(\"YYYY-MM-DD\"),\r\n    endTime: moment(new Date()).endOf('month').format(\"YYYY-MM-DD\"),\r\n    date: new Date()\r\n  });\r\n\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const useStyles = makeStyles((theme) => ({\r\n    datecard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid #3F51B5\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n    input: {\r\n      display: \"none\",\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      color: '#fff',\r\n    },\r\n    calenderCard:{\r\n      display:\"flex\",flexWrap:\"wrap\",marginLeft:\"14px\"\r\n    },\r\n    inputField: {\r\n      marginBottom: theme.spacing(1),\r\n      \"& .MuiOutlinedInput-input\":{\r\n        padding: \"12.5px 14px\"\r\n      }\r\n    },\r\n    closedCard: {\r\n      backgroundColor: \"white\",\r\n      padding: \"12px\",\r\n      cursor: \"pointer\",\r\n      border: \"1px solid black\",\r\n      boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      width:\"140px\",\r\n      height:\"130px\",\r\n      margin:5,\r\n      \"&:hover\": {\r\n        borderTop: \"5px solid red\",\r\n        boxShadow: \"0px 3px 6px #c1c1c1\",\r\n      },\r\n    },\r\n\r\n    date: {\r\n      fontSize: \"22px\",\r\n      padding: \"10px 0px\",\r\n    },\r\n    day: {\r\n      fontSize: \"14px\",\r\n    },\r\n  }));\r\n\r\n \r\n  // LifeCycles\r\n  useEffect(() => {\r\n    GetAllAppointmentTypes();\r\n    FilterDates(filterDate.startTime,filterDate.endTime)\r\n  }, []);\r\n\r\n  // Handle Funcs\r\n  const editItem = (value) => {\r\n    setDate(value);\r\n  };\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n  };\r\n  const handlemodalshow = (id) => {  \r\n    GetAllAppointment_TimeSlots(id,1)\r\n  };\r\n\r\n  const handleTimeValue = (value, name) => {\r\n    setTimeValue({ ...timeValue, [name]: value });\r\n  };\r\n\r\n  // Query Func\r\n  const GetAllAppointment = async () => {\r\n    setLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_DATE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n        setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n        setLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const CheckAppointment = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CHECK_APPOINTMENT,\r\n        variables:{ startDate: moment(date).format('YYYY-MM-DD'), endDate: moment(date).format('YYYY-MM-DD')}\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then(async(res) => {\r\n        if(res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0){\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: 'warning',\r\n            msg: \"Date already available!\",\r\n          });   \r\n        }\r\n        else{\r\n         await handleSave();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointment_TimeSlots = async (id,type) => {\r\n    setModalLoading(true)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALL_APPOINTMENTS_TIMESLOT(id ? id : appointmentDateId,type).loc.source.body,\r\n      })\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n         setAppointmentSlots(res.data.allAppointmentDateTimeSlots.nodes)\r\n         setOpenAppointmentTime(true);\r\n         setAppointmentDateId(id);\r\n         setModalLoading(false)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleSave = async () => {  \r\n    setLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          date: date,\r\n          startDate: moment(date).format(\"YYYY-MM-DD\"),\r\n          isActive: true,\r\n        },\r\n      })\r\n      .then((res) => {         \r\n          FilterDates(filterDate.startTime,filterDate.endTime);\r\n          onClose();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const CheckTimeslot = async (id,date,endDate)=>{\r\n    await client.query({\r\n      query : CHECK_TIMESLOT,\r\n      variables:{\r\n        startTime: moment(timeValue.startTime).format(\"HH:mm\"),\r\n        endTime: moment(timeValue.endTime).format(\"HH:mm\"),\r\n      },\r\n      fetchPolicy:\"no-cache\"\r\n    }).then((res)=>{\r\n      if(res?.data?.allAppointmentDateTimeSlots?.nodes.length > 0){\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: 'warning',\r\n          msg: \"TimeSlot already available!\",\r\n        });   \r\n      }\r\n      else{\r\n        handleSubmitTime(id,date,endDate);\r\n      }\r\n    })\r\n    .catch((err)=>{\r\n      console.log(err)\r\n    })\r\n  }\r\n\r\n  const handleSubmitTime = async (id,date,endDate) => {\r\n    if(timeValue.type !== ''){\r\n      setModalLoading(true)\r\n      await client\r\n      .mutate({\r\n        mutation: CREATE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: uuid(),\r\n          createdAt: new Date(),\r\n          updatedAt: new Date(),\r\n          startDateTime: new Date(date),\r\n          endDateTime: new Date(endDate) ,\r\n          appointmentTypeId: timeValue.type,\r\n          appointmentDateId: id,\r\n          startTime: moment(timeValue.startTime).format(\"HH:mm:ss\"),\r\n          endTime: moment(timeValue.endTime).format(\"HH:mm:ss\"),\r\n        },\r\n        fetchPolicy:\"no-cache\"\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          setModalLoading(false)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n\r\n    setShowTime(!showTime);\r\n    }   \r\n  };\r\n  \r\n  const deleteTime = async (id) => {\r\n    setModalLoading(true)\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_TIME,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          GetAllAppointment_TimeSlots(appointmentDateId,timeValue.type);\r\n          onClose();\r\n          setModalLoading(false)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const deleteDate = async (id) => {\r\n    setOpenAppointmentTime(false);\r\n    await client\r\n      .mutate({\r\n        mutation: DELETE_APPOINTMENT_DATE,\r\n        variables: {\r\n          id: id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Deleted Successfully!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleDateChange= async (date) =>{\r\n    var start = moment(date).startOf('month').format(\"YYYY-MM-DD\");\r\n    var end = moment(date).endOf(\"month\").format(\"YYYY-MM-DD\");\r\n    setFilterDate({...filterDate,date:date,startTime:start,endTime:end}) \r\n    FilterDates(start,end)   \r\n  }\r\n\r\n  const FilterDates = async (start,end) =>{\r\n    setLoading(true)\r\n    await client\r\n    .query({\r\n      query: FILTER_APPOINTEMENTS,\r\n      variables:{\r\n        startDate:start,\r\n        endDate:end \r\n      },\r\n      fetchPolicy:'no-cache'\r\n    })\r\n    .then((res) => {\r\n      setAppointmentDate(res.data.allAppointmentDates.nodes);\r\n      setLoading(false)  \r\n    })\r\n    .catch((err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n    console.log(file);\r\n    axios\r\n      .post(API_URL + \"/appointment/upload_schedule\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: res.data.message || \"Successfully uploaded!\",\r\n          });\r\n          FilterDates(filterDate.startTime,filterDate.endTime)\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const FilterTimeSlotes=(type)=>{\r\n    GetAllAppointment_TimeSlots(appointmentDateId,type)\r\n    setTimeValue({...timeValue,type:type})\r\n  }\r\n\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Manage Schedule</Typography>\r\n        <input\r\n          accept=\".csv\"\r\n          className={classes.input}\r\n          id=\"icon-button-file\"\r\n          type=\"file\"\r\n          onChange={(event) => {\r\n            const files = event.target.files;\r\n            if (files) {\r\n              handleUpload(files[0]);\r\n            }\r\n          }}\r\n        />\r\n        <label htmlFor=\"icon-button-file\">\r\n          <IconButton\r\n            color=\"primary\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n          >\r\n            <Tooltip title=\"Upload Dates\">\r\n              <CloudUploadIcon />\r\n            </Tooltip>\r\n          </IconButton>\r\n        </label>\r\n\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={6}\r\n        spacing={1}\r\n        direction=\"row\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Grid item xs={5}>\r\n        <Typography className={classes.available}>Month and Year :</Typography>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"MM/yyyy\"\r\n              margin=\"normal\"\r\n              views={['year', 'month']}\r\n              value={filterDate.date}\r\n              onChange={(date) => handleDateChange(date)}\r\n              style={{ marginTop: 0 }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          \r\n        </Grid>\r\n\r\n      </Grid>\r\n      <div className={classes.calenderCard}>\r\n     \r\n        {appointmentDate && appointmentDate.length > 0 ? (\r\n          appointmentDate.map((val) => {\r\n            return (\r\n              <Box  key={val.id}>\r\n                <div\r\n                  className={\r\n                    moment(\r\n                      moment(val.startDateTime).format(\"YYYY-MM-DD\")\r\n                    ).isSameOrAfter(\r\n                      moment(new Date()).format(\"YYYY-MM-DD\"),\r\n                      \"day\"\r\n                    )\r\n                      ? classes.datecard\r\n                      : classes.closedCard\r\n                  }\r\n                  onClick={() => {\r\n                    handlemodalshow(val.id);\r\n                  }}\r\n                >\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"MMM\")}\r\n                  </Typography>\r\n                  <Typography className={classes.date}>\r\n                    {moment(val.startDateTime).format(\"DD\")}\r\n                  </Typography>\r\n                  <Typography className={classes.day}>\r\n                    {moment(val.startDateTime).format(\"YYYY\")}\r\n                  </Typography>\r\n                </div>\r\n                {appointmentDateId === val.id && openAppointmentTime && (\r\n                  <SheduleModalShow\r\n                    open={openAppointmentTime}\r\n                    date={val.startDateTime}\r\n                    endDate={val.endDateTime}\r\n                    appointmentDateId={appointmentDateId}\r\n                    timing={\r\n                      appointmentSlots ? appointmentSlots : []\r\n                    }\r\n                    close={() => setOpenAppointmentTime(false)}\r\n                    showTime={showTime}\r\n                    timeValue={timeValue}\r\n                    handleTimeValue={handleTimeValue}\r\n                    handleSubmitTime={CheckTimeslot}\r\n                    filterType={FilterTimeSlotes}\r\n                    deleteTime={deleteTime}\r\n                    deleteDate={deleteDate}\r\n                    appointmentTypes={appointmentTypes}\r\n                    loading={modalloading}\r\n                  />\r\n                )}\r\n              </Box>\r\n            );\r\n          })\r\n        ) : (\r\n          <p>No Data</p>\r\n        )}\r\n      </div>\r\n      <SheduleModal\r\n        open={open}\r\n        type={type}\r\n        date={date}\r\n        editItem={editItem}\r\n        handleSave={CheckAppointment}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Filterandsearch from './../../screens/Productlist/filterandsearch';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(props.fitltercontent.size);\r\n  const [pageCount,setPageCount] = React.useState(props.fitltercontent.offset);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n  const [filtercontent,setFiltercontent] = React.useState({\r\n    \"seacrchtext\" : props.fitltercontent.searchtext,\r\n    \"size\": props.fitltercontent.size,\r\n    \"offset\":props.fitltercontent.offset\r\n  })\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n   // alert(editcontent.searchcontent)\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setFiltercontent({...filtercontent, offset: newPage*rowsPerPage})\r\n\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n    props.onPagechange((newPage*rowsPerPage))\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n   \r\n    setFiltercontent({...filtercontent, size: parseInt(event.target.value, 10)})\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    props.onPagesizechange(parseInt(event.target.value, 10))\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {props.button_title ? <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> : null }\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                     {columnname.type == 7 ? <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                         {row[columnname.key]} \r\n                                       </Moment>:null } \r\n                                       {columnname.type == 8 ?  <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/customerdetails/'+row['id']}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>:null }                 \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n                    {columnname.type != 2 && columnname.type != 6 && columnname.type != 7  ?  <Typography> {row[columnname.key]}</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.totalcount]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from './Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Manageusers = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masterroles, setMasterroles] = React.useState([])\r\n  const [totalcount, setTotalcount] = React.useState(0)\r\n\r\n  const [bodycontent, setBodycontent] = React.useState({\r\n    \"seacrchtext\" : '',\r\n    \"size\": 50,\r\n    \"offset\":0\r\n  })\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let roles = []\r\n    taxcontent.roles.forEach(element => {\r\n      roles.push(element.name)\r\n    })\r\n    let bodydata = { \r\n      username : taxcontent.username,\r\n      password : '123456789',\r\n      email: taxcontent.email,\r\n      roles : roles\r\n\r\n    }\r\n\r\n    let response =  await sendNetworkRequest('/api/auth/signup', {}, bodydata)\r\n     getmaster()\r\n  }\r\n  async function getmasterroles()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getmasterroles', {}, {})\r\n  \r\n    \r\n    setMasterroles(response.roles) \r\n\r\n     getmaster(50,0)\r\n  }\r\n  function changeresult(filtercontent)\r\n  {\r\n    setBodycontent(filtercontent)\r\n  }\r\n  async function getmaster(size,offset,searchtext)\r\n  {\r\n   \r\n    let response =  await sendNetworkRequest('/getwebusers', {}, {size,offset,searchtext})\r\n    let adminusers = response.users.rows;\r\n    let users = []\r\n    setTotalcount(response.users.count)\r\n    adminusers.forEach(element => {\r\n      //   let userobj = {}\r\n      //   userobj['id'] = element.id;\r\n      //  // userobj['username'] = element.username;\r\n      //  // userobj['password'] = element.password;\r\n      //   userobj['email'] = element.email;\r\n      //   userobj['mobile'] = element.mobile;\r\n      //   userobj['status'] = element.status === 'Active' ? true : false;\r\n      //   let roles = []\r\n      //   let rolesnames = []\r\n\r\n      //   let userroles = element.user_roles;\r\n      //   userroles.forEach(userroleobj => {\r\n\r\n      //     let roleobj = {}\r\n      //     roleobj['id'] = userroleobj.master_role.id\r\n      //     roleobj['name'] = userroleobj.master_role.name\r\n      //     roles.push(roleobj)\r\n      //     rolesnames.push(userroleobj.master_role.name)\r\n      //   })\r\n      //   userobj['roles'] = roles\r\n      //   userobj['rolenames'] = rolesnames.join(' , ')\r\n        if(element.orders)\r\n        {\r\n          element['orders'] = element.orders.length\r\n        }else{\r\n          element['orders'] = 0\r\n        }\r\n        users.push(element)\r\n    });\r\n\r\n    setFiltervalue(users)\r\n    setMastervalue(users)\r\n    //getmaster()\r\n  }\r\n  useEffect(() => {\r\n    getmasterroles()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    //setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    getmaster(bodycontent.size,bodycontent.offset,taxcontent)\r\n  }\r\n  async function changepageoffset(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,offset: taxcontent})\r\n    getmaster(bodycontent.size,taxcontent,bodycontent.seacrchtext)\r\n  }\r\n  async function changepagesize(taxcontent)\r\n  {\r\n    setBodycontent({...bodycontent,size: taxcontent})\r\n    getmaster(taxcontent,bodycontent.offset,bodycontent.seacrchtext)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Website Users\"} totalcount={totalcount} fitltercontent={bodycontent}  onCreate={createtax} onSearch={search} onPagechange={changepageoffset} onPagesizechange={changepagesize} columns={data.columns} masters={masterroles} values={filtervalue} />\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Manageusers;","import Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { TableContainer ,IconButton,Grid,TextField,InputAdornment, Select, MenuItem,LinearProgress,Backdrop,CircularProgress } from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport moment from \"moment\";\r\nimport { SHOW_APPOINMENT_DETAILS,MUTATE_STATUS,APPOINTMENTS_TYPE } from \"../../graphql/query\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker\r\n} from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst columns = [\r\n  { id: \"user_id\", label: \"Id\" },\r\n  { id: \"name\", label: \"Name\" },\r\n  { id: \"email\", label: \"Email\" },\r\n  { id: \"mobile\", label: \"Mobile\" },\r\n  { id: \"date\", label: \"Date\" },\r\n  // { id: \"location\", label: \"Location\" },\r\n  { id: \"StartTime\", label: \"Start Time\" },\r\n  { id: \"EndTime\", label: \"End Time\" },\r\n  { id: \"Type\", label: \"Type\" },\r\n  { id: \"Status\", label: \"Status\" },\r\n  { id: \"actions\", label: \"\" },\r\n];\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n    backgroundColor:\"white\"\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  title: {\r\n    color: \"black\",\r\n    fontSize: \"16px\",\r\n    padding: \"20px\",\r\n  },\r\n  select:{\r\n    \"& .MuiInputBase-root\":{\r\n      height:\"85%\"\r\n    }\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nlet filterData = {};\r\n\r\nexport const Manageappoinment = (props) => {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [startDate, setStartDate] = React.useState(null);\r\n  const [endDate, setEndDate] = React.useState(null);\r\n  const [appointmentFilter, setAppointmentFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [appointmentTypes, setAppointmentTypes] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = React.useState(\"\");\r\n  const [selectedType, setSelectedType] = React.useState(\"\");\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(SHOW_APPOINMENT_DETAILS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      appointment_filter: { ...appointmentFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  React.useEffect(()=>{\r\n    GetAllAppointmentTypes();\r\n  },[])\r\n\r\n  const GetAllAppointmentTypes = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: APPOINTMENTS_TYPE,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((res) => {\r\n          setAppointmentTypes(res.data.allAppointmentTypeMasters.nodes)\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  let rowData = data?.allAppointments?.nodes;\r\n\r\n  const handleDateChange = (date, value) => {\r\n    if (value === \"start\") {\r\n      setStartDate(date);\r\n    }\r\n    if (value === \"end\") {\r\n      if (date > startDate && startDate) {\r\n        setEndDate(date);\r\n        setAppointmentFilter({\r\n          ...appointmentFilter,\r\n          appointmentDateTimeSlotBySlotId: {\r\n            appointmentDateByAppointmentDateId: {\r\n              startDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"),lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")},\r\n              endDate: { greaterThanOrEqualTo: moment(startDate).format(\"YYYY-MM-DD\"), lessThanOrEqualTo: moment(date).format(\"YYYY-MM-DD\")}\r\n            }\r\n          },   \r\n        });\r\n      } else alert(\"the To date must be higher than from\");\r\n    }\r\n  };\r\n\r\n  const ActionIcon = (props) => {\r\n    return (\r\n      <>\r\n        <IconButton\r\n          onClick={() => {\r\n            window.open(`appointmentdetails/${props.id}`);\r\n          }}\r\n        >\r\n          <VisibilityIcon />\r\n        </IconButton>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const handleSelect = async (value,id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: id,status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  function tConvert(time) {\r\n    // Check correct time format and split into components\r\n    time = time\r\n      .toString()\r\n      .match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\r\n\r\n    if (time.length > 1) {\r\n      // If time format correct\r\n      time = time.slice(1); // Remove full string match value\r\n      time[5] = +time[0] < 12 ? \"AM\" : \"PM\"; // Set AM/PM\r\n      time[0] = +time[0] % 12 || 12; // Adjust hours\r\n    }\r\n    return time.join(\"\"); // return adjusted time or original string\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n                <Backdrop className={classes.backdrop} open={loading}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n             \r\n        <Typography className={classes.title}>Manage Appointment</Typography>\r\n        <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setAppointmentFilter({\r\n                  ...appointmentFilter,\r\n                  or: [ {mobile: { includesInsensitive: event.target.value }} , {customerName: { includesInsensitive: event.target.value }}, {email: { includesInsensitive: event.target.value } }]\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"Start Date\"\r\n          value={startDate}\r\n          onChange={(date) => handleDateChange(date, \"start\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n          <KeyboardDatePicker\r\n          margin=\"normal\"\r\n          label=\"End Date\"\r\n          value={endDate}\r\n          onChange={(date) => handleDateChange(date, \"end\")}\r\n          style={{ marginTop: 0 }}\r\n          KeyboardButtonProps={{\r\n            'aria-label': 'change time',\r\n          }}\r\n          autoOk\r\n          variant=\"inline\"\r\n          inputVariant=\"outlined\"\r\n        />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Status\"\r\n        value={selectedStatus}\r\n        onChange={(event) => {\r\n          setSelectedStatus(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            status: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedStatus !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedStatus(\"\");\r\n                    delete appointmentFilter.status;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n        <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        label=\"Type\"\r\n        value={selectedType}\r\n        onChange={(event) => {\r\n          setSelectedType(event.target.value);\r\n          setAppointmentFilter({\r\n            ...appointmentFilter,\r\n            appointmentTypeId: {equalTo: event.target.value}\r\n          })\r\n        }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n              {selectedType !== \"\" && (\r\n                <CancelOutlinedIcon\r\n                  onClick={(event) => {\r\n                    setSelectedType(\"\");\r\n                    delete appointmentFilter.appointmentTypeId;\r\n                    setAppointmentFilter({ ...appointmentFilter });\r\n                  }}\r\n                />\r\n              )}\r\n            </InputAdornment>\r\n          ),\r\n        }}\r\n        >\r\n                            {appointmentTypes?.map((_)=>{\r\n          return(\r\n            <MenuItem value={_.id}>{_.name}</MenuItem>\r\n          )\r\n         })}\r\n          </TextField>\r\n        </Grid>\r\n      </Grid>\r\n        <TableContainer component={Paper}>\r\n        <Table      \r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((headCell) => (\r\n                <TableCell\r\n                  key={headCell.id}\r\n                  style={{ whiteSpace: \"nowrap\" }}\r\n                  align={headCell.numeric ? \"right\" : \"left\"}\r\n                  padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n                >\r\n                  {headCell.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rowData &&\r\n                rowData.length > 0 ?\r\n                rowData.map((row, index) => (\r\n                    <TableRow key={row.id}>\r\n                      <TableCell align=\"left\">{row?.id ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.customerName ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row?.email ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">{row?.mobile ?? \"\"}</TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startDateTime\r\n                          ? moment(\r\n                              row?.appointmentDateTimeSlotBySlotId\r\n                                ?.startDateTime\r\n                            ).format(\"Do MMM YYYY\")\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      {/* <TableCell align=\"left\">\r\n                        {row?.storeLocationByLocationId?.name ?? \"\"}\r\n                      </TableCell> */}\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.startTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                          ? tConvert(\r\n                              row?.appointmentDateTimeSlotBySlotId?.endTime\r\n                            )\r\n                          : \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.type?.name ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        {row?.status ?? \"\"}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <ActionIcon id={row.id}/>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))\r\n              : <p style={{position:'absolute',right:\"50%\"}}>{\"No Data\"}</p>}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100]}\r\n                count={data?.allAppointments?.totalCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                onPageChange={() => {}}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        </TableContainer>\r\n        \r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { TextField, Grid, Chip } from \"@material-ui/core\";\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmarkup(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup, props.refetch);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value });\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setMarkup({\r\n      ...markup,\r\n      [type]: e.target.value,\r\n    });\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n      >\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n          Add Markup Price For {props.material}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"category\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.category}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose category\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"producttype\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.producttype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose product type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"materiallist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.materiallist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Material type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                fullWidth\r\n                disableClearable\r\n                onChange={handleoptionChange(\"puritylist\")}\r\n                getOptionLabel={(option) => option.name}\r\n                options={props.puritylist}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Choose Purity type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Min\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemin\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Selling Price Min\"\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Selling Price Max\"\r\n                fullWidth\r\n                onChange={handleinputChange(\"sellpricemax\")}\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                fullWidth\r\n                disableClearable\r\n                getOptionLabel={(option) => option.name}\r\n                onChange={handleoptionChange(\"markuptype\")}\r\n                options={[\r\n                  { label: 1, name: \"Flat\" },\r\n                  { label: 2, name: \"Percentage\" },\r\n                ]}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Markup Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{\r\n                      ...params.InputProps,\r\n                      readOnly: true,\r\n                      type: \"search\",\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                label=\"Markup Value \"\r\n                onChange={handleinputChange(\"markup\")}\r\n                fullWidth\r\n                id=\"productvendorcode\"\r\n                name=\"Cost Price\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button autoFocus onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave} color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from \"../../../components/ConformationAlert\";\r\nimport { NetworkContext } from \"../../../context/NetworkContext\";\r\nimport {\r\n  DELETEMARKUPPRICE, DIAMONDMARKUP\r\n} from \"../../../graphql/query\";\r\nimport Addmarkup from \"./Addmarkup\";\r\n\r\nconst columns = [\r\n  { id: \"Component\", label: \"Components\" },\r\n  { id: \"Product Category\", label: \"product Category\" },\r\n  { id: \"Product Type\", label: \"Product Type\" },\r\n  { id: \"Selling Price Min\", label: \"Selling Price Min\" },\r\n  { id: \"Selling Price Max\", label: \"Selling Price Max\" },\r\n  { id: \"Markup Type\", label: \"Markup Type\" },\r\n  { id: \"Markup value\", label: \"Markup value\" },\r\n  { id: \"updatedAt\", label: \"updatedAt\" },\r\n  { id: \"Edit / Delete\", label: \"Edit / Delete\", align: \"center\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Dessert (100g serving)\",\r\n  },\r\n  { id: \"calories\", numeric: true, disablePadding: false, label: \"Calories\" },\r\n  { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [editmarkup, setEditmarkup] = React.useState({});\r\n  const [goldpricelist, setGoldpricelist] = React.useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState(\"\");\r\n  const [refetch, setRefetch] = React.useState(null);\r\n  const [isdelete, setIsdelete] = React.useState(false);\r\n  const [pricecomponent, setPriceomponent] = React.useState(\"Diamond\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"Product Id\");\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    setIsdelete(true);\r\n    let variables = {\r\n      elementId: deleteid,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: DELETEMARKUPPRICE, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n          // refetchval()\r\n        }\r\n      })\r\n      .catch((err) => { });\r\n    setIsconformation(false);\r\n  }\r\n  function handleDelete(diamondData, refetch) {\r\n    setDeleteid(diamondData.id);\r\n\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function updatemarkup(markupcontent, refetch) {\r\n    let product_type = markupcontent.producttype\r\n      ? markupcontent.producttype\r\n      : [];\r\n    let material_list = markupcontent.materiallist\r\n      ? markupcontent.materiallist\r\n      : [];\r\n    let purity_list = markupcontent.puritylist ? markupcontent.puritylist : [];\r\n\r\n    var bodydata = {};\r\n    bodydata[\"category\"] = markupcontent.category.name;\r\n    bodydata[\"producttype\"] = product_type;\r\n    bodydata[\"sellingPriceMin\"] = markupcontent.sellpricemin;\r\n    bodydata[\"sellingPriceMax\"] = markupcontent.sellpricemax;\r\n    bodydata[\"markuptype\"] = markupcontent.markuptype.label;\r\n    bodydata[\"material_list\"] = material_list;\r\n    bodydata[\"purity_list\"] = purity_list;\r\n    bodydata[\"markupValue\"] = markupcontent.markup;\r\n    bodydata[\"material\"] = pricecomponent;\r\n    console.log(\"XXXXXXXX\");\r\n    await sendNetworkRequest(\"/addmarkup\", {}, bodydata);\r\n    setOpen(false);\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      markupid: diamondData.id,\r\n      sellingPriceMin: diamondData.sellingPriceMin,\r\n      sellingPriceMax: diamondData.sellingPriceMax,\r\n      markupValue: diamondData.markupValue,\r\n      updatedAt: new Date(),\r\n    });\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true });\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {};\r\n\r\n    await sendNetworkRequest(\"/updatemarkup\", {}, editmarkup);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    refetch();\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditmarkup({ ...editmarkup, [type]: value });\r\n  };\r\n  const handlecomponentChange = (type) => (event, value) => {\r\n    setPriceomponent(value);\r\n  };\r\n  const handleinputChange = (type) => (e) => {\r\n    setEditmarkup({\r\n      ...editmarkup,\r\n      [type]: e.target.value,\r\n    });\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      <Card className={classes.cardcontent}>\r\n        <Grid\r\n          container\r\n          justify=\"left\"\r\n          alignItems=\"center\"\r\n          className={classes.cardroot}\r\n          spacing={4}\r\n        >\r\n          <Grid item xs={3}>\r\n            <Typography variant=\"h6\">{\"Selling Price Markup Setup\"}</Typography>\r\n          </Grid>\r\n          <Grid item xs={3}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              defaultValue={pricecomponent}\r\n              options={[\"Diamond\", \"Gemstone\", \"Gold\", \"Making Charge\", \"All\"]}\r\n              onChange={handlecomponentChange(\"earringbacking\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Pricing Components\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  // error = {productCtx.error_message.earringbacking}\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              size=\"small\"\r\n              style={{ paddingRight: 16, paddingLeft: 16 }}\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map((column) => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDMARKUP}\r\n                onCompleted={(data) =>\r\n                  setPageCount(data.allPricingMarkups.totalCount)\r\n                }\r\n                variables={{ vendorCode: pricecomponent }}\r\n              >\r\n                {({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>;\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    setGoldpricelist(data);\r\n                    return (\r\n                      <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation}\r\n                        />\r\n                        {open ? (\r\n                          <Addmarkup\r\n                            isadd={open}\r\n                            material={pricecomponent}\r\n                            refetch={refetch}\r\n                            actionSave={updatemarkup}\r\n                            category={props.categories}\r\n                            producttype={props.producttypes}\r\n                            materiallist={props.materiallist}\r\n                            puritylist={props.puritylist}\r\n                            title={props.title}\r\n                            actionclose={handleClose}\r\n                          />\r\n                        ) : null}\r\n\r\n                        {data.allPricingMarkups.nodes.map((row, index) => (\r\n                          <>\r\n                            <TableRow key={row.category}>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.material}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.category}\r\n                              </TableCell>\r\n                              <TableCell component=\"th\" scope=\"row\">\r\n                                {row.productType ? row.productType : \"All\"}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMin}\r\n                                    onChange={handleinputChange('sellingPriceMin')}\r\n\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMin}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmarkup.sellingPriceMax}\r\n                                    onChange={handleinputChange('sellingPriceMax')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPriceMax}{\" \"}\r\n                                </Typography>\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"center\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Autocomplete\r\n                                    id=\"free-solo-2-demo\"\r\n                                    fullWidth\r\n                                    disableClearable\r\n                                    className={classes.fixedTag}\r\n                                    getOptionLabel={(option) => option.name}\r\n                                    onChange={handleoptionChange(\r\n                                      \"sellingPriceType\"\r\n                                    )}\r\n                                    options={[\r\n                                      { label: 1, name: \"Flat\" },\r\n                                      { label: 2, name: \"Percentage\" },\r\n                                    ]}\r\n                                    renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                        <Chip\r\n                                          variant=\"outlined\"\r\n                                          size=\"small\"\r\n                                          label={option.name}\r\n                                          {...getTagProps({ index })}\r\n                                        />\r\n                                      ))\r\n                                    }\r\n                                    renderInput={(params) => (\r\n                                      <TextField\r\n                                        {...params}\r\n                                        label=\"Price Type\"\r\n                                        margin=\"dense\"\r\n                                        variant=\"outlined\"\r\n                                        fullWidth\r\n                                        InputProps={{\r\n                                          ...params.InputProps,\r\n                                          readOnly: true,\r\n                                          type: \"search\",\r\n                                        }}\r\n                                      />\r\n                                    )}\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupType === 1\r\n                                        ? \"Flat\"\r\n                                        : \"Percentage\"}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? (\r\n                                  <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value={editmarkup.markupValue}\r\n                                    onChange={handleinputChange(\"markupValue\")}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                  />\r\n                                ) : (\r\n                                    <Typography className={classes.heading}>\r\n                                      {row.markupValue}{\" \"}\r\n                                    </Typography>\r\n                                  )}\r\n                              </TableCell>\r\n\r\n                              <TableCell align=\"left\">\r\n                                <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                  {btnEdit.action && btnEdit.id == row.id\r\n                                    ? editmarkup.updatedAt\r\n                                    : row.updatedAt}\r\n                                </Moment>\r\n                              </TableCell>\r\n                              {btnEdit.action && btnEdit.id == row.id ? (\r\n                                <TableCell\r\n                                  style={{ width: 170 }}\r\n                                  align=\"center\"\r\n                                >\r\n                                  <Button\r\n                                    onClick={(e) => handleSave(row.id, refetch)}\r\n                                  >\r\n                                    <SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}>\r\n                                    <CancelIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                              ) : (\r\n                                  <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 170 }}\r\n                                  >\r\n                                    <Button onClick={(e) => handleEdit(row)}>\r\n                                      <EditIcon />\r\n                                    </Button>\r\n                                    <Button\r\n                                      onClick={(e) => handleDelete(row, refetch)}\r\n                                    >\r\n                                      <DeleteIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                )}\r\n                            </TableRow>\r\n                          </>\r\n                        ))}\r\n                      </>\r\n                    );\r\n                  } else {\r\n                    return <div>{\"Fetch Products\"}</div>;\r\n                  }\r\n                }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import { Button, Chip, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { DIAMONDPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={DIAMONDPRICELIST}\r\n              onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                        <TableRow key={row.diamondClarity}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondClarity}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.diamondColour}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.costPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.costPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                variant=\"outlined\"\r\n                                margin=\"dense\"\r\n                                label=\"Cost Price\"\r\n                                fullWidth\r\n                                className={classes.helperinput}\r\n                                value={editdiamond.sellingPrice}\r\n                                id=\"productvendorcode\"\r\n                                name=\"Cost Price\"\r\n                              /> :\r\n                                <Typography className={classes.heading}>\r\n                                  {row.sellingPrice} </Typography>}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import {\r\n  Button, Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GEMPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount(data.allGemstonePriceSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {stableSort(data.allGemstonePriceSettings.nodes, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.gemstoneType}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.gemstoneType}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.price}</TableCell>\r\n                          <TableCell align=\"left\">\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                id=\"free-solo-2-demo\"\r\n                                fullWidth\r\n                                disableClearable\r\n                                className={classes.fixedTag}\r\n                                getOptionLabel={option => option.name}\r\n                                options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                renderTags={(value, getTagProps) =>\r\n                                  value.map((option, index) => (\r\n                                    <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                  ))\r\n                                }\r\n                                renderInput={params => (\r\n                                  <TextField\r\n                                    {...params}\r\n                                    label=\"Price Type\"\r\n                                    margin=\"dense\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                    InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                  />\r\n                                )}\r\n                              /> : <Typography className={classes.heading}>\r\n                                  {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 20, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import { Button } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { MAKINGCHARGEPRICELIST, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit', label: 'Edit' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n\r\n  function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    //  sendNetworkRequest('/updateskuinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            <Query\r\n              query={MAKINGCHARGEPRICELIST}\r\n              onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n              variables={{ \"vendorCode\": 'STYPA 010' }}>\r\n              {\r\n                ({ data, loading, error, refetch }) => {\r\n\r\n                  if (loading) {\r\n                    // return <Loader />\r\n                  }\r\n                  if (error) {\r\n                    return <div>{error}</div>\r\n                    // return false\r\n                  }\r\n                  if (data) {\r\n                    return <>\r\n                      {data.allMakingChargeSettings.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                        <TableRow key={row.material}>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.material}\r\n\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\">\r\n                            {row.weightStart}\r\n\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{row.weightEnd}</TableCell>\r\n                          <TableCell align=\"left\">{row.purity}</TableCell>\r\n                          <TableCell align=\"left\">{row.sellingPriceType === 1 ? 'Flat' : 'Percentage'}</TableCell>\r\n\r\n                          <TableCell align=\"left\">\r\n                            <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                              {row.updatedAt}\r\n                            </Moment>\r\n                          </TableCell>\r\n                          {\r\n                            btnEdit.action && btnEdit.id == row.id ?\r\n                              <TableCell style={{ width: 20 }} align=\"center\">\r\n                                <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                                </Button>\r\n                                <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                </Button>\r\n                              </TableCell> :\r\n                              <TableCell align=\"center\" style={{ width: 20 }}>\r\n                                <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                </Button>\r\n                              </TableCell>\r\n                          }\r\n                        </TableRow>\r\n                      ))}\r\n                    </>\r\n                  }\r\n                  else {\r\n                    return <div>{\"Fetch Products\"}</div>\r\n                  }\r\n                }}\r\n            </Query>\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 100, 200, 500]}\r\n\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Query, withApollo } from \"react-apollo\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"./components/Product\";\r\nimport Diamonds from \"./components/Diamonds\";\r\nimport Gemstones from \"./components/Gemstones\";\r\nimport Makingcharge from \"./components/Makingcharge\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport {\r\n  VENDORLIST,\r\n  MASTERCATEGORY,\r\n  PRODUCTDIAMONDTYPES,\r\n} from \"../../graphql/query\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { Chip, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyle = makeStyles((theme) => ({}));\r\nexport const Markupprice = withRouter((props) => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n  const [categorylist, setCategorylist] = React.useState([]);\r\n  const [producttypes, setProducttypes] = React.useState([]);\r\n  const [materiallist, setMateriallist] = React.useState([]);\r\n  const [puritylist, setPuritylist] = React.useState([]);\r\n  const [isadd, setIsadd] = React.useState(false);\r\n\r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = (type) => (event, value) => {\r\n    setVendorcode(value.shortCode);\r\n  };\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORY, variables: {} }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCategorylist(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setProducttypes(fatchvalue.data.allMasterProductTypes.nodes);\r\n        setMateriallist(fatchvalue.data.allMasterMaterials.nodes);\r\n        setPuritylist(fatchvalue.data.allMasterMetalsPurities.nodes);\r\n        // setVendorlist({\r\n        //   ...vendorlist,\r\n        //   vendors : fatchvalue.data.allMasterVendors.nodes\r\n        // })\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1}>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => option.name}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Product Materials\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid> */}\r\n\r\n      <Grid item xs={12} sm={12}>\r\n        <Product\r\n          categories={categorylist}\r\n          producttypes={producttypes}\r\n          materiallist={materiallist}\r\n          puritylist={puritylist}\r\n          vendor={\"Gold\"}\r\n        />\r\n      </Grid>\r\n      {/* <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gem Stone Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gem Stone\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Gold Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Gold\"} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n          Making Charge Markup Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={\"Making Charge\"} />\r\n          </Grid> */}\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds />\r\n    </Grid> */}\r\n\r\n      {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones /> \r\n    </Grid> */}\r\n\r\n      {/* \r\n    <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Price Setup\r\n          </Typography>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge />\r\n    </Grid> */}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default withApollo(withRouter(Markupprice));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERATTRIBUTES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterattribute = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function Masterattribute(taxcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/managemasterattributes\",\r\n      {},\r\n      taxcontent\r\n    );\r\n\r\n    //getmaster()\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERATTRIBUTES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n        setFiltervalue(fatchvalue.data.allAttributeMasters.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Material List\"}\r\n          button_title=\"Add New\"\r\n          onCreate={Masterattribute}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterattribute;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Mastercategories = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    alert(JSON.stringify(taxcontent));\r\n    // let response = await sendNetworkRequest(\r\n    //   \"/managecategories\",\r\n    //   {},\r\n    //   taxcontent\r\n    // );\r\n    // getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCATEGORIES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n        setFiltervalue(fatchvalue.data.allMasterProductCategories.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          prefix={data.prefix}\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Mastercategories;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { COLLECTIONMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastercollections = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecollections', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: COLLECTIONMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterCollections.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterCollections.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Collections\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastercollections;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DESIGNMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdesigns = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managedesigns', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DESIGNMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDesigns.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Designs\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdesigns;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamonds = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.diamondColor &&  x.diamondColor.toLowerCase().match(taxcontent+ \".*\") ||\r\n      x.diamondClarity && x.diamondClarity.toLowerCase().match(taxcontent+ \".*\")\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Master Diamonds\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamonds;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondsettings;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { DIAMONDSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterdiamondshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managediamondshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: DIAMONDSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterDiamondsShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Diamond Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterdiamondshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSETTINGS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSETTINGS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Settings\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemsettings;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMSHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMSHAPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  useEffect(() => {\r\n   \r\n  }, [])\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Gemstone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGEMTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergemtypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegemtypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGEMTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Gemstone Types\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergemtypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERGENDER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastergenders = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managegenders', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERGENDER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterGenders.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterGenders.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Genders\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastergenders;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIALCOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Mastermetalcolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n      alert(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/managemetalcolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIALCOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Mastermetalcolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { OCCASSIONSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masteroccassions = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageoccassions', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: OCCASSIONSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterOccasions.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Occassions\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masteroccassions;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterorderstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageorderstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allOrderStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n    <Breadcrumbs ></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterorderstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { PAYMENTSTATUSMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpaymentstatus = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepaymentstatus', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n        setFiltervalue(fatchvalue.data.allPaymentStatusMasters.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Payment Status\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpaymentstatus;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTTYPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterproducttypes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageproducttypes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTTYPES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterProductTypes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Mater ProductTypes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterproducttypes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERPRODUCTPURITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterpurities = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managepurities', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPRODUCTPURITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Metal Purity\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterpurities;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport {Paper,Button,Grid,Typography, \r\n  FormControlLabel,\r\n  Checkbox,\r\n  Divider} from '@material-ui/core';\r\n\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    margin: 'auto',\r\n    width: 'fit-content',\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120,\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst   Addpermissions=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('sm');\r\n  const [permissions, setPermissions] = React.useState(props.permissions);\r\n\r\n  const handleClose = () => {\r\n    props.onClose()\r\n\r\n  };\r\n  const handleSave = () => {\r\n    //setOpen(false);\r\n    props.onSave(permissions, props.role_id)\r\n\r\n  };\r\n  const updateread = (permission_id,key) => (event) => {\r\n    var permissonobj = {}\r\n\r\n      if(permissions[permission_id])\r\n      {\r\n        permissonobj = permissions[permission_id];\r\n       \r\n      }\r\n      permissonobj[key] = event.target.checked\r\n    setPermissions({...permissions,[permission_id] :permissonobj})\r\n    //setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={props.isopen}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Page Permissions</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n          <DialogContentText>\r\n          {props.pages.map((pagecontent, index) => (\r\n            <Grid container xs= {12} spacing={3}>\r\n             <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n               <Typography variant=\"h6\" component=\"h5\">\r\n               {pagecontent.displayname}\r\n              </Typography>\r\n              </Grid>\r\n              <Grid item container alignItems=\"center\"  row xs= {6} spacing={2}>\r\n\r\n              <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                     checked={permissions[pagecontent.id] ? permissions[pagecontent.id].isview : false }\r\n                     onChange={updateread(pagecontent.id,'isview')}\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"View\"\r\n              />\r\n               <FormControlLabel\r\n                control={\r\n                  <Checkbox\r\n                  checked={permissions[pagecontent.id] ? permissions[pagecontent.id].iswrite : false }\r\n\r\n                  onChange={updateread(pagecontent.id,'iswrite')}\r\n\r\n                    name=\"checkedB\"\r\n                    color=\"primary\"\r\n                  />\r\n                }\r\n                label=\"Edit\"\r\n              />\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n          </DialogContentText>\r\n          </DialogContent>\r\n          <Divider />\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n          <Button onClick={handleSave} variant=\"contained\" color=\"primary\">\r\n            Update \r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n       \r\n      </>\r\n  );\r\n}\r\nexport default withApollo(Addpermissions);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Addpermissions from \"../../components/Addpermissions/Addpermissions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterroles = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n  const [isshowpermissions, setIsshowpermissions] = React.useState(false);\r\n  const [masterpages, setMasterpages] = React.useState([]);\r\n  const [editroleid, setEditroleid] = React.useState(\"\");\r\n  const [editpermissons, setEditpermissions] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/manageroles\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMasterpages(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n\r\n    let response = await sendNetworkRequest(\"/getmasterroles\", {}, {});\r\n    setMastervalue(response.roles);\r\n    setFiltervalue(response.roles);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n  async function showpermissions(rowcontent) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getrolepermissions\",\r\n      {},\r\n      { role_id: rowcontent.id }\r\n    );\r\n    setEditpermissions(response.permissions);\r\n    setEditroleid(rowcontent.id);\r\n    setIsshowpermissions(true);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function updatepermissions(rowcontent) {\r\n    let bodydata = {\r\n      permissions: rowcontent,\r\n      role_id: editroleid,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    setIsshowpermissions(false);\r\n    let response = await sendNetworkRequest(\"/managepermissions\", {}, bodydata);\r\n    getmaster();\r\n  }\r\n  function cancelpermissions(rowcontent) {\r\n    setIsshowpermissions(false);\r\n    // alert(JSON.stringify(rowcontent))\r\n  }\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x.name.toLowerCase()\r\n        ? x.name.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {isshowpermissions ? (\r\n          <Addpermissions\r\n            role_id={editroleid}\r\n            isopen={isshowpermissions}\r\n            permissions={editpermissons}\r\n            pages={masterpages}\r\n            onClose={cancelpermissions}\r\n            onSave={updatepermissions}\r\n          />\r\n        ) : null}\r\n        <Mastercontent\r\n          title={\"Master Category\"}\r\n          button_title=\"Add New\"\r\n          onPermissionadd={showpermissions}\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterroles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Vendor from \"../../components/Vendor/Vendor\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { MASTERPAGES, PRODUCTDIAMONDTYPES } from \"../../graphql/query\";\r\nimport data from \"./data.json\";\r\nimport Page from \"../../components/Page\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { Breadcrumbs } from \"../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const Masterscreens = withRouter((props) => {\r\n  const [isadd, setIsadd] = React.useState(false);\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([]);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([]);\r\n\r\n  async function createtax(taxcontent) {\r\n    let response = await sendNetworkRequest(\"/managepages\", {}, taxcontent);\r\n    getmaster();\r\n  }\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERPAGES }),\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setMastervalue(fatchvalue.data.allUniquepages.nodes);\r\n        setFiltervalue(fatchvalue.data.allUniquepages.nodes);\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  useEffect(() => {\r\n    getmaster();\r\n  }, []);\r\n\r\n  function applysearch(searchcontent) {\r\n    setSearchtext(searchcontent);\r\n  }\r\n  function addcategory() {\r\n    setIsadd(true);\r\n  }\r\n  function cancelcreation() {\r\n    setIsadd(false);\r\n  }\r\n\r\n  async function search(taxcontent) {\r\n    const filteredHomes = mastervalue.filter((x) =>\r\n      x?.name?.toLowerCase()\r\n        ? x?.name?.toLowerCase().match(taxcontent + \".*\")\r\n        : null\r\n    );\r\n    setFiltervalue(filteredHomes);\r\n  }\r\n  return (\r\n    <>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <Breadcrumbs\r\n          url=\"userconfiguration\"\r\n          name=\"User Configuration\"\r\n        ></Breadcrumbs>\r\n\r\n        {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n        {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent\r\n          title={\"Master Screens\"}\r\n          button_title=\"Add New\"\r\n          onCreate={createtax}\r\n          onSearch={search}\r\n          columns={data.columns}\r\n          values={filtervalue}\r\n        />\r\n      </Page>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Masterscreens;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONECOLORS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstonecolors = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestonecolors', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONECOLORS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesColors.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Colours\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstonecolors;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestones', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStones.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStones.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Stones\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstones;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERSTONESHAPES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstoneshapes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestoneshapes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERSTONESHAPES  })\r\n    };\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStonesShapes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Stone Shapes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstoneshapes;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { STYLEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterstyles = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managestyles', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: STYLEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterStyles.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterStyles.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Styles\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterstyles;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { THEMEMASTER, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterthemes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managethemes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: THEMEMASTER  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterThemes.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterThemes.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Themes\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterthemes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERWEIGHTS, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Masterweights = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageweights', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERWEIGHTS  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n       \r\n        setMastervalue(fatchvalue.data.allMasterWeights.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterWeights.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Weights\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Masterweights;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERMATERIAL, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    \r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Materialmaster = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managematerials', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERMATERIAL  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterMaterials.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Material List\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Materialmaster;","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n  InputAdornment,\r\n  Typography,\r\n  Menu,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ORDERS } from \"./../../services/queries\";\r\nimport { PAYMENTSTATUSMASTER } from \"./../../graphql/query\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport CancelOutlinedIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport { gql } from \"apollo-boost\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ViewColumnIcon from \"@material-ui/icons/ViewColumn\";\r\n\r\nlet getAddress = (data) => {\r\n  if (!data) return \"\";\r\n  return (\r\n    data?.addressline1 +\r\n    \",\" +\r\n    data?.addressline2 +\r\n    \",\" +\r\n    data?.city +\r\n    \",\" +\r\n    data?.state +\r\n    \",\" +\r\n    data?.pincode\r\n  );\r\n};\r\n\r\nlet getGiftMessage = (data) => {\r\n  if (!data) return \"\";\r\n  return data?.message + \"  from:\" + data?.giftFrom + \"  to:\" + data?.giftTo;\r\n};\r\n\r\nlet getPaymentStatus = (data) => {\r\n  if (data?.paymentMode === \"COD\") {\r\n    return data.paymentStatus;\r\n  }\r\n  if (!data?.paymentResponse) return data.paymentStatus;\r\n  let payment_response = JSON.parse(data?.paymentResponse);\r\n  return (\r\n    <div>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.APTRANSACTIONID}\r\n      </p>\r\n      <p style={{ margin: 0, padding: 0 }}>\r\n        {payment_response?.MESSAGE ||\r\n          payment_response?.TRANSACTIONPAYMENTSTATUS}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet defaultColumns = {\r\n  \"Order ID\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"id\",\r\n  },\r\n  \"Order Date\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"order_date\",\r\n  },\r\n  \"Customer Name\": {\r\n    is_active: true,\r\n    is_default: true,\r\n    identifier: \"customer_name\",\r\n  },\r\n  SKUs: { is_active: false, identifier: \"SKUs\" },\r\n  Email: { is_active: true, identifier: \"email\" },\r\n  \"Phone Number\": { is_active: true, identifier: \"phone_number\" },\r\n  \"Shipping Address\": { is_active: true, identifier: \"shipping_address\" },\r\n  \"Gift Message\": { is_active: false, identifier: \"gift_message\" },\r\n  \"Order Status\": { is_active: false, identifier: \"order_status\" },\r\n  \"Payment Mode\": { is_active: true, identifier: \"payment_mode\" },\r\n  \"Payment Status\": { is_active: true, identifier: \"payment_status\" },\r\n  \"Waybill No\": { is_active: false, identifier: \"waybill\" },\r\n  Comments: { is_active: false, identifier: \"comments\" },\r\n \r\n  Actions: {\r\n    is_active: true,\r\n    is_default: true,\r\n  },\r\n};\r\n\r\nconst ActionIcon = (props) => {\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => {\r\n          window.open(`orderdetails/${props.id}`);\r\n        }}\r\n      >\r\n        <VisibilityIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\n\r\nlet filterData = {};\r\n\r\nexport const OrderList = withRouter((props) => {\r\n  \r\n  let user_id = props.location.pathname.split(\"/\")[2];\r\n  if (user_id) {\r\n    filterData = {\r\n      userProfileId: {\r\n        equalTo: user_id,\r\n      },\r\n    };\r\n  }\r\n  const [columnName, setColumnName] = React.useState(defaultColumns);\r\n  const [orderFilter, setOrderFilter] = React.useState({\r\n    ...filterData,\r\n    id: { isNull: false },\r\n  });\r\n  const [orderBy, setOrderBy] = React.useState([\"CREATED_AT_DESC\"]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [masterData, setMasterData] = React.useState({\r\n    orderMaster: [],\r\n    paymentMaster: [\r\n      { name: \"SUCCESS\" },\r\n      { name: \"FAIL\" },\r\n      { name: \"TRANSACTION CANCELLED\" },\r\n    ],\r\n  });\r\n  const [selectedStatus, setSelectedStatus] = React.useState({\r\n    orderStatus: \"\",\r\n    paymentStatus: \"\",\r\n  });\r\n  const [fromDate, setFromDate] = React.useState(null);\r\n  const [ToDate, setToDate] = React.useState(null);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleDateChange = (date, value) => {\r\n    let createdAt = orderFilter?.createdAt;\r\n    if (value === \"from\") {\r\n      setFromDate(date);\r\n      setOrderFilter({\r\n        ...orderFilter,\r\n        createdAt: {\r\n          ...createdAt,\r\n          greaterThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n        },\r\n      });\r\n    }\r\n    if (value === \"to\") {\r\n      if (date > fromDate) {\r\n        setToDate(date);\r\n        setOrderFilter({\r\n          ...orderFilter,\r\n          createdAt: {\r\n            ...createdAt,\r\n            lessThanOrEqualTo: moment(date).format(\"yyyy-MM-DD\"),\r\n          },\r\n        });\r\n      } else alert(\"the To date must be higher thean from\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  React.useEffect(() => {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          ${PAYMENTSTATUSMASTER}\r\n        `,\r\n      })\r\n      .then(({ data: { allOrderStatusMasters, allPaymentStatusMasters } }) => {\r\n        setMasterData({\r\n          orderMaster: allOrderStatusMasters?.nodes || [],\r\n          paymentMaster: [\r\n            ...masterData.paymentMaster,\r\n            ...allPaymentStatusMasters?.nodes,\r\n          ],\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const { loading, data, error, networkStatus } = useQuery(ORDERS, {\r\n    variables: {\r\n      limit: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      order_filter: { ...orderFilter },\r\n      order_by: orderBy,\r\n    },\r\n  });\r\n\r\n  let rowData = data?.allOrders?.nodes;\r\n  if (rowData) {\r\n    rowData = rowData.map((item) => {\r\n      return {\r\n        id: item.id,\r\n        order_date: moment(item?.createdAt).format(\"DD MMM YYYY HH:mm:ss\"),\r\n        SKUs: item?.shoppingCartByCartId?.shoppingCartItemsByShoppingCartId?.nodes\r\n          .map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n          .join(\", \"),\r\n        customer_name:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.firstname,\r\n        email: item?.shoppingCartByCartId?.userProfileByUserprofileId?.email,\r\n        phone_number:\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n            ?.contactNumber,\r\n        shipping_address: getAddress(\r\n          item?.shoppingCartByCartId?.cartAddressesByCartId?.nodes?.[0]\r\n        ),\r\n        gift_message: getGiftMessage(item?.shoppingCartByCartId?.nodes?.[0]),\r\n        payment_mode: item?.paymentMode,\r\n        order_status: item?.orderStatus,\r\n        payment_status: getPaymentStatus({\r\n          paymentMode: item?.paymentMode,\r\n          paymentResponse:\r\n            item?.paymentDetailsByOrderId?.nodes?.[0]?.paymentResponse,\r\n        }),\r\n        emailMessageId: item?.emailMessageId,\r\n        smsDeliveredId: item?.smsDeliveredId?.replace(\"otp-nacjotp-\", \"\"),\r\n        waybill: item?.awbNumber,\r\n        comments: item?.comments,\r\n      };\r\n    });\r\n  }\r\n  let colSpan = Object.keys(columnName).filter(\r\n    (item) => columnName[item].is_active\r\n  ).length;\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justifyContent=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Orders</Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Grid container item xs={3}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            placeholder=\"Search by name, email, phone\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n            onChange={(event) => {\r\n              setOrderFilter({\r\n                shoppingCartByCartId: {\r\n                  or: [\r\n                    {\r\n                      userProfileByUserprofileId: {\r\n                        email: { includesInsensitive: event.target.value },\r\n                      },\r\n                    },\r\n                    {\r\n                      cartAddressesByCartId: {\r\n                        some: {\r\n                          or: [\r\n                            {\r\n                              firstname: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                            {\r\n                              contactNumber: {\r\n                                includesInsensitive: event.target.value,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              });\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.orderStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                orderStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                orderStatus: { includesInsensitive: event.target.value },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Order Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.orderStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          orderStatus: \"\",\r\n                        });\r\n                        delete orderFilter.orderStatus;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.orderMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <TextField\r\n            fullWidth\r\n            variant=\"outlined\"\r\n            value={selectedStatus?.paymentStatus}\r\n            onChange={(event) => {\r\n              setSelectedStatus({\r\n                ...selectedStatus,\r\n                paymentStatus: event.target.value,\r\n              });\r\n              setOrderFilter({\r\n                ...orderFilter,\r\n                paymentDetailsByOrderId: {\r\n                  some: {\r\n                    paymentResponse: {\r\n                      includesInsensitive: event.target.value,\r\n                    },\r\n                  },\r\n                },\r\n              });\r\n            }}\r\n            select\r\n            label=\"Payment Status\"\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\" style={{ cursor: \"pointer\" }}>\r\n                  {selectedStatus?.paymentStatus !== \"\" && (\r\n                    <CancelOutlinedIcon\r\n                      onClick={(event) => {\r\n                        setSelectedStatus({\r\n                          ...selectedStatus,\r\n                          paymentStatus: \"\",\r\n                        });\r\n                        delete orderFilter.paymentDetailsByOrderId;\r\n                        setOrderFilter({ ...orderFilter });\r\n                      }}\r\n                    />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          >\r\n            {masterData.paymentMaster.map((option, index) => (\r\n              <MenuItem key={index} value={option.name}>\r\n                {option.name}\r\n              </MenuItem>\r\n            ))}\r\n          </TextField>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"From\"\r\n              value={fromDate}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"from\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={2}>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <KeyboardDatePicker\r\n              autoOk\r\n              variant=\"inline\"\r\n              inputVariant=\"outlined\"\r\n              format=\"yyyy/MM/dd\"\r\n              margin=\"normal\"\r\n              label=\"To\"\r\n              value={ToDate}\r\n              disableFuture={true}\r\n              style={{ marginTop: 0 }}\r\n              onChange={(date) => handleDateChange(date, \"to\")}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n        </Grid>\r\n        <Grid container item xs={1}>\r\n          <IconButton onClick={handleClick}>\r\n            <ViewColumnIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                height:\r\n                  Object.keys(columnName).filter((item) => !item?.is_default)\r\n                    .length * 20,\r\n                width: \"50ch\",\r\n              },\r\n            }}\r\n          >\r\n            <Grid container style={{ padding: 10 }}>\r\n              {Object.keys(columnName).map(\r\n                (item) =>\r\n                  !columnName[item]?.is_default && (\r\n                    <Grid item xs={6}>\r\n                      <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            name={item}\r\n                            color=\"primary\"\r\n                            checked={columnName[item].is_active}\r\n                            onClick={(_) => {\r\n                              columnName[item].is_active =\r\n                                !columnName[item].is_active;\r\n                              setColumnName({ ...columnName });\r\n                            }}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    </Grid>\r\n                  )\r\n              )}\r\n            </Grid>\r\n          </Menu>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(columnName).map(\r\n                  (item) =>\r\n                    columnName[item].is_active && (\r\n                      <TableCell key={item} align={\"center\"}>\r\n                        {item}\r\n                      </TableCell>\r\n                    )\r\n                )}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {rowData &&\r\n                rowData.length > 0 &&\r\n                rowData.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    {Object.keys(columnName).map(\r\n                      (column) =>\r\n                        columnName[column].is_active && (\r\n                          <TableCell key={column} align={\"center\"}>\r\n                            {column !== \"Actions\" &&\r\n                              item[columnName[column]?.identifier]}\r\n                            {column === \"Actions\" && (\r\n                              <ActionIcon id={item.id} />\r\n                            )}\r\n                          </TableCell>\r\n                        )\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n              {rowData && rowData.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={colSpan} align={\"center\"}>\r\n                    <Typography>No Orders found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={colSpan}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allOrders?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                  onPageChange={() => {}}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n});\r\nexport default OrderList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  toolbar: {\r\n    '& > * + *': {\r\n      marginLeft: theme.spacing(1)\r\n    }\r\n  },\r\n  deleteButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.red[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.red[900]\r\n    }\r\n  },\r\n  deleteIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Header = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Orders\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Order #{order.id}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          {/* <Button\r\n            className={classes.deleteButton}\r\n            variant=\"contained\"\r\n          >\r\n            <DeleteIcon className={classes.deleteIcon} />\r\n            Delete\r\n          </Button> */}\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  PAYMENTSTATUSMASTER,\r\n  GETORDERCOMMUNICATIONLOGS,\r\n} from \"../../../../graphql/query\";\r\nimport { UPDATE_ORDER } from \"../../../../graphql/mutation\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst OrderInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [paymentstatus, setPaymentstatus] = useState([]);\r\n  const [orderstatus, setOrderstatus] = useState([]);\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [updateOrder, setUpdateOrder] = useState({\r\n    waybillNum: null,\r\n    paymentStatus: null,\r\n    orderStatus: null,\r\n    comments: null,\r\n  });\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n  const handleChange = (event) => {\r\n    setUpdateOrder({ ...updateOrder, [event.target.name]: event.target.value });\r\n    if (updateOrder?.comments?.length > 0) {\r\n      setErrorMsg(\"\");\r\n    }\r\n  };\r\n  async function getmaster() {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PAYMENTSTATUSMASTER }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setPaymentstatus(fatchvalue.data.allPaymentStatusMasters.nodes);\r\n        setOrderstatus(fatchvalue.data.allOrderStatusMasters.nodes);\r\n\r\n        setUpdateOrder({\r\n          waybillNum: order?.awb_number ?? null,\r\n          paymentStatus: order?.payment_status ?? null,\r\n          orderStatus: order?.order_status ?? null,\r\n          comments: order?.comments ?? null,\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  const getOrderCommunicationLogs = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order?.id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  React.useEffect(() => {\r\n    getmaster();\r\n    getOrderCommunicationLogs();\r\n  }, []);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Send Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (updateOrder?.comments?.length > 0) {\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_ORDER,\r\n          variables: {\r\n            id: order?.id,\r\n            awbNumber: updateOrder?.waybillNum ?? \"\",\r\n            comments: updateOrder?.comments ?? \"\",\r\n            orderStatus: updateOrder?.orderStatus,\r\n            paymentStatus: updateOrder?.paymentStatus,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } else {\r\n      setErrorMsg(\"Enter Comments\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Order info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Table>\r\n          <TableBody>\r\n            <TableRow>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>\r\n                <Link\r\n                  target=\"_blank\"\r\n                  component={RouterLink}\r\n                  to={`/customerdetails/${order.user_profile.id}`}\r\n                >\r\n                  {order.user_profile.first_name} {order.user_profile.last_name}\r\n                </Link>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline1\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].addressline2\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].city\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].state\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n                <div>\r\n                  {order.shopping_cart\r\n                    ? order.shopping_cart.cart_addresses\r\n                      ? order.shopping_cart.cart_addresses.length > 0\r\n                        ? order.shopping_cart.cart_addresses[0].country\r\n                        : \"\"\r\n                      : \"\"\r\n                    : \"\"}\r\n                </div>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Email ID</TableCell>\r\n              <TableCell>{order.user_profile.email}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Mobile Number</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.cart_addresses\r\n                    ? order.shopping_cart.cart_addresses.length > 0\r\n                      ? order.shopping_cart.cart_addresses[0].contact_number\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>\r\n                {moment(order.created_at).format(\"DD MMM YYYY hh:mm a\")}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Amount</TableCell>\r\n              <TableCell>\r\n                {order.currency}\r\n                {order.shopping_cart.discounted_price}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Waybil Number</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"waybillNum\"\r\n                  placeholder=\"Waybill Number\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.waybillNum}\r\n                  variant=\"outlined\"\r\n                />\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Gift Message</TableCell>\r\n              <TableCell>\r\n                {order.shopping_cart\r\n                  ? order.shopping_cart.giftwraps\r\n                    ? order.shopping_cart.giftwraps.length > 0\r\n                      ? order.shopping_cart.giftwraps[0].message\r\n                      : \"\"\r\n                    : \"\"\r\n                  : \"\"}\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Mode</TableCell>\r\n              <TableCell>{order.payment_mode}</TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Payment Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"paymentStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.paymentStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {paymentstatus.map((option) => (\r\n                    <option key={option.name} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Order Status</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  name=\"orderStatus\"\r\n                  onChange={handleChange}\r\n                  select\r\n                  margin=\"dense\"\r\n                  SelectProps={{ native: true }}\r\n                  value={updateOrder.orderStatus}\r\n                  variant=\"outlined\"\r\n                >\r\n                  {orderstatus.map((option) => (\r\n                    <option key={option.id} value={option.name}>\r\n                      {option.name}\r\n                    </option>\r\n                  ))}\r\n                </TextField>\r\n              </TableCell>\r\n            </TableRow>\r\n            <TableRow>\r\n              <TableCell>Comments</TableCell>\r\n              <TableCell>\r\n                <TextField\r\n                  fullWidth\r\n                  margin=\"dense\"\r\n                  name=\"comments\"\r\n                  placeholder=\"Comments\"\r\n                  onChange={handleChange}\r\n                  value={updateOrder.comments}\r\n                  variant=\"outlined\"\r\n                />\r\n                <span style={{ color: \"red\" }}>{errorMsg}</span>\r\n              </TableCell>\r\n            </TableRow>\r\n          \r\n          </TableBody>\r\n        </Table>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Grid>\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"order\")}\r\n              >\r\n                Order Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"payment\")}\r\n              >\r\n                Payment Confirmation Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Shipped\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {updateOrder.paymentStatus === \"Paid\" &&\r\n          updateOrder.orderStatus === \"Delivered\" ? (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"shipping\")}\r\n              >\r\n                Shipping Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ margin: \"4px 0px\" }}\r\n                onClick={() => sendEmail(order?.id, \"rate\")}\r\n              >\r\n                Rate Email\r\n              </Button>\r\n              <span>&nbsp;&nbsp;&nbsp;</span>{\" \"}\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ margin: \"4px 0px\" }}\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </Button>\r\n        </Grid>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderInfo.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default OrderInfo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell\r\n} from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 700\r\n  }\r\n}));\r\n\r\nconst OrderItems = props => {\r\n  const { order, className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"Order items\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <PerfectScrollbar>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Sku</TableCell>\r\n                  <TableCell>Product Image</TableCell>\r\n                  <TableCell>Quantity</TableCell>\r\n                  <TableCell>Amount</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {order.shopping_cart.shopping_cart_items.map(item => (\r\n                  <TableRow key={item.id}>\r\n                     <TableCell>\r\n                      {item.product_sku}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                    <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {item.qty}\r\n                    </TableCell>\r\n                    <TableCell>{item.price}</TableCell>\r\n                    \r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </PerfectScrollbar>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderItems.propTypes = {\r\n  className: PropTypes.string,\r\n  order: PropTypes.object.isRequired\r\n};\r\n\r\nexport default OrderItems;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  CardContent,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  inner_card: {\r\n    padding: \"10px\",\r\n    marginBottom: \"16px\",\r\n  },\r\n  image_container: {\r\n    padding: \"16px\",\r\n  },\r\n  product_image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    objectFit: \"cover\",\r\n  },\r\n  text_heading: {\r\n    // fontWeight: \"400\",\r\n    margin: \"8px 0px\",\r\n  },\r\n  text_content: {\r\n    margin: \"8px 0px\",\r\n  },\r\n  final_total_text: {\r\n    textAlign: \"right\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"bold\",\r\n  },\r\n}));\r\nconst OrderDetails = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  console.log(order, \"samir\");\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{ marginTop: 30 }}>\r\n      <Card>\r\n        <CardHeader title=\"Order Details\" />\r\n        <Divider />\r\n\r\n        <CardContent>\r\n          {order.shopping_cart.shopping_cart_items.map((item) => (\r\n            <Card key={item.id} className={classes.inner_card}>\r\n              <Grid container xs={12}>\r\n                {/*-------------------------------- Image part-------------------------------- */}\r\n                <Grid\r\n                  container\r\n                  xs={12}\r\n                  md={3}\r\n                  className={classes.image_container}\r\n                >\r\n                  <img\r\n                    src=\"\"\r\n                    alt=\"Product Image\"\r\n                    className={classes.product_image}\r\n                  />\r\n                </Grid>\r\n                <Grid container xs={12} md={9}>\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Product Code</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.product_sku}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Metal</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`${item.trans_sku_list.purity} ${item.trans_sku_list.metal_color}`}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Gold Weight (Gm)</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.sku_weight}\r\n                      </p>\r\n                    </Grid>{\" \"}\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Diamond Quality</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {\" \"}\r\n                        {item.trans_sku_list.diamond_type}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>\r\n                        Diamond Weight (Ct)\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> ? </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                  {/* ----------------------------------------------------------------- */}\r\n                  <Grid container xs={12} md={6}>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Quantity</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> {item.qty} </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}> Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.discount_price)}`}{\" \"}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Saved</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(\r\n                          item.trans_sku_list.discount_price -\r\n                            item.trans_sku_list.markup_price\r\n                        )} (${\r\n                          item.trans_sku_list.discount === null\r\n                            ? \"0\"\r\n                            : item.trans_sku_list.discount\r\n                        }%off)`}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Shipping</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}> Free </p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_heading}>Grand Total</p>\r\n                    </Grid>\r\n                    <Grid item xs={6} md={6}>\r\n                      <p className={classes.text_content}>\r\n                        {`₹${Math.round(item.trans_sku_list.markup_price)}`}\r\n                      </p>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Card>\r\n          ))}\r\n          <Grid>\r\n            <p className={classes.final_total_text}>\r\n              Final Total - {Math.round(order.shopping_cart.gross_amount)}&nbsp;\r\n            </p>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default OrderDetails;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page\";\r\nimport { Header, OrderInfo, OrderItems } from \"./components\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport OrderDetails from \"./components/OrderDetails/OrderDetails\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { GETORDERCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport const OrderManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  async function fetchorderdetails(order_id) {\r\n    let response = await sendNetworkRequest(\r\n      \"/getorderdetails\",\r\n      {},\r\n      { order_id }\r\n    );\r\n    console.log(response);\r\n    setOrder(response.orders);\r\n    setProductDetails(response.product_detail);\r\n  }\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETORDERCOMMUNICATIONLOGS,\r\n\r\n        variables: {\r\n          id: order_id,\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n       \r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.orderById?.communicationLogsByOrderId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n\r\n    fetchorderdetails(com_id);\r\n    getOrderCommunicationLogs(com_id);\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Order Management Details\">\r\n      <Header order={order} />\r\n      <Grid className={classes.container} container spacing={3}>\r\n        <Grid item md={4} xl={3} xs={12}>\r\n          <OrderInfo order={order} />\r\n        </Grid>\r\n        <Grid item md={8} xl={9} xs={12}>\r\n          <OrderItems order={order} productDetails={productDetails} />\r\n          <OrderDetails\r\n            order={order}\r\n            productDetails={productDetails}\r\n            style={{ marginTop: 30 }}\r\n          />\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.type === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId}</TableCell>\r\n                              <TableCell>{val.type}</TableCell>\r\n                              <TableCell>{val.messageType}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default OrderManagementDetails;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Switch,\r\n  FormControlLabel,\r\n  Radio\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentInfo = (props) => {\r\n  const { order, className, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  \r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"Appointment Info\" />\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={2}>\r\n           <Grid item xs={4} >\r\n             <Typography>Name :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.customerName ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Email :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.email ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Mobile :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.mobile ?? 'no data'}</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Type :</Typography>\r\n             <p>{order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 1 ? \"Alive\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 2 ? \"Lotus\" :order?.allAppointments?.nodes[0]?.appointmentTypeId === 3 ? \"Piercing\" : order?.allAppointments?.nodes[0]?.appointmentTypeId === 4 ? \"Stones\" : order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5 ? \"Enquiry\" :\"no Data\" }</p>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Category :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n              {order?.allAppointments?.nodes[0]?.productCategory?.length > 0  ? order?.allAppointments?.nodes[0]?.productCategory?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>              \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Metal Type :</Typography>\r\n             <div style={{marginTop:\"5px\"}}>\r\n             {order?.allAppointments?.nodes[0]?.metalType?.length > 0 ? order?.allAppointments?.nodes[0]?.metalType?.map((val)=>(\r\n                <Chip label={val} color=\"primary\" style={{marginLeft:'3px',textTransform:'capitalize'}}/>\r\n              )) : 'no data'}\r\n             </div>     \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>isOnline :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isOnline ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>is IT required :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}>\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.isItRequired ? null : true}/>} label=\"No\" />\r\n            </div> \r\n           </Grid>\r\n           <Grid item xs={4} >\r\n             <Typography>Are more Members Joining :</Typography>\r\n             <div style={{marginTop:\"5px\",marginLeft:\"10px\"}}> \r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? true : null}/>} label=\"Yes\" />\r\n             <FormControlLabel value=\"end\" control={<Radio color=\"primary\"  checked={order?.allAppointments?.nodes[0]?.areMoreMembersJoining ? null : true}/>} label=\"No\" />\r\n             </div>\r\n           </Grid>\r\n           <Grid item xs={4}>\r\n             <Typography>Special Requests :</Typography>\r\n             <p style={{width:\"80%\",overflowWrap:'break-word'}}>{order?.allAppointments?.nodes[0]?.specialRequests ?? 'no data'}</p>\r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>    \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentInfo;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  TextField,\r\n  Link,\r\n  Grid,\r\n  Typography,\r\n  Chip,Switch, Input,MenuItem,Select\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../config\";\r\nimport { API_URL } from \"../../../config\";\r\nimport { MUTATE_STATUS,MUTATE_MEETING } from \"../../../graphql/query\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  content: {\r\n    padding: 10,\r\n  },\r\n  actions: {\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-end\",\r\n    \"& > * + *\": {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst AppointmentExtra= (props) => {\r\n  const { order, className,id, ...rest } = props;\r\n  const client = useApolloClient();\r\n  const classes = useStyles();\r\n  const [selected,setSelected] = React.useState('')\r\n  const [meetingLink,setmeetingLink] = React.useState('');\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  React.useEffect(()=>{\r\n   setSelected(order?.allAppointments?.nodes[0]?.status)\r\n   setmeetingLink(order?.allAppointments?.nodes[0]?.meetingLink)\r\n  },[order])\r\n\r\n\r\n  const handleMeeting = async ()=>{\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_MEETING,\r\n        variables: { id: parseInt(id), meetingLink:meetingLink },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Meeting Link Send Successfully!\",\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }\r\n\r\n  const handleSelect = async (value) => {\r\n    setSelected(value)\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: MUTATE_STATUS,\r\n        variables: { id: parseInt(id), status:value },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        props.refetch()\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const handleLinkchange=(val)=>{\r\n     setmeetingLink(val)\r\n  }\r\n\r\n  const sendEmail = () => {\r\n    if(meetingLink !== ''){\r\n      const url = API_URL + \"/trigger_mail\";\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ appointment_id: parseInt(id),\r\n        meeting_link: meetingLink }),\r\n      };\r\n      fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          handleMeeting()\r\n        })\r\n        .catch((err) => {\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    } \r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader/>\r\n      <Divider />\r\n      <CardContent className={classes.content}>\r\n        <Grid container spacing={1}>\r\n           <Grid item xs={6} >\r\n             <Typography>MeetingLink :</Typography>   \r\n             <TextField fullWidth variant=\"outlined\" onChange={(event)=>handleLinkchange(event.target.value)} value={meetingLink} disabled={order?.allAppointments?.nodes[0]?.appointmentDateTimeSlotBySlotId?.appointmentTypeId === 5}/>       \r\n           </Grid>\r\n           <Grid item xs={6} >\r\n             <Typography>Status :</Typography>\r\n             <TextField \r\n        fullWidth\r\n        variant=\"outlined\"\r\n        select\r\n        value={selected}\r\n        onChange={(event)=>handleSelect(event.target.value)}\r\n        >\r\n                          <MenuItem value=\"In-Progress\">In-Progress</MenuItem>\r\n                          <MenuItem value=\"Approved\">Approved</MenuItem>\r\n                          <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                          <MenuItem value=\"Submitted\">Submitted</MenuItem>\r\n                          <MenuItem value=\"Cancelled\">Cancelled</MenuItem>\r\n            </TextField>      \r\n           </Grid>\r\n        </Grid>\r\n      </CardContent>   \r\n      <CardActions>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={sendEmail}>Send Invite</Button>\r\n      </CardActions> \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AppointmentExtra;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableCell,\r\n  Grid,\r\n  TableHead,\r\n  Typography,\r\n  Backdrop,\r\n  CircularProgress\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport AppointmentInfo from \"./components/AppointmentInfo\";\r\nimport AppointmentExtra from \"./components/AppointmentExtra\";\r\nimport moment from \"moment\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport { GETORDERCOMMUNICATIONLOGS,SHOW_ALL_PPOINMENT_DETAILS,GETAPPLICATIONCOMMUNICATIONLOGS } from \"../../graphql/query\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n  container: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: '#fff',\r\n  },\r\n}));\r\n\r\nexport const AppointmentManagementDetails = withRouter((props) => {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = useState(null);\r\n  const [productDetails, setProductDetails] = useState([]);\r\n  const [communicationLogs, setCommunicationLogs] = useState([]);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const getOrderCommunicationLogs = async (order_id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: GETAPPLICATIONCOMMUNICATIONLOGS,\r\n        variables: {\r\n          id: parseInt(order_id),\r\n        },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setCommunicationLogs(\r\n          fatchvalue?.data?.appointmentById?.appointmentCommunicationLogsByAppointmentId?.nodes ?? []\r\n        );\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const { loading, data, error, networkStatus,refetch } = useQuery(SHOW_ALL_PPOINMENT_DETAILS, {\r\n    variables: {\r\n      id: parseInt(order)\r\n    },\r\n    notifyOnNetworkStatusChange:true,\r\n    fetchPolicy:\"network-only\"\r\n  });\r\n \r\n  useEffect(() => {\r\n    var com_id = props.location.pathname.split(\"/\")[2];\r\n    getOrderCommunicationLogs(com_id);\r\n    setOrder(com_id)\r\n  }, []);\r\n\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  const handleStatusChange=()=>{\r\n    refetch()\r\n  }\r\n\r\n\r\n  return (\r\n    <Page className={classes.root} title=\"Appointment Management Details\">\r\n\r\n       <Backdrop className={classes.backdrop} open={loading || NetworkStatus.refetch === networkStatus}>\r\n                  <CircularProgress color=\"inherit\"/>\r\n                </Backdrop>\r\n       <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Appointments\r\n          </Typography>\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h3\"\r\n          >\r\n            Appointment #{order}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid className={classes.container} container spacing={3}>\r\n          <Grid container xs={12} style={{ marginTop: \"10px\" }}>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                   <AppointmentInfo order={data}/>\r\n            </Grid>\r\n            <Grid item md={12} xl={12} xs={12} style={{ padding: \"14px\" }}>\r\n                 <AppointmentExtra order={data} id={order} refetch={refetch}/>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Email Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"email\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={6} xl={6} xs={12} style={{ padding: \"14px\" }}>\r\n              <Card>\r\n                <CardHeader title=\"Message Info\" />\r\n                <Divider />\r\n                <CardContent className={classes.content}>\r\n                  <Table>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell>Response Id</TableCell>\r\n                        <TableCell>Type</TableCell>\r\n                        <TableCell>Message Type</TableCell>\r\n                        <TableCell>Create At</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {communicationLogs.map(\r\n                        (val, index) =>\r\n                          val.communicationType === \"sms\" && (\r\n                            <TableRow key={index}>\r\n                              <TableCell>{val.senderResponseId ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.communicationType ?? \"-\"}</TableCell>\r\n                              <TableCell>{val.type ?? \"-\"}</TableCell>{\" \"}\r\n                              <TableCell>\r\n                                {moment(val.createdAt).format(\r\n                                  \"DD/MM/YYYY HH:mm:ss\"\r\n                                )}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          )\r\n                      )}\r\n                    </TableBody>\r\n                  </Table>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n  \r\n      </Grid>\r\n    </Page>\r\n  );\r\n});\r\n\r\nexport default AppointmentManagementDetails;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\n\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    overflowX: \"auto\",\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Results = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [status, setStatus] = useState({});\r\n\r\n  function handleAdd(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.update(e);\r\n  }\r\n  function handleupdate(e) {\r\n    setStatus({ ...status, [e.id]: \"0 out of \" + props.products.length });\r\n\r\n    props.resumeupdate(e);\r\n  }\r\n\r\n  function handledownload(e) {\r\n    props.downloadlog();\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: e.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatus({ ...status, [e.id]: response.message });\r\n  }\r\n\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      <Card style={{ marginTop: 16 }}>\r\n        <CardContent className={classes.content}>\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Components</TableCell>\r\n\r\n                  <TableCell align=\"center\">Action</TableCell>\r\n\r\n                  <TableCell align=\"center\">Status</TableCell>\r\n                  <TableCell align=\"center\">Restart</TableCell>\r\n\r\n                  <TableCell align=\"center\">Log</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.pricingrows.map((order) => (\r\n                  <TableRow>\r\n                    <TableCell>{order.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        onClick={(e) => handleAdd(order)}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        className={classes.margin}\r\n                      >\r\n                        ₹ Run\r\n                      </Button>\r\n                    </TableCell>\r\n\r\n                    <TableCell align=\"center\">\r\n                      {status[order.id] ? status[order.id] : \"\"}\r\n\r\n                      <IconButton\r\n                        aria-label=\"delete\"\r\n                        onClick={(e) => handlestatus(order)}\r\n                        color=\"primary\"\r\n                      >\r\n                        <RefreshIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handleupdate(order)}\r\n                        size=\"small\"\r\n                      >\r\n                        Re Run\r\n                      </Button>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={(e) => handledownload()}\r\n                        size=\"small\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n        </CardContent>\r\n        <CardActions className={classes.actions}></CardActions>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Results;\r\n","export const makeid = ((length, prefix,couponcount) => {\r\n  var count = 1;\r\n  var codes = []\r\n  if(couponcount)\r\n  {\r\n    count = couponcount;\r\n  }\r\n  let codelength = length - prefix.length\r\n  var result           = '';\r\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\r\n  var charactersLength = characters.length;\r\n  generatecode(0)\r\n  function generatecode(generatedcount)\r\n  {\r\n  for ( var i = 0; i < codelength; i++ ) {\r\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  result = prefix.toUpperCase() + result.toUpperCase();\r\n  codes.push(result)\r\n  result = \"\"\r\n  generatedcount = generatedcount + 1\r\n  if(count > generatedcount)\r\n  {\r\n    generatecode(generatedcount);\r\n  }\r\n  }\r\n  return codes;\r\n});","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from \"../../../../utils/commonmethod\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { NetworkContext } from \"../../../../context/NetworkContext\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  Chip,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    cursor: \"pointer\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n    // border: `3px solid ${theme.palette.divider}`,\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white,\r\n  },\r\n}));\r\n\r\nconst AboutVoucher = (props) => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorlist, setVendorlist] = useState(props.masterData.vendorcode);\r\n  const [categorylist, setCategorylist] = useState(props.masterData.category);\r\n  const [producttypelist, setProducttypelist] = useState(\r\n    props.masterData.product_type\r\n  );\r\n  const [productids, setProductids] = useState(props.productids);\r\n\r\n  const [updatestatus, setUpdatestatus] = useState(\"\");\r\n\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n  const [formData, setFormData] = useState({});\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n\r\n  const handleproducttypechange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, producttypes: vendorsarray });\r\n    props.apply(formData.vendorid, formData.categories, vendorsarray);\r\n  };\r\n  const handlecategorychange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.name);\r\n    });\r\n    setFormData({ ...formData, categories: vendorsarray });\r\n\r\n    props.apply(formData.vendorid, vendorsarray, formData.producttypes);\r\n  };\r\n  const hangeoptionchange = (type) => (event, option) => {\r\n    let vendorsarray = [];\r\n    option.forEach((element) => {\r\n      vendorsarray.push(element.shortCode);\r\n    });\r\n    setFormData({ ...formData, vendorid: vendorsarray });\r\n\r\n    props.apply(vendorsarray, formData.categories, formData.producttypes);\r\n  };\r\n\r\n  const handleClick = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/updatepricelist\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n    } else {\r\n      alert(\"error\");\r\n    }\r\n  };\r\n  const handleuploadstatus = async (event, option) => {\r\n    let response = await sendNetworkRequest(\r\n      \"/getpriceupdatestatus\",\r\n      {},\r\n      formData,\r\n      false\r\n    );\r\n    if (response.status < 400) {\r\n      setUpdatestatus(response.message);\r\n    } else {\r\n    }\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setVouchercode(e.target.value.toUpperCase());\r\n  };\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n  const generateCoupon = (event) => {\r\n    // alert(JSON.stringify(voucherCtx))\r\n    setVouchercode(makeid(10));\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.vendorlist || []}\r\n              getOptionLabel={(option) => option.display}\r\n              fullWidth\r\n              onChange={hangeoptionchange(\"vendorcode\")}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Selct Vendor\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.categorylist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handlecategorychange(\"category\")}\r\n              fullWidth\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product Category\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <Autocomplete\r\n              multiple\r\n              id=\"combo-box-demo\"\r\n              disabled={props.isdisabled}\r\n              options={props.producttypelist || []}\r\n              getOptionLabel={(option) => option.name}\r\n              onChange={handleproducttypechange(\"product_type\")}\r\n              fullWidth\r\n              margin=\"dense\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Product type\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              disabled={props.isdisabled}\r\n              className={classes.fixedTag}\r\n              value={props.productids}\r\n              options={productids}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label={\r\n                    props.productids.length > 0\r\n                      ? \"Products (\" + props.productids.length + \") \"\r\n                      : \"Products\"\r\n                  }\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleClick}\r\n        color=\"primary\">\r\n        Update Price\r\n      </Button>\r\n      </Grid>\r\n      \r\n      <Grid item xs={6} sm={3} >\r\n\r\n        <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Update Status\r\n      </Button>\r\n      <Typography variant=\"subtitle1\">\r\n                {updatestatus}\r\n      </Typography>\r\n\r\n      </Grid> */}\r\n          {/* <Grid item xs={6} sm={3} >\r\n      <Button variant=\"contained\" \r\n          onClick={handleuploadstatus}\r\n        color=\"primary\">\r\n        Price Update\r\n      </Button>\r\n       \r\n      </Grid> */}\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction FullLoader(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <div className={classes.loader}>\r\n\r\n      <CircularProgress />\r\n\r\n      </div>\r\n\r\n      </DialogContent>\r\n      \r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default FullLoader;","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nimport { Button, Link } from \"@material-ui/core\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Page from \"../../components/Page\";\r\nimport { Results, AboutVoucher } from \"./components\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\nconst rows = [\r\n  { id: \"Markup & Discount price update\", label: \"updateskuprice\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function PriceupdateContent(props) {\r\n  const classes = useStyles();\r\n\r\n  const [masters, setMasters] = useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n  const [products, setProducts] = useState([]);\r\n  const [, setCategories] = useState([]);\r\n  const [, setVendors] = useState([]);\r\n  const [startrun, setStartrun] = useState(false);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  async function updateprices(component) {\r\n    if (products.length) {\r\n      setOpen(true);\r\n      var bodydata = {};\r\n      bodydata = {\r\n        component: component.label,\r\n        req_product_id: products,\r\n      };\r\n      setStartrun(true);\r\n      let response = await sendNetworkRequest(\r\n        \"/price_run_new\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      if (response.statuscode == 200) {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: response.message || \"Started Successfully!\",\r\n        });\r\n      } else {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Something went wrong, Please try later!\",\r\n        });\r\n      }\r\n      setOpen(false);\r\n    } else {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Apply filter to load products!\",\r\n      });\r\n    }\r\n  }\r\n  async function rerun(component) {\r\n    var bodydata = {};\r\n    bodydata = {\r\n      component: component.label,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getincompletepricerun\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let history_id = response.id;\r\n    let update_products = response.products;\r\n    if (response.products && response.products.length > 0) {\r\n      setOpen(true);\r\n\r\n      var bodydata = {};\r\n      bodydata = {\r\n        pricingcomponent: component.label,\r\n        req_product_id: update_products,\r\n        history_id: history_id,\r\n      };\r\n      setStartrun(true);\r\n      let response1 = await sendNetworkRequest(\r\n        \"/productpriceupdate\",\r\n        {},\r\n        bodydata,\r\n        false\r\n      );\r\n      setOpen(false);\r\n    } else {\r\n      alert(\" Doesn't have any incomplete products\");\r\n    }\r\n  }\r\n\r\n  async function filterapllied(filterdata, categories, producttypes) {\r\n    var bodydata = {};\r\n\r\n    bodydata = {\r\n      vendorid: filterdata && filterdata.length > 0 ? filterdata : \"\",\r\n      product_category: categories && categories.length > 0 ? categories : \"\",\r\n      product_type: producttypes && producttypes.length > 0 ? producttypes : \"\",\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/getdistinctproduct\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setCategories(response.category);\r\n    setVendors(response.vendorlist);\r\n  }\r\n  async function downloadlog() {\r\n    window.location.href = \"https://api-staging.stylori.com/getlogfile\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    setMasters(productCategory.mapper(props.data));\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <Page className={classes.root} title=\"Orders Management List\">\r\n        <FullLoader title={\"Running Price Update\"} isopen={open}></FullLoader>\r\n        <AboutVoucher\r\n          isdisabled={startrun}\r\n          className={classes.aboutvoucher}\r\n          apply={filterapllied}\r\n          productids={products.length > 0 ? products : []}\r\n          categorylist={masters.category}\r\n          producttypelist={masters.product_type}\r\n          vendorlist={masters.vendorcode}\r\n          masterData={masters}\r\n          categories={[\"Fixed Amount\", \"percentage\", \"Free Shipping\"]}\r\n        />\r\n        <Results\r\n          products={products}\r\n          pricingrows={rows}\r\n          downloadlog={downloadlog}\r\n          update={updateprices}\r\n          resumeupdate={rerun}\r\n        />\r\n        <div\r\n          style={{\r\n            padding: \"12px 0px\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Link href=\"/price-logs\">\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Price History Logs\r\n            </Button>\r\n          </Link>\r\n        </div>\r\n      </Page>\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { productCategory } from '../../services/mapper';\r\nimport Component from './PriceupdateContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Priceupdate = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    // <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} data={data} />\r\n    // </VoucherProvider>\r\n\r\n)});\r\nexport default Priceupdate;","import { Button, FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { lighten, makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport VisibityIcon from \"@material-ui/icons/Visibility\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useEffect } from \"react\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport Moment from \"react-moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTLISTSTATUSEDIT } from \"../../graphql/query\";\r\n\r\nconst columns = [\r\n  { id: \"product_id\", label: \"product id\" },\r\n  { id: \"product_name\", label: \"product name\" },\r\n  { id: \"product_type\", label: \"product type\" },\r\n  { id: \"vendor_code\", label: \"vendor code\" },\r\n  { id: \"product_category\", label: \"product category\" },\r\n  { id: \"isactive\", label: \"active\" },\r\n  { id: \"createdAt\", label: \"Created on\" },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {columns.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"\" : \"\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: \"1 1 100%\",\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\"></IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [order, setOrder] = React.useState(\"desc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"updatedAt\");\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0);\r\n  const [productlists, setProductlists] = React.useState([]);\r\n  const [allproductlists, setAllProductlists] = React.useState([]);\r\n  const [mastercategories, setMastercategories] = React.useState([]);\r\n  const [masterproducttypes, setMasterproducttypes] = React.useState([]);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext, setSearchtext] = React.useState(\"\");\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage);\r\n    getproductlist(\"\", \"\", \"\", \"\", newPage);\r\n  }\r\n  useEffect(() => {\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", order, orderBy);\r\n  }, []);\r\n  useEffect(() => {\r\n    getproductlist(\r\n      props.filterparams.searchtext,\r\n      props.filterparams.categoryname,\r\n      props.filterparams.product_type,\r\n      \"\",\r\n      \"\",\r\n      order,\r\n      orderBy\r\n    );\r\n  }, [props.filterparams]);\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n    getproductlist(\"\", \"\", \"\", event.target.value, \"\");\r\n  }\r\n  async function showproductdetails(prod_id) {\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n    };\r\n\r\n    let response = await sendNetworkRequest(\"/getproducturl\", {}, bodycontent);\r\n    console.log(response);\r\n    //setProductlists(response.products.rows)\r\n    window.open(response.url, \"_blank\");\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`);\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n    getproductlist(\"\", \"\", \"\", \"\", \"\", isAsc ? \"desc\" : \"asc\", property);\r\n  };\r\n  function searchproduct(searchtext, productcategory, producttype) {\r\n    let products = allproductlists.filter((l) => {\r\n      return (\r\n        l.productId.toLowerCase().match(searchtext.toLowerCase()) ||\r\n        l.productName.toLowerCase().match(searchtext.toLowerCase())\r\n      );\r\n    });\r\n    setProductlists(products);\r\n  }\r\n  async function getproductlist(\r\n    searchtext,\r\n    productcategory,\r\n    producttype,\r\n    pagesize,\r\n    offsetvalue,\r\n    sort,\r\n    orderby\r\n  ) {\r\n    let bodydata = {\r\n      size: pagesize ? pagesize : rowsPerPage,\r\n      offset: offsetValue,\r\n      searchtext: searchtext,\r\n      productcategory: productcategory,\r\n      producttype: producttype,\r\n      order: sort ? sort : order,\r\n      orderby: orderby ? orderby : orderBy,\r\n    };\r\n    let response = await sendNetworkRequest(\"/getproductlist\", {}, bodydata);\r\n\r\n    console.log(response);\r\n    setProductlists(response.products.rows);\r\n    setPageCount(response.products.count);\r\n  }\r\n  function applyfilter(searchtext, categoryname, typename) {\r\n    getproductlist(searchtext, categoryname, typename);\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true,\r\n    };\r\n    await props.client\r\n      .mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables })\r\n      .then((res) => {\r\n        if (res !== null) {\r\n          refetch();\r\n        }\r\n      })\r\n      .catch(console.error);\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n          />\r\n          <TableBody>\r\n            {/* <Query\r\n              query={PRODUCTLIST(true,\"Bangles\")}\r\n              onCompleted={data => setPageCount( data.allProductLists.totalCount )}\r\n              variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                  \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) { \r\n                           return <> */}\r\n            {stableSort(productlists, getComparator(order, orderBy)).map(\r\n              (row, index) => (\r\n                <TableRow key={row.product_id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row?.trans_sku_lists?.[0].sku_id}\r\n                    <Button onClick={(e) => ProductEdit(row.product_id)}>\r\n                      <EditIcon />\r\n                    </Button>\r\n                    <Button onClick={(e) => showproductdetails(row.product_id)}>\r\n                      <VisibityIcon />\r\n                    </Button>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    component=\"th\"\r\n                    scope=\"row\"\r\n                    onClick={() => showproductdetails(row)}\r\n                  >\r\n                    {/* <Link variant=\"body2\">  */}\r\n                    {row.product_name}\r\n\r\n                    {/* </Link>   */}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">{row.product_type}</TableCell>\r\n                  <TableCell align=\"left\">{row.vendor_code}</TableCell>\r\n                  <TableCell align=\"left\">{row.product_category}</TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\" \"}\r\n                    <FormControlLabel\r\n                      label={row.isactive ? \"\" : \"\"}\r\n                      control={\r\n                        <Switch checked={row.isactive} value=\"checkedA\" />\r\n                      }\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.createdAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )\r\n            )}\r\n            {/* </> */}\r\n            {/* }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  */}\r\n            {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10, 50, 100, 200, 500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n};\r\nexport default withApollo(AddContact);\r\n","import React from \"react\";\r\nimport {\r\n  AppBar,\r\n  Dialog,\r\n  IconButton,\r\n  Slide,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n  Grid,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  TextField,\r\n  LinearProgress,\r\n  Box,\r\n  CircularProgress,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Backdrop,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport ChipInput from \"material-ui-chip-input\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport { API_URL } from \"../../config\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport SyncIcon from \"@material-ui/icons/Sync\";\r\nimport AssignmentTurnedInOutlinedIcon from \"@material-ui/icons/AssignmentTurnedInOutlined\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { VERIFYTAGNO, WAREHOUSELIST } from \"../../graphql/query\";\r\nimport { isEmpty } from \"validate.js\";\r\nimport axios from \"axios\";\r\nimport CloudDownloadIcon from \"@material-ui/icons/CloudDownload\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  content: {\r\n    width: \"90%\",\r\n    margin: theme.spacing(5),\r\n  },\r\n  textarea: {\r\n    resize: \"both\",\r\n  },\r\n  backdrop: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    color: \"#fff\",\r\n  },\r\n  errorTable: {\r\n    margin: 10,\r\n  },\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  customWidth: {\r\n    maxWidth: 420,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction LinearProgressWithLabel(props) {\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <Box width=\"100%\" mr={1}>\r\n        <LinearProgress variant=\"determinate\" {...props} />\r\n      </Box>\r\n      <Box minWidth={35}>\r\n        <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(\r\n          props.value\r\n        )}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst ChooseWareHouse = (props) => {\r\n  const { loading, data } = useQuery(WAREHOUSELIST);\r\n  return (\r\n    <Autocomplete\r\n      id={\"warehouse-id\"}\r\n      getOptionSelected={(option, value) => option.name === value.name}\r\n      getOptionLabel={(option) => option.name}\r\n      options={data?.allWarehouses?.nodes ?? []}\r\n      value={props.warehouse || null}\r\n      onChange={(event, newValue) => {\r\n        props.setWarehouse(newValue);\r\n      }}\r\n      loading={loading}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Warehouse\"\r\n          fullWidth\r\n          required\r\n          variant=\"outlined\"\r\n          InputProps={{\r\n            ...params.InputProps,\r\n            endAdornment: (\r\n              <React.Fragment>\r\n                {loading ? (\r\n                  <CircularProgress color=\"inherit\" size={20} />\r\n                ) : null}\r\n                {params.InputProps.endAdornment}\r\n              </React.Fragment>\r\n            ),\r\n          }}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst ProductSync = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  var [data, setData] = React.useState({\r\n    action_type: \"price_sync\",\r\n    sync_url: \"\",\r\n    new_tagno: [],\r\n  });\r\n  const [progress, setProgress] = React.useState(0);\r\n  const [warehouse, setWarehouse] = React.useState(null);\r\n  const [errorTagNo, setErrorTagNo] = React.useState([]);\r\n  const [validatedTagNo, setValidatedTagNo] = React.useState({\r\n    status: false,\r\n    errors: {},\r\n  });\r\n  const [backDrop, setBackDrop] = React.useState(false);\r\n  var handleChange = (event) => {\r\n    var { name, value } = event.target;\r\n    setData({ ...data, [name]: value });\r\n  };\r\n\r\n  var handleAddChip = (chip) => {\r\n    var _ = data;\r\n    chip.split(\",\").forEach((item) => {\r\n      _.new_tagno.push(item);\r\n      setData({ ..._ });\r\n      client\r\n        .query({ query: VERIFYTAGNO, variables: { tagno: item } })\r\n        .then(({ data }) => {\r\n          if (data?.list?.nodes && data?.list?.nodes.length >= 1) {\r\n            setErrorTagNo([...errorTagNo, item]);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    });\r\n  };\r\n\r\n  var handleDeleteChip = (chip, index) => {\r\n    var _ = data;\r\n    _.new_tagno.splice(index, 1);\r\n    setData({ ..._ });\r\n  };\r\n\r\n  var { open, handleClose } = props;\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"sync_data\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setData({\r\n          action_type: \"price_sync\",\r\n          sync_url: \"\",\r\n          new_tagno: [],\r\n        });\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleRun = () => {\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (!warehouse?.id && data.action_type === \"new_uploads\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Warehouse is mandatory!\",\r\n      });\r\n      return;\r\n    }\r\n    setProgress(0);\r\n    var Product_lists = data.Product_lists;\r\n    delete data.Product_lists;\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\r\n      \"/product_sync\",\r\n      {},\r\n      {\r\n        ...data,\r\n        warehouse: warehouse?.id,\r\n      }\r\n    )\r\n      .then((res) => {\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"success\",\r\n          msg: res.message,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured while processing!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const validatePreSync = () => {\r\n    if (data.sync_url === \"\") {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Sync Data URL cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    if (data.action_type === \"new_uploads\" && data.new_tagno.length === 0) {\r\n      snack.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"TAG Number cannot be empty!\",\r\n      });\r\n      return;\r\n    }\r\n    setBackDrop(true);\r\n    sendNetworkRequest(\"/preSync_validator\", {}, { ...data })\r\n      .then((response) => {\r\n        let errorStatus = true;\r\n        data.new_tagno.forEach((tagno) => {\r\n          if (response[tagno] && !isEmpty(response[tagno])) {\r\n            errorStatus = false;\r\n          }\r\n        });\r\n        setBackDrop(false);\r\n        setValidatedTagNo({\r\n          status: errorStatus,\r\n          errors: !errorStatus ? response : {},\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setBackDrop(false);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleUpload = (file) => {\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", file);\r\n\r\n    axios\r\n      .post(API_URL + \"/file_upload_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Dialog fullScreen open={open} TransitionComponent={Transition}>\r\n      <AppBar className={classes.appBar}>\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            onClick={handleClose}\r\n            aria-label=\"close\"\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n            Product Sync\r\n          </Typography>\r\n          {data.action_type !== \"price_sync\" && (\r\n            <Button\r\n              variant=\"outlined\"\r\n              autoFocus\r\n              color=\"inherit\"\r\n              onClick={validatePreSync}\r\n              disabled\r\n              startIcon={<AssignmentTurnedInOutlinedIcon />}\r\n            >\r\n              {\"Validate Product Sync\"}\r\n            </Button>\r\n          )}\r\n          <Button\r\n            autoFocus\r\n            color=\"inherit\"\r\n            variant=\"outlined\"\r\n            onClick={handleRun}\r\n            startIcon={<SyncIcon />}\r\n            // disabled={\r\n            //   data.action_type !== \"price_sync\" && !validatedTagNo?.status\r\n            // }\r\n          >\r\n            {data.action_type === \"price_sync\"\r\n              ? \"Run Price Sync\"\r\n              : \"Run Product Sync\"}\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        className={classes.content}\r\n        container\r\n        direction=\"row\"\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <FormControl component=\"fieldset\" fullWidth required>\r\n            <Typography variant=\"h4\">Choose action type</Typography>\r\n            <RadioGroup\r\n              aria-label=\"action-type\"\r\n              name=\"action_type\"\r\n              value={data.action_type}\r\n              onChange={handleChange}\r\n            >\r\n              <FormControlLabel\r\n                value={\"price_sync\"}\r\n                control={<Radio />}\r\n                label={\"Price Sync\"}\r\n              />\r\n              <FormControlLabel\r\n                value={\"new_uploads\"}\r\n                control={<Radio />}\r\n                label={\"Product Sync\"}\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} style={{ padding: \"9px\" }}>\r\n          <TextField\r\n            value={data.sync_url}\r\n            onChange={handleChange}\r\n            rows={15}\r\n            fullWidth\r\n            label={\"Sync Data URL\"}\r\n            name=\"sync_url\"\r\n            variant=\"outlined\"\r\n            required\r\n            inputProps={{ className: classes.textarea }}\r\n          />\r\n        </Grid>\r\n        {data.action_type === \"new_uploads\" && (\r\n          <>\r\n            <Grid item xs={12}>\r\n              <ChooseWareHouse\r\n                warehouse={warehouse}\r\n                setWarehouse={setWarehouse}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <ChipInput\r\n                value={data.new_tagno}\r\n                onAdd={handleAddChip}\r\n                onDelete={handleDeleteChip}\r\n                fullWidth\r\n                newChipKeyCodes={[13, 32]}\r\n                newChipKeys={[\",\"]}\r\n                variant=\"outlined\"\r\n                label={\"TAG Number\"}\r\n                error={errorTagNo.length > 0}\r\n                helperText={\r\n                  errorTagNo.length > 0\r\n                    ? `${errorTagNo.join(\r\n                        \",\"\r\n                      )} already exists syncing again could cause loss of data. Please proceed with caution and validate the same in product edit!`\r\n                    : ``\r\n                }\r\n              />\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {!isEmpty(validatedTagNo?.errors) && (\r\n          <Grid item xs={12} className={classes.errorTable}>\r\n            <Typography variant=\"overline\" color=\"error\" style={{ padding: 5 }}>\r\n              {\r\n                \"Below masters are missing respectively, Please add them before syncing products\"\r\n              }\r\n            </Typography>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\">Tag No.</TableCell>\r\n                  <TableCell align=\"center\">Master Type</TableCell>\r\n                  <TableCell align=\"center\">Value</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {data.new_tagno.map(\r\n                  (element, index) =>\r\n                    !isEmpty(validatedTagNo.errors[element]) && (\r\n                      <React.Fragment key={index}>\r\n                        {console.log(\r\n                          Object.keys(validatedTagNo.errors[element]).length\r\n                        )}\r\n                        <TableRow>\r\n                          <TableCell\r\n                            rowSpan={\r\n                              Object.keys(validatedTagNo.errors[element]).length\r\n                            }\r\n                            align=\"center\"\r\n                          >\r\n                            {element}\r\n                          </TableCell>\r\n                          {Object.keys(validatedTagNo.errors[element]).map(\r\n                            (item, i) =>\r\n                              i == 0 && (\r\n                                <React.Fragment key={i}>\r\n                                  <TableCell align=\"center\">{item}</TableCell>\r\n                                  <TableCell align=\"center\">\r\n                                    {validatedTagNo.errors[element][item]}\r\n                                  </TableCell>\r\n                                </React.Fragment>\r\n                              )\r\n                          )}\r\n                        </TableRow>\r\n                        {Object.keys(validatedTagNo.errors[element]).map(\r\n                          (item, i) =>\r\n                            i > 0 && (\r\n                              <TableRow key={i}>\r\n                                <TableCell align=\"center\">{item}</TableCell>\r\n                                <TableCell align=\"center\">\r\n                                  {validatedTagNo.errors[element][item]}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            )\r\n                        )}\r\n                      </React.Fragment>\r\n                    )\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </Grid>\r\n        )}\r\n        {progress > 0 && (\r\n          <Grid item xs={12}>\r\n            <LinearProgressWithLabel value={progress} />\r\n          </Grid>\r\n        )}\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Typography\r\n            variant=\"h5\"\r\n            component=\"h5\"\r\n            style={{\r\n              width: \"100%\",\r\n              textAlign: \"center\",\r\n              borderBottom: \"1px solid #000\",\r\n              lineHeight: \"0.1em\",\r\n              margin: \"10px 0 20px\",\r\n            }}\r\n          >\r\n            <span style={{ background: \"#fff\", padding: \"0 10px\" }}>OR</span>\r\n          </Typography>\r\n        </Grid>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <div className={classes.root}>\r\n            <input\r\n              className={classes.input}\r\n              accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n              id=\"file\"\r\n              type=\"file\"\r\n              onChange={(event) => {\r\n                const files = event.target.files;\r\n                if (files) {\r\n                  handleUpload(files[0]);\r\n                }\r\n              }}\r\n            />\r\n            <label htmlFor=\"file\">\r\n              <Tooltip\r\n                title={\r\n                  <div\r\n                    style={{\r\n                      whiteSpace: \"normal\",\r\n                      textAlign: \"left\",\r\n                    }}\r\n                  >\r\n                    1.Please make sure data is in sample file format.\r\n                    <br />\r\n                    2.materials,collections,occasions,themes,styles,stone_color,stone_count,hashtags\r\n                    should be comma seperated and already existing in respective\r\n                    masters.\r\n                    <br />\r\n                    3.Diamonds and Gemstones to be added in separate sheets, if\r\n                    multiple entries add each row with same tag no.\r\n                  </div>\r\n                }\r\n                classes={{ tooltip: classes.customWidth }}\r\n                arrow\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                  Upload Excel file\r\n                </Button>\r\n              </Tooltip>\r\n            </label>\r\n          </div>\r\n          <IconButton\r\n            onClick={() => {\r\n              const link = document.createElement(\"a\");\r\n              link.download = `sample_upload.xlsx`;\r\n              link.href =\r\n                \"https://s3.ap-southeast-1.amazonaws.com/media.nacjewellers.com/resources/assets/sample_upload.xlsx\";\r\n              link.click();\r\n            }}\r\n          >\r\n            <CloudDownloadIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Backdrop className={classes.backdrop} open={backDrop}>\r\n          <CircularProgress color=\"inherit\" />\r\n        </Backdrop>\r\n      </Grid>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProductSync;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withApollo } from \"react-apollo\";\r\nimport { PRODUCTFILTERMASTER } from \"../../graphql/query\";\r\n\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Product from \"../../components/Products\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { ProductFilter } from \"../../components\";\r\nimport ProductSync from \"./ProductSync\";\r\n\r\nexport const Productlist = withRouter(\r\n  withApollo((props) => {\r\n    const [masters, setMasters] = useState({});\r\n    const [filterparams, setFilterparams] = useState({});\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    function onFilter(filterobj) {\r\n      let filtercontent = {};\r\n\r\n      if (filterobj.product_category) {\r\n        filtercontent[\"categoryname\"] = filterobj.product_category.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      if (filterobj.product_type) {\r\n        filtercontent[\"product_type\"] = filterobj.product_type.name;\r\n        // alert(JSON.stringify(categoryname))\r\n      }\r\n      setFilterparams({\r\n        ...filterparams,\r\n        ...filtercontent,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    function onSearch(searchtext) {\r\n      //  alert(searchtext)\r\n      setFilterparams({\r\n        ...filterparams,\r\n        searchtext,\r\n      });\r\n      // fetchadminusers()\r\n    }\r\n    useEffect(() => {\r\n      const query = props.client.query;\r\n      query({\r\n        query: PRODUCTFILTERMASTER,\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n        .then((data) => {\r\n          if (data) {\r\n            let product_categories = data.data.allMasterProductCategories.nodes;\r\n            let product_types = data.data.allMasterProductTypes.nodes;\r\n            setMasters({\r\n              product_categories,\r\n              product_types,\r\n            });\r\n          } else {\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"smbcj\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n      <Grid container spacing={2}>\r\n        <Grid container item xs={12} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={6} sm={6}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              Products\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={6} sm={6} style={{ \"text-align\": \"right\" }}>\r\n            <Link underline=\"none\">\r\n              <Button variant=\"contained\" color=\"primary\" disabled>\r\n                Add New Product\r\n              </Button>\r\n            </Link>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen} style={{ marginLeft: 2 }}>\r\n              Product Sync\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <ProductFilter masters={masters} onSearch={onSearch} onFilter={onFilter} />\r\n        <Product filterparams={filterparams} />\r\n        <ProductSync open={open} handleClose={handleClose} />\r\n      </Grid>\r\n    );\r\n  })\r\n);\r\n\r\nexport default Productlist;\r\n","import React, { useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\n\r\n// import SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport { Input } from \"../../components/Input.js\";\r\nimport { ProductContext } from \"../../context\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport \"./Productupload.css\";\r\nimport Select from \"react-select\";\r\nimport \"./floating_dropdown.css\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormLabel,\r\n  FormControlLabel,\r\n  Checkbox,\r\n} from \"@material-ui/core\";\r\nimport { red } from \"@material-ui/core/colors\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { ALLMASTERRINGSIZE } from \"../../graphql/query\";\r\nimport { arrayIncludes } from \"@material-ui/pickers/_helpers/utils\";\r\nconst top100Films = [\r\n  { title: \"The Shawshank Redemption\", year: 1994 },\r\n  { title: \"The Godfather\", year: 1972 },\r\n  { title: \"The Godfather: Part II\", year: 1974 },\r\n  { title: \"The Dark Knight\", year: 2008 },\r\n  { title: \"12 Angry Men\", year: 1957 },\r\n  { title: \"Schindler's List\", year: 1993 },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  dropdownlayout: {\r\n    \"& .menu\": {\r\n      position: \"Relative !important\",\r\n    },\r\n  },\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  alert: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  formGroup: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n  fieldGroup: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  fieldHint: {\r\n    margin: theme.spacing(1, 0),\r\n  },\r\n  tags: {\r\n    marginTop: theme.spacing(1),\r\n    \"& > * + *\": {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  },\r\n  flexGrow: {\r\n    flexGrow: 1,\r\n  },\r\n  dateField: {\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function AddressForm(props) {\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [initailRingSize, updateRingSize] = useState([]);\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  React.useEffect(async () => {\r\n    fetch(GRAPHQL_DEV_CLIENT, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ALLMASTERRINGSIZE }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((res) => updateRingSize(res.data.allMasterRingsSizes.nodes));\r\n  }, []);\r\n\r\n  React.useEffect(() => {}, [productCtx]);\r\n  // const handleChange = selectedOption => {\r\n\r\n  // };\r\n  const handlesizeChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, selected_sizes: selectedOption });\r\n  };\r\n  const handlevendorChange = (selectedOption) => {\r\n    setProductCtx({ ...productCtx, vendorcode: selectedOption });\r\n  };\r\n\r\n  const changeproducttype = (type) => (event, newvalue) => {\r\n    setProductCtx({ ...productCtx, product_type: newvalue });\r\n  };\r\n  const handlechange = (type) => (selectedOption) => {\r\n    if (type === \"product_type\") {\r\n      if (selectedOption) {\r\n        var size = \"\";\r\n        var minvalue = 0;\r\n        var maxvalue = 0;\r\n        var selected_sizes = [];\r\n        var default_size = 0;\r\n        if (selectedOption.shortCode === \"K\") {\r\n          selected_sizes.push({\r\n            value: \"XS\",\r\n            label: \"XS\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"S\",\r\n            label: \"S\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"M\",\r\n            label: \"M\",\r\n          });\r\n          selected_sizes.push({\r\n            value: \"L\",\r\n            label: \"L\",\r\n          });\r\n        } else {\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Male\"\r\n          // ) {\r\n          //   minvalue = 13;\r\n          //   maxvalue = 25;\r\n          //   default_size = 15;\r\n          // }\r\n          // if (\r\n          //   selectedOption.shortCode === \"R\" &&\r\n          //   productCtx.selectedgender.name === \"Female\"\r\n          // ) {\r\n          //   minvalue = 8;\r\n          //   maxvalue = 23;\r\n          //   default_size = 12;\r\n          // }\r\n          // for (var i = minvalue; i < maxvalue; i++) {\r\n          //   selected_sizes.push({\r\n          //     value: i,\r\n          //     label: \"\" + i,\r\n          //   });\r\n          // }\r\n        }\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: selectedOption.shortCode,\r\n          product_type: selectedOption,\r\n          size,\r\n          default_size,\r\n          selected_sizes,\r\n        });\r\n      } else {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          product_type_shortcode: \"\",\r\n          product_type: \"\",\r\n          size,\r\n          selected_sizes: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: selectedOption });\r\n    }\r\n  };\r\n  const handleTextChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"vendorcode\") {\r\n      setProductCtx({\r\n        ...productCtx,\r\n        [type]: value,\r\n        vendorleadtime: value.vendorDelivaryDays,\r\n      });\r\n    } else {\r\n      setProductCtx({ ...productCtx, [type]: value });\r\n    }\r\n  };\r\n\r\n  const switchisorderable = (event) => {\r\n    setProductCtx({ ...productCtx, [\"isreorderable\"]: event.target.value });\r\n  };\r\n\r\n  const purityChange = (type) => (selectedOption) => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption });\r\n  };\r\n\r\n  const handleGenderChange = (type) => (event, value) => {\r\n    var minvalue = 0;\r\n    var maxvalue = 0;\r\n    var selected_sizes = [];\r\n    var sizes = [];\r\n    var default_size = 0;\r\n    // if (productCtx.product_type.shortCode === \"K\") {\r\n    //   default_size = \"XS\";\r\n    //   selected_sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    //   sizes.push(\"XS\", \"S\", \"M\", \"L\");\r\n    // } else {\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"R\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Male\") {\r\n    //   minvalue = 13;\r\n    //   maxvalue = 26;\r\n    //   default_size = \"\" + 15;\r\n    // }\r\n    // if (productCtx.product_type.shortCode === \"BA\" && value === \"Female\") {\r\n    //   minvalue = 8;\r\n    //   maxvalue = 24;\r\n    //   default_size = \"\" + 12;\r\n    // }\r\n\r\n    // for (var i = minvalue; i < maxvalue; i++) {\r\n    // selected_sizes.push(\"\" + i);\r\n    // sizes.push(\"\" + i);\r\n    // }\r\n\r\n    // if (productCtx.product_type.shortCode !== \"K\" ) {\r\n     \r\n      // updateRingSize(\r\n      //   initailRingSize.sort(\r\n      //     (a, b) => parseFloat(a.sizeValue) - parseFloat(b.sizeValue)\r\n      //   )\r\n      // );\r\n    \r\n\r\n    initailRingSize.forEach((e) => {\r\n      if (productCtx.product_type.shortCode === e.name && value === e.gender) {\r\n        selected_sizes.push(\"\" + e.sizeValue);\r\n        sizes.push(\"\" + e.sizeValue);\r\n      }\r\n    });\r\n    // }\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n      sizes,\r\n      selected_sizes,\r\n      default_size,\r\n    });\r\n  };\r\n\r\n  const handleMaterialChange = (type) => (event, value) => {\r\n    var steps = [\"Step1\", \"Step2\", \"Step6\"];\r\n    if (value) {\r\n      if (value.indexOf(\"Diamond\") > -1 || value.indexOf(\"Gemstone\") > -1) {\r\n        if (steps.indexOf(\"Step3\") === -1) {\r\n          steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n        }\r\n      }\r\n    }\r\n    setProductCtx({ ...productCtx, [type]: value, steps });\r\n  };\r\n\r\n  const handleInputChange = (type) => (e) => {\r\n    var size = productCtx.size;\r\n    var materials = productCtx.materials;\r\n    var selected_sizes = productCtx.selected_sizes;\r\n\r\n    if (type === \"selectedgender\") {\r\n      var minvalue = 0;\r\n      var maxvalue = 0;\r\n      selected_sizes = [];\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"R\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Male\") {\r\n      //   size = \"13-25\";\r\n      //   minvalue = 13;\r\n      //   maxvalue = 26;\r\n      // }\r\n      // if (productCtx.product_type_shortcode === \"BA\" && e.name === \"Female\") {\r\n      //   size = \"8-18\";\r\n      //   minvalue = 8;\r\n      //   maxvalue = 19;\r\n      // }\r\n\r\n      // for (var i = minvalue; i < maxvalue; i++) {\r\n      //   selected_sizes.push({\r\n      //     value: i,\r\n      //     label: \"\" + i,\r\n      //   });\r\n      // }\r\n    }\r\n\r\n    if (type === \"product_categoy\") {\r\n      if (e.target.value === \"Platinum Jewellery\") {\r\n        materials.push(\"Platinum Jewellery\");\r\n        var index = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (index >= 0) {\r\n          materials.splice(index, 1);\r\n        }\r\n      } else if (e.target.value === \"Silver Jewellery\") {\r\n        materials.push(\"Silver Jewellery\");\r\n        var index1 = materials.indexOf(\"Platinum Jewellery\");\r\n        if (index1 >= 0) {\r\n          materials.splice(index1, 1);\r\n        }\r\n      } else {\r\n        var indexval = materials.indexOf(\"Silver Jewellery\");\r\n\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n        indexval = materials.indexOf(\"Platinum Jewellery\");\r\n        if (indexval >= 0) {\r\n          materials.splice(indexval, 1);\r\n        }\r\n      }\r\n    }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      size,\r\n      [type]: e,\r\n      materials,\r\n      selected_sizes,\r\n    });\r\n  };\r\n\r\n  const materialChange = (type) => (selectedOption) => {\r\n    //   let material = { ...productCtx.material, [type]: selectedOption }\r\n    var steps = [\"Step1\", \"Step2\", \"Step4\", \"Step5\", \"Step6\"];\r\n    //   if(material.material)\r\n    //   {\r\n    //   material.material.forEach(element => {\r\n    let material_names = [];\r\n    if (selectedOption) {\r\n      selectedOption.forEach((element) => {\r\n        material_names.push(element.name);\r\n        if (element.name === \"Diamond\" || element.name === \"Gemstone\") {\r\n          if (steps.indexOf(\"Step3\") === -1) {\r\n            steps = [\"Step1\", \"Step2\", \"Step3\", \"Step6\"];\r\n          }\r\n        }\r\n      });\r\n    }\r\n    //   });\r\n    // }\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: selectedOption,\r\n      steps,\r\n      material_names,\r\n    });\r\n  };\r\n  const keyPress = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n    if (e.target.value === \"\" || re.test(e.target.value)) {\r\n      setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {/* <FullLoader /> */}\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6} spacing={1}>\r\n            <Card {...rest} className={clsx(classes.root, className)}>\r\n              <CardHeader title=\"Product Information 1\" />\r\n              <Divider />\r\n              <CardContent className={classes.cardcontent}>\r\n                <Grid container spacing={1}>\r\n                  <Grid item xs={12} sm={12} spacing={1}>\r\n                    <Input\r\n                      className={classes.helperinput}\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={productCtx.productname}\r\n                      id=\"productname\"\r\n                      error={productCtx.error_message.productname}\r\n                      // helperText={productCtx.error_message.productname ? productCtx.error_message.productname : \"\" }\r\n                      name=\"productname\"\r\n                      label=\"Product Name\"\r\n                      onChange={keyPress(\"productname\")}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item className={\"dropdownlayout\"} xs={12} sm={6}>\r\n                    <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.product_categoy}\r\n                      onChange={handleoptionChange(\"product_categoy\")}\r\n                      options={productCtx.masterData.category.map(\r\n                        (option) => option.label\r\n                      )}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Category\"\r\n                          margin=\"dense\"\r\n                          error={productCtx.error_message.product_categoy}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12} sm={6} spacing={1}>\r\n                    <Autocomplete\r\n                      id=\"product_type\"\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={(option) => option.label}\r\n                      defaultValue={productCtx.product_type}\r\n                      options={productCtx.masterData.product_type}\r\n                      onChange={handleoptionChange(\"product_type\")}\r\n                      renderTags={(value, getTagProps) =>\r\n                        value.map((option, index) => (\r\n                          <Chip\r\n                            variant=\"outlined\"\r\n                            label={option.label}\r\n                            {...getTagProps({ index })}\r\n                          />\r\n                        ))\r\n                      }\r\n                      renderInput={(params) => (\r\n                        <TextField\r\n                          {...params}\r\n                          label=\"Select Product Type\"\r\n                          margin=\"dense\"\r\n                          variant=\"outlined\"\r\n                          error={productCtx.error_message.product_type}\r\n                          fullWidth\r\n                          InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                        />\r\n                      )}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Product Information 2\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      {productCtx.product_type ? (\r\n                        <>\r\n                          <Grid item xs={12} sm={6}>\r\n                            <Autocomplete\r\n                              id=\"free-solo-2-demo\"\r\n                              multiple\r\n                              className={classes.fixedTag}\r\n                              defaultValue={productCtx.material_names}\r\n                              options={productCtx.masterData.material.map(\r\n                                (option) => option.label\r\n                              )}\r\n                              onChange={handleMaterialChange(\"material_names\")}\r\n                              renderTags={(value, getTagProps) =>\r\n                                value.map((option, index) => (\r\n                                  <Chip\r\n                                    variant=\"outlined\"\r\n                                    size=\"small\"\r\n                                    label={option}\r\n                                    {...getTagProps({ index })}\r\n                                  />\r\n                                ))\r\n                              }\r\n                              renderInput={(params) => (\r\n                                <TextField\r\n                                  {...params}\r\n                                  label=\"Select Product Materials\"\r\n                                  margin=\"dense\"\r\n                                  variant=\"outlined\"\r\n                                  error={\r\n                                    productCtx.error_message.material_names\r\n                                  }\r\n                                  fullWidth\r\n                                  InputProps={{\r\n                                    ...params.InputProps,\r\n                                    type: \"search\",\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            />\r\n                          </Grid>\r\n                        </>\r\n                      ) : null}\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.selectedgender}\r\n                          options={productCtx.masterData.gender.map(\r\n                            (option) => option.label\r\n                          )}\r\n                          onChange={handleGenderChange(\"selectedgender\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Gender\"\r\n                              margin=\"dense\"\r\n                              error={productCtx.error_message.selectedgender}\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.selectedgender ? productCtx.error_message.earringbacking : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalpurity}\r\n                          options={productCtx.masterData.metalpurity}\r\n                          onChange={handleoptionChange(\"metalpurity\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Purity\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              fullWidth\r\n                              error={productCtx.error_message.metalpurity}\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                        {/* <FormHelperText error>{productCtx.error_message.material ? productCtx.error_message.material : \"\"}</FormHelperText> */}\r\n                      </Grid>\r\n                      <Grid item xs={6} sm={6}>\r\n                        <Autocomplete\r\n                          multiple\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          getOptionLabel={(option) => option.label}\r\n                          defaultValue={productCtx.metalcolour}\r\n                          options={productCtx.masterData.metalcolour}\r\n                          onChange={handleoptionChange(\"metalcolour\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                size=\"small\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Metal Colour\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.metalcolour}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            {productCtx.product_type ? (\r\n              <>\r\n                <Card {...rest} className={clsx(classes.root, className)}>\r\n                  <CardHeader title=\"Vendor Information\" />\r\n                  <Divider />\r\n                  <CardContent className={classes.cardcontent}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} sm={6}>\r\n                        <Autocomplete\r\n                          id=\"free-solo-2-demo\"\r\n                          className={classes.fixedTag}\r\n                          defaultValue={productCtx.vendorcode}\r\n                          getOptionLabel={(option) => option.label}\r\n                          options={productCtx.masterData.vendorcode}\r\n                          onChange={handleoptionChange(\"vendorcode\")}\r\n                          renderTags={(value, getTagProps) =>\r\n                            value.map((option, index) => (\r\n                              <Chip\r\n                                variant=\"outlined\"\r\n                                label={option.label}\r\n                                {...getTagProps({ index })}\r\n                              />\r\n                            ))\r\n                          }\r\n                          renderInput={(params) => (\r\n                            <TextField\r\n                              {...params}\r\n                              label=\"Select Vendor Code\"\r\n                              margin=\"dense\"\r\n                              variant=\"outlined\"\r\n                              error={productCtx.error_message.vendorcode}\r\n                              fullWidth\r\n                              InputProps={{\r\n                                ...params.InputProps,\r\n                                type: \"search\",\r\n                              }}\r\n                            />\r\n                          )}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Product Code\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          value={productCtx.productvendorcode}\r\n                          error={productCtx.error_message.productvendorcode}\r\n                          id=\"productvendorcode\"\r\n                          name=\"productvendorcode\"\r\n                          onChange={handleTextChange(\"productvendorcode\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <Input\r\n                          variant=\"outlined\"\r\n                          margin=\"dense\"\r\n                          label=\"Vendor Lead Time\"\r\n                          fullWidth\r\n                          className={classes.helperinput}\r\n                          error={productCtx.error_message.vendorleadtime}\r\n                          value={productCtx.vendorleadtime}\r\n                          InputLabelProps={{\r\n                            shrink: productCtx.vendorleadtime,\r\n                          }}\r\n                          id=\"vendorleadtime\"\r\n                          name=\"vendorleadtime\"\r\n                          onChange={handleTextChange(\"vendorleadtime\")}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12} sm={6} spacing={1}>\r\n                        <FormControl component=\"fieldset\">\r\n                          <FormLabel component=\"legend\">\r\n                            IsReorderable\r\n                          </FormLabel>\r\n                          <RadioGroup\r\n                            aria-label=\"position\"\r\n                            name=\"position\"\r\n                            value={productCtx.isreorderable}\r\n                            onChange={switchisorderable}\r\n                            row\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Yes\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"Yes\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"No\"\r\n                              control={<Radio color=\"primary\" />}\r\n                              label=\"No\"\r\n                              labelPlacement=\"right\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </CardContent>\r\n                </Card>{\" \"}\r\n              </>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={12} sm={12}>\r\n                {productCtx.product_type ? (\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader\r\n                      title=\"Default SKU For Display\r\n  \"\r\n                    />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_colour}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_colour\"\r\n                            )}\r\n                            options={productCtx.metalcolour.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Colour\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={\r\n                                  productCtx.error_message.default_metal_colour\r\n                                }\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_category\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.default_metal_purity}\r\n                            onChange={handleoptionChange(\r\n                              \"default_metal_purity\"\r\n                            )}\r\n                            options={productCtx.metalpurity.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Metal Purity\"\r\n                                margin=\"dense\"\r\n                                error={\r\n                                  productCtx.error_message.default_metal_purity\r\n                                }\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>\r\n                ) : null}\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              (productCtx.product_type.shortCode === \"K\" ||\r\n                productCtx.product_type.shortCode === \"R\" ||\r\n                productCtx.product_type.shortCode === \"BA\") &&\r\n              productCtx.sizes.length > 0 ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Size Information\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            multiple\r\n                            freeSolo\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.selected_sizes}\r\n                            options={productCtx.sizes}\r\n                            onChange={handleoptionChange(\"selected_sizes\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Ring Sizes\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.selected_sizes}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={6}>\r\n                          <Autocomplete\r\n                            id=\"product_type\"\r\n                            className={classes.fixedTag}\r\n                            freeSolo\r\n                            defaultValue={productCtx.default_size}\r\n                            options={productCtx.selected_sizes}\r\n                            onChange={handleoptionChange(\"default_size\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  size=\"small\"\r\n                                  label={option}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Select Default Size\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.default_size}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              {productCtx.product_type &&\r\n              productCtx.product_type.alias === \"Earrings\" ? (\r\n                <>\r\n                  <Card {...rest} className={clsx(classes.root, className)}>\r\n                    <CardHeader title=\"Type of Fit\" />\r\n                    <Divider />\r\n                    <CardContent className={classes.cardcontent}>\r\n                      <Grid container spacing={1}>\r\n                        <Grid item xs={12}>\r\n                          <Autocomplete\r\n                            id=\"free-solo-2-demo\"\r\n                            className={classes.fixedTag}\r\n                            defaultValue={productCtx.earringbacking}\r\n                            options={productCtx.masterData.earringbacking.map(\r\n                              (option) => option.label\r\n                            )}\r\n                            onChange={handleoptionChange(\"earringbacking\")}\r\n                            renderTags={(value, getTagProps) =>\r\n                              value.map((option, index) => (\r\n                                <Chip\r\n                                  variant=\"outlined\"\r\n                                  label={option.label}\r\n                                  {...getTagProps({ index })}\r\n                                />\r\n                              ))\r\n                            }\r\n                            renderInput={(params) => (\r\n                              <TextField\r\n                                {...params}\r\n                                label=\"Earring Backing\"\r\n                                margin=\"dense\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                error={productCtx.error_message.earringbacking}\r\n                                InputProps={{\r\n                                  ...params.InputProps,\r\n                                  type: \"search\",\r\n                                }}\r\n                              />\r\n                            )}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </CardContent>\r\n                  </Card>{\" \"}\r\n                </>\r\n              ) : null}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={1}></Grid>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from '@emotion/styled';\r\nimport Select from 'react-select';\r\nimport { View, Text} from \"react-primitives\";\r\nimport \"../screens/Productupload/Productupload.css\"\r\n\r\nconst PlaceholderText = styled(Text)(({ placeholderUp, placeholderzindex, isDisabled }) => ({\r\n  position: 'absolute',\r\n  transition: 'all .25s',\r\n  pointerEvents: 'none',\r\n  top: placeholderUp ? -8 : 10,\r\n  left: 8,\r\n  zIndex: placeholderzindex,\r\n  paddingLeft: 8,\r\n  paddingRight: 8,\r\n  backgroundColor: isDisabled ? 'transparent' : '#FFFFFF',\r\n  fontSize: placeholderUp ? 12 : 15,\r\n  color: placeholderUp ? '#3F51B5' : '#263238',\r\n}));\r\n\r\nconst SelectContainer = styled(View)(({ selectzindex }) => ({\r\n  position: 'relative',\r\n  display: 'flex',\r\n  zIndex: selectzindex\r\n}));\r\n\r\nconst SelectView = props => {\r\n  const { placeholder, placeholderUp, placeholderzindex, selectzindex, isDisabled } = props;\r\n  return (\r\n    <SelectContainer selectzindex={selectzindex}>\r\n      <Select \r\n        fullWidth\r\n        isClearable\r\n      {...props} placeholder=\"\" />\r\n      <PlaceholderText placeholderUp={placeholderUp} isDisabled={isDisabled} placeholderzindex={placeholderzindex}>{placeholder}</PlaceholderText>\r\n    </SelectContainer>\r\n  );\r\n};\r\n\r\nclass SelectPlaceholder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      placeholderUp: false,\r\n      placeholderzindex : 1\r\n    };\r\n  }\r\n\r\n  onFocus = () => {\r\n    const { onFocus } = this.props;\r\n    this.setState({ placeholderUp: true });\r\n    onFocus && onFocus();\r\n  };\r\n\r\n  onBlur = () => {\r\n    const { value, onBlur } = this.props;\r\n    onBlur && onBlur();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SelectView\r\n      className={'dropdownlayout'}\r\n        fullWidth\r\n        {...this.props}\r\n        onBlur={this.onBlur}\r\n        onFocus={this.onFocus}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPlaceholder;","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n  import FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport {Checkbox,\r\n  Card,\r\n  CardHeader,\r\n  TextField,\r\n  Divider,\r\n  Chip,\r\nCardContent} from '@material-ui/core';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Select from 'react-select';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport { ProductContext } from '../../context';\r\nimport Box from '@material-ui/core/Box';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\n\r\nimport \"./Productupload.css\"\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n}));\r\n\r\n\r\nexport default function PaymentForm(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const materialChange = type => e => {\r\n    let selected_metal_colour = { ...productCtx.selected_metal_colour, [type]: e.target.checked }\r\n    setProductCtx({ ...productCtx, selected_metal_colour })\r\n    }\r\n  const purityChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]:selectedOption })\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n  \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n<Grid container  spacing={1}> \r\n    <Grid item xs={12} sm={6}>\r\n      <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n      <Grid container spacing={1}>\r\n      <Grid item container xs={12} sm={12}>\r\n      <Grid item xs={6} sm={3}>\r\n\r\n      {/* <FormLabel component=\"legend\" >Product Code</FormLabel> */}\r\n                  <Input\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      disabled\r\n                      id=\"size\"\r\n                      onChange={handleInputChange('product_code')}\r\n                      name=\"size\"\r\n                      value={\"S\"+productCtx.product_type.shortCode+(productCtx.masterData.productseries[0].value+1)}\r\n                      \r\n                      />\r\n                      </Grid>\r\n     </Grid>\r\n     {['R','B'].includes(productCtx.product_type.shortCode) ? null :\r\n      <>\r\n     <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Height\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_height')}\r\n          value={productCtx.metal_height === 0 ? \"\" : productCtx.metal_height}\r\n          \r\n          />\r\n     </Grid> \r\n\r\n    <Grid item xs={4} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Width\"\r\n          name=\"size\"\r\n          onChange = {handleInputChange('metal_width')}\r\n          value={productCtx.metal_width === 0 ? \"\" : productCtx.metal_width}\r\n\r\n          autoComplete=\"size\"\r\n          \r\n          />\r\n    </Grid>\r\n    </>\r\n     }\r\n      \r\n   \r\n   {productCtx.product_type  === 'Bracelets' ? <Grid item xs={6} >\r\n\r\n      <Input\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Length\"\r\n          name=\"size\"\r\n          autoComplete=\"size\"\r\n          onChange = {handleInputChange('metal_length')}\r\n          value={productCtx.metal_length === 0 ? \"\" : productCtx.metal_length}\r\n\r\n          />\r\n    </Grid> : null }\r\n  \r\n</Grid>\r\n</CardContent>\r\n</Card>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Enter weights for different Purity\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container spacing={1}>\r\n\r\n    <Grid item xs={12}>\r\n\r\n    </Grid>\r\n    {productCtx.metalpurity.map(row => (\r\n  \r\n  <Grid item container xs={12} spacing={2} >\r\n    \r\n    <Grid item xs={6} >\r\n\r\n      <Input\r\n    variant=\"outlined\"\r\n    disabled\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Purity\"\r\n    name=\"size\"\r\n    autoComplete=\"size\"\r\n    value={row.name}\r\n    />\r\n</Grid>\r\n    <Grid item xs={6} >\r\n\r\n<Input\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    id=\"size\"\r\n    label=\"Weight\"\r\n    name=\"size\"\r\n    error = {productCtx.error_message[`${row.name}_metal_weight`]}\r\n    autoComplete=\"size\"\r\n    onChange = {handleInputChange(`${row.name}_metal_weight`)}\r\n    value={productCtx[(`${row.name}_metal_weight`)] === 0 ? \"\" : productCtx[(`${row.name}_metal_weight`)]}\r\n    />\r\n</Grid>\r\n    </Grid> ))}\r\n\r\n      </Grid>\r\n      </CardContent>\r\n</Card>\r\n</Grid>\r\n<Grid item xs={12} sm={6}>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={6} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleoptionChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.themes}\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={6}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleoptionChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.prod_styles}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleoptionChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.occassions}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleoptionChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        error = {productCtx.error_message.collections}\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n              </Grid>\r\n              {productCtx.material_names.indexOf('Gemstone') > -1 ?\r\n              <>\r\n               <Grid item xs={12} sm={6} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleoptionChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"No of Stones\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={6}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleoptionChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Stone Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    </> : null }\r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n\r\n</Grid>\r\n</Grid>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Box from '@material-ui/core/Box';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'; \r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Chip,\r\n  CardContent,\r\n  TextField,\r\n  Divider,\r\n  RadioGroup,\r\n  Radio,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport \"./Productupload.css\"\r\nimport { func } from 'prop-types';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    root:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    table:{\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    button: {\r\n      margin: theme.spacing(0),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    gempapper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: theme.spacing(2),\r\n      width: '100%'\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  \r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n  const { className, ...rest } = props;\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption })\r\n  };\r\n  function editmaterial(name) {\r\n    clearmetalvalue();\r\n    assignvalue(productCtx.metals[name], name);\r\n  }\r\n  function deletematerial(name) {\r\n    clearmetalvalue();\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.splice(name,1)\r\n    setProductCtx({ ...productCtx, metals: metalsarr }) \r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    \r\n      setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  }\r\n  function clearmetalvalue()\r\n  {\r\n    // for(let value in initialState){\r\n    //   if(value!==\"diamondclarity\" || \"diamondshape\" || \"diamondsettings\"){\r\n    //     setProductCtx({  \r\n    //       [value]:initialState[value]\r\n    //     })\r\n    //   }\r\n    // }\r\n    setProductCtx({...productCtx,\r\n      diamondsettings: \"\",\r\n      diamondcolor:\"\",\r\n      diamondclarity:\"\",\r\n      diamondshape:\"\",\r\n      diamondcount:\"\",\r\n      diamondweight:\"\",\r\n      gemstonetype:\"\",\r\n      gemstoneshape:\"\",\r\n      gemstonesettings:\"\",\r\n      gemstonesize:\"\",\r\n      gemstonecount:\"\",\r\n      gemstoneweight:\"\"\r\n    })\r\n    // alert(productCtx)\r\n    // console.log(productCtx)\r\n    \r\n\r\n  }\r\n  function assignvalue(metalobj, indexval)\r\n  {\r\n    if(metalobj.metalname === 'Diamond')\r\n    {\r\n    setProductCtx({ ...productCtx, \r\n      diamondsettings: metalobj.settings,\r\n      diamondcolor:metalobj.color,\r\n      diamondclarity:metalobj.clarity,\r\n      diamondshape:metalobj.shape,\r\n      diamondcount:metalobj.count,\r\n      diamondweight:metalobj.weight,\r\n    metalindex: indexval})\r\n    }else\r\n    {\r\n      setProductCtx({ ...productCtx, \r\n        gemstonesettings: metalobj.settings,\r\n        gemstoneshape:metalobj.color,\r\n        gemstonetype:metalobj.clarity,\r\n        gemstonesize:metalobj.shape,\r\n        gemstonecount:metalobj.count,\r\n        gemstoneweight:metalobj.weight,\r\n      metalindex: indexval})\r\n    }\r\n\r\n  }\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    var stonedetails = {};\r\n    stonedetails['metalname'] = productCtx.metal.label;\r\n    var isvalid = true\r\n    if(productCtx.diamondclarity)\r\n    {\r\n    if(productCtx.diamondsettings && productCtx.diamondcolor && productCtx.diamondclarity && productCtx.diamondshape && productCtx.diamondcount &&\r\n      productCtx.diamondweight)\r\n      {      stonedetails['metalname'] = \"Diamond\"\r\n    stonedetails['settings'] = productCtx.diamondsettings;\r\n    stonedetails['color'] = productCtx.diamondcolor;\r\n    stonedetails['clarity'] = productCtx.diamondclarity;\r\n    stonedetails['shape'] = productCtx.diamondshape;\r\n    stonedetails['count'] = productCtx.diamondcount;\r\n    stonedetails['weight'] = productCtx.diamondweight;\r\n      }else\r\n      {\r\n        isvalid = false\r\n        alert(\"Fill all fields\")\r\n      }\r\n\r\n    }else{\r\n      if(productCtx.gemstonetype && \r\n        productCtx.gemstoneshape && \r\n        productCtx.gemstonesettings && \r\n        productCtx.gemstonesize && productCtx.gemstonecount &&\r\n        productCtx.gemstoneweight)\r\n        { \r\n      stonedetails['metalname'] = \"Gemstone\"\r\n      stonedetails['clarity'] = productCtx.gemstonetype;\r\n      stonedetails['color'] = productCtx.gemstoneshape;\r\n      stonedetails['settings'] = productCtx.gemstonesettings;\r\n      stonedetails['shape'] = productCtx.gemstonesize;\r\n      stonedetails['count'] = productCtx.gemstonecount;\r\n      stonedetails['weight'] = productCtx.gemstoneweight;\r\n    }else\r\n    {\r\n      isvalid = false\r\n      alert(\"Fill all fields\")\r\n    }\r\n    }\r\n\r\n    if(isvalid)\r\n    {\r\n    if(productCtx.metalindex === -1)\r\n    {\r\n      stonedetails['id'] = metalsarr.length;\r\n\r\n      metalsarr.push(stonedetails) \r\n\r\n    }else\r\n    {\r\n      stonedetails['id'] = productCtx.metalindex\r\n\r\n      metalsarr[productCtx.metalindex] = stonedetails;\r\n    }\r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n    clearmetalvalue()\r\n  }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n   {!productCtx.material_names.includes(\"Diamond\") ? null : \r\n\r\n      <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n      fullWidth\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid container xs={12} spacing={1}>\r\n\r\n        <Grid item xs={4} >\r\n                   \r\n\r\n                <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondclarity}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                    onChange={handleoptionChange('diamondclarity')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Type/Clarity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n        </Grid>\r\n\r\n        <Grid item xs={4} >\r\n        \r\n                      \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondcolor}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                    onChange={handleoptionChange('diamondcolor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Colour\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          \r\n\r\n            <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondsettings}\r\n                    options={productCtx.masterData.diamondsettings}\r\n                    onChange={handleoptionChange('diamondsettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n       \r\n                      <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.diamondshape}\r\n                    options={productCtx.masterData.diamondshapes}\r\n                    onChange={handleoptionChange('diamondshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n        \r\n        </Grid>\r\n        <Grid item xs={4} >\r\n        \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondcount')}\r\n              value={productCtx.diamondcount}\r\n              />\r\n        </Grid>\r\n        <Grid item xs={4} >\r\n      \r\n          <Input\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Weight\"\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('diamondweight')}\r\n              value={productCtx.diamondweight}\r\n              />\r\n        </Grid>\r\n        <Grid container item xs={12} justify=\"flex-end\">\r\n        <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" className={classes.button}>\r\n            Add Diamond\r\n          </Button>\r\n\r\n        </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n        </CardContent>\r\n        </Card>\r\n   }\r\n\r\n {!productCtx.material_names.includes(\"Gemstone\") ? null : \r\n\r\n  \r\n       <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n\r\n          <Grid  container xs={12} spacing={1}>\r\n\r\n      <Grid item xs={4} >\r\n      \r\n                 \r\n                       <Autocomplete\r\n                    \r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonetype}\r\n                    options={productCtx.masterData.gemstontypes}\r\n                    onChange={handleoptionChange('gemstonetype')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Type\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n              \r\n      </Grid>\r\n    \r\n      <Grid item xs={4} >\r\n    \r\n          \r\n\r\n<Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstoneshape}\r\n                    options={productCtx.masterData.gemstonshapes}\r\n                    onChange={handleoptionChange('gemstoneshape')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Shape\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n          \r\n                    <Autocomplete\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    value={productCtx.gemstonesettings}\r\n                    options={productCtx.masterData.gemstonesettings}\r\n                    onChange={handleoptionChange('gemstonesettings')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Gemstone Setting\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n    \r\n      <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Gemstone Size\"\r\n            name=\"size\"\r\n            onChange={handleInputChange('gemstonesize')}\r\n            autoComplete=\"size\"\r\n            value={productCtx.gemstonesize}\r\n            />\r\n      \r\n      \r\n      </Grid>\r\n      <Grid item xs={4} >\r\n      \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstonecount')}\r\n            value={productCtx.gemstonecount}\r\n            />\r\n      </Grid>\r\n      <Grid item xs={4} >\r\n        \r\n        <Input\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"Weight\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange('gemstoneweight')}\r\n            value={productCtx.gemstoneweight}\r\n            />\r\n      </Grid>\r\n      <Grid container item xs={12} justify=\"flex-end\">\r\n      <Button variant=\"contained\" onClick={handleClick}  size=\"small\" color=\"primary\" >\r\n          Add Gemstone\r\n        </Button>\r\n\r\n      </Grid>\r\n      </Grid>\r\n            </CardContent>\r\n            </Card>}\r\n\r\n            <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n    <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Stone</TableCell>\r\n            <TableCell align=\"right\">Type/Clarity</TableCell>\r\n            <TableCell align=\"right\">Colour</TableCell>\r\n            <TableCell align=\"right\">Setting</TableCell>\r\n            <TableCell align=\"right\">Shape</TableCell>\r\n            <TableCell align=\"right\">#of stone</TableCell>\r\n            <TableCell align=\"right\">Weight</TableCell>\r\n            <TableCell align=\"center\">Edit</TableCell>\r\n            <TableCell align=\"center\">Delete</TableCell>\r\n\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {productCtx.metals.map(row => (\r\n            <TableRow key={row.metalname}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.metalname}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.clarity.label}</TableCell>\r\n              <TableCell align=\"right\">{row.color.label}</TableCell>\r\n              <TableCell align=\"right\">{row.settings.label}</TableCell>\r\n              <TableCell align=\"right\">{row.metalname ==  'Diamond'? row.shape.label : row.shape}</TableCell>\r\n              <TableCell align=\"right\">{row.count}</TableCell>\r\n              <TableCell align=\"right\">{row.weight}</TableCell>\r\n              <TableCell align=\"center\"><EditIcon id={row.metalname} onClick={()=>editmaterial(row.id)}/> </TableCell>\r\n              <TableCell align=\"center\"><DeleteIcon id={row.metalname} onClick={()=>deletematerial(row.id)}/></TableCell>\r\n\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n      </CardContent>\r\n      </Card>\r\n         \r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport Select from 'react-select';\r\nimport { emphasize, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NoSsr from '@material-ui/core/NoSsr';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport PropTypes from 'prop-types';\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n    },\r\n  input: {\r\n    display: 'flex',\r\n    padding: 0,\r\n    height: 'auto',\r\n  },\r\n  valueContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5, 0.25),\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700],\r\n      0.08,\r\n    ),\r\n  },\r\n  noOptionsMessage: {\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  singleValue: {\r\n    fontSize: 16,\r\n  },\r\n  placeholder: {\r\n    position: 'absolute',\r\n    left: 2,\r\n    bottom: 6,\r\n    fontSize: 16,\r\n  },\r\n  paper: {\r\n    position: 'absolute',\r\n    zIndex: 1,\r\n    marginTop: theme.spacing(1),\r\n    left: 0,\r\n    right: 0,\r\n  },\r\n  \r\n  borderColor:{\r\n    borderBottom:'2px solid red'\r\n  \r\n  },\r\n}));\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nNoOptionsMessage.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\ninputComponent.propTypes = {\r\n  inputRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n};\r\n\r\nfunction Control(props) {\r\n  const {\r\n    children,\r\n    innerProps,\r\n    innerRef,\r\n    selectProps: { classes, TextFieldProps },\r\n  } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: classes.input,\r\n          ref: innerRef,\r\n          children,\r\n          ...innerProps,\r\n        },\r\n      }}\r\n      {...TextFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nControl.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      ref={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400,\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nOption.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\r\n  isFocused: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n};\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nPlaceholder.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction SingleValue(props) {\r\n  return (\r\n    <Typography className={props.selectProps.classes.singleValue} {...props.innerProps}>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nSingleValue.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction ValueContainer(props) {\r\n  return <div className={props.selectProps.classes.valueContainer}>{props.children}</div>;\r\n}\r\n\r\nValueContainer.propTypes = {\r\n  children: PropTypes.node,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={clsx(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused,\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nMultiValue.propTypes = {\r\n  children: PropTypes.node,\r\n  isFocused: PropTypes.bool,\r\n  removeProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper square className={props.selectProps.classes.paper} {...props.innerProps}>\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nMenu.propTypes = {\r\n  children: PropTypes.node,\r\n  innerProps: PropTypes.object,\r\n  selectProps: PropTypes.object,\r\n};\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  SingleValue,\r\n  ValueContainer,\r\n};\r\n\r\nexport default function IntegrationReactSelect(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const selectRef = React.useRef(null);\r\n  const [multi, setMulti] = React.useState({\r\n      values:[],\r\n    helperText:false}\r\n    );\r\n    React.useEffect(() => {\r\n      // console.info('MULTI', multi)\r\n      // setMulti({...multi, helperText: multi.values.length === 0 }); \r\n    },[multi.values])\r\n\r\n  function handleChangeMulti(value) {\r\n  \r\n    setMulti({...multi, values:value, helperText: !Boolean(value && value.length !== 0)  });\r\n  \r\n  }\r\n  \r\n  \r\n  const selectStyles = {\r\n    input: base => ({\r\n      ...base,\r\n      color: theme.palette.text.primary,\r\n      '& input': {\r\n        font: 'inherit',\r\n      },\r\n    }),\r\n  };\r\n  const suggestions =  props.MultiSelectData\r\n    .map(suggestion => ({\r\n      value: suggestion.label,\r\n      label: suggestion.label,\r\n    }));\r\n  return (\r\n   \r\n    <div className={classes.root}>\r\n      <NoSsr>\r\n       \r\n        <div className={classes.divider} />\r\n\r\n        <Select\r\n          classes={classes}\r\n          className={`${props.ClassNames?'props.ClassNames':''} ${multi.helperText?classes.borderColor:''}`}\r\n          styles={selectStyles}\r\n          inputId=\"react-select-multiple\"\r\n          TextFieldProps={{\r\n            label: 'Countries',\r\n            InputLabelProps: {\r\n              htmlFor: 'react-select-multiple',\r\n              shrink: true,\r\n            },\r\n            placeholder: 'Select multiple countries',\r\n          }}\r\n          ref={selectRef}\r\n          options={suggestions}\r\n          components={components}\r\n          value={multi.values}\r\n          onChange={handleChangeMulti}\r\n        \r\n          isMulti\r\n        />\r\n          {multi.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n      </NoSsr>\r\n    </div>\r\n  );\r\n}\r\n\r\nIntegrationReactSelect.propTypes = {\r\n  handleChangeMulti: PropTypes.func,\r\n  ClassNames:PropTypes.string,\r\n  MultiSelectData:PropTypes.isRequired\r\n};","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\"\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120\r\n    },\r\n    selectEmpty: {\r\n    }\r\n}));\r\n\r\nexport default function SimpleSelect(props) {\r\n    const classes = useStyles();\r\n    const [values, setValues] = React.useState({\r\n        age: null,\r\n        helperText: false\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        console.info('EVENT', values.age, Boolean((values.age != null && values.age !==\"\")));\r\n    },[values.age])\r\n\r\n    function handleChange(event) {\r\n        setValues({ [event.target.name]: event.target.value, helperText: !Boolean((event.target.value != null && event.target.value !== \"\")) })\r\n    }\r\n\r\n    return (\r\n        <form className={classes.root} autoComplete=\"off\">\r\n            <FormControl fullWidth required className={classes.formControl}>\r\n                <InputLabel htmlFor=\"age-required\">Age</InputLabel>\r\n                <Select\r\n                    value={values.age}\r\n                    onChange={handleChange}\r\n                    name=\"age\"\r\n                    inputProps={{ id: \"age-required\", \"aria-required\": true }}\r\n                    MenuProps={{ \"aria-required\": true }}\r\n                    className={classes.selectEmpty}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                    </MenuItem>\r\n                    {props.selectData.map(data => (\r\n                        <MenuItem value={data}>{data}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n                {values.helperText && <FormHelperText><b style={{ color: 'red' }}>Required</b></FormHelperText>}\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}\r\nSimpleSelect.propTypes = {\r\n    handleChange:PropTypes.func,\r\n    selectData:PropTypes.object.isRequired\r\n}","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles,useTheme } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {Input} from '../../components/Input.js'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from 'react-select';\r\nimport Chip from '@material-ui/core/Chip';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport { ProductContext } from '../../context';\r\nimport Button from '@material-ui/core/Button';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Multiselect from '../../components/Select';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\nCardContent} from '@material-ui/core';\r\n  const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n    fixedTag: {\r\n      padding: 0,\r\n      '& .MuiOutlinedInput-root':{\r\n        padding: 0,\r\n      }\r\n    },\r\n    button: {\r\n      margin: theme.spacing(1),\r\n    },\r\n    leftIcon: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    rightIcon: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    iconSmall: {\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  function createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n  }\r\n  \r\n  const rows = [\r\n    createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n    createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n    createData('Eclair', 262, 16.0, 24, 6.0),\r\n    createData('Cupcake', 305, 3.7, 67, 4.3),\r\n    createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  ];\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n  const { className, ...rest } = props;\r\n\r\n  const theme = useTheme();\r\n  const inputLabel = React.useRef(null);\r\n\r\n\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  const handleInputChange = type => e => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  }\r\n  const handleChange = type => selectedOption => {\r\n    setProductCtx({ ...productCtx, [type]: selectedOption  })\r\n  };\r\n  const handlemetalcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_color: selectedOption  })\r\n  };\r\n  const handlediamndcolorChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_colour: selectedOption  })\r\n  };\r\n  const handlediamndclarityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, diamond_clarity: selectedOption  })\r\n  };\r\n\r\n  const handlemetalpurityChange = selectedOption => {\r\n    setProductCtx({ ...productCtx, metal_purity: selectedOption  })\r\n  };\r\n  function handleClick(e) {\r\n    var metalsarr  = productCtx.metals;\r\n    metalsarr.push(\"test\") \r\n    setProductCtx({ ...productCtx, metals: metalsarr })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n<Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Default SKU For Display\r\n\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} alignItems=\"center\" spacing={2}>\r\n    \r\n    \r\n    \r\n    \r\n    <Grid item xs={4} >\r\n\r\n                  \r\n                \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_colour}\r\n                      onChange={handleChange('default_metal_colour')}\r\n                      options={productCtx.metalcolour}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Colour\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={4} >\r\n           \r\n\r\n                <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_purity}\r\n                      onChange={handleChange('default_metal_purity')}\r\n                      options={productCtx.metalpurity}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Metal Purity\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid>\r\n    {['BA','R','BR'].includes(productCtx.product_type_shortcode) ? \r\n    <Grid item xs={4} >\r\n           \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      isDisabled \r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.default_metal_size}\r\n                      onChange={handleChange('default_metal_size')}\r\n                      options={productCtx.selected_sizes}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Default Size\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n   \r\n    </Grid> : null}\r\n    {/* <Grid item xs={3} >\r\n                <Select\r\n                    value={productCtx.diamond_colour}\r\n                    placeholder=\"Diamond Colour\"\r\n                    onChange={handlediamndcolorChange}\r\n                    options={productCtx.masterData.diamondcolors}\r\n                  />\r\n   \r\n    </Grid>\r\n    <Grid item xs={3} >\r\n    <Select\r\n                    value={productCtx.diamond_clarity}\r\n                    placeholder=\"Diamond Clarity\"\r\n                    onChange={handlediamndclarityChange}\r\n                    options={productCtx.masterData.diamondclarities}\r\n                  />\r\n\r\n    </Grid>                 */}\r\n    \r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport SelectPlaceholder from '../../components/SelectPlaceholder.js'\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Divider,\r\n  Chip,\r\n  TextField,\r\nCardContent} from '@material-ui/core';\r\nimport { ProductContext } from '../../context';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginTop: theme.spacing(2)\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    '& .MuiOutlinedInput-root':{\r\n      padding: 0,\r\n    }\r\n  },\r\n}));\r\n\r\nexport default function Review(props) {\r\n  const classes = useStyles();\r\n\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { className, ...rest } = props;\r\n  const handleChange = type => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value  })\r\n\r\n  };\r\n \r\n  \r\n  return (\r\n    <React.Fragment>\r\n         <Card\r\n  {...rest}\r\n  className={clsx(classes.root, className)}\r\n>\r\n  <CardHeader title=\"Type of Fit\" />\r\n  <Divider />\r\n  <CardContent className={classes.cardcontent}>\r\n    <Grid container xs={12} sm={12} spacing={2}>\r\n    <Grid item xs={6} sm={4} >\r\n                   \r\n                      \r\n           <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.themes}\r\n                      onChange={handleChange('themes')}\r\n                      options={productCtx.masterData.themes.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Select Themes\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n           \r\n           \r\n            </Grid>\r\n   \r\n    <Grid item xs={12} sm={4}>\r\n                     \r\n    \r\n\r\n              <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.prod_styles}\r\n                      onChange={handleChange('prod_styles')}\r\n                      options={productCtx.masterData.styles.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Style\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n      \r\n    \r\n          <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.occassions}\r\n                      onChange={handleChange('occassions')}\r\n                      options={productCtx.masterData.occasions.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Occasions\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n  \r\n   \r\n\r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.collections}\r\n                      onChange={handleChange('collections')}\r\n                      options={productCtx.masterData.collections.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4} >\r\n    \r\n                  <Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecount}\r\n                      onChange={handleChange('stonecount')}\r\n                      options={productCtx.masterData.stones.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    <Grid item xs={12} sm={4}>\r\n    \r\n  \r\n\r\n<Autocomplete\r\n                      id=\"product_category\"\r\n                      multiple\r\n                      className={classes.fixedTag}\r\n                      defaultValue={productCtx.stonecolour}\r\n                      onChange={handleChange('stonecolour')}\r\n                      options={productCtx.masterData.gemstonecolor.map(option => option.label)}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                      ))\r\n                    }\r\n                    renderInput={params => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Collections\"\r\n                        margin=\"dense\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        InputProps={{ ...params.InputProps, type: 'search' }}\r\n                      />\r\n                    )}\r\n                  />\r\n    </Grid>\r\n    \r\n    \r\n    </Grid>\r\n    \r\n        <Grid item xs={6} >\r\n        </Grid>\r\n        </CardContent>\r\n        </Card>\r\n </React.Fragment>\r\n  );\r\n}","import Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\r\nimport FilePondPluginImageExifOrientation from 'filepond-plugin-image-exif-orientation';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css';\r\nimport FilePondPluginImageValidateSize from 'filepond-plugin-image-validate-size';\r\n// Import FilePond styles\r\nimport 'filepond/dist/filepond.min.css';\r\nimport React from 'react';\r\n// Import React FilePond\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\n// Register the plugins\r\nimport { ProductContext } from '../../context';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\n\r\nregisterPlugin(FilePondPluginImageExifOrientation, FilePondPluginImagePreview, FilePondPluginImageValidateSize, FilePondPluginFileRename);\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    height: 140,\r\n  },\r\n  img: {\r\n    height: '100%',\r\n    width: '100%',\r\n    objectFit: 'contain'\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\nexport default function Review() {\r\n  let count = 0;\r\n  const classes = useStyles();\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalcolour, setMetalcolour] = React.useState([]);\r\n  const [files, setFiles] = React.useState([]);\r\n  const [images, setImages] = React.useState({});\r\n  React.useEffect(() => {\r\n    let metalcolour = []\r\n    let product_images = [];\r\n\r\n    productCtx.metalcolour.forEach(element => {\r\n      if (element.name === productCtx.default_metal_colour) {\r\n        product_images[element.name] = []\r\n        if (metalcolour.length > 0) {\r\n          metalcolour.unshift(element);\r\n        } else {\r\n          metalcolour.push(element)\r\n        }\r\n\r\n      } else {\r\n        metalcolour.push(element)\r\n        product_images[element.name] = []\r\n      }\r\n    })\r\n    setMetalcolour(metalcolour)\r\n\r\n  }, []);\r\n  async function uploadimagetoserver(bodaydata, imageposition, imagecolor, uploadtype) {\r\n\r\n    //alert(JSON.stringify(bodaydata))\r\n\r\n    let prodimages = productCtx.product_images;\r\n    if (prodimages) {\r\n      var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n      let imagecolourobj = productCtx.product_images[imagecolor];\r\n      var imagecount = 1;\r\n      if (imagecolourobj) {\r\n        imagecount = imagecolourobj.length + 1;\r\n      }\r\n\r\n      let imagename = (prodid + \"-\" + (imagecount) + imagecolor.charAt(0));\r\n      let responsedata = await sendNetworkRequest('/uploadimage', {}, { image: bodaydata.fileExtension, filename: imagename, product_id: prodid }, false)\r\n      var returnData = responsedata.data.returnData;\r\n      var signedRequest = returnData.signedRequest;\r\n      var url = returnData.url;\r\n      console.log(\"responseurl\" + url);\r\n      var filepathname = returnData.filepath\r\n      filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n      var options = {\r\n        headers: {\r\n          'Content-Type': bodaydata.fileExtension,\r\n          'Access-Control-Allow-Origin': '*'\r\n        }\r\n      };\r\n\r\n      if (imagecolourobj) {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0)),\r\n          \"position\": (imagecolourobj.length + 1),\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        if (uploadtype === 'edit') {\r\n          imagecolourobj[imageposition] = imageobj;\r\n\r\n        } else {\r\n          imagecolourobj.push(imageobj)\r\n\r\n        }\r\n        prodimages[imagecolor] = imagecolourobj;\r\n\r\n      } else {\r\n        const imageobj = {\r\n          \"name\": (prodid + \"_1\" + imagecolor.charAt(0)),\r\n          \"position\": imageposition,\r\n          \"color\": imagecolor,\r\n          \"image_url\": filepathname,\r\n          \"url\": 'https://s3.ap-south-1.amazonaws.com/styloribaseimages/' + filepathname\r\n        }\r\n        imagecolourobj = [];\r\n        imagecolourobj.push(imageobj)\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      // setFiles([])\r\n    }\r\n    await axios.put(signedRequest, bodaydata.file, options)\r\n\r\n\r\n\r\n  }\r\n\r\n  function removefiles(imageposition, imagecolor) {\r\n\r\n\r\n    let prodimages = productCtx.product_images;\r\n\r\n    if (prodimages) {\r\n      let imagecolourobj = prodimages[imagecolor];\r\n\r\n      if (imagecolourobj) {\r\n        if (imagecolourobj.length > imageposition) {\r\n          let removedfile = imagecolourobj[imageposition]\r\n\r\n          imagecolourobj[imageposition] = { ...removedfile, url: \"\" }\r\n\r\n        }\r\n\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n      setProductCtx({ ...productCtx, product_images: prodimages })\r\n      //alert(JSON.stringify(productCtx.product_images))\r\n    }\r\n  }\r\n\r\n  const handleInit = () => {\r\n    // alert(\"initialized\")\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <Grid container className={classes.root} spacing={2}>\r\n\r\n        <Grid item direction=\"row\" xs={12}>\r\n          <Grid container justify=\"left\" spacing={2}>\r\n\r\n            {metalcolour === undefined ? null : metalcolour.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.name}\r\n                  </Typography>\r\n                </Grid>\r\n                {/* {productCtx.product_images[value.name] === undefined ? null : productCtx.product_images[value.name].map((row,imageindex) => (\r\n\r\n            <Grid  xs={3} alignItems=\"center\" item>\r\n                 <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            {row.url}\r\n             </Typography> \r\n           {row.url.length === 0 ? <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          allowMultiple={true}\r\n                          maxFiles={3}  \r\n                          files = {files}\r\n                          onupdatefiles={fileItem => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItem)=> {\r\n                            uploadimagetoserver(fileItem, imageindex, value.name, \"edit\")\r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n\r\n                          }}>\r\n                </FilePond> :  <FilePond \r\n                          labelIdle=\"Image For\"\r\n                          files={[{\r\n                            source: row.url,\r\n                            options: {\r\n                                type: 'local'\r\n                            }\r\n                        }]}\r\n                          server={{\r\n                            load: (source, load) => {\r\n                                // simulates loading a file from the server\r\n                                fetch(source).then(res => \r\n                                  \r\n                                  res.blob()).then(load);\r\n                            }\r\n                        }} \r\n                          onupdatefiles={fileItems => {\r\n                              // Set currently active file objects to this.state\r\n                            \r\n                          }}\r\n                          onaddfile={(error, fileItems)=> {\r\n                            \r\n                          }}\r\n                          onremovefile={(error, fileItem)=>{\r\n                            removefiles(imageindex, value.name)\r\n                          }}>\r\n                </FilePond>\r\n               \r\n                \r\n                         } </Grid>\r\n             ))} */}\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) => new Promise((resolve, reject) => {\r\n                      console.log(file);\r\n                      console.log('filepond property');\r\n\r\n                    })}\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={fileItem => {\r\n                      // Set currently active file objectsfiles to this.state\r\n\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\")\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {\r\n\r\n                    }}\r\n                    fileRenameFunction={\r\n                      (file) => new Promise(resolve => {\r\n                        var prodid = \"S\" + productCtx.product_type.shortCode + (productCtx.masterData.productseries[0].value + 1)\r\n                        let imagecolourobj = productCtx.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename = (prodid + \"_\" + (imagecount) + value.name.charAt(0)) + file.extension;\r\n                        resolve(imagename)\r\n\r\n                      })\r\n                    }\r\n                  >\r\n                  </FilePond>\r\n                  {/* <Grid container xs={12} alignItems=\"center\" spacing={1} item>\r\n                <Grid  xs={8} item>\r\n\r\n                <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      fullWidth\r\n                      value={\"S\"+productCtx.product_type_shortcode+(productCtx.masterData.productseries[0].value+1)+\"_1\"+ value.name.charAt(0)}\r\n                      id=\"imagename\"\r\n                      name=\"imagename\"\r\n                      label=\"imagename\"\r\n                      />  \r\n                                        </Grid>          \r\n\r\n                <Grid  xs={4}  item>\r\n\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    className={classes.button}\r\n                  >Upload</Button> \r\n                                    </Grid>          \r\n  \r\n                  </Grid>           */}\r\n                </Grid>\r\n\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n    </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\nexport default function Review() {\r\n \r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n            Page Not Found\r\n          </Typography> \r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ReactDOM from 'react-dom';\r\nimport PivotTableUI from 'react-pivottable/PivotTableUI';\r\nimport 'react-pivottable/pivottable.css'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { ProductContext } from '../../context';\r\nimport TableRenderers from 'react-pivottable/TableRenderers';\r\nimport createPlotlyComponent from 'react-plotly.js/factory';\r\nimport createPlotlyRenderers from 'react-pivottable/PlotlyRenderers';\r\n\r\n// create Plotly React component via dependency injection\r\nconst Plot = createPlotlyComponent(window.Plotly);\r\n\r\n// create Plotly renderers via dependency injection\r\nconst PlotlyRenderers = createPlotlyRenderers(Plot);\r\n\r\n// see documentation for supported input formats\r\nconst data = [{\r\n'id':'1',\r\n'productid':'SE30002',\r\n'productname':'Gold Ring', \r\n'purity':'18K',\r\n'material':'Gold',\r\n'diamondcolor':'EF',\r\n'diamondclarity':'VVS',\r\n'gemstone':'Navrathna',\r\n'size':'18',\r\n'costprice':30000,\r\n'sellingprice':38000,\r\n'margin':8000\r\n}, \r\n{\r\n  'id':'2',\r\n  'productid':'SE30002',\r\n  'productname':'Diamond Ring', \r\n  'purity':'18K',\r\n  'material':'Diamond',\r\n  'diamondcolor':'EF',\r\n  'diamondclarity':'VVS',\r\n  'gemstone':'Navrathna',\r\n  'size':'12',\r\n  'costprice':70000,\r\n  'sellingprice':98000,\r\n  'margin':28000\r\n  }\r\n];\r\n\r\n  \r\n  const dimensions = [\r\n    {value: 'firstName', title: 'First Name'}\r\n  ]\r\n\r\n  const reduce = function(row, memo) {\r\n    memo.amountTotal = (memo.amountTotal || 0) + parseFloat(row.transaction.amount)\r\n    return memo\r\n  }\r\n\r\n  const calculations = [\r\n    {\r\n      title: 'Amount', value: 'amountTotal',\r\n      template: function(val, row) {\r\n        return '$' + val.toFixed(2)\r\n      },\r\n      sortBy: function(row) {\r\n        return isNaN(row.amountTotal) ? 0 : row.amountTotal\r\n      }\r\n    }\r\n  ]\r\n  \r\n  \r\n  \r\nexport default function Pivot(props) {\r\n  const { productCtx, setProductCtx, masterData } = React.useContext(ProductContext);\r\n  function setcurrentstate(s)\r\n  {\r\n    setProductCtx({ ...productCtx, s })\r\n\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n    <Grid container xs={12} spacing={2}>\r\n    <Grid item xs={12} >\r\n    <PivotTableUI\r\n                data={data}\r\n                onChange={s => setcurrentstate(s)}\r\n                renderers={Object.assign({}, TableRenderers, PlotlyRenderers)}\r\n                {...productCtx.s}\r\n\r\n          />\r\n    </Grid>\r\n    \r\n        </Grid>\r\n </React.Fragment>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AddressForm from \"./AddressForm\";\r\nimport PaymentForm from \"./PaymentForm\";\r\nimport Review from \"./Review\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\nimport StarBorder from \"@material-ui/icons/StarBorder\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\r\n\r\nimport Step4 from \"./Step4\";\r\nimport Step5 from \"./Step5\";\r\nimport Step6 from \"./Step6\";\r\nimport Step7 from \"./Step7\";\r\nimport Step8 from \"./Step8\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { element } from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  layout: {\r\n    width: \"auto\",\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n      width: 600,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(3),\r\n    padding: theme.spacing(2),\r\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n    },\r\n    background: \"#fff\",\r\n  },\r\n  stepper: {\r\n    padding: theme.spacing(1, 0, 1),\r\n    background: \"#fff\",\r\n  },\r\n  buttons: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  nested: {\r\n    paddingLeft: theme.spacing(4),\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getStepContent(step) {\r\n  switch (step) {\r\n    case \"Step1\":\r\n      return <AddressForm />;\r\n    case \"Step2\":\r\n      return <PaymentForm />;\r\n    case \"Step3\":\r\n      return <Review />;\r\n    case \"Step4\":\r\n      return <Step5 />;\r\n    case \"Step5\":\r\n      return <Step4 />;\r\n    case \"Step6\":\r\n      return <Step6 />;\r\n\r\n    case \"Step7\":\r\n      return <Step7 />;\r\n    default:\r\n      throw new Error(\"Unknown step\");\r\n  }\r\n}\r\n\r\nexport default function Productupload() {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [failure, setfailure] = React.useState(false);\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [loading, setLoading] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setSuccess(true);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const handleNext = async () => {\r\n    var isvalid = true;\r\n    var error_content = {};\r\n    // if(productCtx.error_message)\r\n    // {\r\n    //   error_content = productCtx.error_message\r\n\r\n    // }\r\n\r\n    if (activeStep === 0) {\r\n      if (!productCtx.product_type) {\r\n        isvalid = false;\r\n        error_content[\"product_type\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productname) {\r\n        isvalid = false;\r\n        error_content[\"productname\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.product_categoy) {\r\n        isvalid = false;\r\n        error_content[\"product_categoy\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.metalcolour) {\r\n        isvalid = false;\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.material_names) {\r\n        isvalid = false;\r\n        error_content[\"material_names\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalpurity || productCtx.metalpurity.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalpurity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.metalcolour || productCtx.metalcolour.length === 0) {\r\n        isvalid = false;\r\n\r\n        error_content[\"metalcolour\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.vendorcode) {\r\n        isvalid = false;\r\n        error_content[\"vendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.vendorleadtime) {\r\n        isvalid = false;\r\n        error_content[\"vendorleadtime\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (!productCtx.default_metal_colour) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_colour\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.default_metal_purity) {\r\n        isvalid = false;\r\n        error_content[\"default_metal_purity\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.productvendorcode) {\r\n        isvalid = false;\r\n        error_content[\"productvendorcode\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        !productCtx.earringbacking &&\r\n        productCtx.product_type.alias === \"Earrings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"earringbacking\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.selectedgender) {\r\n        isvalid = false;\r\n        error_content[\"selectedgender\"] = \"Error messsage\";\r\n      }\r\n      if (\r\n        (!productCtx.selected_sizes ||\r\n          productCtx.selected_sizes.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"selected_sizes\"] = \"Error messsage\";\r\n      }\r\n\r\n      if (\r\n        (!productCtx.default_size || productCtx.default_size.length === 0) &&\r\n        productCtx.product_type === \"Rings\"\r\n      ) {\r\n        isvalid = false;\r\n        error_content[\"default_size\"] = \"Error messsage\";\r\n      }\r\n      // isvalid = true;\r\n    }\r\n\r\n    if (activeStep === 1) {\r\n      productCtx.metalpurity.forEach((element) => {\r\n        const keyvalue = element.name + \"_metal_weight\";\r\n\r\n        if (!productCtx[keyvalue] || productCtx[keyvalue].length === 0) {\r\n          isvalid = false;\r\n\r\n          error_content[keyvalue] = \"Error messsage\";\r\n        }\r\n      });\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (productCtx.product_type_shortcode === \"R\") {\r\n        if (!productCtx.metal_height) {\r\n          isvalid = false;\r\n          error_content[\"metal_height\"] = \"Error messsage\";\r\n        }\r\n        if (!productCtx.metal_width) {\r\n          isvalid = false;\r\n          error_content[\"metal_width\"] = \"Error messsage\";\r\n        }\r\n      }\r\n\r\n      if (!productCtx.themes || productCtx.themes.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"themes\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.prod_styles || productCtx.prod_styles.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"prod_styles\"] = \"Error messsage\";\r\n      }\r\n      if (!productCtx.occassions || productCtx.occassions.length === 0) {\r\n        isvalid = false;\r\n        error_content[\"occassions\"] = \"Error messsage\";\r\n      }\r\n      // if((!productCtx.collections || productCtx.collections.length === 0 ))\r\n      // {\r\n      //   isvalid = false\r\n      //   error_content['collections'] = \"Error messsage\"\r\n      // }\r\n\r\n      //  isvalid = true;\r\n    }\r\n\r\n    setProductCtx({ ...productCtx, error_message: error_content });\r\n    if (activeStep === productCtx.steps.length - 1) {\r\n      console.info(\"HANDLE\", sendNetworkRequest);\r\n      const productseries =\r\n        productCtx.masterData.productseries[0].productSeries;\r\n\r\n      delete productCtx[\"masterData\"];\r\n\r\n      var formdata = productCtx;\r\n      formdata[\"productseries\"] = productseries;\r\n\r\n      setLoading(true);\r\n      await sendNetworkRequest(\"/productupload\", {}, formdata);\r\n      setLoading(false);\r\n      setSuccess(true);\r\n      await sleep(500);\r\n      window.location.replace(\"/productlist\");\r\n    } else {\r\n      if (isvalid) {\r\n        setActiveStep(activeStep + 1);\r\n      }\r\n    }\r\n\r\n    //else\r\n    //  {\r\n    //  }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  async function sleep(millis) {\r\n    return new Promise((resolve) => setTimeout(resolve, millis));\r\n  }\r\n  console.log(productCtx, \"Component Samir\");\r\n  return (\r\n    <Grid item xs={12} sm={12}>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Product Created Successfully</Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={loading} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"info\">\r\n          Please Wait ...\r\n        </Alert>\r\n      </Snackbar>\r\n\r\n      <Snackbar open={failure} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          Please try again\r\n        </Alert>\r\n      </Snackbar>\r\n      <Paper className={classes.paper}>\r\n        <Stepper activeStep={activeStep} className={classes.stepper}>\r\n          {productCtx.steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel></StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </Paper>\r\n\r\n      <React.Fragment>\r\n        {activeStep === productCtx.steps.length ? (\r\n          <React.Fragment>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              Product Added Successfully\r\n            </Typography>\r\n            <Typography variant=\"subtitle1\"></Typography>\r\n          </React.Fragment>\r\n        ) : (\r\n          <React.Fragment>\r\n            {getStepContent(productCtx.steps[activeStep])}\r\n            <div className={classes.buttons}>\r\n              {activeStep !== 0 && (\r\n                <Button onClick={handleBack} className={classes.button}>\r\n                  Back\r\n                </Button>\r\n              )}\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={handleNext}\r\n                className={classes.button}\r\n              >\r\n                {activeStep === productCtx.steps.length - 1\r\n                  ? \"Product Upload\"\r\n                  : \"Next\"}\r\n              </Button>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </React.Fragment>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Component from \"./Component\";\r\nimport { ProductProvider } from \"../../context\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport { useQuery } from \"react-apollo\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport \"./Productupload.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const Productupload = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n});\r\nexport default Productupload;\r\n","import { colors } from '@material-ui/core';\r\n\r\nconst white = '#FFFFFF';\r\nconst black = '#000000';\r\n\r\nexport default {\r\n  black,\r\n  white,\r\n  \r\n  primary: {\r\n    contrastText: white,\r\n    dark: colors.indigo[900],\r\n    main: colors.indigo[500],\r\n    light: colors.indigo[100]\r\n  },\r\n  secondary: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue['A400'],\r\n    light: colors.blue['A400']\r\n  },\r\n  success: {\r\n    contrastText: white,\r\n    dark: colors.green[900],\r\n    main: colors.green[600],\r\n    light: colors.green[400]\r\n  },\r\n  info: {\r\n    contrastText: white,\r\n    dark: colors.blue[900],\r\n    main: colors.blue[600],\r\n    light: colors.blue[400]\r\n  },\r\n  warning: {\r\n    contrastText: white,\r\n    dark: colors.orange[900],\r\n    main: colors.orange[600],\r\n    light: colors.orange[400]\r\n  },\r\n  error: {\r\n    contrastText: white,\r\n    dark: colors.red[900],\r\n    main: colors.red[600],\r\n    light: colors.red[400]\r\n  },\r\n  text: {\r\n    primary: colors.blueGrey[900],\r\n    secondary: colors.blueGrey[600],\r\n    link: colors.blue[600]\r\n  },\r\n  background: {\r\n    default: '#F4F6F8',\r\n    paper: white\r\n  },\r\n  icon: colors.blueGrey[600],\r\n  divider: colors.grey[200]\r\n};\r\n","import palette from './palette';\r\n\r\nexport default {\r\n  h1: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '35px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '40px'\r\n  },\r\n  h2: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '29px',\r\n    letterSpacing: '-0.24px',\r\n    lineHeight: '32px'\r\n  },\r\n  h3: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '24px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '28px'\r\n  },\r\n  h4: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '20px',\r\n    letterSpacing: '-0.06px',\r\n    lineHeight: '24px'\r\n  },\r\n  h5: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  h6: {\r\n    color: palette.text.primary,\r\n    fontWeight: 500,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '20px'\r\n  },\r\n  subtitle1: {\r\n    color: palette.text.primary,\r\n    fontSize: '16px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '25px'\r\n  },\r\n  subtitle2: {\r\n    color: palette.text.secondary,\r\n    fontWeight: 400,\r\n    fontSize: '14px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body1: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.05px',\r\n    lineHeight: '21px'\r\n  },\r\n  body2: {\r\n    color: palette.text.secondary,\r\n    fontSize: '12px',\r\n    letterSpacing: '-0.04px',\r\n    lineHeight: '18px'\r\n  },\r\n  button: {\r\n    color: palette.text.primary,\r\n    fontSize: '12px'\r\n  },\r\n  caption: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px'\r\n  },\r\n  overline: {\r\n    color: palette.text.secondary,\r\n    fontSize: '11px',\r\n    fontWeight: 500,\r\n    letterSpacing: '0.33px',\r\n    lineHeight: '13px',\r\n    textTransform: 'uppercase'\r\n  }\r\n};\r\n","import MuiButton from './MuiButton';\r\nimport MuiIconButton from './MuiIconButton';\r\nimport MuiPaper from './MuiPaper';\r\nimport MuiTableCell from './MuiTableCell';\r\nimport MuiTableHead from './MuiTableHead';\r\nimport MuiTypography from './MuiTypography';\r\n\r\nexport default {\r\n  MuiButton,\r\n  MuiIconButton,\r\n  MuiPaper,\r\n  MuiTableCell,\r\n  MuiTableHead,\r\n  MuiTypography\r\n};\r\n","export default {\r\n  contained: {\r\n    boxShadow:\r\n      '0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.20)',\r\n    backgroundColor: '#FFFFFF'\r\n  }\r\n};\r\n","import palette from '../palette';\r\n\r\nexport default {\r\n  root: {\r\n    color: palette.icon,\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 0, 0, 0.03)'\r\n    }\r\n  }\r\n};\r\n","export default {\r\n  elevation1: {\r\n    boxShadow: '0 0 0 1px rgba(63,63,68,0.05), 0 1px 3px 0 rgba(63,63,68,0.15)'\r\n  }\r\n};\r\n","import palette from '../palette';\r\nimport typography from '../typography';\r\n\r\nexport default {\r\n  root: {\r\n    ...typography.body1,\r\n    borderBottom: `1px solid ${palette.divider}`\r\n  }\r\n};\r\n","import { colors } from '@material-ui/core';\r\n\r\nexport default {\r\n  root: {\r\n    backgroundColor: colors.grey[50]\r\n  }\r\n};\r\n","export default {\r\n  gutterBottom: {\r\n    marginBottom: 8\r\n  }\r\n};\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nimport palette from './palette';\r\nimport typography from './typography';\r\nimport overrides from './overrides';\r\n\r\nconst theme = createMuiTheme({\r\n  palette,\r\n  typography,\r\n  overrides,\r\n  zIndex: {\r\n    appBar: 1200,\r\n    drawer: 1100\r\n  }\r\n});\r\n\r\nexport default theme;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\n\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport data from './data.json'\r\nimport { Fullloader } from '../../../../components/Loader';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  \r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [discountobj, setDiscountobj] = useState({});\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(1);\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\nReact.useEffect(() => {\r\n  // setDiscountobj({\r\n  //   ...discountobj,\r\n  //   \"discountname\": props.discountcontent.discountname,\r\n  //   \"discountvalue\":  props.discountcontent.discountvalue,\r\n  //   \"discounttype\" : props.discountcontent.discounttype === 1 ? \"Fixed Amount\" : \"percentage\",\r\n  //   \"componenets\":props.discountcontent.componenets\r\n  // })\r\n},[])\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  \r\n \r\n  const handleClick = (event, option) => {\r\n    setDiscounttype(option);\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n\r\n  };\r\n\r\n  const handleInputChange = type => e => {\r\n    props.onAdded(type,e.target.value)\r\n\r\n  }\r\n  function changediscountype(optionvalue)\r\n  {\r\n    setDiscountobj({\r\n      ...discountobj,\r\n      \"discounttype\": optionvalue\r\n    })\r\n    props.onAdded(\"discounttype\",optionvalue)\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n      setDiscountobj({\r\n        ...discountobj,\r\n        [type]: value\r\n      })\r\n\r\n      props.onAdded(type,value)\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n    setIsonce(!isonce);\r\n  };\r\n \r\n  \r\n  return (\r\n\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <CardHeader title=\"General Information\" />\r\n      <Divider /> */}\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}> \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n\r\n\r\n<Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountname}\r\n    onChange={handleInputChange(\"discountname\")}\r\n    id=\"discountname\"\r\n    name=\"discountname\"\r\n    label=\"Name\"\r\n    />\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n    <TextField\r\n      variant=\"outlined\"\r\n      margin=\"dense\"\r\n      fullWidth\r\n      value={discountobj.discounttitle}\r\n      onChange={handleInputChange(\"discounttitle\")}\r\n      id=\"discounttitle\"\r\n      name=\"discounttitle\"\r\n      label=\"Title\"\r\n      />\r\n    </Grid>\r\n<Grid   item xs={12} sm={12} >\r\n        \r\n                 \r\n\r\n  <Autocomplete\r\n                 id=\"free-solo-2-demo\"\r\n                 multiple\r\n                 defaultValue={discountobj.componenets}\r\n                 value={discountobj.componenets}\r\n                 className={classes.fixedTag}\r\n                 fullWidth\r\n                 getOptionLabel={option => option.name}\r\n                 options={voucherCtx.voucherMaster.pricing_components}\r\n                 onChange={handleoptionChange('componenets')}\r\n                 renderTags={(value, getTagProps) =>\r\n                 value.map((option, index) => (\r\n                 <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                 ))\r\n                 }\r\n                 renderInput={params => (\r\n                 <TextField\r\n                 {...params}\r\n                 label=\"Pricing Components\"\r\n                 margin=\"dense\"\r\n                 variant=\"outlined\"\r\n                 fullWidth\r\n                //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                 />\r\n                 )}\r\n                 />\r\n\r\n\r\n\r\n\r\n\r\n    \r\n\r\n  </Grid>\r\n  \r\n \r\n \r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  <Grid  item xs={12} sm={6} spacing={1}>\r\n\r\n<Typography\r\n  gutterBottom\r\n  variant=\"h5\"\r\n>\r\nDiscount Type\r\n</Typography>\r\n</Grid>\r\n<ButtonGroup fullWidth color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n  {props.categories.map(option => (\r\n    \r\n  <Button onClick={()=> changediscountype(option)} variant={discountobj.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n    \r\n  ))}\r\n  </ButtonGroup>\r\n\r\n  </Grid>\r\n  <Grid item xs={12} sm={6} spacing={1}>\r\n\r\n  <TextField\r\n    variant=\"outlined\"\r\n    margin=\"dense\"\r\n    fullWidth\r\n    value={discountobj.discountvalue}\r\n    onChange={handleInputChange(\"discountvalue\")}\r\n    id=\"discountvalue\"\r\n    name=\"discountvalue\"\r\n    label=\"Discount Value\"\r\n    />\r\n  </Grid>\r\n\r\n  <Grid container item xs={12} sm={12} spacing={1}>\r\n  \r\n    </Grid>\r\n         </Grid> \r\n  \r\n      <Grid container item xs={12} sm={6}  spacing={2}> \r\n      </Grid>\r\n     </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { CategoryComponents } from \"./../../components\";\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs,\r\n  Tab,\r\n  Divider,\r\n  colors,\r\n} from \"@material-ui/core\";\r\nimport { VoucherContext } from \"../../../../context\";\r\nconst tabs = [\r\n  { value: \"Category\", label: \"Category\" },\r\n  { value: \"Producttype\", label: \"Product type\" },\r\n  { value: \"Material\", label: \"Material\" },\r\n  { value: \"Collections\", label: \"Collections\" },\r\n  { value: \"Occations\", label: \"Occations\" },\r\n  { value: \"Styles\", label: \"Styles\" },\r\n  { value: \"Themes\", label: \"Themes\" },\r\n];\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n    padding: theme.spacing(1),\r\n    maxWidth: \"100%\",\r\n    minWidth: \"100%\",\r\n    \"& + &\": {\r\n      marginLeft: theme.spacing(2),\r\n    },\r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300],\r\n  },\r\n  cardcontent: {\r\n    display: \"flex\",\r\n    alignItems: \"flex-center\",\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200],\r\n  },\r\n  optionRadio: {\r\n    margin: -10,\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst VoucherComponent = (props) => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx, voucherMaster } =\r\n    React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const myFunction = () => {\r\n    props.onAdded(attrobj);\r\n  };\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    if (type === \"materials\") {\r\n      let elements_arr = [];\r\n      value.forEach((element) => {\r\n        elements_arr.push(element.name);\r\n      });\r\n      if (elements_arr.indexOf(\"Gold\") > -1) {\r\n        setIsgold(true);\r\n      } else {\r\n        setIsgold(false);\r\n      }\r\n\r\n      if (elements_arr.indexOf(\"Diamond\") > -1) {\r\n        setIsdiamond(true);\r\n      } else {\r\n        setIsdiamond(false);\r\n      }\r\n    }\r\n    setAttrobj({\r\n      ...attrobj,\r\n      [type]: value,\r\n    });\r\n\r\n    // props.onAdded(type,value)\r\n  };\r\n  const handleTabsChange = (event, value) => {\r\n    if (value == \"Material\") {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if (tabnames.indexOf(\"Purity\") === -1) {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n      }\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <div className={classes.content}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.category}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              getOptionLabel={(option) => option.name}\r\n              options={voucherCtx.voucherMaster.product_categories}\r\n              onChange={handleoptionChange(\"category\")}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Category\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              value={attrobj.product_types}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.product_types}\r\n              onChange={handleoptionChange(\"product_types\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.product_types}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Types\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.materials}\r\n              onChange={handleoptionChange(\"materials\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.materials}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Materials\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {isgold ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                options={voucherCtx.voucherMaster.purities}\r\n                onChange={handleoptionChange(\"purities\")}\r\n                getOptionLabel={(option) => option.name}\r\n                value={attrobj.purities}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.name}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Purity\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          {isdiamond ? (\r\n            <Grid item xs={4} sm={4}>\r\n              <Autocomplete\r\n                id=\"free-solo-2-demo\"\r\n                multiple\r\n                //  value={attrobj.componenets}\r\n                className={classes.fixedTag}\r\n                fullWidth\r\n                getOptionLabel={(option) => option.diamondtype}\r\n                options={voucherCtx.voucherMaster.diamondtypes}\r\n                onChange={handleoptionChange(\"diamondtype\")}\r\n                value={attrobj.diamondtype}\r\n                renderTags={(value, getTagProps) =>\r\n                  value.map((option, index) => (\r\n                    <Chip\r\n                      variant=\"outlined\"\r\n                      size=\"small\"\r\n                      label={option.diamondtype}\r\n                      {...getTagProps({ index })}\r\n                    />\r\n                  ))\r\n                }\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                    //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                  />\r\n                )}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.collections}\r\n              onChange={handleoptionChange(\"collections\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.collections}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Collections\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.occations}\r\n              onChange={handleoptionChange(\"occations\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.occations}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Occassions\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.styles}\r\n              onChange={handleoptionChange(\"styles\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.styles}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Styles\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={4} sm={4}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              multiple\r\n              //  value={attrobj.componenets}\r\n              className={classes.fixedTag}\r\n              fullWidth\r\n              options={voucherCtx.voucherMaster.themes}\r\n              onChange={handleoptionChange(\"themes\")}\r\n              getOptionLabel={(option) => option.name}\r\n              value={attrobj.themes}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.name}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Themes\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                  //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n            <Button\r\n              onClick={() => props.onAdded(attrobj)}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n            >\r\n              Check Applicable Products\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired,\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n  const [attributenames, setAttributenames] = useState(\"\");\r\n  const [attributealias, setAttributealias] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    alert(JSON.stringify(option))\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option.name}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  productcontent: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor : theme.palette.white\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n   \r\n  }\r\n\r\n}));\r\nexport default function Viewsku(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [markup, setMarkup] = React.useState({});\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(markup,props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMarkup({ ...markup, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMarkup({\r\n    ...markup,\r\n    [type]: e.target.value\r\n  })\r\n}\r\nconst handleDelete = chipToDelete => () => {\r\n\r\n }\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         SKUs\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n        {props.products.map(data => (\r\n        <Chip\r\n        key={data.generated_sku}\r\n        label={data.generated_sku}\r\n        variant=\"outlined\"\r\n        // color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n         onDelete={handleDelete(data.generated_sku)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))}\r\n       \r\n       </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          \r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\n// import moment from 'moment';\r\nimport PropTypes from \"prop-types\";\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport Viewsku from \"../Viewsku\";\r\n\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors,\r\n} from \"@material-ui/core\";\r\n\r\nimport { Label, ReviewStars } from \"../../../../components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  filterButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  inner: {\r\n    minWidth: 1150,\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: \"flex-end\",\r\n  },\r\n}));\r\n\r\nconst Products = (props) => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectskus, setSelectskus] = useState([]);\r\n\r\n  const handleSelectAll = (event) => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map((order) => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function handlecancel() {\r\n    setOpen(false);\r\n  }\r\n  function handleOpen(prodskus) {\r\n    setOpen(true);\r\n    setSelectskus(prodskus);\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600],\r\n  };\r\n  return (\r\n    <div {...rest} className={clsx(classes.root, className)}>\r\n      {open ? (\r\n        <Viewsku\r\n          isadd={open}\r\n          products={selectskus}\r\n          actionclose={handlecancel}\r\n        />\r\n      ) : null}\r\n\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader title={props.title} />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n          <div className={classes.inner}>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Product ID</TableCell>\r\n\r\n                  {/* <TableCell align=\"center\">SKU Count</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell> */}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {props.products\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map((order) => (\r\n                    <TableRow\r\n                    // key={order.id}\r\n                    // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      <TableCell>{order}</TableCell>\r\n                      {/* <TableCell align=\"center\"> \r\n                      <IconButton aria-label=\"delete\"  onClick={() => handleOpen(order.skus)}  color=\"primary\">\r\n                          <VisibilityIcon />\r\n                      </IconButton>\r\n                      </TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      \r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell> */}\r\n                    </TableRow>\r\n                  ))}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={props.products.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nProducts.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\n\r\nProducts.defaultProps = {\r\n  orders: [],\r\n};\r\n\r\nexport default Products;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { VoucherContext } from \"../../context\";\r\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Chip, IconButton } from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\n\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport uuid from \"uuid/v1\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { palette } from \"../../theme\";\r\nimport Page from \"../../components/Page\";\r\nimport {\r\n  Header,\r\n  Results,\r\n  Products,\r\n  AboutVoucher,\r\n  VoucherComponent,\r\n} from \"./components\";\r\nimport { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport FullLoader from \"../../components/Loader\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  productcontent: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    flexWrap: \"wrap\",\r\n    padding: theme.spacing(0.5),\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  errorchip: {\r\n    margin: theme.spacing(0.5),\r\n    backgroundColor: theme.palette.error.dark,\r\n    textColor: theme.palette.white,\r\n  },\r\n  chip: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function Salediscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [products, setProducts] = useState([]);\r\n  const [deletedids, setDeletedids] = useState([]);\r\n\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [productattr, setProductattr] = useState({});\r\n  const [productattrtext, setProductattrtext] = useState(\"\");\r\n  const [errorskus, setErrorskus] = useState([]);\r\n  const [isloaded, setIsloaded] = useState(false);\r\n  const [isshowpriceupdate, setIsshowpriceupdate] = useState(false);\r\n  const [statusmessage, setStatusmessage] = useState(\"\");\r\n  const [titlecontent, setTitlecontent] = useState(\"\");\r\n  const [discount_id, setDiscount_id] = useState(\"\");\r\n  const [loadingtitle, setLoadingtitle] = useState(\"\");\r\n\r\n  const [attributeobj, setAttributeobj] = useState({});\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"Created Successfully\",\r\n    severity: \"Success\",\r\n  });\r\n\r\n  const { voucherCtx, setVoucherCtx, materialMaster } =\r\n    React.useContext(VoucherContext);\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  async function getdiscountvalue(discount_id) {\r\n    let bodydata = {\r\n      discountid: discount_id,\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getdiscount\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n    let comparr = [];\r\n    let displyarr = [];\r\n    response.discunt.components.forEach((comp) => {\r\n      comparr.push({\r\n        name: comp,\r\n      });\r\n    });\r\n    // alert(JSON.stringify(response.discunt))\r\n\r\n    // alert(Object.keys(response.discunt.product_attributes))\r\n\r\n    setProducts(response.discunt.product_ids);\r\n    setAttributeobj({\r\n      ...setAttributeobj,\r\n      discountname: response.discunt.discount_name,\r\n      discountvalue: response.discunt.discount_value,\r\n      discounttype: response.discunt.discount_type,\r\n      discounttitle: response.discunt.discount_title,\r\n      componenets: comparr,\r\n      skucount: response.discunt.product_ids.length,\r\n      displaycomp: response.discunt.components,\r\n      attributes: response.discunt.product_attributes,\r\n      allkeys: Object.keys(response.discunt.product_attributes),\r\n    });\r\n    setIsloaded(true);\r\n  }\r\n  async function creatediscount(ispricerun) {\r\n    let skuarray = [];\r\n    while (skus.length > 0) {\r\n      let sku_content = skus.splice(0, 25000);\r\n      skuarray.push(sku_content);\r\n    }\r\n    if (errorskus.length > 0) {\r\n      alert(\"Some skus are overlapping\");\r\n    } else {\r\n      let discount_count = 0;\r\n      setIsloading(true);\r\n      updatediscount(discount_count);\r\n      async function updatediscount() {\r\n        let bodydata = {\r\n          discountvalue: parseFloat(attributeobj.discountvalue),\r\n          discounttype: attributeobj.discounttype,\r\n          componenets: attributeobj.componenets,\r\n          discountname: attributeobj.discountname,\r\n          discounttitle: attributeobj.discounttitle,\r\n          product_attributes: productattr,\r\n          product_attributes_text: productattrtext,\r\n          skus: skuarray[discount_count],\r\n        };\r\n        console.log(JSON.stringify(productattr));\r\n        let response = await sendNetworkRequest(\r\n          \"/creatediscount\",\r\n          {},\r\n          bodydata,\r\n          false\r\n        );\r\n\r\n        discount_count = discount_count + 1;\r\n        if (skuarray.length > discount_count) {\r\n          setLoadingtitle(skus.length + \" Left\");\r\n          updatediscount(discount_count);\r\n        } else {\r\n          setIsloading(false);\r\n          setOpen(true);\r\n          setIsshowpriceupdate(false);\r\n\r\n          window.location = \"/salediscountlist\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n  const handleDelete = (chipToDelete) => () => {\r\n    //setProducts([])\r\n    let errorindex = errorskus.indexOf(chipToDelete);\r\n    if (errorindex > -1) {\r\n      errorskus.splice(errorindex, 1);\r\n      var erroritems = [];\r\n      errorskus.forEach((itemname) => {\r\n        erroritems.push(itemname);\r\n      });\r\n      setErrorskus(erroritems);\r\n    }\r\n    let index = products.indexOf(chipToDelete);\r\n    products.splice(index, 1);\r\n    var items = [];\r\n    products.forEach((itemname) => {\r\n      items.push(itemname);\r\n    });\r\n    setProducts(items);\r\n\r\n    //setProducts(porudcts)  //setProducts(chips => chips.filter(chip => chip.key !== chipToDelete.key));\r\n  };\r\n\r\n  async function filterapllied(value) {\r\n    var bodydata = {};\r\n\r\n    let product_ids = [];\r\n    let response = await sendNetworkRequest(\r\n      \"/getaliasproduct\",\r\n      {},\r\n      value,\r\n      false\r\n    );\r\n    setProducts(response.products);\r\n    setSkus(response.skus);\r\n    setErrorskus(response.eror_skus);\r\n    setIsloading(false);\r\n    setTitlecontent(response.title);\r\n  }\r\n  async function updateprices() {\r\n    alert(\"i am here\");\r\n    var bodydata = {};\r\n    bodydata = {\r\n      pricingcomponent: \"updateskuprice\",\r\n      req_product_id: products,\r\n    };\r\n    setIsshowpriceupdate(true);\r\n\r\n    let response = await sendNetworkRequest(\r\n      \"/productpriceupdate\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n  }\r\n  async function handlestatus(e) {\r\n    let bodydata = {\r\n      component: \"updateskuprice\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/getcomponentpricestatus\",\r\n      {},\r\n      bodydata,\r\n      false\r\n    );\r\n\r\n    setStatusmessage(response.message);\r\n  }\r\n  function attributeadded(value) {\r\n    let componentsstring = {};\r\n    let attrs = [];\r\n    let display_arr = [];\r\n    let keys = Object.keys(value);\r\n    keys.forEach((key) => {\r\n      let values = [];\r\n      let alias_arr = [];\r\n      value[key].forEach((valueobj) => {\r\n        values.push(valueobj.name);\r\n        alias_arr.push(valueobj.alias);\r\n        attrs.push(valueobj.name);\r\n      });\r\n      componentsstring[key] = {\r\n        values: values,\r\n        alias: alias_arr,\r\n      };\r\n      let displaytext = key + \" : \" + attrs.join(\" , \");\r\n      display_arr.push(displaytext);\r\n    });\r\n    setProductattr(componentsstring);\r\n    setProductattrtext(display_arr.join(\" | \"));\r\n    //alert(JSON.stringify(componentsstring))\r\n    setIsloading(true);\r\n    //setAttributeobj(value)\r\n    filterapllied(value);\r\n  }\r\n  function valuechange(type, value) {\r\n    setAttributeobj({\r\n      ...attributeobj,\r\n      [type]: value,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {};\r\n    fetchOrders();\r\n    if (\r\n      props.location.pathname &&\r\n      props.location.pathname.split(\"/\").length > 2\r\n    ) {\r\n      let discount_id = props.location.pathname.split(\"/\")[2];\r\n      setDiscount_id(discount_id);\r\n      getdiscountvalue(discount_id);\r\n    } else {\r\n      setIsloaded(true);\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <FullLoader title={loadingtitle} isopen={isloading} />\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Page className={classes.root} title=\"Orders Management List\">\r\n          {!discount_id ? (\r\n            <>\r\n              <VoucherComponent\r\n                onAdded={attributeadded}\r\n                className={classes.aboutvoucher}\r\n              />\r\n              {products.length > 0 ? (\r\n                <Products title={titlecontent} products={errorskus} />\r\n              ) : null}\r\n              {/* <Paper className={classes.productcontent}>\r\n     <Typography variant=\"h5\" component=\"h2\">\r\n        {products.length} Products and {skus.length} skus\r\n      </Typography>\r\n\r\n     \r\n    </Paper> \r\n    {products.map(data => (\r\n        <Chip\r\n        key={data}\r\n        label={data}\r\n        variant=\"outlined\"\r\n        color={errorskus.indexOf(data) > -1 ?  \"secondary\" : \"primary\"}\r\n        onDelete={handleDelete(data)}\r\n        className={classes.chip}\r\n      />\r\n\r\n      \r\n      ))} */}\r\n              {isloaded || !discount_id ? (\r\n                <AboutVoucher\r\n                  discountcontent={attributeobj}\r\n                  className={classes.aboutvoucher}\r\n                  onAdded={valuechange}\r\n                  categories={[\"Fixed Amount\", \"percentage\"]}\r\n                />\r\n              ) : null}\r\n\r\n              {/* <ProductsListing className={classes.aboutvoucher}  products={[]} /> */}\r\n\r\n              <Grid\r\n                container\r\n                xs={12}\r\n                spacing={2}\r\n                style={{ textAlign: \"center\" }}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  style={{ marginTop: 16, textAlign: \"center\" }}\r\n                  spacing={2}\r\n                >\r\n                  {!isshowpriceupdate ? (\r\n                    <>\r\n                      <Button\r\n                        onClick={() => creatediscount(false)}\r\n                        color=\"primary\"\r\n                        style={{ margin: 16 }}\r\n                        variant=\"contained\"\r\n                      >\r\n                        Submit\r\n                      </Button>\r\n\r\n                      {/* <Button onClick={() => creatediscount(true)} color=\"primary\" variant=\"contained\">Create and Price Run</Button> */}\r\n                    </>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid container xs={12} spacing={2}>\r\n              <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Name\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discountname}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Title\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttitle}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Discount Value\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.discounttype == 2\r\n                      ? attributeobj.discountvalue + \"%\"\r\n                      : attributeobj.discountvalue}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  <Typography variant=\"body2\" component=\"body2\">\r\n                    Pricing Compponent\r\n                  </Typography>\r\n                  <Typography variant=\"h5\" component=\"h5\">\r\n                    {attributeobj.displaycomp}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {attributeobj.allkeys ? (\r\n                <Grid item xs={6} style={{ marginTop: 16 }}>\r\n                  {attributeobj.allkeys.map((row, index) => (\r\n                    <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                      <Typography variant=\"body2\" component=\"body2\">\r\n                        {row}\r\n                      </Typography>\r\n                      <Typography variant=\"h5\" component=\"h5\">\r\n                        {attributeobj.attributes[row].values}\r\n                      </Typography>\r\n                    </Grid>\r\n                  ))}\r\n                  <Grid item xs={12} style={{ marginTop: 16 }}>\r\n                    <Typography variant=\"body2\" component=\"body2\">\r\n                      Total Sku\r\n                    </Typography>\r\n                    <Typography variant=\"h5\" component=\"h5\">\r\n                      {attributeobj.skucount}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              ) : null}\r\n              <Grid item xs={12} style={{ marginTop: 16, textAlign: \"center\" }}>\r\n                {!isshowpriceupdate ? (\r\n                  <>\r\n                    {/* <Button onClick={() => updateprices()} color=\"primary\" variant=\"contained\">Price Run</Button> */}\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {\" \"}\r\n                    {statusmessage}\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={(e) => handlestatus()}\r\n                      color=\"primary\"\r\n                    >\r\n                      <RefreshIcon />\r\n                    </IconButton>\r\n                  </>\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          )}\r\n        </Page>\r\n      </MuiPickersUtilsProvider>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from \"../../context\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\nimport { materialMaster } from \"../../services/mapper\";\r\nimport Component from \"./Salediscountcontent\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\nexport const Salediscount = withRouter((props) => {\r\n  const classes = useStyles();\r\n\r\n  const { data, loading, error } = useQuery(materialMaster.query);\r\n  if (loading)\r\n    return (\r\n      <div>\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n  return (\r\n    <VoucherProvider\r\n      value={{\r\n        data,\r\n        mapper: materialMaster.mapper,\r\n        mappertype: \"voucherMaster\",\r\n      }}\r\n    >\r\n      <Component {...props} />\r\n    </VoucherProvider>\r\n  );\r\n});\r\nexport default Salediscount;\r\n","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {MATERIALMASTER} from '../../../../graphql/query'\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title=\"Category\"\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"left\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"left\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={MATERIALMASTER}\r\n                    onCompleted={data => setPageCount( data.allMasterMaterials.totalCount )}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n\r\n                                {data.allMasterMaterials.nodes.map((row, index) => (\r\n                                 <>\r\n                                 {index == 0 && props.isadd ? \r\n                                 <TableRow key={row.name}>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                 <TableCell align=\"left\">\r\n                                 <TextField\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    contentEditable={false}\r\n                                    id=\"vendordeliverydays\"\r\n                                    name=\"vendordeliverydays\"\r\n                                    value={props.newvendorcode}\r\n                                    onChange={handleInputChange('shortCode')}\r\n      \r\n                                    label=\"Vendor Code\"\r\n                                   />\r\n                                   </TableCell>\r\n                                          \r\n                                  <TableCell  style = {{width: 20}} align=\"center\">\r\n                                    <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                    </Button>\r\n                                    <Button onClick={(e) => Cancelcreate()}><CancelIcon />\r\n                                    </Button>\r\n                                  </TableCell>\r\n                                   </TableRow>\r\n                                  : null }\r\n                                 <TableRow key={row.name}>\r\n\r\n                                \r\n                                 {\r\n                                btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                <TableCell align=\"left\">\r\n                                    <TextField\r\n                                      variant=\"outlined\"\r\n                                      margin=\"dense\"\r\n                                      fullWidth\r\n                                      id=\"categoryname\"\r\n                                      name=\"categoryname\"\r\n                                      value={editcontent.name}\r\n                                      onChange={handleInputChange('name')}                        \r\n                                      label=\"Name\"\r\n                                      /> </TableCell> :  <TableCell align=\"left\">{row.name} \r\n                                        </TableCell> }\r\n                                        {\r\n                                      btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ? \r\n                                      <TableCell align=\"left\">\r\n                                      <TextField\r\n                                            variant=\"outlined\"\r\n                                            margin=\"dense\"\r\n                                            fullWidth\r\n                                            id=\"alias\"\r\n                                            name=\"alias\"\r\n                                            value={editcontent.alias}\r\n                                            onChange={handleInputChange('alias')}  \r\n                                                                  label=\"alias\"\r\n                                            /> </TableCell> :  <TableCell align=\"left\">{row.alias} \r\n                                              </TableCell> }\r\n                                  {btnEdit.action && btnEdit.id == row.shortCode && !props.isadd ?\r\n                                    <TableCell  style = {{width: 20}} align=\"center\">\r\n                                      <Button  onClick={(e) => Savevendor(refetch)}><SaveIcon />\r\n                                      </Button>\r\n                                      <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                      </Button>\r\n                                    </TableCell> :\r\n                                    <TableCell align=\"center\" onClick={(e) => Editvendor(row)} style = {{width: 20}}>\r\n                                      <Button ><EditIcon />\r\n                                      </Button>\r\n                                    </TableCell>}\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SEOPRIORITIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { Header, Results } from './components';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Seopriority = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n \r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/manageseoattributes', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SEOPRIORITIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n        setFiltervalue(fatchvalue.data.allSeoUrlPriorities.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.attributeName && x.attributeName.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.attributeValue && x.attributeValue.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") ||\r\n      x.priority && x.priority == taxcontent ||\r\n      x.seoUrl && x.seoUrl.match(taxcontent+ \".*\") ||\r\n      x.seoText && x.seoText.toLowerCase().match(taxcontent.toLowerCase()+ \".*\")\r\n\r\n\r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  // element.email &&  element.email.match(searchtext+'.*')  || \r\n  //     element.mobile && element.mobile.match(searchtext+'.*') ||\r\n  //     element.orderid && element.orderid.match(searchtext+'.*') || \r\n  //     element.username && element.username.match(searchtext+'.*')\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n<Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        <Mastercontent title= {\"Seo url Priorities\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Seopriority;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shipmentsettings = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n\r\n    getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":2  ,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['isActive'] = element.isActive;\r\n            shipobj['isCart'] = element.isCart;\r\n\r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipment Settings\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shipmentsettings;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addshippingattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGCHARGES, ACTIVESHIPPINGZONES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingattributes = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [masters, setMasters] = React.useState({})\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n\r\n  \r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n    console.log(JSON.stringify(taxcontent))\r\n    let response =  await sendNetworkRequest('/manageshipmentsettings', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmastervalues()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: ACTIVESHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n      \r\n        setMasters({\r\n          \"zones\":fatchvalue.data.allShippingZones.nodes,\r\n          \"ranges\":[{\r\n            \"id\":1,\r\n            \"name\":\"By Weight\"\r\n          },{\r\n            \"id\":1,\r\n            \"name\":\"By Value\"\r\n          }]\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGCHARGES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let shipmentcharges = []\r\n\r\n        if(fatchvalue.data.allShippingCharges.nodes)\r\n        {\r\n\r\n          fatchvalue.data.allShippingCharges.nodes.forEach(element => {\r\n            let shipobj = {}\r\n            shipobj['id'] = element.id;\r\n\r\n            shipobj['name'] = element.name;\r\n            shipobj['rangeFrom'] = element.rangeFrom;\r\n            shipobj['rangeTo'] = element.rangeTo;\r\n            shipobj['shipmentCharge'] = element.shipmentCharge;\r\n            shipobj['displayAttributes'] = element.displayAttributes;\r\n\r\n            shipobj['isActive'] = element.isActive;\r\n            \r\n                if(element.shippingZoneByZoneId)\r\n                {\r\n                  let zines_arr = []\r\n                  zines_arr.push(element.shippingZoneByZoneId)\r\n                  shipobj['shippingzones'] = element.shippingZoneByZoneId\r\n                  shipobj['zone'] = element.shippingZoneByZoneId.name\r\n\r\n                }\r\n\r\n                if(element.chargeType == 1)\r\n                {\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":1,\r\n                    \"name\":\"By Weight\"\r\n                  }\r\n                  shipobj['range'] = \"By Weight\"\r\n                }else{\r\n                  shipobj['rangetype'] = {\r\n                    \"id\":2,\r\n                    \"name\":\"By Value\"\r\n                  }\r\n                  shipobj['range'] = \"By Value\"\r\n                }\r\n                shipmentcharges.push(shipobj)\r\n          });\r\n        }\r\n        setMastervalue(shipmentcharges)\r\n        setFiltervalue(shipmentcharges)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastervalues()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={masters}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingattributes;","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { SHIPPINGZONES,MASTERCOUNTRIES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Shippingzones = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [mastercountries, setMastercountries] = React.useState([])\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  \r\n  async function createtax(taxcontent)\r\n  {\r\n   let response =  await sendNetworkRequest('/manageshippingzone', {}, taxcontent)\r\n    getmaster()\r\n  }\r\n  async function getmastercountries()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: MASTERCOUNTRIES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastercountries(fatchvalue.data.allMasterCountries.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: SHIPPINGZONES  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        let zones = []\r\n        if(fatchvalue.data.allShippingZones.nodes)\r\n        {\r\n          fatchvalue.data.allShippingZones.nodes.forEach(element => {\r\n            let countries = []\r\n            let countrydefault = []\r\n            let shippingcharges = []\r\n\r\n            if(element.shippingZoneCountriesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingZoneCountriesByZoneId.nodes)\r\n              {\r\n                element.shippingZoneCountriesByZoneId.nodes.forEach(countryobj => {\r\n                  countries.push(countryobj.masterCountryByCountryId.name)\r\n                  countrydefault.push(countryobj.masterCountryByCountryId)\r\n                })\r\n              }\r\n            }\r\n            if(element.shippingChargesByZoneId)\r\n            {\r\n              \r\n              if(element.shippingChargesByZoneId.nodes)\r\n              {\r\n                element.shippingChargesByZoneId.nodes.forEach(countryobj => {\r\n                  shippingcharges.push(countryobj.name)\r\n                })\r\n              }\r\n            }\r\n            let zoneobj = {\r\n              id : element.id,\r\n              isActive : element.isActive,\r\n              name : element.name,\r\n              country  : countries.join(\" , \"),\r\n              charges : shippingcharges.join(\" , \"),\r\n              zonecountry : countrydefault\r\n            }\r\n            zones.push(zoneobj)\r\n          });\r\n        }\r\n\r\n        setMastervalue(zones)\r\n        setFiltervalue(zones)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmastercountries()\r\n    getmaster()\r\n  }, [])\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n \r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null ||\r\n      x.country.toLowerCase() ? x.country.toLowerCase().match(taxcontent.toLowerCase()+ \".*\") : null \r\n\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n        <Mastercontent title= {\"Shipping Zones\"} button_title=\"Add New\" \r\n        masters={mastercountries}\r\n        onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Shippingzones;","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {TaxList,VENDORLISTS,PRODUCTFILTERMASTER,PRODUCTLISTSTATUSEDIT} from '../../../graphql/query';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport {BASE_URL} from '../../../config'\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  function ProductEdit(id){\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`addtaxattributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n       <Grid container item xs={12} style={{padding: \"16px\"}} sm={12} alignItems={\"flex-end\"}>\r\n        <Grid fullwidth item xs={3} sm={3}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n            {props.title}\r\n\r\n          </Typography>\r\n          </Grid>\r\n          <Grid fullwidth container xs={6} sm={6} alignItems=\"center\" >\r\n          <Grid fullwidth item xs={9} sm={9}  >\r\n                <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            autoComplete=\"off\"\r\n                            id=\"vendordeliverydays\"\r\n                            name=\"vendordeliverydays\"\r\n                             value={editcontent.searchcontent}\r\n                            onChange={handleInputChange(\"searchcontent\")}\r\n                            label=\"Search text\"\r\n                          />\r\n                     </Grid>\r\n                     <Grid fullwidth item xs={3} sm={3}  >\r\n\r\n          <Button variant=\"contained\"  onClick={()=>searrchcontent() } color=\"primary\" >\r\n            Search\r\n        </Button>\r\n        </Grid>\r\n        </Grid>\r\n          <Grid fullwidth item xs={3} sm={3} style={{\"text-align\":\"right\"}} >\r\n          {/* <Button variant=\"contained\"  onClick={()=>addnewvendor() } color=\"primary\" >\r\n           {props.button_title}\r\n        </Button> */}\r\n        \r\n        </Grid>\r\n    </Grid>\r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                     {columnname.key === 'action' ?                  \r\n                          <TableCell align=\"center\" style = {{width: 20}}>\r\n                            <Button onClick={(e) => ProductEdit(row.id)}>\r\n                                    <EditIcon />\r\n                                  </Button>\r\n                        </TableCell>   :            <TableCell>\r\n\r\n                      <Typography> {row[columnname.key]}</Typography>\r\n                     \r\n                    </TableCell>}\r\n                \r\n              \r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n               \r\n                count={[props.values.length]}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Attributescontent from './Attributescontent/Attributescontent';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsettings = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup2', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     {/* <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n     <Attributescontent title= {\"Shipment Settings II\"} \r\n        masters={[]}\r\n        button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsettings);","import React,{useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Query, withApollo } from 'react-apollo';\r\n\r\nimport Mastercontent from '../../components/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { TaxList, CREATETAXSETUP } from '../../graphql/query';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport {Breadcrumbs} from '../../components'\r\n\r\n\r\nexport const Taxsetup = withRouter(props => {\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n    let response =  await sendNetworkRequest('/managetaxsetup', {}, taxcontent)\r\n   // alert(JSON.stringify(response))\r\n    getmaster()\r\n  } \r\n  \r\n\r\n  // async function createtax(taxcontent){\r\n    \r\n  //   let variables ={\r\n     \r\n  //      taxValue: taxcontent.taxValue, \r\n  //      taxName: taxcontent.taxName,\r\n  //     hsnNumber: taxcontent.hsnNumber\r\n  //   }\r\n  //   console.log()\r\n  //   // await props.client.mutate({mutation:CREATETAXSETUP,variables}).then(res=>{\r\n\r\n  //   //   if(res!==null){\r\n        \r\n  //   //   }\r\n  //   // }).catch(console.error)\r\n  \r\n  // }\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.hsnNumber ? x.hsnNumber.match(taxcontent+ \".*\") : null || \r\n      x.taxName ?  x.taxName.match(taxcontent+ \".*\") : null\r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  async function getmaster()\r\n  {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: TaxList  })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        setMastervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n        setFiltervalue(fatchvalue.data.allMasterTaxSettings.nodes)\r\n      })\r\n      .catch(console.error)\r\n  }\r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n  return (\r\n    <>\r\n    <Grid container  spacing={2}>  \r\n    <Breadcrumbs></Breadcrumbs>\r\n\r\n    {/* <Mastercontent onCancel={canceltaxcreation} isadd={isadd} columns={data.columns}/>  */}\r\n     <Mastercontent title={\"Tax Setup\"} button_title={\"Add new\"} onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/>\r\n\r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default withApollo(Taxsetup);","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs} from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Useraddresses = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.addressess ? <Results title={'Address'} masters={masters.addressess} columns={data.addressbook}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Useraddresses;","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport data from \"./data.json\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"./Configuration.css\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  contantview: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n  },\r\n}));\r\nexport const Userconfiguration = withRouter((props) => {\r\n  const master_options = [\r\n    \"Attribute Master\",\r\n    \"Categories\",\r\n    \"ProductTypes\",\r\n    \"Materials\",\r\n    \"Metal Colours\",\r\n    \"Metal Purities\",\r\n    \"Collections\",\r\n    \"Occassions\",\r\n    \"Styles\",\r\n    \"Themes\",\r\n    \"Designs\",\r\n    \"Weights\",\r\n    \"Diamond Types\",\r\n    \"Diamond Settings\",\r\n    \"Diamond Shapes\",\r\n    \"Earring Backings\",\r\n    \"Gemstone Settings\",\r\n    \"Gemstone Shapes\",\r\n    \"Gemstone Types\",\r\n    \"Stones\",\r\n    \"Stone Colours\",\r\n    \"Stone Shapes\",\r\n    \"Gender\",\r\n    \"SEO Priorities\",\r\n    \"Tax Settings 1\",\r\n    \"Tax Settings 2\",\r\n    \"Payment Status\",\r\n    \"Order Status\",\r\n    \"Shipping Zones\",\r\n    \"Shipment Setting I\",\r\n    \"Shipment Setting II\",\r\n  ];\r\n  const master_options_url = [\r\n    \"masterattributes\",\r\n    \"categories\",\r\n    \"producttypes\",\r\n    \"materialmaster\",\r\n    \"mastercolors\",\r\n    \"masterpurities\",\r\n    \"collections\",\r\n    \"masteroccassions\",\r\n    \"masterstyles\",\r\n    \"masterthemes\",\r\n    \"designs\",\r\n    \"weights\",\r\n    \"diamonds\",\r\n    \"diamondsettings\",\r\n    \"diamondshapes\",\r\n    \"earringbacking\",\r\n    \"gemstonesettings\",\r\n    \"gemstoneshapes\",\r\n    \"gemstonetypes\",\r\n    \"masterstones\",\r\n    \"masterstonecolors\",\r\n    \"masterstoneshapes\",\r\n    \"genders\",\r\n    \"seopriority\",\r\n    \"Taxsetup\",\r\n    \"taxsettings\",\r\n    \"paymentstatus\",\r\n    \"orderstatus\",\r\n    \"zones\",\r\n    \"shipmensettings\",\r\n    \"shippingattributes\",\r\n  ];\r\n\r\n  const [raised, setRaised] = React.useState(false);\r\n  const [cardindex, setCardindex] = React.useState(-1);\r\n  const classes = useStyles();\r\n\r\n  const onMouseOver = () => {\r\n    setRaised(true);\r\n  };\r\n  const onMouseOut = () => {\r\n    setRaised(false);\r\n    // setCardindex(-1)\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          User and Roles Management\r\n        </Typography>\r\n      </Grid>\r\n\r\n      {data.options.map((menu, index) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          <Link underline=\"none\" component={RouterLink} to={menu.url}>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{ textAlign: \"center\", marginTop: 8 }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                >\r\n                  {menu.title}\r\n                </Typography>\r\n\r\n                {/* <Typography variant=\"body2\" style={{textAlign: \"center\",marginTop:8}} color=\"textSecondary\">\r\n            Lorem Ipsum\r\n          </Typography> */}\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default Userconfiguration;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Divider,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\nimport data from \"./../data.json\"\r\n\r\nimport { Label } from '../../../../components'\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n  //  minWidth: 1150\r\n  },\r\n  tableWrapper: {\r\n    // overflowX: 'auto',\r\n    // overflowY: 'auto',\r\n    // width: '100%',\r\n    // maxHeight: '100vh'\r\n  },\r\n}));\r\n\r\nconst Invoices = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const [invoices, setInvoices] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchInvoices = () => {\r\n      // axios.get('/api/management/customers/1/invoices').then(response => {\r\n      //   if (mounted) {\r\n           setInvoices([\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 10.0\r\n            },\r\n            {\r\n           //   id: uuid(),\r\n              type: 'paid',\r\n              value: 15.0\r\n            },\r\n            {\r\n            //  id: uuid(),\r\n              type: 'due',\r\n              value: 5\r\n            },\r\n            {\r\n             /// id: uuid(),\r\n              type: 'income',\r\n              value: 10.0\r\n            }\r\n          ]);\r\n      //   }\r\n      // });\r\n    };\r\n\r\n    fetchInvoices();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  const statusColors = {\r\n    pending: colors.orange[600],\r\n    paid: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n         // action={<GenericMoreButton />}\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                  {props.columns.map(column => (\r\n                    <TableCell>{column.label}</TableCell>\r\n                  ))\r\n                  }                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {props.masters.map(invoice => (\r\n                    <TableRow key={invoice.id}>\r\n                      {/* <TableCell>#{invoice.id}</TableCell>\r\n                      <TableCell>\r\n                        {moment(invoice.date).format('DD/MM/YYYY | HH:MM')}\r\n                      </TableCell>\r\n                      <TableCell>{invoice.description}</TableCell>\r\n                      <TableCell>{invoice.paymentMethod}</TableCell>\r\n                      <TableCell>\r\n                        {invoice.currency}\r\n                        {invoice.value}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Label\r\n                          color={statusColors[invoice.status]}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          {invoice.status}\r\n                        </Label>\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">\r\n                        <Button\r\n                          color=\"primary\"\r\n                          component={RouterLink}\r\n                          size=\"small\"\r\n                          to={'/management/invoices/1'}\r\n                          variant=\"outlined\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n                  </TableCell> */}\r\n                   {props.columns.map(column => (\r\n                     <>\r\n                     {column.type === 2 ?  <TableCell>\r\n                      {moment(invoice.date).format('DD/MM/YYYY | HH:MM a')}\r\n                    </TableCell> : \r\n                     <TableCell>\r\n                     {invoice[column.key]}\r\n                   </TableCell>\r\n                    }\r\n                    </>\r\n                     \r\n                   ))}\r\n                    </TableRow> \r\n\r\n\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nInvoices.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Invoices;\r\n","import React,{useState,useEffect} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { MASTERCATEGORIES, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport  Results from './components/Results'\r\nimport {Breadcrumbs } from '../../components'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nexport const Userwishlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [mastervalue, setMastervalue] = React.useState([])\r\n  const [masters, setMasters] = React.useState({});\r\n\r\n  const classes = useStyles();\r\n\r\n  const [filtervalue, setFiltervalue] = React.useState([])\r\n  let user_id = props.location.pathname.split('/')[2];\r\n\r\n  async function createtax(taxcontent)\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/managecategories', {}, taxcontent)\r\n     getmaster()\r\n  }\r\n  async function getmaster()\r\n  {\r\n\r\n    let response =  await sendNetworkRequest('/getuserinfo', {}, {user_id : user_id})\r\n    setMasters(response.userinfo)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getmaster()\r\n  }, [])\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n\r\n  async function search(taxcontent)\r\n  {\r\n    const filteredHomes = mastervalue.filter( x => \r\n      x.name.toLowerCase() ? x.name.toLowerCase().match(taxcontent+ \".*\") : null \r\n    );\r\n    setFiltervalue(filteredHomes)\r\n  }\r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n      <Breadcrumbs url={\"/customerdetails/\"+user_id} name=\"UserInfo\"></Breadcrumbs>\r\n\r\n\r\n    {/* <Header onSearch={applysearch} onAdd={addcategory}/> */}\r\n    {/* <Results\r\n       className={classes.results}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    /> */}\r\n        {/* <Mastercontent title= {\"Wih\"} button_title=\"Add New\" onCreate={createtax} onSearch={search} columns={data.columns} values={filtervalue}/> */}\r\n       {masters.wishlists ? <Results title={'Wishlist'} masters={masters.wishlists} columns={data.wishlists}/> : null }\r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Userwishlist;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n    loader: {\r\n      display: 'flex',\r\n      width: 100,\r\n      paddingLeft: 25\r\n    }\r\n  }));\r\nfunction Newvendor(props) {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    return (\r\n      <Dialog\r\n      open={props.isopen}\r\n      fullWidth={true}\r\n      maxWidth={'md'}\r\n      aria-labelledby=\"alert-dialog-title\"\r\n      aria-describedby=\"alert-dialog-description\"\r\n    >\r\n      <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\r\n      <DialogContent>\r\n      <Grid container  spacing={2}> \r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorname\"\r\n            name=\"vendorname\"\r\n            value={\"test\"}\r\n            label=\"Vendor Name\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendorcode\"\r\n            name=\"vendorcode\"\r\n            value={\"test\"}\r\n            label=\"Vendor Code\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"organization\"\r\n            name=\"organization\"\r\n            value={\"test\"}\r\n            label=\"Organization\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"partnercategory\"\r\n            name=\"partnercategory\"\r\n            value={\"test\"}\r\n            label=\"Partner Category\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"gstno\"\r\n            name=\"gstno\"\r\n            value={\"test\"}\r\n            label=\"GST Number\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={6} sm={6} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // onChange={handleInputChange('vouchername')}\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n          <Grid   item xs={12} sm={12} >\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            rows={3}\r\n            multiline\r\n            id=\"vendordeliverydays\"\r\n            name=\"vendordeliverydays\"\r\n            value={\"test\"}\r\n            label=\"Vendor Delivery Days\"\r\n            />\r\n          </Grid>\r\n      </Grid>\r\n\r\n      </DialogContent>\r\n      <DialogActions>\r\n      <Button  color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button  color=\"primary\">\r\n            Update\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n \r\n    )\r\n}\r\nexport default Newvendor;","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Newvendor from '../../components/Newvendor'\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\n\r\n\r\n\r\nexport const Vendorlist = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  \r\n \r\n  function cancelvendorcreation()\r\n  {\r\n    setIsadd(false)\r\n\r\n\r\n  }\r\n  return (\r\n    <>\r\n    {/* <Newvendor title={'Add new Vendor'} isopen={isadd}/> */}\r\n    <Grid container  spacing={2}>  \r\n    \r\n    \r\n    <Vendor  onCancel={cancelvendorcreation}  />\r\n   \r\n    </Grid>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default Vendorlist;","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [metaldata, setMetaldata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.save(metaldata,props.refetch)\r\n  };\r\n\r\nconst handleoptionChange = type => (event, value) => {\r\n    setMetaldata({ ...metaldata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMetaldata({\r\n    ...metaldata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Gold Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              onChange={handleoptionChange('pricetype')}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"sellingprice\"\r\n              name=\"Selling Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGOLDPRICE, GOLDPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmetalprice from './Addmetalprice';\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [goldpricelist, setGoldpricelist] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEGOLDPRICE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  async function handleAdd(metalcontent, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      material: metalcontent.metal.name,\r\n      purity: metalcontent.purity.shortCode,\r\n      costprice: metalcontent.costPrice,\r\n      sellingprice: metalcontent.sellingPrice,\r\n      pricetype: metalcontent.pricetype.label,\r\n      vendor: props.vendor,\r\n      isadd: true\r\n    }\r\n    console.log(\"--------\")\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setOpen(false)\r\n    refetch()\r\n    //  setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n\r\n  function handleEdit(diamondData) {\r\n    let pricetypes = [{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]\r\n    let selectedsellingPriceType = {}\r\n    pricetypes.forEach(element => {\r\n\r\n      if (element.label == diamondData.sellingPriceType) {\r\n        selectedsellingPriceType = element\r\n      }\r\n    })\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      selectedsellingPriceType: selectedsellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatemetalprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  // useEffect(() => {\r\n  //   const query = props.client.query\r\n  //     query({\r\n  //       query: ALLPRODUCTLIST,\r\n  //       fetchPolicy: \"network-only\"\r\n  //     }).then((data) => {\r\n  //       // if (data) {\r\n  //       // setProductlists(data.data.allProductLists.nodes)\r\n  //       // setAllProductlists(data.data.allProductLists.nodes)\r\n  //       // setPageCount( data.data.allProductLists.totalCount )\r\n  //       // }else{\r\n  //       //   alert(\"success\")\r\n  //       // }\r\n  //     })\r\n  //   .catch((error) => {console.log(\"smbcj\")})\r\n  //   }, [])\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Gold Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={GOLDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allGoldPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      setGoldpricelist(data)\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          data={deleteid}\r\n                          refetch={refetch}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Addmetalprice isadd={open} refetch={refetch} metals={metalmaster} purities={puritymaster} save={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allGoldPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.purity}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"center\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  value={editdiamond.selectedsellingPriceType}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {btnEdit.action && btnEdit.id == row.id ? editdiamond.updatedAt : row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row, refetch)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmetalprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [diamonddata, setDiamonddata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(diamonddata, props.refetch)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setDiamonddata({ ...diamonddata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setDiamonddata({\r\n    ...diamonddata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         New Diamond Price\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => (option.diamondColor + option.diamondClarity)}\r\n              options={props.diamonds}\r\n              onChange={handleoptionChange('diamondtype')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Diamond Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEDIAMONDCHARGE, DIAMONDPRICELIST, PRODUCTDIAMONDTYPES, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Adddiamondprice from './Adddiamondprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Diamond Colour', label: 'Diamond Colour' },\r\n  { id: 'Diamond Clarity', label: 'Diamond Clarity' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n  const [diamondmaster, setDiamondmaster] = React.useState([]);\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent, refetch) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEDIAMONDCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(metalcontent, refetch) {\r\n    alert(\"i am here\")\r\n    let bodydata = {}\r\n    bodydata['diamondcolor'] = metalcontent.diamondtype.diamondColor\r\n    bodydata['diamondclarity'] = metalcontent.diamondtype.diamondClarity\r\n    bodydata['costprice'] = metalcontent.costPrice\r\n    bodydata['pricetype'] = metalcontent.pricetype.label\r\n    bodydata['sellingprice'] = metalcontent.sellingprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['isadd'] = true\r\n\r\n\r\n\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n    setOpen(false)\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n  }\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      priceid: diamondData.id,\r\n      costPrice: diamondData.costPrice,\r\n      sellingPriceType: diamondData.sellingPriceType,\r\n      sellingPrice: diamondData.sellingPrice,\r\n      updatedAt: new Date()\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function handleSave(id, refetch) {\r\n    var bodydata = {}\r\n    bodydata = {\r\n      priceid: editdiamond.priceid,\r\n      costprice: editdiamond.costPrice,\r\n      sellingprice: editdiamond.sellingPrice,\r\n      pricetype: editdiamond.sellingPriceType.label\r\n    }\r\n    await sendNetworkRequest('/updatediamondprice', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    refetch()\r\n\r\n\r\n  }\r\n\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditdiamond({ ...editdiamond, [type]: value })\r\n  }\r\n  const handleinputChange = type => e => {\r\n    setEditdiamond({\r\n      ...editdiamond,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: PRODUCTDIAMONDTYPES, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n        // alert(JSON.stringify(fatchvalue))\r\n        setDiamondmaster(fatchvalue.data.allMasterDiamondTypes.nodes)\r\n        // setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {\"Diamond Price Setup\"}\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={DIAMONDPRICELIST}\r\n                onCompleted={data => setPageCount(data.allDiamondPriceSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        <ConformationAlert\r\n                          title={\"Are you sure to delete?\"}\r\n                          positivebtn={\"Yes\"}\r\n                          negativebtn={\"No\"}\r\n                          message={\"\"}\r\n                          refetch={refetch}\r\n                          data={deleteid}\r\n                          onSuccess={handledelete}\r\n                          onCancel={hidedeleteconformation}\r\n                          isshow={isconformation} />\r\n                        {open ? <Adddiamondprice diamonds={diamondmaster} isadd={open} refetch={refetch} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n                        {data.allDiamondPriceSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.diamondClarity}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondClarity}\r\n\r\n                            </TableCell>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.diamondColour}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.costPrice}\r\n                                  onChange={handleinputChange('costPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.costPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editdiamond.sellingPrice}\r\n                                  onChange={handleinputChange('sellingPrice')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.sellingPrice} </Typography>}\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Autocomplete\r\n                                  id=\"free-solo-2-demo\"\r\n                                  fullWidth\r\n                                  disableClearable\r\n                                  className={classes.fixedTag}\r\n                                  getOptionLabel={option => option.name}\r\n                                  options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                                  onChange={handleoptionChange('sellingPriceType')}\r\n                                  renderTags={(value, getTagProps) =>\r\n                                    value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                    ))\r\n                                  }\r\n                                  renderInput={params => (\r\n                                    <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                    />\r\n                                  )}\r\n                                /> : <Typography className={classes.heading}>\r\n                                    {row.sellingPriceType === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"center\">\r\n                                  <Button onClick={(e) => handleSave(row.generatedSku, refetch)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"center\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50,100,200,500]}\r\n                colSpan={5}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>*/}\r\n          </Table>\r\n        </div>\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addgemstoneprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [gemstonedata, setGemstonedata] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n\r\n  const handleSave = () => {\r\n    props.actionSave(gemstonedata)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setGemstonedata({ ...gemstonedata, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setGemstonedata({\r\n    ...gemstonedata,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('gemstone')}\r\n              getOptionLabel={option => option.name}\r\n              options={props.gems}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Gemstone\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          {props.viewtype == 1 ? \r\n          <>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              onChange={handleinputChange('weightend')}\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          </> : null }\r\n          <Grid item xs={12}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              id=\"productvendorcode\"\r\n              onChange={handleinputChange('costprice')}\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Chip, Grid, Input, TextField } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEGEMCHARGE, GEMSTONEMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addgemstoneprice from './Addgemstoneprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n  { id: 'From weight', label: 'From weight' },\r\n  { id: 'To Weight', label: 'To Weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\nconst stonecountcolumns = [\r\n  { id: 'Gemstone Type', label: 'Gemstone Type' },\r\n\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n  { id: 'Selling Price', label: 'Selling Price' },\r\n  { id: 'Selling Price Type', label: 'Selling Price Type' },\r\n  { id: 'updatedAt', label: 'updatedAt' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [deleteid, setDeleteid] = React.useState([]);\r\n  const [gemmaster, setGemmaster] = React.useState([]);\r\n\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editgem, setEditgem] = React.useState({})\r\n  const [gemlist, setgemlist] = React.useState([])\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(diamondcontent) {\r\n    if (deleteid.length > 0) {\r\n      let variables = {\r\n        elementId: deleteid[0]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    if (deleteid.length > 1) {\r\n      let variables = {\r\n        elementId: deleteid[1]\r\n      }\r\n      await props.client.mutate({ mutation: DELETEGEMCHARGE, variables })\r\n    }\r\n    // await props.client.mutate({mutation:DELETEGEMCHARGE,variables}).then(res=>{\r\n\r\n    //   if(res!==null){\r\n    //    // refetch();\r\n    //     // refetchval()\r\n    //     getgemlist()\r\n    //   }\r\n    // }).catch(err => {\r\n\r\n    // })\r\n    setgemlist([])\r\n\r\n    setDeleteid([])\r\n    getgemlist()\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n\r\n    let deleteids = [];\r\n    deleteids.push(diamondData.costprice.id)\r\n    deleteids.push(diamondData.sellprice.id)\r\n\r\n    setDeleteid(deleteids)\r\n    setIsconformation(true);\r\n  }\r\n\r\n  async function handleAdd(gemstonedata) {\r\n    var bodydata = {}\r\n    bodydata['gemstone_type'] = gemstonedata.name\r\n    bodydata['weight_start'] = gemstonedata.weightstart\r\n    bodydata['weight_end'] = gemstonedata.weightend\r\n    bodydata['cost_price'] = gemstonedata.costprice\r\n    bodydata['vendor_code'] = props.vendor\r\n    bodydata['selling_price_type'] = gemstonedata.pricetype.label\r\n    bodydata['selling_price'] = gemstonedata.sellingprice\r\n    bodydata['isadd'] = true\r\n\r\n    // alert(JSON.stringify(gemstonedata))\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, bodydata)\r\n    setOpen(false)\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false })\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditgem({\r\n      ...editgem,\r\n      cost_price_id: diamondData.costprice.id,\r\n      weight_start: diamondData.costprice.weight_start,\r\n      weight_end: diamondData.costprice.weight_end,\r\n      cost_price: diamondData.costprice.price,\r\n      selling_price: diamondData.sellprice.price,\r\n      selling_price_id: diamondData.sellprice.id,\r\n\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.costprice.id, action: true })\r\n\r\n  }\r\n\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n    await sendNetworkRequest('/updategemstoneprice', {}, editgem)\r\n\r\n    getgemlist()\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n\r\n  }\r\n  async function getgemlist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor,\r\n      ratetype: props.viewtype\r\n    }\r\n    let response = await sendNetworkRequest('/getvendorgemprice', {}, bodydata)\r\n    // setProductlists(response.products)\r\n    setgemlist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    getgemlist()\r\n  }, [vendorid])\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: GEMSTONEMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setGemmaster(fatchvalue.data.allMasterGemstonesTypes.nodes)\r\n\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  const handleinputChange = type => e => {\r\n    setEditgem({\r\n      ...editgem,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        onSuccess={handledelete}\r\n        data={deleteid}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item> \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n        {/* <div className={classes.tableWrapper} style={{marginTop:16,marginBottom:16,textAlign: \"right\"} }>\r\n        \r\n      </div> */}\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              {props.viewtype == 1 ?\r\n                <TableRow>\r\n\r\n                  {columns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow> : <TableRow>\r\n\r\n                  {stonecountcolumns.map(column => (\r\n\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>}\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* <Query\r\n              query={GEMPRICELIST}\r\n              onCompleted={data => setPageCount( data.allGemstonePriceSettings.totalCount )}\r\n              variables={{ \"vendorCode\": 'STYPA 010',\"rateType\": 1}}>\r\n              {\r\n                  ({ data, loading, error, refetch }) => {\r\n                    \r\n                      if (loading) {\r\n                          // return <Loader />\r\n                      }\r\n                      if (error) {\r\n                        return <div>{error}</div>\r\n                          // return false\r\n                      }\r\n                      if (data) {\r\n                          return <> */}\r\n              {stableSort(gemlist, getComparator(order, orderBy)).map((row, index) => (\r\n                <TableRow key={row.gemstoneType}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.costprice.gemstone_type}\r\n\r\n                  </TableCell>\r\n                  {props.viewtype == 1 ?\r\n                    <>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_start}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_start}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.weight_end}\r\n                        </Typography>\r\n                        {/* {\r\n                                    btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editgem.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> : \r\n                                    <Typography className={classes.heading}> \r\n                                    {row.costprice.weight_end}\r\n                                   </Typography>  } */}\r\n                      </TableCell>\r\n                    </> : null}\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.cost_price}\r\n                        onChange={handleinputChange('cost_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.costprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Input\r\n                        variant=\"outlined\"\r\n                        margin=\"dense\"\r\n                        label=\"Cost Price\"\r\n                        fullWidth\r\n                        className={classes.helperinput}\r\n                        value={editgem.selling_price}\r\n                        onChange={handleinputChange('selling_price')}\r\n                        id=\"productvendorcode\"\r\n                        name=\"Cost Price\"\r\n                      /> :\r\n                        <Typography className={classes.heading}>\r\n                          {row.sellprice.price}\r\n                        </Typography>}\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    {\r\n                      btnEdit.action && btnEdit.id == row.costprice.id ? <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        fullWidth\r\n                        disableClearable\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={option => option.name}\r\n                        options={[{ label: 1, name: \"Flat\" }, { label: 2, name: \"Percentage\" }]}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={params => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Price Type\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                          />\r\n                        )}\r\n                      /> : <Typography className={classes.heading}>\r\n                          {row.sellprice.selling_price_type === 1 ? 'Flat' : 'Percentage'} </Typography>}\r\n\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\">\r\n                    <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                      {row.updatedAt}\r\n                    </Moment>\r\n                  </TableCell>\r\n                  {\r\n                    btnEdit.action && btnEdit.id == row.costprice.id ?\r\n                      <TableCell style={{ width: 170 }} align=\"center\">\r\n                        <Button onClick={(e) => handleSave(row.generatedSku)}><SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                        </Button>\r\n                      </TableCell> :\r\n                      <TableCell align=\"center\" style={{ width: 170 }}>\r\n                        <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                  }\r\n                </TableRow>\r\n              ))}\r\n              {/* </>\r\n                      }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                      } \r\n                  }}*/}\r\n              {/* </Query> */}\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,20,200,500]}\r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addgemstoneprice gems={gemmaster} viewtype={props.viewtype} isadd={open} title={props.title} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport { TextField, Grid, Chip } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function Addmakingchargeprice(props) {\r\n  const [open, setOpen] = React.useState(props.isadd);\r\n  const [makingcharge, setMakingcharge] = React.useState({});\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    props.actionclose()\r\n  };\r\n  const handleSave = () => {\r\n    props.actionSave(makingcharge)\r\n  };\r\n  const handleoptionChange = type => (event, value) => {\r\n    setMakingcharge({ ...makingcharge, [type]: value})\r\n}\r\nconst handleinputChange =type => e => {\r\n  setMakingcharge({\r\n    ...makingcharge,\r\n    [type]: e.target.value\r\n  })\r\n}\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n         {props.title}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.metals}\r\n              onChange={handleoptionChange('metal')}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Metal\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight Start\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightstart')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Weight End\"\r\n              fullWidth\r\n              onChange={handleinputChange('weightend')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              getOptionLabel={option => option.name}\r\n              options={props.purities}\r\n              onChange={handleoptionChange('purity')}\r\n\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Choose Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n          <Autocomplete\r\n              id=\"free-solo-2-demo\"\r\n              fullWidth\r\n              disableClearable\r\n              onChange={handleoptionChange('pricetype')}\r\n              getOptionLabel={option => option.name}\r\n              options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n              renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n              <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n              }\r\n              renderInput={params => (\r\n              <TextField\r\n              {...params}\r\n              label=\"Selling Price Type\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n              />\r\n              )}\r\n            />\r\n          </Grid>\r\n         \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Cost Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('costPrice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n          \r\n          \r\n          \r\n          <Grid item xs={6}>\r\n              <TextField\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              label=\"Selling Price\"\r\n              fullWidth\r\n              onChange={handleinputChange('sellingprice')}\r\n              id=\"productvendorcode\"\r\n              name=\"Cost Price\"\r\n              />\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        \r\n        </DialogContent>\r\n        <DialogActions>\r\n        <Button autoFocus onClick={handleClose} >\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleSave}  color=\"primary\">\r\n            Save\r\n          </Button>\r\n          \r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import { Button, Card, Grid, Input } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport Moment from 'react-moment';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ConformationAlert from '../../../components/ConformationAlert';\r\nimport { GRAPHQL_DEV_CLIENT } from '../../../config';\r\nimport { NetworkContext } from '../../../context/NetworkContext';\r\nimport { DELETEMAKINGCHARGE, MAKINGCHARGEPRICELIST, METALMASTER, PRODUCTLISTSTATUSEDIT } from '../../../graphql/query';\r\nimport Addmakingchargeprice from './Addmakingchargeprice';\r\n\r\n\r\nconst columns = [\r\n  { id: 'Metal', label: 'Metal' },\r\n  { id: 'Purity', label: 'Purity' },\r\n  { id: 'From Weight', label: 'From Weight' },\r\n  { id: 'To weight', label: 'To weight' },\r\n  { id: 'Cost Price', label: 'Cost Price' },\r\n\r\n  { id: 'updated On', label: 'updated On' },\r\n  { id: 'Edit / Delete', label: 'Edit / Delete', align: 'center' }\r\n\r\n];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n\r\n        {columns.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {/* <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? '' : ''}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel> */}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: theme.palette.secondary.main,\r\n        backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n      }\r\n      : {\r\n        color: theme.palette.text.primary,\r\n        backgroundColor: theme.palette.secondary.dark,\r\n      },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n          <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"filter list\">\r\n\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  cardroot: {\r\n    flexGrow: 1,\r\n  },\r\n  cardcontent: {\r\n    padding: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n}));\r\n\r\nconst AddContact = (props) => {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [pageCount, setPageCount] = React.useState(0);\r\n  const [offsetValue, setOffsetValue] = React.useState(0)\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [vendorid, setVendorid] = React.useState(props.vendor);\r\n  const [editmc, setEditmc] = React.useState({})\r\n  const [puritymaster, setPuritymaster] = React.useState([])\r\n\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('Product Id');\r\n  const [editdiamond, setEditdiamond] = React.useState({})\r\n  const [mchargelist, setMchargelist] = React.useState([])\r\n  const [deleteid, setDeleteid] = React.useState('')\r\n  const [metalmaster, setMetalmaster] = React.useState([])\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: '',\r\n    add: false\r\n  })\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  const [isconformation, setIsconformation] = React.useState(false);\r\n  const showdeleteconformation = () => {\r\n    setIsconformation(true);\r\n  };\r\n\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  async function handledelete(datacontent) {\r\n    let variables = {\r\n      elementId: deleteid\r\n    }\r\n    await props.client.mutate({ mutation: DELETEMAKINGCHARGE, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        //refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleDelete(diamondData) {\r\n    setDeleteid(diamondData.id)\r\n    setIsconformation(true);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: '', action: false, add: true })\r\n\r\n  }\r\n  async function handleAdd(makingcontent) {\r\n    let bodydata = {}\r\n    bodydata['material'] = makingcontent.metal.name;\r\n    bodydata['weight_start'] = makingcontent.weightstart;\r\n    bodydata['weight_end'] = makingcontent.weightend;\r\n    bodydata['price_type'] = makingcontent.pricetype.label;\r\n    bodydata['vendor_code'] = props.vendor;\r\n    bodydata['purity'] = makingcontent.purity.shortCode;\r\n    bodydata['cost_price'] = makingcontent.costPrice;\r\n    bodydata['selling_price'] = makingcontent.sellingprice;\r\n    bodydata['isadd'] = true\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    setOpen(false)\r\n    getmclist()\r\n\r\n  }\r\n  function handleEdit(diamondData) {\r\n    setEditmc({\r\n      ...editmc,\r\n      price: diamondData.price,\r\n      updatedAt: new Date()\r\n\r\n\r\n    })\r\n    // setProductCtx({\r\n    //   ...productCtx,\r\n    //   editleadtime:diamondData.vendorDeliveryTime,\r\n    //   editreadytoship: diamondData.isReadyToShip,\r\n    //   editisdefault:diamondData.isdefault,\r\n    //   editisactive:diamondData.isActive\r\n    // })\r\n    setBtnEdit({ ...btnEdit, id: diamondData.id, action: true })\r\n\r\n  }\r\n  async function getmclist() {\r\n    let bodydata = {\r\n      vendorid: props.vendor\r\n    }\r\n\r\n    let response = await sendNetworkRequest('/getvendormakingprice', {}, bodydata)\r\n    setMchargelist(response.gems)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: METALMASTER, variables: {} })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n        setMetalmaster(fatchvalue.data.allMasterMaterials.nodes)\r\n        setPuritymaster(fatchvalue.data.allMasterMetalsPurities.nodes)\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    getmclist()\r\n  }, [vendorid])\r\n  async function handleSave(id) {\r\n    var bodydata = {}\r\n\r\n\r\n    await sendNetworkRequest('/updatemakingcharge', {}, editmc)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    getmclist()\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage * rowsPerPage)\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function ProductEdit(id) {\r\n    // localStorage.setItem('productEditId',id);\r\n    history.push(`product_attributes/${id}`)\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const handleinputChange = type => e => {\r\n    setEditmc({\r\n      ...editmc,\r\n      [type]: e.target.value\r\n    })\r\n    // setProductCtx({ ...productCtx, [type]: e.target.value})\r\n\r\n  }\r\n  // function productItemStatusChange(id,isactive){\r\n  // let variable = {\r\n  //   \"productId\": id\r\n  // };\r\n  // let status = isactive ? variable.isActive = false :variable.isActive = true;\r\n  async function productItemStatusChange(id, isactive, refetch) {\r\n    let variables = {\r\n      productId: id,\r\n      isActive: isactive ? false : true\r\n    }\r\n    await props.client.mutate({ mutation: PRODUCTLISTSTATUSEDIT, variables }).then(res => {\r\n\r\n      if (res !== null) {\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n\r\n  }\r\n  // const [productItemStatusChange,{ data }] = useMutation(PRODUCTLISTSTATUSEDIT);\r\n  // }\r\n  return (\r\n    <>\r\n      <ConformationAlert\r\n        title={\"Are you sure to delete?\"}\r\n        positivebtn={\"Yes\"}\r\n        negativebtn={\"No\"}\r\n        message={\"\"}\r\n        data={deleteid}\r\n        onSuccess={handledelete}\r\n        onCancel={hidedeleteconformation}\r\n        isshow={isconformation} />\r\n      <Card className={classes.cardcontent} >\r\n        <Grid container justify=\"left\" alignItems=\"center\" className={classes.cardroot} spacing={4}>\r\n          <Grid item xs={6}>\r\n            <Typography variant=\"h6\">\r\n              {props.title}\r\n            </Typography>\r\n          </Grid>\r\n          {/* <Grid item > \r\n      <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          label=\"Search By Purity\"\r\n          className={classes.helperinput}\r\n          onChange={handleinputChange('weight_start')}\r\n          id=\"productvendorcode\"\r\n          name=\"Cost Price\"\r\n      />\r\n      </Grid> */}\r\n          <Grid item xs={6} style={{ textAlign: \"right\" }}>\r\n            <Button color=\"primary\" variant=\"contained\" size=\"small\" style={{ paddingRight: 16, paddingLeft: 16 }} onClick={handleClickOpen}>\r\n              Add New\r\n        </Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Card>\r\n      <Paper className={classes.root}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.tableWrapper}>\r\n\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                {columns.map(column => (\r\n                  <TableCell\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                  >\r\n                    {column.label === 'Cost Price' ? props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\" : column.label}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <Query\r\n                query={MAKINGCHARGEPRICELIST}\r\n                onCompleted={data => setPageCount(data.allMakingChargeSettings.totalCount)}\r\n                variables={{ \"vendorCode\": props.vendor, \"ratetype\": props.ratetype }}>\r\n                {\r\n                  ({ data, loading, error, refetch }) => {\r\n\r\n                    if (loading) {\r\n                      // return <Loader />\r\n                    }\r\n                    if (error) {\r\n                      return <div>{error}</div>\r\n                      // return false\r\n                    }\r\n                    if (data) {\r\n                      return <>\r\n                        {data.allMakingChargeSettings.nodes.map((row, index) => (\r\n                          <TableRow key={row.material}>\r\n                            <TableCell component=\"th\" scope=\"row\">\r\n                              {row.material}\r\n\r\n                            </TableCell>\r\n                            <TableCell align=\"left\">{row.purity}</TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label=\"Cost Price\"\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_start}\r\n                                    onChange={handleinputChange('weight_start')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightStart}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n                            <TableCell align=\"left\">\r\n                              {/* {\r\n                                    btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                    variant=\"outlined\"\r\n                                    margin=\"dense\"\r\n                                    label={props.ratetype == 1 ? \"Cost Price\" : \"Selling Price\"}\r\n                                    fullWidth\r\n                                    className={classes.helperinput}\r\n                                    value= {editmc.weight_end}\r\n                                    onChange={handleinputChange('weight_end')}\r\n                                    id=\"productvendorcode\"\r\n                                    name=\"Cost Price\"\r\n                                    /> :  */}\r\n                              <Typography className={classes.heading}>\r\n                                {row.weightEnd}\r\n                              </Typography>\r\n                            </TableCell>\r\n\r\n\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              {\r\n                                btnEdit.action && btnEdit.id == row.id ? <Input\r\n                                  variant=\"outlined\"\r\n                                  margin=\"dense\"\r\n                                  label=\"Cost Price\"\r\n                                  fullWidth\r\n                                  className={classes.helperinput}\r\n                                  value={editmc.price}\r\n                                  onChange={handleinputChange('selling_price')}\r\n                                  id=\"productvendorcode\"\r\n                                  name=\"Cost Price\"\r\n                                /> :\r\n                                  <Typography className={classes.heading}>\r\n                                    {row.price}\r\n                                  </Typography>}\r\n                            </TableCell>\r\n\r\n                            {/* <TableCell align=\"left\">\r\n                                  {\r\n                                    btnEdit.action && btnEdit.id == row.id ?  <Autocomplete\r\n                                      id=\"free-solo-2-demo\"\r\n                                      fullWidth\r\n                                      disableClearable\r\n                                      className={classes.fixedTag}\r\n                                      getOptionLabel={option => option.name}\r\n                                      options={[{label: 1,name:\"Flat\"},{label:2,name:\"Percentage\"}]}\r\n                                      renderTags={(value, getTagProps) =>\r\n                                      value.map((option, index) => (\r\n                                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                                      ))\r\n                                      }\r\n                                      renderInput={params => (\r\n                                      <TextField\r\n                                      {...params}\r\n                                      label=\"Price Type\"\r\n                                      margin=\"dense\"\r\n                                      variant=\"outlined\"\r\n                                      fullWidth\r\n                                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                                      />\r\n                                      )}\r\n                                      /> : <Typography className={classes.heading}> \r\n                                      {row.selling_price_type === 0 ? 'Flat' : 'Percentage'} </Typography>  }\r\n\r\n                                    </TableCell> */}\r\n\r\n\r\n                            <TableCell align=\"left\">\r\n                              <Moment format=\"DD MMM YYYY hh:mm a\">\r\n                                {row.updatedAt}\r\n                              </Moment>\r\n                            </TableCell>\r\n                            {\r\n                              btnEdit.action && btnEdit.id == row.id ?\r\n                                <TableCell style={{ width: 170 }} align=\"left\">\r\n                                  <Button onClick={(e) => handleSave(row.id)}><SaveIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                                  </Button>\r\n                                </TableCell> :\r\n                                <TableCell align=\"left\" style={{ width: 170 }}>\r\n                                  <Button onClick={(e) => handleEdit(row)}><EditIcon />\r\n                                  </Button>\r\n                                  <Button onClick={(e) => handleDelete(row)}><DeleteIcon />\r\n                                  </Button>\r\n                                </TableCell>\r\n                            }\r\n                          </TableRow>\r\n                        ))}\r\n                      </>\r\n                    }\r\n                    else {\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                    }\r\n                  }}\r\n              </Query>\r\n              {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )} */}\r\n            </TableBody>\r\n            {/* <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[10,100,200,500]}\r\n                \r\n                count={pageCount}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                // ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter> */}\r\n          </Table>\r\n        </div>\r\n        {open ? <Addmakingchargeprice metals={metalmaster} purities={puritymaster} isadd={open} title={\"Add Making Charge Setup\"} actionSave={handleAdd} actionclose={handleClose} /> : null}\r\n\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\nexport default withApollo(AddContact);\r\n","import React, { useEffect, useContext, useState } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Product from './components/Product'\r\nimport Diamonds from './components/Diamonds'\r\nimport Gemstones from './components/Gemstones'\r\nimport Makingcharge from './components/Makingcharge'\r\nimport { API_URL, GRAPHQL_DEV_CLIENT } from '../../config';\r\nimport { VENDORLIST, PRODUCTDIAMONDTYPES } from '../../graphql/query';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport {\r\n \r\n  Chip,\r\n  TextField\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyle = makeStyles(theme => ({\r\n}))\r\nexport const Vendorprice = withRouter(props => {\r\n  const [vendorcode, setVendorcode] = React.useState(0);\r\n  const [vendorlist, setVendorlist] = React.useState(0);\r\n\r\n   \r\n  const classes = useStyle();\r\n\r\n  const handlevendorchange = type => (event, value) => { \r\n    setVendorcode(value.shortCode)\r\n\r\n  }\r\n  useEffect(() => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ query: VENDORLIST, variables: { } })\r\n    };\r\n    // console.log(\"helo\",setProductCtx)\r\n    fetch(url, opts)\r\n      .then(res => res.json())\r\n      .then(fatchvalue => {\r\n\r\n\r\n        setVendorlist({ \r\n          ...vendorlist,\r\n          vendors : fatchvalue.data.allMasterVendors.nodes\r\n        })\r\n\r\n      })\r\n      .catch(console.error)\r\n  }, [])\r\n\r\n   \r\n  return (\r\n         <Grid container  spacing={1}>  \r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Typography component=\"h6\" variant=\"h6\">\r\n            Vendor Based Price List\r\n          </Typography>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} sm={4}>\r\n\r\n                    <Autocomplete\r\n                      id=\"free-solo-2-demo\"\r\n                      fullWidth\r\n                      disableClearable\r\n                      className={classes.fixedTag}\r\n                      getOptionLabel={option => (option.name +\"   (\"+ option.shortCode+\") \")}\r\n                      options={vendorlist.vendors}\r\n                      onChange={handlevendorchange('vendor')}\r\n                      renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                      <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                      ))\r\n                      }\r\n                      renderInput={params => (\r\n                      <TextField\r\n                      {...params}\r\n                      label=\"Choose Vendor\"\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      InputProps={{ ...params.InputProps, readOnly: true, type: 'search' }}\r\n                      />\r\n                      )}\r\n                      />\r\n    </Grid>\r\n         \r\n         {vendorcode ? <>\r\n          {/* <Grid item xs={12} sm={12}>\r\n\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n           Gold Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n          <Product vendor={vendorcode} />\r\n          </Grid>\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Diamond Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Diamonds vendor={vendorcode}/>\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Gemstone Price Setup By weight\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By Weight'} vendor={vendorcode} viewtype={1}/> \r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           \r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n  <Gemstones title={'Gemstone Price Setup By No of Stones'} vendor={vendorcode} viewtype={2}/> \r\n    </Grid>\r\n\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Cost Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Cost Price Setup\"} ratetype={1} vendor={vendorcode} />\r\n    </Grid>\r\n\r\n    {/* <Grid item xs={12} sm={12}>\r\n    <Typography component=\"h6\" variant=\"h6\">\r\n           Makingcharge Selling Price Setup\r\n          </Typography>\r\n          </Grid> */}\r\n          <Grid item xs={12} sm={12}>\r\n\r\n    <Makingcharge title={\"Makingcharge Selling Price Setup\"} ratetype={2} vendor={vendorcode} />\r\n    </Grid>\r\n          </> : null }\r\n    </Grid>\r\n\r\n    \r\n  )\r\n});\r\n\r\nexport default withRouter(Vendorprice);","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid item>\r\n          {/* <Typography\r\n            component=\"h2\"\r\n            gutterBottom\r\n            variant=\"overline\"\r\n          >\r\n            Management\r\n          </Typography> */}\r\n          {/* <Typography\r\n            component=\"h1\"\r\n            variant=\"h2\"\r\n          >\r\n             Product Type\r\n          </Typography> */}\r\n        </Grid>\r\n        <Grid item>\r\n\r\n          \r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    minWidth: 1150\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleSelectAll = event => {\r\n    const selectedOrders = event.target.checked\r\n      ? orders.map(order => order.id)\r\n      : [];\r\n\r\n    setSelectedOrders(selectedOrders);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedOrders.indexOf(id);\r\n    let newSelectedOrders = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\r\n    } else if (selectedIndex === selectedOrders.length - 1) {\r\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedOrders = newSelectedOrders.concat(\r\n        selectedOrders.slice(0, selectedIndex),\r\n        selectedOrders.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedOrders(newSelectedOrders);\r\n  };\r\n\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      {/* <Typography\r\n        color=\"textSecondary\"\r\n        gutterBottom\r\n        variant=\"body2\"\r\n      >\r\n        {orders.length} Records found. Page {page + 1} of{' '}\r\n        {Math.ceil(orders.length / rowsPerPage)}\r\n      </Typography> */}\r\n      <Card>\r\n        <CardHeader\r\n          title=\"Product Type\"\r\n          action ={\r\n            <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n\r\n          >\r\n            Add New Producttype\r\n          </Button>\r\n          }\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    \r\n                    <TableCell>Name</TableCell>\r\n                    \r\n                    <TableCell align=\"center\">Alias</TableCell>\r\n\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {orders.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(order => (\r\n                    <TableRow\r\n                      // key={order.id}\r\n                      // selected={selectedOrders.indexOf(order.id) !== -1}\r\n                    >\r\n                      \r\n                     \r\n\r\n                      <TableCell >{order.name}</TableCell>\r\n                      <TableCell align=\"center\">{order.alias}</TableCell>\r\n                      \r\n                      <TableCell align=\"center\">\r\n                      <IconButton aria-label=\"add to favorites\">\r\n                        <CreateIcon />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\">\r\n                        <DeleteIcon />\r\n                        </IconButton>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={orders.length}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default Results;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport { makeid } from '../../../../utils/commonmethod';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  ButtonGroup,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Switch,\r\n  Button,\r\n  Grid,\r\n  Chip,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n   \r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  metaloption: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary.main,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  selectedOptiondefault: {\r\n    backgroundColor: theme.palette.common.white,\r\n   // border: `3px solid ${theme.palette.divider}`,\r\n\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    \r\n  },\r\n  optionmaterialDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n\r\n  },\r\n  selectedtext: {\r\n    color: theme.palette.common.white\r\n  }\r\n}));\r\n\r\nconst AboutVoucher = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState([]);\r\n  const [vouchername, setVouchername] = useState(\"\");\r\n  const [vouchercount, setVouchercount] = useState(\"\");\r\n  const [voucherprefix, setVoucherprefix] = useState(\"\");\r\n\r\n  const [discounttype, setDiscounttype] = useState(\"\");\r\n  const [minreq, setMinreq] = useState(\"None\");\r\n  const [usagelimit, setUsagelimit] = useState(\"once\");\r\n\r\n  const [isonce, setIsonce] = useState(false);\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [selectedendDate, setSelectedendDate] = useState(selectedDate);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  const handleendDateChange = val => {\r\n      setSelectedendDate(val)\r\n      setVoucherCtx({\r\n        ...voucherCtx,\r\n        \"enddate\": val\r\n      })\r\n    };\r\n  const handleDateChange = val => {\r\n    setSelectedDate(val)\r\n\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"startdate\": val\r\n    })\r\n};\r\n  const handleClick = (event, option) => {\r\n   // setDiscounttype(option);\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"discounttype\": option\r\n   })\r\n  };\r\n  const handleMinimumreq = (event, option) => {\r\n   // setDiscounttype(option);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"minimumreq\": option\r\n    })\r\n  };\r\n  const handleusagelimit = (event, option) => {\r\n    setUsagelimit(option);\r\n    \r\n  };\r\n  const handleInputChange = type => (event, value) => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"vouchercodes\":value\r\n    })\r\n    setVouchercode(value)\r\n  }\r\n  // const handleInputChange = (event, option) => {\r\n  //   alert(JSON.stringify(option))\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setVouchercode(e.target.value.toUpperCase())\r\n  // }\r\n  const handlevouchername = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handlevaluechange = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.value\r\n    })\r\n  }\r\n  const handleisloggedin = type => e => {\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      [type]: e.target.checked\r\n    })\r\n  }\r\n  const handleCountChange = type => e => {\r\n    setVouchercount(e.target.value.toUpperCase())\r\n  }\r\n  const handlePrefixChange = type => e => {\r\n    setVoucherprefix(e.target.value.toUpperCase())\r\n  }\r\n  const handleminreq = (event, option) => {\r\n    setMinreq(option);\r\n  };\r\n  const handleonceperorder = (event, option) => {\r\n  //  setIsonce(!isonce);\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      \"isonce\": !voucherCtx.isonce\r\n    })\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVoucherCtx({\r\n     ...voucherCtx,\r\n     \"vouchercodes\":makeid(10,voucherprefix,vouchercount)\r\n   })\r\n   setVouchercode(makeid(10,voucherprefix,vouchercount))\r\n  };\r\n  \r\n  \r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <CardHeader title=\"General Information\" />\r\n      <Divider />\r\n      <CardContent className={classes.cardcontent}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid container item xs={12} sm={12} spacing={1} >\r\n      <Grid   item xs={6} sm={6} >\r\n      <Grid container  item xs={12} sm={12} spacing={1}>\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlevouchername('vouchername')}\r\n            id=\"vouchername\"\r\n            name=\"vouchername\"\r\n            value={voucherCtx.vouchername}\r\n            label=\"Voucher Name\"\r\n            />\r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handlePrefixChange('voucherprefix')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n             value={voucherprefix}\r\n            label=\"Voucher Prefix\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={6} sm={6} >\r\n\r\n        <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            onChange={handleCountChange('vouchercount')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            // value={vouchercode}\r\n            label=\"No of vouchers\"\r\n            />\r\n      </Grid>\r\n      <Grid   item xs={12} sm={12} >\r\n\r\n         {/* <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            \r\n            onChange={handleInputChange('vouchercode')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n            value={vouchercode}\r\n            label=\"Voucher Code\"\r\n            />  */}\r\n\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       freeSolo\r\n                       defaultValue={voucherCtx.vouchercode}\r\n                       value={props.isedit ? voucherCtx.vouchercode : vouchercode}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       options={[]}\r\n                        onChange={handleInputChange('vouchercode')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Voucher Codes\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                      //  error = {productCtx.error_message.selected_sizes}\r\n\r\n                      //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n                       />\r\n                       )}\r\n                       />\r\n                       </Grid>\r\n      </Grid>\r\n      </Grid> \r\n      <Grid   item xs={6} sm={6} >\r\n      <TextField\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            multiline\r\n            rows=\"7\"\r\n            onChange={handlevaluechange('voucherdescription')}\r\n            id=\"vouchercode\"\r\n            name=\"vouchercode\"\r\n           value={voucherCtx.voucherdescription}\r\n            label=\"Voucher Description\"\r\n            />\r\n\r\n      </Grid>\r\n      \r\n    \r\n      <Grid   item xs={2} sm={2} >\r\n        <Button size=\"small\" variant=\"contained\" \r\n        onClick={event => generateCoupon(event)}\r\n        className={classes.margin}>\r\n            Generate Voucher\r\n          </Button>\r\n      </Grid>\r\n      \r\n          \r\n\r\n        </Grid>\r\n        \r\n       \r\n       \r\n     \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n        <FormControlLabel\r\n        control={\r\n          <Switch\r\n             checked={voucherCtx.isloggedin}\r\n             onChange={handleisloggedin('isloggedin')}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        labelPlacement=\"start\"\r\n\r\n        label=\"Applicable for loggedin user\"\r\n      />  \r\n      </Grid>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n                      \r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n      Discount Type\r\n      </Typography>\r\n      </Grid>\r\n        \r\n\r\n            <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {props.categories.map(option => (\r\n              \r\n            <Button onClick={(event)=> handleClick(event,option)} variant={voucherCtx.discounttype == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        </Grid>\r\n         {voucherCtx.discounttype === 'Free Shipping' || voucherCtx.discounttype === \"\" ?  <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n            <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"orderqty\"\r\n          name=\"orderqty\"\r\n          label=\"Minimum order Quantity\"\r\n          onChange={handlevaluechange('minimumqty')}\r\n          value={voucherCtx.minimumqty}\r\n          />\r\n        </Grid> </Grid> :  \r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid item xs={6} sm={6} spacing={1}>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Discount Value\"\r\n          onChange={handlevaluechange('voucherdiscount')}\r\n          value={voucherCtx.voucherdiscount}\r\n          />\r\n          </Grid>\r\n          {voucherCtx.discounttype === 'percentage' ?  <Grid  item xs={6} sm={6} spacing={1}>\r\n          <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Maximun Discount Value\"\r\n          onChange={handlevaluechange('maxvoucherdiscount')}\r\n          value={voucherCtx.maxvoucherdiscount}\r\n          />\r\n          </Grid> : null}\r\n\r\n        </Grid>\r\n}\r\n      \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Uses per user\"\r\n          defaultValue=\"1\"\r\n          helperText=\"One User can use how many times\"\r\n          onChange={handlevaluechange('isonce')}\r\n          value={voucherCtx.isonce}\r\n          />\r\n        {/* <CardActionArea>\r\n\r\n        <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: voucherCtx.isonce\r\n            })}\r\n            onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n\r\n            key={\"\"}\r\n          >\r\n                <CardActions>\r\n\r\n            <Radio\r\n              checked={voucherCtx.isonce}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              label\r\n              onClick={event => handleonceperorder(event, voucherCtx.isonce)}\r\n              />\r\n            </CardActions>\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               If this option is disabled, discount will be counted for every eligible product\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          </CardActionArea> */}\r\n          </Grid>\r\n         \r\n          <Grid item xs={6} sm={6} spacing={1}>\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('limittouse')}\r\n          fullWidth\r\n          value={voucherCtx.limittouse}\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          helperText=\"How may times we can  use this\"\r\n\r\n          />\r\n        \r\n        </Grid>\r\n          {/* <Grid container item xs={12} sm={12} spacing={1}>\r\n        <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"h5\"\r\n      >\r\n        Minimum Requirements\r\n        </Typography>\r\n      </Grid>\r\n      <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n\r\n            {['None','Minimum Order Value','Minimum Quantity of Items'].map(option => (\r\n              \r\n            <Button onClick={(event)=> handleMinimumreq(event,option)} variant={voucherCtx.minimumreq == option ? \"contained\" : \"outlined\" }>{option}</Button>\r\n              \r\n            ))}\r\n            </ButtonGroup>\r\n        \r\n        </Grid> */}\r\n\r\n\r\n\r\n        \r\n\r\n\r\n\r\n        <Grid item xs={12} sm={12} spacing={1}>\r\n        {/* {voucherCtx.minimumreq === 'None' || !voucherCtx.minimumreq  ? null : */}\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          onChange={handlevaluechange('minorder')}\r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          value={voucherCtx.minorder}\r\n          label={'Minimum Order Value'}\r\n          />\r\n        {/* } */}\r\n        </Grid>\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        {/* <Grid  item xs={12} sm={12} spacing={1}>\r\n\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h5\"\r\n          >\r\n            Usage Limits\r\n            </Typography>\r\n          </Grid> */}\r\n{/* \r\n          <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOptiondefault]: usagelimit === \"once\"\r\n            })}\r\n            key={\"\"}\r\n            onClick={event => handleusagelimit(event, \"once\")}\r\n\r\n          >\r\n            <Radio\r\n              checked={usagelimit === \"once\"}\r\n              className={classes.optionRadio}\r\n              color=\"primary\"\r\n              onClick={event => handleusagelimit(event, \"once\")}\r\n            />\r\n            <div className={classes.optionDetails}>\r\n              <Typography\r\n                className={selected === \"\" ? classes.selectedtext : null}\r\n                gutterBottom\r\n                variant=\"h6\"\r\n              >\r\n               Only once per order\r\n              </Typography>\r\n              <Typography\r\n                gutterBottom\r\n                variant=\"title\"\r\n              >\r\n               Limit to one use per customer\r\n              </Typography>\r\n              </div>\r\n            \r\n          </div>\r\n          \r\n            </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n<div\r\n  className={clsx(classes.option, {\r\n    [classes.selectedOptiondefault]: usagelimit === \"usagecount\"\r\n  })}\r\n  key={\"\"}\r\n  onClick={event => handleusagelimit(event, \"usagecount\")}\r\n\r\n>\r\n  <Radio\r\n    checked={usagelimit === \"usagecount\"}\r\n    className={classes.optionRadio}\r\n    color=\"primary\"\r\n    onClick={event => handleusagelimit(event, \"usagecount\")}\r\n  />\r\n  <div className={classes.optionDetails}>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"h5\"\r\n    >\r\n     Usage Limit\r\n    </Typography>\r\n    <Typography\r\n      gutterBottom\r\n      variant=\"title\"\r\n    >\r\n     Limit number of times this discount can be used in total\r\n    </Typography>\r\n    </div>\r\n  \r\n</div>\r\n<Grid item xs={12} sm={12} spacing={1}>\r\n        {usagelimit === 'once' ? null :\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          \r\n          fullWidth\r\n          id=\"discountvalue\"\r\n          name=\"discountvalue\"\r\n          label=\"Limit of uses\"\r\n          />\r\n        }\r\n        </Grid>\r\n  </Grid> */}\r\n          </Grid>\r\n          <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        <Grid  item xs={6} sm={6} spacing={1}>\r\n\r\n        <DateTimePicker\r\n          label=\"Start Date\"\r\n          fullWidth\r\n          inputVariant=\"outlined\"\r\n          value={props.isedit ? voucherCtx.startdate : selectedDate} \r\n          minDate={new Date()}    \r\n          onChange={handleDateChange}\r\n        />\r\n    </Grid>\r\n            <Grid  item xs={6} sm={6} spacing={1}>\r\n            <DateTimePicker\r\n      label=\"End Date\"\r\n      fullWidth\r\n      inputVariant=\"outlined\"\r\n      value={props.isedit ? voucherCtx.enddate : selectedendDate}\r\n      minDate={selectedDate}\r\n      strictCompareDates={true}\r\n      onChange={handleendDateChange}\r\n    />\r\n    </Grid>\r\n        </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAboutVoucher.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AboutVoucher;\r\n","import React, { useEffect,useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {CategoryComponents} from './../../components'\r\nimport { DateTimePicker } from \"@material-ui/pickers\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport {\r\n  Card,\r\n  Grid,\r\n  Chip,\r\n  Button, \r\n  TextField,\r\n  CardHeader,\r\n  CardContent,\r\n  Tabs, Tab, \r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\nimport { VoucherContext } from '../../../../context';\r\nconst tabs = [\r\n  { value: 'Category', label: 'Category' },\r\n  { value: 'Producttype', label: 'Product type' },\r\n  { value: 'Material', label: 'Material' },\r\n  { value: 'Collections', label: 'Collections' },\r\n  { value: 'Occations', label: 'Occations' },\r\n  { value: 'Styles', label: 'Styles' },\r\n  { value: 'Themes', label: 'Themes' }\r\n\r\n\r\n];\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  divider: {\r\n    backgroundColor: colors.grey[300]\r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: colors.grey[200]\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(2),\r\n    padding: theme.spacing(1)\r\n\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2)\r\n  },\r\n  \r\n}));\r\n\r\nconst VoucherComponent = props => {\r\n  const { className, ...rest } = props;\r\n\r\n  const classes = useStyles();\r\n  const { voucherCtx, setVoucherCtx ,voucherMaster} = React.useContext(VoucherContext);\r\n  const [attrobj, setAttrobj] = useState({});\r\n  const [isgold, setIsgold] = useState(false);\r\n  const [isdiamond, setIsdiamond] = useState(false);\r\n  const [tabnames, setTabnames] = useState([\r\n    \"Category\",\r\n    \"Producttype\",\r\n    \"Material\",\r\n    \"Collections\",\r\n    \"Occations\",\r\n    \"Styles\",\r\n    \"Themes\"\r\n\r\n  ]);\r\n\r\n  const [selected, setSelected] = useState(1);\r\n  const [selectedtab, setSelectedtab] = useState(\"Category\");\r\n  const [selectedDate, handleDateChange] = useState(new Date());\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n const myFunction = () => {\r\n    props.onAdded(attrobj)\r\n  }\r\n  const handleoptionChange = type => (event, value) => {\r\n    if(type === 'materials')\r\n    {\r\n      let elements_arr = []\r\n      value.forEach(element => {\r\n        elements_arr.push(element.name)\r\n        \r\n      });\r\n      if(elements_arr.indexOf(\"Gold\") > -1)\r\n      {\r\n        setIsgold(true)\r\n      }else\r\n      {\r\n        setIsgold(false)\r\n      }\r\n\r\n      if(elements_arr.indexOf(\"Diamond\") > -1)\r\n      {\r\n        setIsdiamond(true)\r\n      }else\r\n      {\r\n        setIsdiamond(false)\r\n      }\r\n    }\r\n      setAttrobj({\r\n        ...attrobj,\r\n        [type]: value\r\n      })\r\n      \r\n     // props.onAdded(type,value)\r\n\r\n  }\r\n  const handleTabsChange = (event, value) => {\r\n    if(value == 'Material')\r\n    {\r\n      // tabs.push(  { value: 'Diamond Types', label: 'Diamond Types' },\r\n      // )\r\n      if(tabnames.indexOf(\"Purity\") === -1)\r\n      {\r\n        tabnames.splice(3, 0, \"Purity\");\r\n\r\n      }\r\n\r\n    }\r\n    setSelectedtab(value);\r\n  };\r\n  useEffect(() => {\r\n  }, []);\r\n  return (\r\n    <Card\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      \r\n      <div className={classes.content}>\r\n      <Grid container  spacing={2}>  \r\n      <Grid   item xs={4} sm={4} >\r\n                  <Autocomplete\r\n                       id=\"free-solo-2-demo\"\r\n                       multiple\r\n                       value={props.isedit ? voucherCtx.category : attrobj.category}\r\n                       className={classes.fixedTag}\r\n                       fullWidth\r\n                       getOptionLabel={option => option.name}\r\n                       options={voucherCtx.voucherMaster.product_categories}\r\n                       onChange={handleoptionChange('category')}\r\n                       renderTags={(value, getTagProps) =>\r\n                       value.map((option, index) => (\r\n                       <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n                       ))\r\n                       }\r\n                       renderInput={params => (\r\n                       <TextField\r\n                       {...params}\r\n                       label=\"Product Category\"\r\n                       margin=\"dense\"\r\n                       variant=\"outlined\"\r\n                       fullWidth\r\n                       />\r\n                       )}\r\n                       />\r\n        </Grid>\r\n       \r\n        <Grid   item xs={4} sm={4} >\r\n           <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n\r\n            value={attrobj.product_types}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.product_types}\r\n           onChange={handleoptionChange('product_types')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.product_types : attrobj.product_types}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Product Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n        </Grid>\r\n        <Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           value={props.isedit ? voucherCtx.materials : attrobj.materials}\r\n           options={voucherCtx.voucherMaster.materials}\r\n           onChange={handleoptionChange('materials')}\r\n           getOptionLabel={option => option.name}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Materials\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>\r\n{isgold ? \r\n  <Grid   item xs={4} sm={4} >\r\n            \r\n  <Autocomplete\r\n id=\"free-solo-2-demo\"\r\n multiple\r\n//  value={attrobj.componenets}\r\n className={classes.fixedTag}\r\n fullWidth\r\n options={voucherCtx.voucherMaster.purities}\r\n onChange={handleoptionChange('purities')}\r\n getOptionLabel={option => option.name}\r\n value={attrobj.purities}\r\n renderTags={(value, getTagProps) =>\r\n value.map((option, index) => (\r\n <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n ))\r\n }\r\n renderInput={params => (\r\n <TextField\r\n {...params}\r\n label=\"Purity\"\r\n margin=\"dense\"\r\n variant=\"outlined\"\r\n fullWidth\r\n//  error = {productCtx.error_message.selected_sizes}\r\n\r\n//  InputProps={{ ...params.InputProps, type: 'search' }}\r\n />\r\n )}\r\n />\r\n</Grid>  : null\r\n}\r\n{isdiamond ? \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.diamondtypes.map(option => option.diamondtype)}\r\n           onChange={handleoptionChange('componenets')}\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.diamondtype} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Diamond Types\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>  : null }\r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.collections}\r\n           onChange={handleoptionChange('collections')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.collections : attrobj.collections}\r\n\r\n                   renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Collections\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid>   \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.occations}\r\n           onChange={handleoptionChange('occations')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.occations : attrobj.occations}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Occassions\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.styles}\r\n           onChange={handleoptionChange('styles')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.styles : attrobj.styles}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Styles\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n<Grid   item xs={4} sm={4} >\r\n            \r\n            <Autocomplete\r\n           id=\"free-solo-2-demo\"\r\n           multiple\r\n          //  value={attrobj.componenets}\r\n           className={classes.fixedTag}\r\n           fullWidth\r\n           options={voucherCtx.voucherMaster.themes}\r\n           onChange={handleoptionChange('themes')}\r\n           getOptionLabel={option => option.name}\r\n           value={props.isedit ? voucherCtx.themes : attrobj.themes}\r\n\r\n           renderTags={(value, getTagProps) =>\r\n           value.map((option, index) => (\r\n           <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n           ))\r\n           }\r\n           renderInput={params => (\r\n           <TextField\r\n           {...params}\r\n           label=\"Themes\"\r\n           margin=\"dense\"\r\n           variant=\"outlined\"\r\n           fullWidth\r\n          //  error = {productCtx.error_message.selected_sizes}\r\n\r\n          //  InputProps={{ ...params.InputProps, type: 'search' }}\r\n           />\r\n           )}\r\n           />\r\n</Grid> \r\n        {props.isedit ? null : <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={() => props.onAdded(attrobj)} color=\"primary\" variant=\"contained\">Check Applicable Products</Button>\r\n           </Grid> }\r\n        </Grid>    \r\n     \r\n      \r\n        </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nVoucherComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  match: PropTypes.object.isRequired\r\n\r\n};\r\nexport default VoucherComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport { VoucherContext } from '../../context';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { NetworkContext } from '../../context/NetworkContext';\r\nimport FullLoader from '../../components/Loader'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport uuid from 'uuid/v1';\r\nimport Page from '../../components/Page'\r\nimport { Header, Results,AboutVoucher ,VoucherComponent} from './components';\r\nimport { Button, Grid,Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  aboutvoucher: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\n  \r\nexport default function Voucherdiscountcontent(props) {\r\n  const classes = useStyles();\r\n  const [orders, setOrders] = useState([]);\r\n  const [attributes, setAttributes] = useState({});\r\n  const [products, setProducts] = useState([]);\r\n  const [skus, setSkus] = useState([]);\r\n  const [isloading, setIsloading] = useState(false);\r\n  const {sendNetworkRequest} = React.useContext(NetworkContext)\r\n  const [open, setOpen] = React.useState(false);\r\n  const [discountid, setDiscountid] = React.useState(\"\");\r\n  const [isloaded, setIsloaded] = useState(false);\r\n\r\n  const [snackMessage,setSnackMessage] = React.useState({\r\n    message:\"Created Successfully\",\r\n    severity:\"Success\"\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const { voucherCtx, setVoucherCtx ,materialMaster} = React.useContext(VoucherContext);\r\n  function attributesadded(attributedata)\r\n  {\r\n    setAttributes(attributedata)\r\n    setIsloading(true)\r\n    //setAttributeobj(value)\r\n    filterapllied(attributedata)\r\n\r\n  }\r\n  async function creatediscount()\r\n  {\r\n    setIsloading(true)\r\n    var discounttype = 2;\r\n    if(voucherCtx.discounttype === 'Free Shipping')\r\n    {\r\n      discounttype = 3\r\n    }\r\n  else if(voucherCtx.discounttype === 'percentage')\r\n    {\r\n      discounttype =2\r\n    }\r\nelse    {\r\n      discounttype = 1\r\n    }\r\n    let bodydata = {}\r\n    bodydata['vouchername'] = voucherCtx.vouchername;\r\n    bodydata['vouchercodes'] = voucherCtx.vouchercodes;\r\n    bodydata['description'] = voucherCtx.voucherdescription;\r\n    bodydata['isloggedin'] = voucherCtx.isloggedin;\r\n    bodydata['discounttype'] = discounttype;\r\n    bodydata['discount'] = voucherCtx.voucherdiscount;\r\n    bodydata['maxdiscount'] = voucherCtx.maxvoucherdiscount ;\r\n    bodydata['minorderqty'] = voucherCtx.minimumqty;\r\n    bodydata['isonce'] = voucherCtx.isonce;\r\n    bodydata['limittouse'] = voucherCtx.limittouse;\r\n    bodydata['minorder'] = voucherCtx.minorder;\r\n    bodydata['attributes'] = attributes;\r\n    bodydata['startdate'] = voucherCtx.startdate;\r\n    bodydata['enddate'] = voucherCtx.enddate;\r\n\r\n    console.log(JSON.stringify(bodydata))\r\n    let response = await sendNetworkRequest('/createvoucher', {}, bodydata, false)\r\n    setIsloading(false)\r\n    setOpen(true)\r\n\r\n    window.location='/voucherdiscountlist'\r\n\r\n  }\r\n\r\n  async function filterapllied(value)\r\n  {\r\n    var  bodydata = {}\r\n  \r\n    let product_ids = []\r\n\r\n    let response = await sendNetworkRequest('/getaliasproduct', {}, value, false)\r\n   setProducts(response.products)\r\n   setSkus(response.skus)\r\n   setIsloading(false)\r\n\r\n    \r\n  }\r\n  async function getdiscountvalue(discount_id)\r\n  {\r\n    let bodydata = {\r\n      id : discount_id\r\n      }\r\n    let response = await sendNetworkRequest('/getvoucher', {}, bodydata, false)\r\n    let voucherobj = response.response\r\n    let discounttype = voucherobj.discounttype\r\n    var discounttypeval = \"percentage\"\r\n    if(discounttype === 1)\r\n    {\r\n      discounttypeval = 'Fixed'\r\n    }else if(discounttype === 3)\r\n    {\r\n      discounttypeval = 'Free Shipping'\r\n\r\n    }\r\n    let categories = voucherobj.product_attributes.category;\r\n    let selectedcategories = []\r\n    if(categories)\r\n    {\r\n    voucherCtx.voucherMaster.product_categories.forEach(catobj => {\r\n      if(categories.indexOf(catobj.alias) > -1)\r\n      {\r\n        selectedcategories.push(catobj)\r\n      }\r\n    })\r\n  }\r\n    let materials = voucherobj.product_attributes.materials;\r\n    let selectedmaterials = []\r\n    if(materials)\r\n    {\r\n    voucherCtx.voucherMaster.materials.forEach(matobj => {\r\n      if(materials.indexOf(matobj.alias) > -1 )\r\n      {\r\n        selectedmaterials.push(matobj)\r\n      }\r\n    })\r\n  }\r\n    \r\n    let producttypes = voucherobj.product_attributes.product_types;\r\n    let selectedproduct_types = []\r\n    if(producttypes)\r\n    {\r\n    voucherCtx.voucherMaster.product_types.forEach(protypeobj => {\r\n      if( producttypes.indexOf(protypeobj.alias) > -1)\r\n      {\r\n        selectedproduct_types.push(protypeobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let collections = voucherobj.product_attributes.collections;\r\n    let selectedcollections = []\r\n    if(collections)\r\n    {\r\n    voucherCtx.voucherMaster.collections.forEach(collectionobj => {\r\n      if( collections.indexOf(collectionobj.alias) > -1)\r\n      {\r\n        selectedcollections.push(collectionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let occassions = voucherobj.product_attributes.occations;\r\n    let selectedoccassions = []\r\n    if(occassions)\r\n    {\r\n    voucherCtx.voucherMaster.occations.forEach(occassionobj => {\r\n      if( occassions.indexOf(occassionobj.alias) > -1)\r\n      {\r\n        selectedoccassions.push(occassionobj)\r\n      }\r\n    })\r\n  }\r\n\r\n  let themes = voucherobj.product_attributes.themes;\r\n  let selectedthemes = []\r\n  if(themes)\r\n  {\r\n  voucherCtx.voucherMaster.themes.forEach(themeobj => {\r\n    if( themes.indexOf(themeobj.alias) > -1)\r\n    {\r\n      selectedthemes.push(themeobj)\r\n    }\r\n  })\r\n}\r\n\r\n  let styles = voucherobj.product_attributes.styles;\r\n    let selectedstyles = []\r\n    if(styles)\r\n    {\r\n    voucherCtx.voucherMaster.styles.forEach(styleobj => {\r\n      if( styles.indexOf(styleobj.alias) > -1)\r\n      {\r\n        selectedstyles.push(styleobj)\r\n      }\r\n    })\r\n  }\r\n    setVoucherCtx({\r\n      ...voucherCtx,\r\n      vouchername: voucherobj.name,\r\n      vouchercode: voucherobj.voucher_codes,\r\n      voucherdescription : voucherobj.description,\r\n      isloggedin: voucherobj.isloginneeded,\r\n      discounttype: discounttypeval,\r\n      minimumqty:0,\r\n      maxvoucherdiscount:voucherobj.max_discount,\r\n      isonce: voucherobj.max_uses_user,\r\n      limittouse:voucherobj.max_uses,\r\n      voucherdiscount:voucherobj.discount_amount,\r\n      minorder: voucherobj.min_cart_value,\r\n      startdate: voucherobj.starts_at,\r\n      enddate: voucherobj.expires_at,\r\n      category: selectedcategories,\r\n      materials: selectedmaterials,\r\n      product_types : selectedproduct_types,\r\n      collections : selectedcollections,\r\n      styles: selectedstyles,\r\n      themes: selectedthemes\r\n    })\r\n    setIsloaded(true)\r\n    }\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchOrders = () => {\r\n\r\n      \r\n    };\r\n    fetchOrders();\r\n    if(props.location.pathname && props.location.pathname.split('/').length > 2 )\r\n    {\r\n       setDiscountid( props.location.pathname.split('/')[2]);\r\n      getdiscountvalue(props.location.pathname.split('/')[2])\r\n  \r\n    }else{\r\n      setIsloaded(true)\r\n    }\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n             <FullLoader title=\"\" isopen={isloading}/>\r\n             <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n          {snackMessage.message}\r\n        </Alert>\r\n      </Snackbar>\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n   {isloaded ? <>\r\n    <AboutVoucher isedit={discountid ? true : false} className={classes.aboutvoucher} categories={['Fixed Amount','percentage','Free Shipping']} />\r\n    {!discountid ? <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> : <VoucherComponent isedit={discountid ? true : false} className={classes.aboutvoucher} onAdded={attributesadded}/> }\r\n    {products.length > 0 ? <> <Grid item xs={12} style={{marginTop:32, textAlign:\"center\"}} >\r\n\r\n    <Typography variant=\"h5\" component=\"h2\">\r\n    {products.length} Products and {skus.length} skus\r\n  </Typography>\r\n          </Grid>\r\n          \r\n          {!discountid ?  <Grid item xs={12} style={{marginTop:16, textAlign:\"center\"}} >\r\n\r\n          <Button onClick={()=> creatediscount()} color=\"primary\" variant=\"contained\">Create Voucher</Button>\r\n          </Grid>:null} </>\r\n          : null }\r\n          </>:null}\r\n    \r\n   \r\n  </Page>\r\n  </MuiPickersUtilsProvider>\r\n  </>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { VoucherContext } from '../../../../context';\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  TextField,\r\n  Popper,\r\n  CardActionArea,\r\n  CardActions,\r\n  Radio,\r\n  Button,\r\n  Grid,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Divider,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  option: {\r\n    border: `1px solid ${theme.palette.divider}`,\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n    padding: theme.spacing(1),\r\n    maxWidth: '100%',\r\n    minWidth: '100%',\r\n    cursor: 'pointer',\r\n    '& + &': {\r\n      marginLeft: theme.spacing(2)\r\n    }\r\n  \r\n  },\r\n  cardcontent:{\r\n    display: 'flex',\r\n    alignItems: 'flex-center',\r\n\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: theme.palette.primary\r\n  },\r\n  optionRadio: {\r\n    margin: -10\r\n  },\r\n  margin: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  optionDetails: {\r\n    marginTop: theme.spacing(1),\r\n    marginLeft: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nconst CategoryComponents = props => {\r\n  const { className, ...rest } = props;\r\n  const { voucherCtx, setVoucherCtx } = React.useContext(VoucherContext);\r\n  const [vouchercode, setVouchercode] = useState(\"\");\r\n\r\n  const classes = useStyles();\r\n\r\n  const [selected, setSelected] = useState(1);\r\n\r\n  const handleChange = (event, option) => {\r\n    setSelected(option);\r\n\r\n  };\r\n  function makeid(length) {\r\n    var result           = '';\r\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    var charactersLength = characters.length;\r\n    for ( var i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result.toUpperCase();\r\n }\r\n \r\n  const handleClick = (event, option) => {\r\n    setSelected(option);\r\n  };\r\n  const generateCoupon = (event) => {\r\n   // alert(JSON.stringify(voucherCtx))\r\n   setVouchercode(\"1234343\")\r\n  };\r\n  \r\n  return (\r\n        <Grid container item xs={12} sm={12} spacing={1}>\r\n        \r\n        {props.materials.map(option => (\r\n          \r\n          <Grid justify=\"center\" item xs={3} sm={3} spacing={1}>\r\n          <CardActionArea>\r\n            \r\n          <div\r\n            className={clsx(classes.option, {\r\n              [classes.selectedOption]: selected === option\r\n            })}\r\n            onClick={event => handleClick(event, option)}\r\n            key={option}\r\n          >\r\n\r\n           <div className={classes.optionDetails}>\r\n           <Typography\r\n                gutterBottom\r\n                variant=\"h5\"\r\n              >\r\n                {option}\r\n              </Typography>  \r\n              </div> \r\n          </div>\r\n          </CardActionArea>\r\n          </Grid>\r\n        ))}  \r\n        </Grid>\r\n       \r\n        \r\n  );\r\n};\r\n\r\nCategoryComponents.propTypes = {\r\n};\r\n\r\nexport default CategoryComponents;\r\n","import React from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { VoucherProvider } from '../../context';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\n\r\nimport { useQuery } from 'react-apollo';\r\nimport { materialMaster } from '../../services/mapper';\r\nimport Component from './VoucherdiscountContent';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    progress: {\r\n      margin: theme.spacing(2)\r\n    },\r\n  }));\r\nexport const Voucherdiscount = withRouter(props => {\r\n    const classes = useStyles();\r\n\r\n    const { data, loading, error } = useQuery(materialMaster.query);\r\n\r\n    if(loading) return <div><CircularProgress className={classes.progress} />\r\n    </div>\r\n    if(error) return <div>error</div>\r\n    return (\r\n        \r\n    <VoucherProvider value={{ data, mapper: materialMaster.mapper, mappertype:  \"voucherMaster\" }} >\r\n            \r\n    <Component {...props} />\r\n    </VoucherProvider>\r\n\r\n)});\r\nexport default Voucherdiscount;","import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { Grid, Typography, Button,TextField } from '@material-ui/core';\r\n// import {  SnackBarContext } from '../../../../context';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Header = props => {\r\n  const { className, ...rest } = props;\r\n  const [openApplication, setOpenApplication] = useState(false);\r\n  // const showSnackbar = React.useContext(SnackBarContext);\r\n  const [searchcontent, setSearchcontent] = useState(\"\");\r\n  const handleinputchange = type => (event,option) =>{\r\n    setSearchcontent(event.target.value)\r\n    }\r\n  const handleApplicationOpen = () => {\r\n    \r\n    setOpenApplication(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setOpenApplication(false);\r\n  };\r\n  const handleApplicationsave = () => {\r\n   // showSnackbar.setSnack({ open: true, type: 'success', msg: 'New Category Added Successfully' })\r\n    setOpenApplication(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n      <Grid\r\n        alignItems=\"flex-end\"\r\n        container\r\n        justify=\"space-between\"\r\n        spacing={3}\r\n      >\r\n        <Grid container \r\n                alignItems=\"flex-start\"       \r\n           item   xs={6} spacing={2}> \r\n        {/* <Grid item > \r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"dense\"\r\n          fullWidth\r\n          id=\"size\"\r\n          label=\"Search\"\r\n          name=\"size\"\r\n          onChange={handleinputchange('searchtext')}\r\n          autoComplete=\"size\"\r\n          value={searchcontent}\r\n          />\r\n          </Grid>\r\n         <Grid item > \r\n\r\n           <Button\r\n            color=\"default\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onSearch(searchcontent)}\r\n          >\r\n            Search\r\n          </Button>\r\n          </Grid> */}\r\n        </Grid>\r\n        <Grid item>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={()=>props.onAdd()}\r\n\r\n          >\r\n            Add New \r\n          </Button>\r\n          </Link>\r\n         \r\n        </Grid>\r\n      </Grid>\r\n      \r\n    </div>\r\n   \r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\n// import moment from 'moment';\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport {VOUCHERDISCOUNTS,DELETEVOUCHERDISCOUNT,VOUCHERSTATUSEDIT} from '../../../../graphql/query'\r\nimport ConformationAlert from '../../../../components/ConformationAlert'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport VisibleIcon from '@material-ui/icons/Visibility';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport PropTypes from 'prop-types';\r\n// import PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  IconButton,\r\n  Typography,\r\n  Table,\r\n  TextField,\r\n  FormControlLabel,\r\n  Switch,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  colors\r\n} from '@material-ui/core';\r\n\r\nimport { Label, ReviewStars } from '../../../../components';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {},\r\n  filterButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  content: {\r\n    padding: 0\r\n  },\r\n  inner: {\r\n    //minWidth: 1150\r\n    overflowX: \"auto\"\r\n  },\r\n  actions: {\r\n    padding: theme.spacing(0, 1),\r\n    justifyContent: 'flex-end'\r\n  }\r\n}));\r\n\r\nconst Results = props => {\r\n  const { className, orders, ...rest } = props;\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  let history = useHistory();\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  const [isconformation,setIsconformation] = React.useState(false)\r\n\r\n  \r\n  const [editcontent,setEditcontent] = React.useState({})\r\n\r\n  const classes = useStyles();\r\n  const [deleteid, setDeleteid] = React.useState('');\r\n\r\n  const [selectedOrders, setSelectedOrders] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nfunction handleEdit(diamondData) {\r\n\r\nhistory.push(`voucherdiscount/${diamondData.id}`)\r\n}\r\nfunction handleDelete(diamondData) {\r\n\r\n  setDeleteid(diamondData.id)\r\n  setIsconformation(true);\r\n}\r\n async function handledelete(datacontent,refetch)\r\n  {\r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function Editvendor(vendordata) {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      alias : vendordata.alias,\r\n      name : vendordata.name,\r\n      isedit: true\r\n    })\r\n    setBtnEdit({ ...btnEdit, id:vendordata.shortCode, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleChangePage = (event, page) => {\r\n    setPage(page);\r\n  };\r\n  const hidedeleteconformation = () => {\r\n    setIsconformation(false);\r\n  };\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(event.target.value);\r\n  };\r\n  function Cancelcreate() {\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })    \r\n    props.onCancel();\r\n\r\n  }\r\n  async function handledelete(datacontent,refetch)\r\n  {\r\n   \r\n    let variables ={\r\n      elementId:deleteid\r\n    }\r\n    await props.client.mutate({mutation:DELETEVOUCHERDISCOUNT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n        // refetchval()\r\n      }\r\n    }).catch(err => {\r\n\r\n    })\r\n    setIsconformation(false);\r\n\r\n  }\r\n  function handleChange(event,voucherid, refetch)\r\n  {\r\n    handlestatusChange(voucherid,event.target.checked, refetch)\r\n  }\r\n\r\n  async function handlestatusChange(id,isactive,refetch){\r\n    let variables ={\r\n      voucherId:id,\r\n      isActive:isactive\r\n    }\r\n    await props.client.mutate({mutation:VOUCHERSTATUSEDIT,variables}).then(res=>{\r\n\r\n      if(res!==null){\r\n        refetch();\r\n      }\r\n    }).catch(console.error)\r\n  \r\n  }\r\n  const paymentStatusColors = {\r\n    canceled: colors.grey[600],\r\n    pending: colors.orange[600],\r\n    completed: colors.green[600],\r\n    rejected: colors.red[600]\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...rest}\r\n      className={clsx(classes.root, className)}\r\n    >\r\n  \r\n      <Card>\r\n        <CardHeader\r\n          title={props.title}\r\n        />\r\n        <Divider />\r\n        <CardContent className={classes.content}>\r\n          {/* <PerfectScrollbar> */}\r\n            <div className={classes.inner}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {props.tablecolumns.map((row, index) => (\r\n                          <TableCell>{row}</TableCell>\r\n                    ))}   \r\n                    \r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                { <Query\r\n                    query={VOUCHERDISCOUNTS}\r\n                    onCompleted={data => setPageCount( data.allVouchers.totalCount)}\r\n                    variables={{ \"Veiw\": rowsPerPage, \"Offset\": offsetValue}}>\r\n                    {\r\n                        ({ data, loading, error, refetch }) => {\r\n                            if (loading) {\r\n                                // return <Loader />\r\n                            }\r\n                            if (error) {\r\n                              return <div>{error}</div>\r\n                                // return false\r\n                            }\r\n                            if (data) { \r\n                                return <> \r\n                                 <ConformationAlert \r\n                                    title={\"Are you sure to delete?\"} \r\n                                    positivebtn={\"Yes\"} \r\n                                    negativebtn={\"No\"} \r\n                                    message={\"\"} \r\n                                    data={deleteid}\r\n                                    refetch={refetch}\r\n                                    onSuccess={handledelete}\r\n                                    onCancel={hidedeleteconformation}\r\n                                    isshow={isconformation} />\r\n                                {data.allVouchers.nodes.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => (\r\n                                 <>\r\n                                  <TableRow key={row.name}>\r\n                                    <TableCell align=\"left\">\r\n                                    {row.name}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.voucherCodes ? row.voucherCodes.length : row.code}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.description}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\">\r\n                                              {row.uses} / {row.maxUses}\r\n                                              </TableCell>\r\n                                              <TableCell align=\"left\"> <FormControlLabel\r\n                                                    label={row.isActive ? \"\" : \"\"}\r\n\r\n                                                    control={\r\n                                                      <Switch checked={row.isActive}  name=\"checkedA\" \r\n                                                      onChange={(event) => handleChange(event,row.id,refetch)} \r\n                                                      />\r\n                                                    }\r\n                                                  /></TableCell>\r\n                                    <TableCell align=\"center\" onClick={(e) => handleEdit(row,refetch)} style = {{width: 20}}>\r\n                                      <Button ><VisibleIcon />\r\n                                      </Button>\r\n                                    </TableCell>\r\n                                    </TableRow>\r\n                                    </>\r\n\r\n                                      ))}\r\n                         </> \r\n                       }\r\n                      else{\r\n                      return <div>{\"Fetch Products\"}</div>\r\n                     \r\n                 } } }\r\n                </Query>  }\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          {/* </PerfectScrollbar> */}\r\n        </CardContent>\r\n        <CardActions className={classes.actions}>\r\n          <TablePagination\r\n            component=\"div\"\r\n            count={pageCount}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            page={page}\r\n            rowsPerPage={rowsPerPage}\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n          />\r\n        </CardActions>\r\n      </Card>\r\n      {/* <TableEditBar selected={selectedOrders} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  orders: PropTypes.array.isRequired\r\n};\r\n\r\nResults.defaultProps = {\r\n  orders: []\r\n};\r\n\r\nexport default withApollo(Results);\r\n","import React,{useState} from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport Vendor from '../../components/Vendor/Vendor'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Mastercontent from '../../components/Mastercontent/Mastercontent';\r\nimport data from \"./data.json\"\r\nimport Page from '../../components/Page/Page'\r\nimport { Header, Results } from './components';\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  //  padding: theme.spacing(3)\r\n  },\r\n  results: {\r\n    marginTop: theme.spacing(3)\r\n  }\r\n}));\r\nlet colimns = [\r\n  \"Name\",\r\n  \"code\",\r\n  \"description\",\r\n  \"uses/Max usage\",\r\n  \"Active\",\r\n  \"actions\"\r\n]\r\nexport const VoucherdiscountListing = withRouter(props => {\r\n  const [isadd, setIsadd] = React.useState(false)\r\n  const [searchtext, setSearchtext] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n\r\n  function applysearch(searchcontent)\r\n  {\r\n    setSearchtext(searchcontent)\r\n  }\r\n  function addcategory()\r\n  {\r\n    setIsadd(true)\r\n  }\r\n  function cancelcreation()\r\n  {\r\n    setIsadd(false)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    <Page\r\n    className={classes.root}\r\n    title=\"Orders Management List\"\r\n  >\r\n\r\n    <Header  onSearch={applysearch} onAdd={addcategory}/>\r\n    <Results\r\n    title={\"Voucher Discount\"}\r\n       className={classes.results}\r\n       tablecolumns={colimns}\r\n      searchtext={searchtext}\r\n      isadd={isadd}\r\n      onCancel={cancelcreation}\r\n    />\r\n   \r\n    </Page>\r\n    </>\r\n  )\r\n});\r\n\r\nexport default VoucherdiscountListing;","import React from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  makeStyles,\r\n  IconButton,\r\n  Typography,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  inputField: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst WarehouseModal = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Dialog\r\n      open={props.open}\r\n      onClose={props.onClose}\r\n      aria-labelledby={\"Warehouse-Modal\"}\r\n    >\r\n      <DialogTitle\r\n        id=\"Warehouse-Modal\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h6\">{`${props.type} Warehouse`}</Typography>\r\n        {props.onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            className={classes.closeButton}\r\n            onClick={props.onClose}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n      <DialogContent className={classes.root}>\r\n        {props.type !== \"Delete\" && (\r\n          <>\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Name\"}\r\n              name=\"name\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.name}\r\n              onChange={props.editItem}\r\n            />\r\n            <TextField\r\n              className={classes.inputField}\r\n              label={\"Shipping In Days\"}\r\n              name=\"shippingInDays\"\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              value={props.item.shippingInDays}\r\n              onChange={props.editItem}\r\n            />\r\n          </>\r\n        )}\r\n        {props.type === \"Delete\" && (\r\n          <Typography>\r\n            Are you sure? This will permanently delete it!\r\n          </Typography>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions className={classes.root}>\r\n        <Button onClick={props.handleSave} color=\"primary\" variant=\"contained\">\r\n          {`${props.type !== \"Delete\" ? \"Save\" : \"Delete\"}`}\r\n        </Button>\r\n        <Button onClick={props.onClose}>Cancel</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default WarehouseModal;\r\n","import {\r\n  Grid,\r\n  IconButton,\r\n  LinearProgress,\r\n  Paper,\r\n  Switch,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { AlertContext } from \"../../context\";\r\nimport {\r\n  CREATE_WAREHOUSE,\r\n  DELETE_WAREHOUSE,\r\n  UPDATE_WAREHOUSE,\r\n} from \"../../graphql/mutation\";\r\nimport { WAREHOUSELIST } from \"../../graphql/query\";\r\nimport WarehouseModal from \"./WarehouseModal\";\r\n\r\nexport const Warehouse = (props) => {\r\n  const { loading, data, error, refetch } = useQuery(WAREHOUSELIST);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [type, setType] = React.useState();\r\n  const [item, setItem] = React.useState({ name: \"\", shippingInDays: \"\" });\r\n\r\n  const editItem = (event) => {\r\n    var { name, value } = event.target;\r\n    setItem({ ...item, [name]: value });\r\n  };\r\n\r\n  const client = useApolloClient();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const onClose = () => {\r\n    setOpen(false);\r\n    setType(null);\r\n    setItem({ name: \"\", shippingInDays: \"\" });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    item[\"shippingInDays\"] = parseInt(item.shippingInDays);\r\n    if (type === \"Edit\") {\r\n      var id = item.id;\r\n      delete item.id;\r\n      delete item.createdAt;\r\n      delete item.updatedAt;\r\n      delete item.__typename;\r\n      item[\"updatedAt\"] = new Date();\r\n      client\r\n        .mutate({\r\n          mutation: UPDATE_WAREHOUSE,\r\n          variables: {\r\n            id,\r\n            item,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Updated!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Add\") {\r\n      client\r\n        .mutate({\r\n          mutation: CREATE_WAREHOUSE,\r\n          variables: {\r\n            item,\r\n            createdAt: new Date(),\r\n            updatedAt: new Date(),\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Added!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          setOpen(false);\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n    if (type === \"Delete\") {\r\n      client\r\n        .mutate({\r\n          mutation: DELETE_WAREHOUSE,\r\n          variables: {\r\n            id: item.id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          if (res) {\r\n            onClose();\r\n            snack.setSnack({\r\n              open: true,\r\n              msg: \"Successfully Deleted!\",\r\n            });\r\n            refetch();\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            severity: \"error\",\r\n            msg: \"Some error occured!\",\r\n          });\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSwitch = (id, isActive) => {\r\n    client\r\n      .mutate({\r\n        mutation: UPDATE_WAREHOUSE,\r\n        variables: {\r\n          id,\r\n          item: { isActive: !isActive, updatedAt: new Date() },\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res) {\r\n          onClose();\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully Updated!\",\r\n          });\r\n          refetch();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        onClose();\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Warehouse</Typography>\r\n        <IconButton\r\n          style={{ color: \"#000\" }}\r\n          onClick={() => {\r\n            setOpen(true);\r\n            setType(\"Add\");\r\n          }}\r\n        >\r\n          <Tooltip title=\"Add Warehouse\">\r\n            <AddCircleIcon />\r\n          </Tooltip>\r\n        </IconButton>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Name</TableCell>\r\n                <TableCell align={\"center\"}>Shipping In Days</TableCell>\r\n                <TableCell align={\"center\"}>Created On</TableCell>\r\n                <TableCell align={\"center\"}>Last Updated On</TableCell>\r\n                <TableCell align={\"center\"}>Status</TableCell>\r\n                <TableCell align={\"center\"}>Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {loading && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allWarehouses?.nodes.length === 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={6} align={\"center\"}>\r\n                    <Typography>No Warehouses found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allWarehouses?.nodes.length > 0 &&\r\n                data?.allWarehouses?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.name}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {item.shippingInDays}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <Switch\r\n                        checked={item.isActive}\r\n                        onChange={() => handleSwitch(item.id, item.isActive)}\r\n                        name=\"active\"\r\n                        color=\"primary\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"none\">\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Edit\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Edit\">\r\n                          <EditIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                      <IconButton\r\n                        color=\"inherit\"\r\n                        onClick={() => {\r\n                          setType(\"Delete\");\r\n                          setOpen(true);\r\n                          setItem(item);\r\n                        }}\r\n                      >\r\n                        <Tooltip title=\"Delete\">\r\n                          <DeleteForeverIcon />\r\n                        </Tooltip>\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <WarehouseModal\r\n        open={open}\r\n        type={type}\r\n        item={item}\r\n        editItem={editItem}\r\n        handleSave={handleSave}\r\n        onClose={onClose}\r\n      />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Slide,\r\n  Typography,\r\n  TextField,\r\n  makeStyles,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Switch,\r\n  Chip,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient } from \"react-apollo\";\r\nimport { CARTBYID } from \"../../graphql/query\";\r\nimport Image from \"material-ui-image\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport SmsIcon from \"@material-ui/icons/Sms\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport moment from \"moment\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  fieldset: {\r\n    borderColor: theme.palette.primary.main,\r\n    borderRadius: \"5px\",\r\n    boxSizing: \"border-box\",\r\n    gridArea: \"1 / 1\",\r\n    width: \"inherit\",\r\n  },\r\n  legend: {\r\n    font: \"15pt/0\",\r\n    //margin: \"auto\" /* to center */,\r\n    padding: \"0 4px\",\r\n  },\r\n  textfield: {\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  inline: {\r\n    margin: theme.spacing(0.5),\r\n    display: \"inline\",\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport default function CartDetails(props) {\r\n  const classes = useStyles();\r\n  let { open, handleClose } = props;\r\n  const [state, setState] = React.useState({});\r\n  const client = useApolloClient();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const sendEmail = (order_id, type) => {\r\n    const url = API_URL + \"/trigger_mail\";\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ order_id: order_id, type: type }),\r\n    };\r\n    fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Mail Sent Successfully!\",\r\n        });\r\n        console.log(fatchvalue);\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    if (props.id) {\r\n      client\r\n        .query({\r\n          query: CARTBYID,\r\n          variables: {\r\n            id: props.id,\r\n          },\r\n          fetchPolicy: \"network-only\",\r\n        })\r\n        .then((res) => {\r\n          setState(res);\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n    return () => {\r\n      setState({});\r\n    };\r\n  }, [props.id]);\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      TransitionComponent={Transition}\r\n      keepMounted\r\n      onClose={handleClose}\r\n      aria-labelledby=\"alert-dialog-slide-title\"\r\n      aria-describedby=\"alert-dialog-slide-description\"\r\n      maxWidth={\"lg\"}\r\n      fullWidth\r\n    >\r\n      <DialogTitle\r\n        id=\"alert-dialog-slide-title\"\r\n        disableTypography\r\n        className={classes.root}\r\n      >\r\n        <Typography variant=\"h4\">Cart Details</Typography>\r\n        {handleClose && (\r\n          <>\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              className={classes.closeButton}\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </>\r\n        )}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        {(state?.loading == undefined || state?.loading) && (\r\n          <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n            <Grid item xs={12} style={{ textAlign: \"center\" }}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {state?.data && (\r\n          <Grid\r\n            container\r\n            justify=\"flex-start\"\r\n            alignItems=\"flex-start\"\r\n            spacing={1}\r\n          >\r\n            <Grid item xs={6}>\r\n              {/* <Typography variant=\"h6\">User Details</Typography> */}\r\n              <fieldset className={classes.fieldset}>\r\n                <legend className={classes.legend}>User Details</legend>\r\n                <TextField\r\n                  label=\"First Name\"\r\n                  defaultValue={state?.data?.cart?.user?.firstName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Last Name\"\r\n                  defaultValue={state?.data?.cart?.user?.lastName}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"User Name\"\r\n                  defaultValue={state?.data?.cart?.user?.username}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Email\"\r\n                  defaultValue={state?.data?.cart?.user?.email}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <TextField\r\n                  label=\"Mobile No.\"\r\n                  defaultValue={state?.data?.cart?.user?.mobile}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  InputProps={{\r\n                    readOnly: true,\r\n                  }}\r\n                  className={classes.textfield}\r\n                />\r\n                <FormGroup row>\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.isemailverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\"Email Verified\"\r\n                  />\r\n                  <FormControlLabel\r\n                    control={\r\n                      <Switch\r\n                        checked={state?.data?.user?.ismobileverified ?? false}\r\n                        disabled\r\n                      />\r\n                    }\r\n                    labelPlacement=\"start\"\r\n                    label=\" Mobile Verified\"\r\n                  />\r\n                </FormGroup>\r\n                {state?.data?.cart?.address?.nodes.length > 0 ? (\r\n                  <div style={{ padding: 5 }}>\r\n                    {state?.data?.cart?.address?.nodes.map((item, index) => {\r\n                      return (\r\n                        <React.Fragment key={item?.id}>\r\n                          <Typography variant=\"h6\">\r\n                            Cart Address #{index + 1} :{\" \"}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {`${item?.salutation ?? ``}${item?.firstname} ${\r\n                              item?.lastname\r\n                            }`.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline1.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.addressline2.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.city.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.state.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.country.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {item?.pincode.toUpperCase()}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Contact No.{\" \"}\r\n                            {`${item?.countryCode} - ${item?.contactNumber}`}\r\n                          </Typography>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                ) : (\r\n                  ``\r\n                )}\r\n              </fieldset>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={6}\r\n              container\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n              spacing={1}\r\n            >\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Status</legend>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Status :{\" \"}\r\n                        <Chip\r\n                          className={classes.chip}\r\n                          label={state?.data?.cart?.status.toUpperCase()}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Gross Price : &#8377;\r\n                        {`${state?.data?.cart?.grossAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Discounted Price : &#8377;\r\n                        {`${state?.data?.cart?.discountedPrice ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <Typography\r\n                        variant=\"subtitle1\"\r\n                        className={classes.inline}\r\n                      >\r\n                        Tax Amount : &#8377;\r\n                        {`${state?.data?.cart?.taxAmount ?? 0}`}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Items</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.cart_items?.nodes.map((item) => {\r\n                      var skuDetails = item?.transSkuListByProductSku;\r\n                      var product =\r\n                        item?.transSkuListByProductSku?.productListByProductId;\r\n                      var image = product?.productImagesByProductId?.nodes[0];\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.productSku}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemAvatar\r\n                              style={{\r\n                                width: \"30%\",\r\n                                height: \"30%\",\r\n                              }}\r\n                            >\r\n                              <Image src={`${image?.imageUrl}`} />\r\n                            </ListItemAvatar>\r\n                            <ListItemText\r\n                              primary={\r\n                                <Typography variant=\"h5\">\r\n                                  {\r\n                                    item?.transSkuListByProductSku\r\n                                      ?.productListByProductId?.productName\r\n                                  }\r\n                                </Typography>\r\n                              }\r\n                              secondary={\r\n                                <Grid container>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      SKU : {item?.productSku}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Quantity : {item?.qty}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                  <Grid item xs={12}>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                    >\r\n                                      Price : &#8377;\r\n                                      {skuDetails?.markupPrice}\r\n                                    </Typography>\r\n                                    <Typography\r\n                                      variant=\"subtitle1\"\r\n                                      className={classes.inline}\r\n                                      style={{}}\r\n                                    >\r\n                                      Tax : &#8377;\r\n                                      {skuDetails?.markupPriceTax}\r\n                                    </Typography>\r\n                                  </Grid>\r\n                                </Grid>\r\n                              }\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <fieldset className={classes.fieldset}>\r\n                  <legend className={classes.legend}>Follow ups</legend>\r\n                  <List className={classes.root} dense={true}>\r\n                    {state?.data?.cart?.follow_ups?.nodes.map((item) => {\r\n                      return (\r\n                        <>\r\n                          <ListItem\r\n                            alignItems=\"flex-start\"\r\n                            key={item.senderResponseId}\r\n                            disableGutters\r\n                            divider\r\n                          >\r\n                            <ListItemIcon>\r\n                              {item.type == \"email\" && <MailIcon />}\r\n                              {item.type == \"sms\" && <SmsIcon />}\r\n                              {item.type == \"phone\" && <CallIcon />}\r\n                            </ListItemIcon>\r\n                            <ListItemText\r\n                              primary={item?.senderResponseId}\r\n                              secondary={moment(item?.createdAt).format(\r\n                                \"DD/MMM/YYYY HH:mm A\"\r\n                              )}\r\n                            />\r\n                          </ListItem>\r\n                        </>\r\n                      );\r\n                    })}\r\n                  </List>\r\n                </fieldset>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => {\r\n            sendEmail(props?.id, \"abandoned_cart\");\r\n          }}\r\n        >\r\n          Send Follow up Email\r\n        </Button>\r\n        <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  TableContainer,\r\n  Typography,\r\n  Paper,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  LinearProgress,\r\n  TableFooter,\r\n  TablePagination,\r\n  Chip,\r\n  makeStyles,\r\n  Tooltip,\r\n  IconButton,\r\n  Button,\r\n  TableSortLabel,\r\n} from \"@material-ui/core\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { ABANDONEDCART } from \"../../graphql/query\";\r\nimport { NetworkStatus } from \"apollo-client\";\r\nimport moment from \"moment\";\r\nimport EmailIcon from \"@material-ui/icons/Email\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport CloudDownloadOutlinedIcon from \"@material-ui/icons/CloudDownloadOutlined\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport CartDetails from \"./cart_details\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport exportFromJSON from \"export-from-json\";\r\n\r\nlet Headers = {\r\n  \"Cart ID\": {},\r\n  \"User Details\": {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__FIRST_NAME_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__USERNAME_DESC\",\r\n    ],\r\n  },\r\n  \"Total Products in cart\": {\r\n    asc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_ASC\"],\r\n    desc: [\"SHOPPING_CART_ITEMS_BY_SHOPPING_CART_ID_COUNT_DESC\"],\r\n  },\r\n  Contact: {\r\n    asc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_ASC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_ASC\",\r\n    ],\r\n    desc: [\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__EMAIL_DESC\",\r\n      \"USER_PROFILE_BY_USERPROFILE_ID__MOBILE_DESC\",\r\n    ],\r\n  },\r\n  Status: {},\r\n  \"Created On\": {\r\n    asc: [\"CREATED_AT_ASC\"],\r\n    desc: [\"CREATED_AT_DESC\"],\r\n  },\r\n  \"Last Updated On\": {\r\n    asc: [\"UPDATED_AT_ASC\"],\r\n    desc: [\"UPDATED_AT_DESC\"],\r\n  },\r\n  Actions: {},\r\n};\r\n\r\nlet filterVariables = {\r\n  default: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n    },\r\n  },\r\n  withoutContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: true,\r\n      },\r\n    },\r\n  },\r\n  withContact: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      userprofileId: {\r\n        isNull: false,\r\n      },\r\n    },\r\n  },\r\n  emptyCart: {\r\n    filter: {\r\n      ordersByCartIdExist: false,\r\n      shoppingCartItemsByShoppingCartId: {\r\n        every: {\r\n          productSku: {\r\n            isNull: true,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(0.5),\r\n    },\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  chip: {\r\n    color: green[700],\r\n  },\r\n}));\r\n\r\nexport const AbandonedCart = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState(\"default\");\r\n  const [sort, setSort] = React.useState({\r\n    by: \"Created On\",\r\n    direction: \"desc\",\r\n  });\r\n  const client = useApolloClient();\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    ABANDONEDCART,\r\n    {\r\n      variables: {\r\n        first: rowsPerPage,\r\n        offset: page * rowsPerPage,\r\n        orderBy: Headers[sort.by][sort.direction] ?? Headers[\"Created On\"].desc,\r\n        condition: { status: \"pending\" },\r\n        filter: filterVariables[filter]?.filter ?? null,\r\n      },\r\n    }\r\n  );\r\n  const handleClickFilter = (value) => {\r\n    setFilter(value);\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: [\"CREATED_AT_ASC\"],\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[value]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const applySort = (column) => {\r\n    var { by, direction } = sort;\r\n    if (by == column) {\r\n      if (direction && direction == \"asc\") {\r\n        direction = \"desc\";\r\n      } else {\r\n        direction = \"asc\";\r\n      }\r\n    } else {\r\n      direction = \"asc\";\r\n    }\r\n    setSort({ by: column, direction });\r\n    refetch({\r\n      first: rowsPerPage,\r\n      offset: page * rowsPerPage,\r\n      orderBy: Headers[by][direction] ?? Headers[\"Created On\"].desc,\r\n      condition: { status: \"pending\" },\r\n      filter: filterVariables[filter]?.filter ?? null,\r\n    });\r\n  };\r\n\r\n  const [open, setOpen] = React.useState();\r\n\r\n  const handleClickOpen = (id) => {\r\n    setOpen(id);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen();\r\n  };\r\n\r\n  const downloadAbandonedCart = () => {\r\n    client\r\n      .query({\r\n        query: ABANDONEDCART,\r\n        variables: {\r\n          orderBy: [\"CREATED_AT_ASC\"],\r\n          condition: { status: \"pending\" },\r\n          filter: { ...filterVariables[\"withContact\"]?.filter },\r\n        },\r\n        fetchPolicy: \"network-only\",\r\n      })\r\n      .then(\r\n        ({\r\n          data: {\r\n            allShoppingCarts: { nodes: cartDetails },\r\n          },\r\n        }) => {\r\n          exportFromJSON({\r\n            data: cartDetails.map((item) => {\r\n              return {\r\n                cart_id: item.id,\r\n                created_at: moment(item.createdAt).format(\"DD/MM/YYYY hh:mm a\"),\r\n                gross_amount: item.grossAmount,\r\n                discount_amount: item.discountAmount,\r\n                first_name: item.user?.firstName,\r\n                last_name: item.user?.lastName,\r\n                email: item.user?.email,\r\n                mobile_no: item.user?.mobile,\r\n                sku_ids: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.skuId)\r\n                  ?.join(\",\"),\r\n                generated_skus: item?.cart_items?.nodes\r\n                  ?.map((i) => i?.transSkuListByProductSku?.generatedSku)\r\n                  ?.join(\",\"),\r\n                product_names: item?.cart_items?.nodes\r\n                  ?.map(\r\n                    (i) =>\r\n                      i?.transSkuListByProductSku?.productListByProductId\r\n                        ?.productName\r\n                  )\r\n                  ?.join(\",\"),\r\n              };\r\n            }),\r\n            fileName: `abandoned_cart_${moment().format(\"YYYY-MM-DD\")}`,\r\n            exportType: \"xls\",\r\n          });\r\n        }\r\n      )\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item>\r\n          <Typography variant=\"h4\">Abandoned Cart</Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withoutContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withoutContact\")}\r\n          >\r\n            Without Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"withContact\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"withContact\")}\r\n          >\r\n            With Contact\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"emptyCart\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"emptyCart\")}\r\n          >\r\n            Empty Cart\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color={filter == \"\" ? \"primary\" : \"default\"}\r\n            className={classes.button}\r\n            onClick={() => handleClickFilter(\"default\")}\r\n          >\r\n            ALL\r\n          </Button>\r\n          <IconButton\r\n            aria-label=\"download abandoned cart\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            disabled={filter != \"withContact\"}\r\n            onClick={() => downloadAbandonedCart()}\r\n          >\r\n            <CloudDownloadOutlinedIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                {Object.keys(Headers).map((item) => {\r\n                  return (\r\n                    <TableCell\r\n                      align=\"center\"\r\n                      key={item}\r\n                      sortDirection={\r\n                        sort?.by === item ? sort?.direction : false\r\n                      }\r\n                    >\r\n                      {Headers[item]?.asc ? (\r\n                        <TableSortLabel\r\n                          active={sort?.by === item}\r\n                          direction={\r\n                            sort?.by === item ? sort?.direction : \"asc\"\r\n                          }\r\n                          onClick={() => applySort(item)}\r\n                        >\r\n                          {item}\r\n                          {sort?.by === item ? (\r\n                            <span className={classes.visuallyHidden}>\r\n                              {sort?.direction === \"desc\"\r\n                                ? \"sorted descending\"\r\n                                : \"sorted ascending\"}\r\n                            </span>\r\n                          ) : null}\r\n                        </TableSortLabel>\r\n                      ) : (\r\n                        item\r\n                      )}\r\n                    </TableCell>\r\n                  );\r\n                })}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || networkStatus === NetworkStatus.refetch) && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                    padding=\"none\"\r\n                  >\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allShoppingCarts?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell\r\n                    colSpan={Object.keys(Headers).length}\r\n                    align={\"center\"}\r\n                  >\r\n                    <Typography>No Cart Data Found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allShoppingCarts?.nodes.length > 0 &&\r\n                data?.allShoppingCarts?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align=\"center\">{item.id}</TableCell>\r\n                    <TableCell align=\"center\">\r\n                      {item?.user?.firstName\r\n                        ? `${item.user.firstName}${\r\n                            item.user?.lastName ? ` ${item.user.lastName}` : ``\r\n                          }`\r\n                        : item?.user?.userName}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" className={classes.root}>\r\n                      <Tooltip\r\n                        arrow\r\n                        title={item?.cart_items?.nodes\r\n                          .map((i) => i.productSku)\r\n                          .join(\",\")}\r\n                      >\r\n                        <Chip\r\n                          label={item?.cart_items?.nodes.length}\r\n                          color={\"primary\"}\r\n                          size=\"small\"\r\n                        />\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                    <TableCell align=\"center\" padding=\"none\">\r\n                      {item?.user?.email && (\r\n                        <Button\r\n                          startIcon={<EmailIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          href={`mailto:${item?.user?.email}`}\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.email}\r\n                        </Button>\r\n                      )}\r\n                      {item?.user?.mobile && (\r\n                        <Button\r\n                          startIcon={<CallIcon />}\r\n                          variant=\"outlined\"\r\n                          disableElevation\r\n                          disableFocusRipple\r\n                          disableRipple\r\n                          component=\"a\"\r\n                          className={classes.button}\r\n                        >\r\n                          {item?.user?.mobile}\r\n                        </Button>\r\n                      )}\r\n                    </TableCell>\r\n                    <TableCell align=\"center\">\r\n                      <Chip\r\n                        className={classes.chip}\r\n                        label={item.status.toUpperCase()}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.createdAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"}>\r\n                      {/* <IconButton size=\"small\">\r\n                        <DeleteForeverIcon />\r\n                      </IconButton> */}\r\n                      <IconButton\r\n                        size=\"small\"\r\n                        onClick={() => handleClickOpen(item.id)}\r\n                      >\r\n                        <VisibilityIcon />\r\n                      </IconButton>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={Object.keys(Headers).length}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allShoppingCarts?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n      <CartDetails open={Boolean(open)} handleClose={handleClose} id={open} />\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  Box,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BackupOutlinedIcon from \"@material-ui/icons/BackupOutlined\";\r\nimport axios from \"axios\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext, AlertProps } from \"../../context\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nfunction CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress variant=\"determinate\" {...props} />\r\n      <Box\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"h5\" component=\"div\" color=\"textSecondary\">\r\n          {`${Math.round(props.value)}%`}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const PriceUpload = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const snack = React.useContext(AlertContext);\r\n  const [progress, setProgress] = React.useState(0);\r\n\r\n  React.useEffect(() => {\r\n    const socket = socketIOClient(API_URL);\r\n    socket.on(\"price_sync\", (data) => {\r\n      if (data.status !== \"completed\") {\r\n        setProgress(data?.completed * 100);\r\n      } else {\r\n        setProgress(100);\r\n        snack.setSnack({\r\n          severity: AlertProps.severity.info,\r\n          msg: `Process Completed ${data.timeElapsed}`,\r\n        });\r\n        socket.close();\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleUpload = (event) => {\r\n    let files = event.target.files;\r\n    if (files) {\r\n      files = files[0];\r\n    } else {\r\n      return;\r\n    }\r\n    var bodyFormData = new FormData();\r\n    bodyFormData.set(\"file\", files);\r\n    axios\r\n      .post(API_URL + \"/file_upload_price_sync\", bodyFormData)\r\n      .then((res) => {\r\n        if (res) {\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Successfully started sync!\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        snack.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Some error occured!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={12}>\r\n          <input\r\n            className={classes.input}\r\n            id=\"icon-button-file\"\r\n            type=\"file\"\r\n            onChange={handleUpload}\r\n          />\r\n          <label htmlFor=\"icon-button-file\">\r\n            <IconButton\r\n              color=\"error\"\r\n              aria-label=\"upload picture\"\r\n              component=\"span\"\r\n            >\r\n              <BackupOutlinedIcon style={{ fontSize: 200 }} />\r\n            </IconButton>\r\n          </label>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Typography variant=\"h5\">UPLOAD EXCEL FILE</Typography>\r\n        </Grid>\r\n        {progress !== 0 && (\r\n          <Grid item xs={12}>\r\n            <CircularProgressWithLabel size={100} value={progress} />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { AlertContext } from \"../../context\";\r\n\r\nlet fetchMasterCountries = gql`\r\n  query ($name: String) {\r\n    allMasterCountries(filter: { name: { includesInsensitive: $name } }) {\r\n      nodes {\r\n        id\r\n        name\r\n        nicename\r\n        numcode\r\n        phonecode\r\n        currency\r\n        currencyAlias\r\n        currencySymbol\r\n        fxConversionRate\r\n        isActive\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: MasterCountryInput!) {\r\n    createMasterCountry(input: { masterCountry: $input }) {\r\n      masterCountry {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $masterCountryPatch: MasterCountryPatch!) {\r\n    updateMasterCountryById(\r\n      input: { id: $id, masterCountryPatch: $masterCountryPatch }\r\n    ) {\r\n      masterCountry {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const MasterCountry = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n  const [search, setSearch] = React.useState(null);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const addMasterCountry = (data) => {\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          masterCountryPatch: {\r\n            ...rest,\r\n            fxConversionRate: Number(rest.fxConversionRate),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const syncFXAPI = () => {\r\n    sendNetworkRequest(\"/fxSynclatest\", null, {})\r\n      .then((res) => {\r\n        snack.setSnack({ open: true, msg: res.message });\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Some Error occured, Please try again!\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchMasterCountries, {\r\n    variables: {\r\n      name: search,\r\n    },\r\n    fetchPolicy: \"network-only\",\r\n  });\r\n\r\n  return (\r\n    <Page title={\"Country List\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          title={\"Country & Fx Rate\"}\r\n          button_title=\"Add New\"\r\n          fxSyncAPI={syncFXAPI}\r\n          onCreate={addMasterCountry}\r\n          onSearch={setSearch}\r\n          columns={tableData.columns}\r\n          values={data?.allMasterCountries?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { Breadcrumbs } from \"../../components\";\r\nimport Mastercontent from \"../../components/Mastercontent/Mastercontent\";\r\nimport Page from \"../../components/Page/Page\";\r\nimport tableData from \"./data.json\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { LinearProgress, Typography } from \"@material-ui/core\";\r\n\r\nlet fetchDailyMetalPrices = gql`\r\n  query {\r\n    allDailyMetalPrices {\r\n      nodes {\r\n        id\r\n        metalName\r\n        displayName\r\n        displayPrice\r\n        isActive\r\n        createdAt\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet addMutationMasterCountry = gql`\r\n  mutation ($input: DailyMetalPriceInput!) {\r\n    createDailyMetalPrice(input: { dailyMetalPrice: $input }) {\r\n      dailyMetalPrice {\r\n        id\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet updateMutationMasterCountry = gql`\r\n  mutation ($id: Int!, $dailyMetalPricePatch: DailyMetalPricePatch!) {\r\n    updateDailyMetalPriceById(\r\n      input: { id: $id, dailyMetalPricePatch: $dailyMetalPricePatch }\r\n    ) {\r\n      dailyMetalPrice {\r\n        updatedAt\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nexport const DailyMetalRate = (props) => {\r\n  const classes = useStyles();\r\n  const client = useApolloClient();\r\n\r\n  const addDailyMetalPrice = (data) => {\r\n    console.log(data);\r\n    let { alias, isedit, __typename, ...rest } = data;\r\n    let currentTimeStamp = new Date();\r\n    let body = {};\r\n    if (!isedit) {\r\n      body = {\r\n        mutation: addMutationMasterCountry,\r\n        variables: {\r\n          input: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            createdAt: currentTimeStamp,\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    } else {\r\n      body = {\r\n        mutation: updateMutationMasterCountry,\r\n        variables: {\r\n          id: rest.id,\r\n          dailyMetalPricePatch: {\r\n            ...rest,\r\n            displayPrice: Number(rest.displayPrice),\r\n            updatedAt: currentTimeStamp,\r\n          },\r\n        },\r\n      };\r\n    }\r\n    client\r\n      .mutate({ ...body })\r\n      .then(() => {\r\n        refetch();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const { data, loading, error, refetch } = useQuery(fetchDailyMetalPrices);\r\n\r\n  return (\r\n    <Page title={\"Daily MetalRate\"}>\r\n      <Breadcrumbs></Breadcrumbs>\r\n      {loading && <LinearProgress className={classes.root} />}\r\n      {!loading && (\r\n        <Mastercontent\r\n          button_title=\"Add New\"\r\n          onCreate={addDailyMetalPrice}\r\n          columns={tableData.columns}\r\n          values={data?.allDailyMetalPrices?.nodes}\r\n        />\r\n      )}\r\n      {error && <Typography>Some error occured!</Typography>}\r\n    </Page>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  LinearProgress,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableFooter,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { useQuery } from \"react-apollo\";\r\n\r\nimport { PRICE_RUN_LOGS } from \"../../graphql/query\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport { NetworkStatus } from \"apollo-client\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nexport const PriceLogs = (props) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const { loading, data, error, refetch, networkStatus } = useQuery(\r\n    PRICE_RUN_LOGS,\r\n    {\r\n      variables: { first: rowsPerPage, offset: page * rowsPerPage },\r\n    }\r\n  );\r\n\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid\r\n        container\r\n        item\r\n        xs={12}\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Typography variant=\"h4\">Price Run History Logs </Typography>\r\n      </Grid>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <TableContainer component={Paper}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align={\"center\"}>Completed Product</TableCell>\r\n                <TableCell align={\"center\"}>Pricing Component</TableCell>\r\n                <TableCell align={\"center\"}>Requested </TableCell>\r\n                <TableCell align={\"center\"}>Succeed</TableCell>\r\n                <TableCell align={\"center\"}>Failed</TableCell>\r\n                <TableCell align={\"center\"}>Updated</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {(loading || NetworkStatus.refetch === networkStatus) && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"} padding=\"none\">\r\n                    <LinearProgress />\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {error && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>\r\n                      Some Error occured please try again!\r\n                    </Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data && data?.allPriceRunningHistories?.nodes.length == 0 && (\r\n                <TableRow>\r\n                  <TableCell colSpan={5} align={\"center\"}>\r\n                    <Typography>No Price Run Logs found!</Typography>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n              {data &&\r\n                data?.allPriceRunningHistories?.nodes.length > 0 &&\r\n                data?.allPriceRunningHistories?.nodes.map((item) => (\r\n                  <TableRow key={item.id}>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {item?.completedProductCount ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {\" \"}\r\n                      {item?.pricingComponent ?? \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.requestedProducts &&\r\n                      item?.logs?.nodes[0]?.requestedProducts.length\r\n                        ? item?.logs?.nodes[0]?.requestedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.successfullyExecutedProducts &&\r\n                      item?.logs?.nodes[0]?.successfullyExecutedProducts.length\r\n                        ? item?.logs?.nodes[0]?.successfullyExecutedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align={\"center\"}\r\n                      padding=\"4px\"\r\n                      style={{\r\n                        whiteSpace: \"normal\",\r\n                        wordWrap: \"break-word\",\r\n                      }}\r\n                    >\r\n                      {item?.logs?.nodes[0]?.failedProducts &&\r\n                      item?.logs?.nodes[0]?.failedProducts.length\r\n                        ? item?.logs?.nodes[0]?.failedProducts?.map(\r\n                            (req) => `${req} `\r\n                          )\r\n                        : \"No Data\"}\r\n                    </TableCell>\r\n                    <TableCell align={\"center\"} padding=\"4px\">\r\n                      {moment(item.updatedAt).format(\"DD/MM/YYYY HH:mm:ss\")}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  colSpan={5}\r\n                  align={\"right\"}\r\n                  rowsPerPageOptions={[10, 25, 100]}\r\n                  count={data?.allPriceRunningHistories?.totalCount}\r\n                  rowsPerPage={rowsPerPage}\r\n                  page={page}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </TableContainer>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { API_URL } from \"../config\";\r\nimport Axios from \"axios\";\r\n\r\nexport const UploadImage = (file) => {\r\n  var bodyFormData = new FormData();\r\n  bodyFormData.set(\"web_img\", file);\r\n\r\n  return Axios.post(API_URL + \"/banner_image_upload\", bodyFormData, {\r\n    headers: {\r\n      accept: \"application/json\",\r\n      \"Accept-Language\": \"en-US,en;q=0.8\",\r\n      \"Content-Type\": `multipart/form-data; boundary=${bodyFormData._boundary}`,\r\n    },\r\n  });\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { UploadImage } from \"../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../context/AlertContext\";\r\nconst useStyles = makeStyles({\r\n  Card: {\r\n    height: \"500px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport const ImageUpload = () => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [imgLink, setImgLink] = useState(\"\");\r\n  const [disableButton, setDisableButton] = useState(false);\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n        setDisableButton(true);\r\n        setImgLink(res?.data?.web ?? \"\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ResetFunc = () => {\r\n    setImgLink(\"\");\r\n    setDisableButton(false);\r\n  };\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          Image upload\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <input\r\n              accept=\"image/*\"\r\n              className={classes.input}\r\n              style={{ display: \"none\" }}\r\n              id=\"button-files\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0])}\r\n            />\r\n            <label htmlFor=\"button-files\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                disabled={disableButton}\r\n                startIcon={<CloudUploadIcon />}\r\n              >\r\n                Upload Image\r\n              </Button>\r\n            </label>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={6}>\r\n        <Card fullwidth className={classes.Card}>\r\n          <CardContent>\r\n            <Typography\r\n              style={{ textAlign: \"center\", marginTop: 2 }}\r\n              component=\"h4\"\r\n              variant=\"h4\"\r\n            >\r\n              {imgLink\r\n                ? \"Click image to copy link :\"\r\n                : \"Upload image to get link here\"}\r\n            </Typography>\r\n\r\n            {imgLink && (\r\n              <div\r\n                onClick={() => {\r\n                  alert.setSnack({\r\n                    open: true,\r\n                    severity: \"success\",\r\n                    msg: \"Link Copied Successfully\",\r\n                  });\r\n                }}\r\n              >\r\n                {/* <Tooltip title=\"Click to Copy Link\"> */}\r\n                <img\r\n                  style={{ cursor: \"copy\", width: \"100%\", height: \"auto\" }}\r\n                  src={imgLink}\r\n                  alt=\"imag\"\r\n                  loading=\"lazy\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                />\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    marginTop: 6,\r\n                    cursor: \"copy\",\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => {\r\n                    navigator.clipboard.writeText(imgLink);\r\n                  }}\r\n                >\r\n                  {imgLink}\r\n                </Typography>\r\n                {/* </Tooltip> */}\r\n              </div>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        style={{\r\n          margin: \"auto\",\r\n          paddingTop: \"8px\",\r\n        }}\r\n      >\r\n        <Button variant=\"outlined\" onClick={ResetFunc}>\r\n          Reset\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n    backgroundColor:\"#fff\"\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  dialogPaper: {\r\n    minWidth: \"1200px\",\r\n  },\r\n  dialogPaperMid: {\r\n    minWidth: \"800px\",\r\n  },\r\n  dialogHeader: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n}));\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction TableHeaderComp(props) {\r\n    const classes = useStyles();\r\n    const {name,handleAddNew = () => null,noAddNew = false} = props\r\n  return (\r\n    <div className={classes.dialogHeader} style={{ padding: \"8px\" }}>\r\n      <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n        {name}\r\n      </Typography>\r\n      {!noAddNew && <Button variant=\"contained\" color=\"primary\" onClick={handleAddNew}>\r\n        Add New\r\n      </Button>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TableHeaderComp;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst header = [\r\n  \"Position\",\r\n  \"Link to Check\",\r\n  \"Mobile Image\",\r\n  \"Desktop Image\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"TEXT\", name: \"position\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst BannerCMS = (props) => {\r\n  console.log(\"hfjdskalSDJBSK\", props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    position: \"\",\r\n    urlParam: null,\r\n    mobile: \"\",\r\n    web: \"\",\r\n    url: \"\",  \r\n  };\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.position && state.url && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"BannerComponent\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Banner Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.banners}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />  \r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"position\"\r\n            label=\"Position\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.position}\r\n            name=\"position\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Banner's Redirect Link (Routes Only)\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.url}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  disabled={disableButton.mobile}\r\n                >\r\n                  Mobile Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.web}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {(state.mobile.length > 0 || state.web.length > 0) && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.mobile.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.mobile}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              {state.web.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.web}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default BannerCMS;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const CDNPAGES = `\r\n    query ($page: String!){\r\n        cdnByPage(page: $page) {\r\n          data\r\n          id\r\n          page\r\n        }\r\n      }\r\n    `;\r\n\r\nexport const ALLCDNPAGES = `query MyQuery {\r\n  allCdns {\r\n    nodes {\r\n      page\r\n      data\r\n      isActive\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CMS_UPDATE = `\r\nmutation updateStore( $stringifyState: JSON!,$page: String!) {\r\n  updateCdnByPage(input: { cdnPatch: { data: $stringifyState }, page: $page }) {\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\nexport const CREATE_CMS = `\r\nmutation createNew($cloneData: JSON!, $page: String!){\r\n  createCdn(input: {cdn: {data: $cloneData, page: $page}}) {\r\n    cdn {\r\n      data\r\n      page\r\n    }\r\n  }\r\n}`;\r\n\r\nexport const UPDATE_STATUS_CMS = `\r\nmutation updateStatus($isActive: Boolean!, $page: String!){\r\n  updateCdnByPage(input: {cdnPatch: {isActive: $isActive}, page: $page}){\r\n    cdn {\r\n      createdAt\r\n      data\r\n      id\r\n      isActive\r\n      nodeId\r\n      page\r\n      updatedAt\r\n    }\r\n  }\r\n}`;\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n  Button,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport React, { useContext } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\n\r\nconst header = [\"S.No\", \"City\", \"Total Stores\", \"View Stores\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"city\" },\r\n  { type: \"TOTAL_STORES\", name: \"stores\" },\r\n  { type: \"VIEW_STORES\", name: \"stores\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst storeHeader = [\"S.No\", \"Title\", \"Address\",\"Store Id\", \"Location\", \"Image\", \"Button\",\"Action\"];\r\nconst viewStoreHeader = [\"S.No\", \"Title\", \"Address\",\"Store Id\", \"Location\", \"Image\", \"Button\"];\r\n\r\nconst tableStoreData = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst tableStoreView = [\r\n  { type: \"INCREMENT\", name: \"S.No\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"para\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"TEXT\", name: \"location\", width: \"200px\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\", width: \"200px\" },\r\n  { type: \"TEXT\", name: \"button\" },\r\n];\r\n\r\nconst initialStoreDetails = {\r\n  title: \"\",\r\n  button: \"\",\r\n  para: \"\",\r\n  location: \"\",\r\n  img: \"\",\r\n  key: \"\",\r\n  href: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nfunction StoreLocatorCMS(props) {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [openStores, setOpenStores] = useState(false);\r\n  const [stores, setStores] = useState([]);\r\n  const [addStoresOpens, setAddStores] = useState(false);\r\n  const [state, setState] = useState({\r\n    city: \"\",\r\n    stores: [],\r\n  });\r\n  const [showStoreFields, setShowStoreFields] = useState(false);\r\n  const [storeState, setStoreState] = useState(initialStoreDetails);\r\n  const [editData, setEditData] = useState(initialEdit);\r\n  const [storesEdit, setStoresEdit] = useState(initialEdit);\r\n\r\n  const handleViewStores = (e, data, index) => {\r\n    setOpenStores(true);\r\n    setStores(data);\r\n  };\r\n\r\n  const handleCloseStores = () => {\r\n    setOpenStores(false);\r\n  };\r\n\r\n  const handleAddNew = () => {\r\n    setAddStores(true);\r\n  };\r\n\r\n  const handleAddNewStoresClose = () => {\r\n    setAddStores(false);\r\n    setState({\r\n      city: \"\",\r\n      stores: [],\r\n    });\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onChangeStoreData = (event) => {\r\n    setStoreState({\r\n      ...storeState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleShowStoreField = () => {\r\n    setShowStoreFields(true);\r\n  };\r\n\r\n  const validationHead = [\"title\", \"button\", \"para\", \"location\", \"img\", \"key\"];\r\n  const storeDetailsValidate = () => {\r\n    let err = [];\r\n    validationHead.map((val) => {\r\n      if (storeState[val].length === 0) err.push(val);\r\n    });\r\n    return err;\r\n  };\r\n\r\n  const addStoreDetails = () => {\r\n    const validate = storeDetailsValidate();\r\n    if (validate.length === 0) {\r\n      if (storesEdit.isEdit) {\r\n        const editStores = state.stores;\r\n        editStores.splice(storesEdit.editIndex, 1, storeState);\r\n        const newState = {\r\n          city: state.city,\r\n          stores: editStores,\r\n        };\r\n        setShowStoreFields(false);\r\n        setState(newState);\r\n      } else {\r\n        setShowStoreFields(false);\r\n        const newStore = [...state.stores, storeState];\r\n        setState({\r\n          ...state,\r\n          stores: newStore,\r\n        });\r\n        setStoreState(initialStoreDetails);\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill the mandatory details\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setStoreState({\r\n            ...storeState,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = () => {\r\n    if (state.city.length > 0 && state.stores.length > 0) {\r\n      if (editData.isEdit) {\r\n        const storeDataEdit = props?.data?.props?.storeData;\r\n        storeDataEdit.splice(editData.editIndex, 1, state);\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeDataEdit,\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      } else {\r\n        const getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...props?.data?.props?.storeData, state],\r\n          },\r\n        };\r\n        handleAddNewStoresClose();\r\n        props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please add both the State and the Store\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = props?.data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"Storelocator\", \"storeData\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleAddNew();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleStoresEdit = (e, rowData, rowIndex) => {\r\n    setShowStoreFields(true);\r\n    setStoresEdit({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setStoreState(rowData);\r\n  };\r\n\r\n  const handleDeleteStore = (e, rowData, rowIndex) => {\r\n    const deleteStores = state.stores;\r\n    deleteStores.splice(rowIndex, 1);\r\n    const newState = {\r\n      city: state.city,\r\n      stores: deleteStores,\r\n    };\r\n    setState(newState);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Store Locator Component\"}\r\n        handleAddNew={handleAddNew}\r\n      />\r\n\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.storeData}\r\n        handleViewStores={handleViewStores}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* View the Stores */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={openStores}\r\n        onClose={handleCloseStores}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          <div className={classes.dialogHeader}>\r\n            <div>Stores in {stores?.city}</div>\r\n            <div style={{ cursor: \"pointer\" }} onClick={handleCloseStores}>\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TableComp\r\n            header={viewStoreHeader}\r\n            tableData={tableStoreView}\r\n            data={stores?.stores}\r\n          />\r\n        </DialogContent>\r\n      </Dialog>\r\n\r\n      {/* Add the Data */}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaper }}\r\n        fullWidth\r\n        open={addStoresOpens}\r\n        onClose={handleAddNewStoresClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\" style={{ paddingBottom: \"0px\" }}>\r\n          <div className={classes.dialogHeader}>\r\n            <div>Add new data</div>\r\n            <div\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              <CloseIcon />\r\n            </div>\r\n          </div>\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <div\r\n            className={classes.dialogHeader}\r\n            style={{\r\n              borderBottom: \"1px solid #e0e0e0\",\r\n              marginBottom: \"6px\",\r\n              paddingBottom: \"6px\",\r\n            }}\r\n          >\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"url\"\r\n              label=\"Add New State\"\r\n              variant=\"outlined\"\r\n              onChange={onChangeData}\r\n              value={state.city.toUpperCase()}\r\n              name=\"city\"\r\n              required\r\n              style={{ width: \"80%\" }}\r\n            />\r\n            {!showStoreFields && (\r\n              <Button onClick={handleShowStoreField}>Add New Store</Button>\r\n            )}\r\n          </div>\r\n\r\n          {showStoreFields && (\r\n            <div>\r\n              <Typography variant=\"h6\">Add Store Details</Typography>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"title\"\r\n                    label=\"City\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.title}\r\n                    name=\"title\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={4}>\r\n                  <TextField\r\n                    margin=\"dense\"\r\n                    id=\"button\"\r\n                    label=\"Button\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onChange={onChangeStoreData}\r\n                    value={storeState.button}\r\n                    name=\"button\"\r\n                    required\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"key\"\r\n                label=\"Store Id\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.key}\r\n                name=\"key\"\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"location\"\r\n                label=\"Location\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.location}\r\n                name=\"location\"\r\n                required\r\n              />\r\n              <TextField\r\n                margin=\"dense\"\r\n                id=\"para\"\r\n                label=\"Address\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeStoreData}\r\n                value={storeState.para}\r\n                name=\"para\"\r\n                required\r\n              />\r\n              <Grid container style={{ paddingTop: \"8px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Add Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {storeState.img.length > 0 && (\r\n                  <Grid item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={storeState.img}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n              <div\r\n                className={classes.dialogHeader}\r\n                style={{ justifyContent: \"center\" }}\r\n                onClick={addStoreDetails}\r\n              >\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                  Add Store Details\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <Typography variant=\"h6\" style={{ margin: \"10px 0px\" }}>\r\n            Stores Added\r\n          </Typography>\r\n          <TableComp\r\n            header={storeHeader}\r\n            tableData={tableStoreData}\r\n            data={state?.stores}\r\n            handleEdit={handleStoresEdit}\r\n            handleDelete={handleDeleteStore}\r\n          />\r\n\r\n          <DialogActions style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Submit\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleAddNewStoresClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default StoreLocatorCMS;\r\n","import React, { Component } from \"react\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const parentState = this.props.parentState;\r\n    console.log(\"parentState-1\", parentState);\r\n    const contentBlock = htmlToDraft(parentState);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(\r\n        contentBlock.contentBlocks\r\n      );\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.setState({\r\n        editorState,\r\n      });\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    // if (editorState) {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n    const data = draftToHtml(convertToRaw(editorState.getCurrentContent()));\r\n    console.log(\"data-00\", data);\r\n    this.props.handleChangeState(data);\r\n    // }\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          toolbarClassName=\"toolbar-class\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n          toolbar={{\r\n            fontFamily: {\r\n              options: ['Arial', 'Georgia', 'Impact', 'Tahoma', 'Times New Roman', 'Verdana','Noto Serif,serif', ],\r\n              className: undefined,\r\n              component: undefined,\r\n              dropdownClassName: undefined,\r\n            },\r\n          }}\r\n        />\r\n        {/* <textarea\r\n          disabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        /> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\"; \r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { EditorState, convertToRaw } from 'draft-js';\r\nimport draftToHtml from \"draftjs-to-html\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"HTMLTEXT\", name: \"richEditor\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleDescriptionCMS = (props) => {\r\n  console.log(\"7871\",props);\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    richEditor: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  console.log(\"richEditorState\",state);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const validation = () => {\r\n    if (state.description.length < 1 || state.title.length < 1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (validation()) {\r\n      let getData = [];\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: state,\r\n      };\r\n      setTitleDesc([getData.props]);\r\n      setOpen(false);\r\n      props.handleSubmit(getData, \"TitleAndData\", \"\");\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,richEditor:data\r\n    })\r\n  }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <div style={{border:\"1px solid #c0c0c0\",padding:\"8px\", borderRadius:\"8px\"}}>\r\n            <EditorConvertToHTML handleChangeState={handleChangeState} parentState={state.richEditor} />\r\n          </div>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleDescriptionCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"image\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst QueryFormCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    image: \"\",\r\n  });\r\n  const [image, setImage] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    setImage([props?.data?.props]);\r\n    setState(props?.data?.props);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let getData = [];\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setImage([getData.props])\r\n    setOpen(false);\r\n    props.handleSubmit(getData, \"QueryForm\", \"\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Query Form Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={image}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Edit Query Form</DialogTitle>\r\n        <DialogContent>\r\n          <Grid>\r\n            <input\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              id=\"button-file\"\r\n              multiple\r\n              type=\"file\"\r\n              onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n            />\r\n            <label htmlFor=\"button-file\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                component=\"span\"\r\n                startIcon={<CloudUploadIcon />}\r\n                // disabled={disableButton.mobile}\r\n              >\r\n                Store Image\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default QueryFormCMS;\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Image\",\r\n  \"SkuUrl\",\r\n  \"Price\",\r\n  \"Offer Price\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"skuUrl\", width: \"250px\" },\r\n  { type: \"TEXT\", name: \"price\" },\r\n  { type: \"TEXT\", name: \"offerPrice\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  price: null,\r\n  offerPrice: null,\r\n  title: null,\r\n  save: 0,\r\n  image: {\r\n    placeImage: {\r\n      img: null,\r\n    },\r\n    hoverImage: {\r\n      img: null,\r\n    },\r\n  },\r\n  productId: null,\r\n  diamondType: \"\",\r\n  purity: \"\",\r\n  productType: \"\",\r\n  skuId: null,\r\n  skuID: null,\r\n  skuUrl: null,\r\n  description: null,\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst SlidingImageCardCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [constructedData, setConstructedData] = React.useState([]);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  React.useEffect(() => {\r\n    const dataConstruct = props?.data?.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    if (event.target.name === \"skuId\") {\r\n      setState({\r\n        ...state,\r\n        skuID: event.target.value,\r\n        skuId: event.target.value,\r\n      });\r\n    } else {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const validate = () => {\r\n    if (\r\n      state.title &&\r\n      state.description &&\r\n      state.skuUrl &&\r\n      state.image.hoverImage.img &&\r\n      state.image.placeImage.img &&\r\n      state.price &&\r\n      state.offerPrice &&\r\n      state.productId &&\r\n      state.skuID &&\r\n      state.skuId\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const listingProducts = props?.data?.props?.listingProducts;\r\n        listingProducts.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: listingProducts,\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            listingProducts: [...props?.data?.props?.listingProducts, state],\r\n          },\r\n        };\r\n        const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n          return {\r\n            ...val,\r\n            img: val?.image?.placeImage?.img,\r\n          };\r\n        });\r\n        setConstructedData(dataConstruct);\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            image: {\r\n              placeImage: {\r\n                img: res?.data?.web,\r\n              },\r\n              hoverImage: {\r\n                img: res?.data?.web,\r\n              },\r\n            },\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const listingProducts = props?.data?.props?.listingProducts;\r\n    listingProducts.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        listingProducts: listingProducts,\r\n      },\r\n    };\r\n    const dataConstruct = getData.props?.listingProducts?.map((val, i) => {\r\n      return {\r\n        ...val,\r\n        img: val?.image?.placeImage?.img,\r\n      };\r\n    });\r\n    setConstructedData(dataConstruct);\r\n    props.handleSubmit(getData, \"SlideImgMediaCard\", \"listingProducts\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Sliding Image Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={constructedData}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Edit Sliding Image Card Component\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline\r\n            rows={3}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"skuUrl\"\r\n            label=\"SKU Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.skuUrl}\r\n            name=\"skuUrl\"\r\n          />\r\n          <Grid\r\n            container\r\n            justifyContent=\"flex-start\"\r\n            style={{ padding: \"16px 0px\" }}\r\n            spacing={3}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                style={{ display: \"none\" }}\r\n                id=\"button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n              />\r\n              <label htmlFor=\"button-file\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  startIcon={<CloudUploadIcon />}\r\n                  // disabled={disableButton.mobile}\r\n                >\r\n                  Image Upload\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n            {state.image.placeImage.img && <Grid item>\r\n              <img\r\n                alt=\"nacimages\"\r\n                src={state.image.placeImage.img}\r\n                style={{ width: \"100px\", height: \"auto\" }}\r\n              />\r\n            </Grid>}\r\n          </Grid>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"skuId\"\r\n                label=\"SKU ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.skuId}\r\n                name=\"skuId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"productId\"\r\n                label=\"Product ID\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.productId}\r\n                name=\"productId\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"price\"\r\n                label=\"Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.price}\r\n                name=\"price\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} md={3}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"offerPrice\"\r\n                label=\"Offer Price\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                onChange={onChangeData}\r\n                value={state.offerPrice}\r\n                name=\"offerPrice\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default SlidingImageCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { useContext } from \"react\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Content\",\r\n  \"Mobile Image\",\r\n  \"Web Image\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n  { type: \"WEB_IMAGE\", name: \"web\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerBannerCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    content: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.content && state.mobile && state.web) {\r\n      if (editData.isEdit) {\r\n        const editBanner = props?.data?.props?.banners;\r\n        editBanner.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: editBanner,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            banners: [...props?.data?.props?.banners, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const banners = props?.data?.props?.banners;\r\n    banners.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        banners: banners,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomBanner\", \"banners\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Banner Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.banners}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.title}\r\n              onChange={onChangeData}\r\n              name=\"title\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n\r\n            {/* Image Upload */}\r\n\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n            {(state.mobile.length > 0 || state.web.length > 0) && (\r\n              <Grid\r\n                container\r\n                justifyContent=\"flex-start\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                {state.mobile.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.mobile}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n                {state.web.length > 0 && (\r\n                  <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.web}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerBannerCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Job Role\",\r\n  \"Location\",\r\n  \"Description\",\r\n  \"Button Text\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"job_Role\" },\r\n  { type: \"TEXT\", name: \"location\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomCareerCardCMS = (props) => {\r\n  console.log(\"textt\", props);\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const initialState = {\r\n    job_Role: \"\",\r\n    location: \"\",\r\n    description: \"\",\r\n    button_Text: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.job_Role &&\r\n      state.location &&\r\n      state.description &&\r\n      state.button_Text\r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState)\r\n        props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const cardContent = props?.data?.props?.cardContent;\r\n    cardContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: cardContent,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CareerCard\", \"cardContent\");\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Career Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"job_Role\"\r\n              label=\"Job_Role\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.job_Role}\r\n              onChange={onChangeData}\r\n              name=\"job_Role\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"location\"\r\n              label=\"Location\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.location}\r\n              onChange={onChangeData}\r\n              name=\"location\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"description\"\r\n              label=\"Description\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.description}\r\n              onChange={onChangeData}\r\n              name=\"description\"\r\n              required\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCareerCardCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Description\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst CustomCollectionHeaderCMS = (props) => {\r\n  console.log(\"prop123\", props);\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    title: \"\",\r\n    description: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.title && state.description) {\r\n      if (editData.isEdit) {\r\n        const editHeader = props?.data?.props?.header;\r\n        editHeader.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: editHeader,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            header: [...props?.data?.props?.header, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const header = props?.data?.props?.header;\r\n    header.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        header: header,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionHeader\", \"header\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Header Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.header}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n      </Paper>\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Header Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionHeaderCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Content\", \"Buttons\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"content\" },\r\n  { type: \"BUTTON_ARRAY\", name: \"buttons\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst innerHeader = [\"S.No\", \"Buttons\", \"Link\", \"Action\"];\r\nconst innerTableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"name\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialButtonState = {\r\n  name: \"\",\r\n  url: \"\",\r\n};\r\n\r\nconst initialState = {\r\n  img: \"\",\r\n  content: \"\",\r\n  buttons: [],\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst CustomCollectionCardsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n\r\n  const [state, setState] = React.useState(initialState);\r\n    console.log(\"stateHandle\",state);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n  const [buttonState, setButtonState] = React.useState(initialButtonState);\r\n  const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.content) {\r\n      if (editData.isEdit) {\r\n        const editCard = props?.data?.props?.cardContent;\r\n        editCard.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editCard,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CollectionCards\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleInnerDelete = (e, rowData, rowIndex) => {\r\n    const deleteButton = state.buttons;\r\n    deleteButton.splice(rowIndex,1);\r\n    setState({\r\n      ...state, buttons: deleteButton\r\n    })\r\n    setButtonState(initialButtonState)\r\n  };\r\n\r\n  const handleInnerEdit = (e, rowData, rowIndex) => {\r\n    setButtonState(rowData);\r\n    setButtonEditState({\r\n      ...buttonEditState,\r\n      isEdit: true,\r\n      editIndex: rowIndex,\r\n    });\r\n  };\r\n\r\n  const onChangeButtonData = (event) => {\r\n    setButtonState({\r\n      ...buttonState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleAddButtonUrl = () => {\r\n    if (buttonEditState.isEdit) {\r\n      const editButton = state.buttons;\r\n      editButton.splice(buttonEditState.editIndex,1,buttonState);\r\n      setState({\r\n        ...state, buttons: editButton\r\n      })\r\n    } else {\r\n      if (buttonState.name.length > 0) {\r\n        setState({\r\n          ...state,\r\n          buttons: [...state.buttons, buttonState],\r\n        });\r\n        setButtonState(initialButtonState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please add the button\",\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Collection Cards Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={props?.data?.props?.cardContent}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n\r\n        {/* Dialog */}\r\n\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"content\"\r\n              label=\"Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.content}\r\n              onChange={onChangeData}\r\n              name=\"content\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.img}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n\r\n            <Grid style={{ borderTop: \"1px solid #e0e0e0\" }}>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"button\"\r\n                label=\"Button\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.name}\r\n                onChange={onChangeButtonData}\r\n                name=\"name\"\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Link\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={buttonState.url}\r\n                onChange={onChangeButtonData}\r\n                name=\"url\"\r\n              />\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <Button\r\n                  style={{ margin: \"8px 0px 12px\" }}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleAddButtonUrl}\r\n                >\r\n                  Add Button and Url\r\n                </Button>\r\n              </div>\r\n            </Grid>\r\n            <TableComp\r\n              header={innerHeader}\r\n              tableData={innerTableData}\r\n              data={state.buttons}\r\n              handleDelete={handleInnerDelete}\r\n              handleEdit={handleInnerEdit}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomCollectionCardsCMS;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\"S.No\", \"Image\", \"Description\", \"Button Text\", \"Url\", \"Action\"];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomNewsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomNews\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"News Room Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New News Room Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid\r\n            container\r\n            justifyContent=\"space-around\"\r\n            style={{ padding: \"16px 0px\" }}\r\n          >\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Add Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n          </Grid>\r\n          {state.img.length > 0 && (\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              {state.img.length > 0 && (\r\n                <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomNewsCMS;\r\n","import React from \"react\";\r\nimport { DialogContent, DialogTitle, Paper, TextField, Button, Dialog, DialogActions } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Description\",\r\n    \"Action\"\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"Title\" },\r\n    { type: \"TEXT\", name: \"Description\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n];\r\nconst initialState = {\r\n    Title: \"\",\r\n    Description: \"\"\r\n}\r\nconst SpclTitleDescr = (props) => {\r\n    const { data } = props\r\n    console.log(data?.props, \"propssssss\")\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [spclTitleDescr, setSpclTitleDescr] = React.useState([])\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    React.useEffect(() => {\r\n        setSpclTitleDescr([data?.props?.storeData]);\r\n        setState(data?.props?.storeData);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.Description.length < 1 || state.Title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            const storeData = data?.props?.storeData;\r\n            getData = {\r\n\r\n                component: data?.component,\r\n                props: {\r\n                    storeData: state,\r\n                },\r\n            };\r\n            setSpclTitleDescr([getData.props?.storeData]);\r\n\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"SpclTitleDescr\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    console.log(\"spclTitleDescr\", spclTitleDescr);\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Special Title and Description Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={spclTitleDescr}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Special Title and Description Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"Title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state?.Title}\r\n                            name=\"Title\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"Description\"\r\n                            label=\"Description\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state?.Description}\r\n                            name=\"Description\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default SpclTitleDescr","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Image\",\r\n    \"Content\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"content\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    title: \"\",\r\n    image: null,\r\n    content: \"\",\r\n}\r\n\r\nconst BookYourAppointmentCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        image: res?.data?.web\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setOpen(true);\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.title &&\r\n            state.image &&\r\n            state.content\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const values = data?.props;\r\n                values.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: values,\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props:\r\n                        [...data?.props, state],\r\n\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"AboutBookAppointment\", \"props\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Book Your Appointment Component\"}\r\n                    noAddNew\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Edit Book Your Appointment Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"title\"\r\n                            label=\"Title\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.title}\r\n                            name=\"title\"\r\n                        />\r\n                        <Grid\r\n                            container\r\n                            justifyContent=\"flex-start\"\r\n                            style={{ padding: \"16px 0px\" }}\r\n                            spacing={3}\r\n                        >\r\n                            <Grid item>\r\n                                <input\r\n                                    accept=\"image/*\"\r\n                                    style={{ display: \"none\" }}\r\n                                    id=\"button-file\"\r\n                                    multiple\r\n                                    type=\"file\"\r\n                                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                />\r\n                                <label htmlFor=\"button-file\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        component=\"span\"\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                    // disabled={disableButton.mobile}\r\n                                    >\r\n                                        Image Upload\r\n                                    </Button>\r\n                                </label>\r\n                            </Grid>\r\n                            {state.image && <Grid item>\r\n                                <img\r\n                                    alt=\"nacimages\"\r\n                                    src={state.image}\r\n                                    style={{ width: \"100px\", height: \"auto\" }}\r\n                                />\r\n                            </Grid>}\r\n                        </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"content\"\r\n                            label=\"Details\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.content}\r\n                            name=\"content\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default BookYourAppointmentCMS","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Name\",\r\n    \"Image\",\r\n    \"Address\",\r\n    \"Feed\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"name\" },\r\n    { type: \"WEB_IMAGE\", name: \"img\" },\r\n    { type: \"TEXT\", name: \"address\" },\r\n    { type: \"TEXT\", name: \"feed\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n\r\n\r\n];\r\nconst initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n};\r\nconst initialState = {\r\n    name: \"\",\r\n    img: null,\r\n    address: \"\",\r\n    feed: \"\",\r\n}\r\nconst TestimonialCMS = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const alert = React.useContext(AlertContext);\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState)\r\n\r\n\r\n\r\n    const handleChange = (file, name) => {\r\n        UploadImage(file)\r\n            .then((res) => {\r\n                if (res?.data?.web) {\r\n                    setState({\r\n                        ...state,\r\n                        img: res?.data?.web,\r\n                    });\r\n                    alert.setSnack({\r\n                        open: true,\r\n                        severity: \"success\",\r\n                        msg: \"Image Uploaded Successfully\",\r\n                    });\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        handleClickOpen();\r\n        setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n        setState(rowData);\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setState(initialState)\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n    }\r\n\r\n\r\n    const validate = () => {\r\n        if (\r\n            state.name &&\r\n            state.img &&\r\n            state.address &&\r\n            state.feed\r\n        ) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validate()) {\r\n            if (editData.isEdit) {\r\n                const storeData = data?.props?.storeData;\r\n                storeData.splice(editData.editIndex, 1, state);\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: storeData,\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            } else {\r\n                let getData = [];\r\n                getData = {\r\n                    component: props?.data?.component,\r\n                    props: {\r\n                        storeData: [...props?.data?.props?.storeData, state],\r\n                    },\r\n                };\r\n                setOpen(false);\r\n                props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n            }\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n        let getData = [];\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(rowIndex, 1);\r\n        getData = {\r\n            component: data?.component,\r\n            props: {\r\n                storeData: storeData,\r\n            },\r\n        };\r\n\r\n        props.handleSubmit(getData, \"Testimonial\", \"storeData\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Paper className={classes.root}>\r\n                <TableHeaderComp\r\n                    name={\"Testimonial Component\"}\r\n                    handleAddNew={handleClickOpen}\r\n                />\r\n                <TableComp\r\n                    header={header}\r\n                    tableData={tableData}\r\n                    data={data?.props?.storeData}\r\n                    handleDelete={handleDelete}\r\n                    handleEdit={handleEdit}\r\n                />\r\n                <Dialog\r\n                    classes={{ paper: classes.dialogPaperMid }}\r\n                    open={open}\r\n                    onClose={handleClose}\r\n                >\r\n                    <DialogTitle id=\"form-dialog-title\">\r\n                        Testimonial Component\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField\r\n                            autoFocus\r\n                            margin=\"dense\"\r\n                            id=\"name\"\r\n                            label=\"Name\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            onChange={onChangeData}\r\n                            value={state.name}\r\n                            name=\"name\"\r\n                        />\r\n                            <Grid\r\n                                container\r\n                                justifyContent=\"flex-start\"\r\n                                style={{ padding: \"16px 0px\" }}\r\n                                spacing={3}\r\n                            >\r\n                                <Grid item>\r\n                                    <input\r\n                                        accept=\"image/*\"\r\n                                        style={{ display: \"none\" }}\r\n                                        id=\"button-file\"\r\n                                        multiple\r\n                                        type=\"file\"\r\n                                        onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                                    />\r\n                                    <label htmlFor=\"button-file\">\r\n                                        <Button\r\n                                            variant=\"outlined\"\r\n                                            component=\"span\"\r\n                                            startIcon={<CloudUploadIcon />}\r\n                                        >\r\n                                            Image Upload\r\n                                        </Button>\r\n                                    </label>\r\n                                </Grid>\r\n                                {state?.img && <Grid item>\r\n                                    <img\r\n                                        alt=\"nacimages\"\r\n                                        src={state?.img}\r\n                                        style={{ width: \"100px\", height: \"auto\" }}\r\n                                    />\r\n                                </Grid>}\r\n                            </Grid>\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"feed\"\r\n                            label=\"Feed\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.feed}\r\n                            name=\"feed\"\r\n                        />\r\n                        <TextField\r\n                            margin=\"dense\"\r\n                            id=\"description\"\r\n                            label=\"Address\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            multiline\r\n                            rows={3}\r\n                            onChange={onChangeData}\r\n                            value={state.address}\r\n                            name=\"address\"\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={onsubmitvalue}>Add</Button>\r\n                        <Button onClick={handleClose}>Cancel</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default TestimonialCMS","import React, { useContext } from \"react\";\r\nimport {\r\n  Paper,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  DialogActions,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Image\", \"Name\", \"Details\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"sub\" },\r\n  { type: \"TEXT\", name: \"sub2\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst initialState = {\r\n  title: \"\",\r\n  img: null,\r\n  type: \"\",\r\n  sub: \"\",\r\n  sub2: \"\",\r\n};\r\n\r\nconst AboutCollection = (props) => {\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            img: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    setState(state);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit);\r\n  };\r\n\r\n  const validate = () => {\r\n    if (state.title && state.img && state.type && state.sub && state.sub2) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (validate()) {\r\n      if (editData.isEdit) {\r\n        const storeData = data?.props?.storeData;\r\n        storeData.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: storeData,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            storeData: [...data?.props?.storeData, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit);\r\n        props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields in the form \",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const storeData = data?.props?.storeData;\r\n    storeData.splice(rowIndex, 1);\r\n    getData = {\r\n      component: data?.component,\r\n      props: {\r\n        storeData: storeData,\r\n      },\r\n    };\r\n\r\n    props.handleSubmit(getData, \"TestimonialTwo\", \"storeData\");\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"About Collection Component\"}\r\n          handleAddNew={handleClickOpen}\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={data?.props?.storeData}\r\n          handleDelete={handleDelete}\r\n          handleEdit={handleEdit}\r\n        />\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            Edit About Collection Component\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"title\"\r\n              label=\"Title\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.title}\r\n              name=\"title\"\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.type}\r\n              name=\"type\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"flex-start\"\r\n              style={{ padding: \"16px 0px\" }}\r\n              spacing={3}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    // disabled={disableButton.mobile}\r\n                  >\r\n                    Image Upload\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.img && (\r\n                <Grid item>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.img}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"sub\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={state.sub}\r\n              name=\"sub\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"sub2\"\r\n              label=\"Details\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              multiline\r\n              rows={3}\r\n              onChange={onChangeData}\r\n              value={state.sub2}\r\n              name=\"sub2\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Add</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default AboutCollection;\r\n","import React from \"react\";\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, Grid, Paper, TextField } from \"@material-ui/core\"\r\nimport { TableComp } from \"../../../components\"\r\nimport TableHeaderComp from \"./TableHeadComp\"\r\nimport { useStyles } from \"./styles\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\n\r\n\r\nconst header = [\r\n    \"S.No\",\r\n    \"Title\",\r\n    \"Action\"\r\n\r\n];\r\nconst tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n\r\n\r\n];\r\n\r\nconst TitleComp = (props) => {\r\n    const { data } = props\r\n    const classes = useStyles();\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [title, setTitle] = React.useState([])\r\n    const [state, setState] = React.useState({\r\n        title: \"\"\r\n    })\r\n\r\n\r\n    React.useEffect(() => {\r\n        setTitle([data?.props]);\r\n        setState(data?.props);\r\n    }, []);\r\n\r\n\r\n    const onChangeData = (event) => {\r\n        setState({\r\n            ...state,\r\n            [event.target.name]: event.target.value,\r\n        });\r\n\r\n    };\r\n\r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n        setState(state)\r\n        handleClickOpen();\r\n\r\n    };\r\n\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n\r\n    }\r\n\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    const validation = () => {\r\n        if (state.title.length < 1) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    };\r\n\r\n\r\n    const onsubmitvalue = async () => {\r\n        if (validation()) {\r\n            let getData = [];\r\n            getData = {\r\n                component: props?.data?.component,\r\n                props: state,\r\n            };\r\n            setTitle([getData.props]);\r\n            setOpen(false);\r\n            props.handleSubmit(getData, \"titleComp\", \"\");\r\n        } else {\r\n            alert.setSnack({\r\n                open: true,\r\n                severity: \"error\",\r\n                msg: \"Please fill all the fields in the form \",\r\n            });\r\n        }\r\n    };\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <TableHeaderComp\r\n                name={\" Title Component\"}\r\n                noAddNew\r\n            />\r\n            <TableComp\r\n                header={header}\r\n                tableData={tableData}\r\n                data={title}\r\n                handleEdit={handleEdit}\r\n            />\r\n            <Dialog\r\n                classes={{ paper: classes.dialogPaperMid }}\r\n                open={open}\r\n                onClose={handleClose}\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">\r\n                    Edit Title Component\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"title\"\r\n                        label=\"title\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={onChangeData}\r\n                        value={state?.title}\r\n                        name=\"title\"\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={onsubmitvalue}>Add</Button>\r\n                    <Button onClick={handleClose}>Cancel</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </Paper>\r\n    )\r\n}\r\nexport default TitleComp","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\n\r\nconst header = [\"S.No\", \"Title\", \"Descriptiom\", \"Action\"];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\n\r\nconst TitleWithDescription = (props) => {\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const [titleDesc, setTitleDesc] = React.useState([]);\r\n  React.useEffect(() => {\r\n    setTitleDesc([props?.data?.props]);\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    const getData = {\r\n      component: props?.data?.component,\r\n      props: state\r\n    };\r\n    setOpen(false);\r\n    setTitleDesc([state])\r\n    props.handleSubmit(getData,\"TitleAndDescription\",\"\")\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    handleClickOpen();\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Title and Description Component\"}\r\n        noAddNew\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={titleDesc}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Title and Description Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={state.title}\r\n            name=\"title\"\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            multiline={true}\r\n            rows={10}\r\n            onChange={onChangeData}\r\n            value={state.description}\r\n            name=\"description\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default TitleWithDescription;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Image\",\r\n  \"Description\",\r\n  \"Italic Text\",\r\n  \"Button Text\",\r\n  \"Url\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"img\" },\r\n  { type: \"TEXT\", name: \"description\" },\r\n  { type: \"TEXT\", name: \"italic_text\" },\r\n  { type: \"TEXT\", name: \"button_text\" },\r\n  { type: \"TEXT\", name: \"url\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst CustomAdvertisementCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const initialState = {\r\n    img: \"\",\r\n    description: \"\",\r\n    italic_text: \"\",\r\n    button_text: \"\",\r\n    url: \"\",\r\n  };\r\n\r\n  const initialEdit = {\r\n    isEdit: false,\r\n    editIndex: null,\r\n  };\r\n\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [disableButton, setDisable] = React.useState({\r\n    img: false,\r\n  });\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          // setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (state.img && state.description && state.button_text && state.url) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props?.cardContent;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: editContent,\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: {\r\n            cardContent: [...props?.data?.props?.cardContent, state],\r\n          },\r\n        };\r\n        setOpen(false);\r\n        props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n      }\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const content = props?.data?.props?.cardContent;\r\n    content.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: {\r\n        cardContent: content,\r\n      },\r\n    };\r\n    props.handleSubmit(getData, \"CustomAdvertising\", \"cardContent\");\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Advertisement Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props?.cardContent}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">\r\n          Add New Advertisement Item\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"description\"\r\n            label=\"Description\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.description}\r\n            onChange={onChangeData}\r\n            name=\"description\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"italic_text\"\r\n            label=\"Italic_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.italic_text}\r\n            onChange={onChangeData}\r\n            name=\"italic_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"button_text\"\r\n            label=\"Button_text\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.button_text}\r\n            onChange={onChangeData}\r\n            name=\"button_text\"\r\n            required\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Url\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n\r\n          {/* Image Upload */}\r\n\r\n          <Grid container style={{ padding: \"16px 0px\" }}>\r\n            <Grid item>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                style={{ display: \"none\" }}\r\n                id=\"button-files\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={(e) => handleChange(e.target.files[0], \"img\")}\r\n              />\r\n              <label htmlFor=\"button-files\">\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  component=\"span\"\r\n                  disabled={disableButton.img}\r\n                  startIcon={<CloudUploadIcon />}\r\n                >\r\n                  Desktop Image\r\n                </Button>\r\n              </label>\r\n            </Grid>\r\n\r\n            {state.img.length > 0 && (\r\n              <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                <img\r\n                  alt=\"nacimages\"\r\n                  src={state.img}\r\n                  style={{ width: \"100px\", height: \"auto\" }}\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default CustomAdvertisementCMS;\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { useContext } from \"react\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  \r\n  const header = [\r\n    \"S.No\",\r\n    \"Mobile Image\",\r\n    \"Web Image\",\r\n    \"Action\",\r\n  ];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"MBL_IMAGE\", name: \"mobile\" },\r\n    { type: \"WEB_IMAGE\", name: \"web\" },\r\n    { type: \"EDIT\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceBannerCMS = (props) => {\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const alert = useContext(AlertContext);\r\n    const initialState = {\r\n      mobile: \"\",\r\n      web: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [state, setState] = React.useState(initialState);\r\n    const [disableButton, setDisable] = React.useState({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            // setDisable({ ...disableButton, [name]: true });\r\n  \r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.mobile && state.web) {\r\n        if (editData.isEdit) {\r\n          const editBanner = props?.data?.props?.banners;\r\n          editBanner.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: editBanner,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              banners: [...props?.data?.props?.banners, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          props.handleSubmit(getData, \"experienceBanner\", \"banners\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Banner Component\"}\r\n            handleAddNew={handleClickOpen}\r\n            noAddNew\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.banners}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog open={open} onClose={handleClose}>\r\n            <DialogTitle id=\"form-dialog-title\">Add New Banner Item</DialogTitle>\r\n            <DialogContent>\r\n  \r\n              {/* Image Upload */}\r\n  \r\n              <Grid\r\n                container\r\n                justifyContent=\"space-around\"\r\n                style={{ padding: \"16px 0px\" }}\r\n              >\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                  />\r\n                  <label htmlFor=\"button-file\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      startIcon={<CloudUploadIcon />}\r\n                      disabled={disableButton.mobile}\r\n                    >\r\n                      Mobile Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.web}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n              {(state.mobile.length > 0 || state.web.length > 0) && (\r\n                <Grid\r\n                  container\r\n                  justifyContent=\"flex-start\"\r\n                  style={{ padding: \"16px 0px\" }}\r\n                >\r\n                  {state.mobile.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.mobile}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                  {state.web.length > 0 && (\r\n                    <Grid style={{ textAlign: \"center\" }} xs={6} md={6} item>\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={state.web}\r\n                        style={{ width: \"100px\", height: \"auto\" }}\r\n                      />\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              )}\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onsubmitvalue}>Add</Button>\r\n              <Button onClick={handleClose}>Cancel</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceBannerCMS;\r\n  ","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport { useStyles } from \"./styles\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../context\";\r\nimport { useContext } from \"react\";\r\nimport EditorConvertToHTML from \"./richTextEditor\";\r\nconst header = [\r\n  \"S.No\",\r\n  \"Background Image\",\r\n  \"Header Image\",\r\n  \"Description\",\r\n  \"Form Title\",\r\n  \"Submit Text\",\r\n  \"Button Text\",\r\n  \"Type\",\r\n  \"Action\",\r\n];\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"WEB_IMAGE\", name: \"background_Image\" },\r\n  { type: \"WEB_IMAGE\", name: \"header_Image\" },\r\n  { type: \"HTMLTEXT\", name: \"description\" },\r\n  { type: \"HTMLTEXT\", name: \"form_Title\" },\r\n  { type: \"TEXT\", name: \"submit_Content\" },\r\n  { type: \"TEXT\", name: \"button_Text\" },\r\n  { type: \"TEXT\", name: \"type\" },\r\n  { type: \"EDIT\", name: \"\" },\r\n];\r\nconst initialState = {\r\n  background_Image: \"\",\r\n  header_Image: \"\",\r\n  description: \"\",\r\n  form_Title: \"\",\r\n  submit_Content: \"\",\r\n  button_Text: \"\",\r\n  type: \"\",\r\n};\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\nconst ExperienceCardCMS = (props) => {\r\n  console.log(\"console data\", props);\r\n  const { data } = props;\r\n  const classes = useStyles();\r\n  const alert = useContext(AlertContext);\r\n  const [sendData, setSendData] = React.useState([]);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n  const [disableButton, setDisable] = React.useState({\r\n    background_Image: false,\r\n    header_Image: false,\r\n  });\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  React.useEffect(() => {\r\n    setSendData([data?.props]);\r\n    setState(data?.props);\r\n  }, [data?.props]);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setState({\r\n            ...state,\r\n            [name]: res?.data?.web,\r\n          });\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.background_Image &&\r\n      state.header_Image &&\r\n      state.description &&\r\n      state.form_Title &&\r\n      state.submit_Content &&\r\n      state.button_Text &&\r\n      state.type\r\n    ) {\r\n      let getData = [];\r\n      if (editData.isEdit) {\r\n        getData = {\r\n          component: data?.component,\r\n          props: state,\r\n        };\r\n        setOpen(false);\r\n      } else {\r\n        getData = {\r\n          component: data?.component,\r\n          props: [...data?.props, state],\r\n        };\r\n        setOpen(false);\r\n      }\r\n      props.handleSubmit(getData, \"ExperienceCard\", \"props\");\r\n      setEditData(initialEdit);\r\n      setState(initialState);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    console.log(\"rowData\", rowData);\r\n  };\r\n  const handleChangeState = (data) => {\r\n    setState({\r\n      ...state,\r\n      description: data,\r\n    });\r\n  };\r\n  const handleChangeTitle = (data) => {\r\n    setState({\r\n      ...state,\r\n      form_Title: data,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <TableHeaderComp\r\n          name={\"Experience Card Component\"}\r\n          handleAddNew={handleClickOpen}\r\n          noAddNew\r\n        />\r\n        <TableComp\r\n          header={header}\r\n          tableData={tableData}\r\n          data={sendData}\r\n          handleEdit={handleEdit}\r\n        />\r\n        {/* Dialog */}\r\n        <Dialog\r\n          classes={{ paper: classes.dialogPaperMid }}\r\n          open={open}\r\n          onClose={handleClose}\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n          <DialogContent>\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeState}\r\n              parentState={state.description}\r\n            />\r\n            <EditorConvertToHTML\r\n              handleChangeState={handleChangeTitle}\r\n              parentState={state.form_Title}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"submit Content\"\r\n              label=\"Submit_Content\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.submit_Content}\r\n              onChange={onChangeData}\r\n              name=\"submit_Content\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"button_Text\"\r\n              label=\"Button Text\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.button_Text}\r\n              onChange={onChangeData}\r\n              name=\"button_Text\"\r\n              required\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"type\"\r\n              label=\"Type\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              value={state.type}\r\n              onChange={onChangeData}\r\n              name=\"type\"\r\n              required\r\n            />\r\n            {/* Image Upload */}\r\n            <Grid container style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"background_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.background_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.background_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.background_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) =>\r\n                    handleChange(e.target.files[0], \"header_Image\")\r\n                  }\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.header_Image}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              {state.header_Image.length > 0 && (\r\n                <Grid item style={{ padding: \"0px 8px\" }}>\r\n                  <img\r\n                    alt=\"nacimages\"\r\n                    src={state.header_Image}\r\n                    style={{ width: \"100px\", height: \"auto\" }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n              Add\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n              Cancel\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default ExperienceCardCMS;","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    DialogTitle,\r\n    Grid,\r\n    Paper,\r\n    TextField,\r\n  } from \"@material-ui/core\";\r\n  import React from \"react\";\r\n  import { TableComp } from \"../../../components\";\r\n  import { useStyles } from \"./styles\";\r\n  import TableHeaderComp from \"./TableHeadComp\";\r\n  import CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n  import { UploadImage } from \"../../../utils/imageUpload\";\r\n  import { AlertContext } from \"../../../context\";\r\n  import { useContext } from \"react\";\r\n  \r\n  const header = [\"S.No\", \"Image\", \"Title\", \"Description\", \"Url\", \"Action\"];\r\n  \r\n  const tableData = [\r\n    { type: \"INCREMENT\", name: \"\" },\r\n    { type: \"WEB_IMAGE\", name: \"image\" },\r\n    { type: \"TEXT\", name: \"title\" },\r\n    { type: \"TEXT\", name: \"description\" },\r\n    { type: \"TEXT\", name: \"url\" },\r\n    { type: \"ACTION\", name: \"\" },\r\n  ];\r\n  \r\n  const ExperienceTableCardCMS = (props) => {\r\n    const classes = useStyles();\r\n    const alert = useContext(AlertContext);\r\n  \r\n    const initialState = {\r\n      image: \"\",\r\n      title: \"\",\r\n      description: \"\",\r\n      url: \"\",\r\n    };\r\n  \r\n    const initialEdit = {\r\n      isEdit: false,\r\n      editIndex: null,\r\n    };\r\n  \r\n    const [state, setState] = React.useState(initialState);\r\n    const [open, setOpen] = React.useState(false);\r\n    const [editData, setEditData] = React.useState(initialEdit);\r\n    const [disableButton, setDisable] = React.useState({\r\n      image: false,\r\n    });\r\n    const [buttonEditState, setButtonEditState] = React.useState(initialEdit);\r\n  \r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n      setState(initialState);\r\n      setEditData(initialEdit)\r\n    };\r\n  \r\n    const onChangeData = (event) => {\r\n      setState({\r\n        ...state,\r\n        [event.target.name]: event.target.value,\r\n      });\r\n    };\r\n  \r\n    const handleChange = (file, name) => {\r\n      UploadImage(file)\r\n        .then((res) => {\r\n          if (res?.data?.web) {\r\n            setState({\r\n              ...state,\r\n              [name]: res?.data?.web,\r\n            });\r\n            alert.setSnack({\r\n              open: true,\r\n              severity: \"success\",\r\n              msg: \"Image Uploaded Successfully\",\r\n            });\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    };\r\n  \r\n    const onsubmitvalue = async () => {\r\n      if (state.image && state.title && state.description && state.url) {\r\n        if (editData.isEdit) {\r\n          const editContent = props?.data?.props?.cardContent;\r\n          editContent.splice(editData.editIndex, 1, state);\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: editContent,\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        } else {\r\n          let getData = [];\r\n          getData = {\r\n            component: props?.data?.component,\r\n            props: {\r\n              cardContent: [...props?.data?.props?.cardContent, state],\r\n            },\r\n          };\r\n          setOpen(false);\r\n          setEditData(initialEdit)\r\n          setState(initialState);\r\n          props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n        }\r\n        setEditData(initialEdit);\r\n        setState(initialState);\r\n      } else {\r\n        alert.setSnack({\r\n          open: true,\r\n          severity: \"error\",\r\n          msg: \"Please fill all the fields\",\r\n        });\r\n      }\r\n    };\r\n  \r\n    const handleDelete = (e, rowData, rowIndex) => {\r\n      let getData = [];\r\n      const content = props?.data?.props?.cardContent;\r\n      content.splice(rowIndex, 1);\r\n      getData = {\r\n        component: props?.data?.component,\r\n        props: {\r\n          cardContent: content,\r\n        },\r\n      };\r\n      props.handleSubmit(getData, \"experienceCard\", \"cardContent\");\r\n    };\r\n  \r\n    const handleEdit = (e, rowData, rowIndex) => {\r\n      setOpen(true);\r\n      setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n      setState(rowData);\r\n    };\r\n  \r\n    return (\r\n      <>\r\n        <Paper className={classes.root}>\r\n          <TableHeaderComp\r\n            name={\"Experience Cards Component\"}\r\n            handleAddNew={handleClickOpen}\r\n          />\r\n          <TableComp\r\n            header={header}\r\n            tableData={tableData}\r\n            data={props?.data?.props?.cardContent}\r\n            handleDelete={handleDelete}\r\n            handleEdit={handleEdit}\r\n          />\r\n  \r\n          {/* Dialog */}\r\n  \r\n          <Dialog\r\n            classes={{ paper: classes.dialogPaperMid }}\r\n            open={open}\r\n            onClose={handleClose}\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"title\"\r\n                label=\"Title\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.title}\r\n                onChange={onChangeData}\r\n                name=\"title\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"description\"\r\n                label=\"Description\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.description}\r\n                onChange={onChangeData}\r\n                name=\"description\"\r\n                required\r\n              />\r\n  \r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"url\"\r\n                label=\"Url\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={state.url}\r\n                onChange={onChangeData}\r\n                name=\"url\"\r\n                required\r\n              />\r\n              {/* Image Upload */}\r\n  \r\n              <Grid container style={{ padding: \"16px 0px\" }}>\r\n                <Grid item>\r\n                  <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    style={{ display: \"none\" }}\r\n                    id=\"button-files\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={(e) => handleChange(e.target.files[0], \"image\")}\r\n                  />\r\n                  <label htmlFor=\"button-files\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      component=\"span\"\r\n                      disabled={disableButton.image}\r\n                      startIcon={<CloudUploadIcon />}\r\n                    >\r\n                      Desktop Image\r\n                    </Button>\r\n                  </label>\r\n                </Grid>\r\n                {state.image.length > 0 && (\r\n                  <Grid item style={{ padding: \"0px 8px\" }}>\r\n                    <img\r\n                      alt=\"nacimages\"\r\n                      src={state.image}\r\n                      style={{ width: \"100px\", height: \"auto\" }}\r\n                    />\r\n                  </Grid>\r\n                )}\r\n              </Grid>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={onsubmitvalue}>\r\n                Add\r\n              </Button>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleClose}>\r\n                Cancel\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Paper>\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default ExperienceTableCardCMS;","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Paper,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { TableComp } from \"../../../components\";\r\nimport TableHeaderComp from \"./TableHeadComp\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nconst header = [\r\n  \"S.No\",\r\n  \"Title\",\r\n  \"Address\",\r\n  \"Map Link\",\r\n  \"Contact Number\",\r\n  \"Store Id\",\r\n  \"Action\",\r\n];\r\n\r\nconst tableData = [\r\n  { type: \"INCREMENT\", name: \"\" },\r\n  { type: \"TEXT\", name: \"title\" },\r\n  { type: \"TEXT\", name: \"address\" },\r\n  { type: \"TEXT\", name: \"url\", width: \"300px\" },\r\n  { type: \"TEXT\", name: \"contactNo\" },\r\n  { type: \"TEXT\", name: \"key\" },\r\n  { type: \"ACTION\", name: \"\" },\r\n];\r\n\r\nconst initialState = {\r\n  title: \"\",\r\n  address: \"\",\r\n  url: \"\",\r\n  contactNo: \"\",\r\n  key: \"\",\r\n};\r\n\r\nconst initialEdit = {\r\n  isEdit: false,\r\n  editIndex: null,\r\n};\r\n\r\nconst StoreLocatorDetailsCMS = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState(initialState);\r\n  const [editData, setEditData] = React.useState(initialEdit);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setState(initialState);\r\n    setEditData(initialEdit)\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      state.title &&\r\n      state.address &&\r\n      state.contactNo &&\r\n      state.key  \r\n    ) {\r\n      if (editData.isEdit) {\r\n        const editContent = props?.data?.props;\r\n        editContent.splice(editData.editIndex, 1, state);\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props: editContent,\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        setEditData(initialEdit)\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n      } else {\r\n        let getData = [];\r\n        getData = {\r\n          component: props?.data?.component,\r\n          props:  [...props?.data?.props, state],\r\n        };\r\n        setOpen(false);\r\n        setState(initialState);\r\n        props.handleSubmit(getData, \"StoreDetailsComponent\", \"cardContent\");\r\n      }\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"error\",\r\n        msg: \"Please fill all the fields\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleEdit = (e, rowData, rowIndex) => {\r\n    setOpen(true);\r\n    setEditData({ ...editData, isEdit: true, editIndex: rowIndex });\r\n    setState(rowData);\r\n  };\r\n\r\n  const handleDelete = (e, rowData, rowIndex) => {\r\n    let getData = [];\r\n    const deleteContent = props?.data?.props;\r\n    deleteContent.splice(rowIndex, 1);\r\n    getData = {\r\n      component: props?.data?.component,\r\n      props: deleteContent\r\n    };\r\n    props.handleSubmit(getData, \"StoreDetailsComponent\", \"\");\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableHeaderComp\r\n        name={\"Career Card Component\"}\r\n        handleAddNew={handleClickOpen}\r\n      />\r\n      <TableComp\r\n        header={header}\r\n        tableData={tableData}\r\n        data={props?.data?.props}\r\n        handleDelete={handleDelete}\r\n        handleEdit={handleEdit}\r\n      />\r\n\r\n      {/* Dialog */}\r\n\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle id=\"form-dialog-title\">Add New Card Item</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"title\"\r\n            label=\"Title\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.title}\r\n            onChange={onChangeData}\r\n            name=\"title\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"address\"\r\n            label=\"Address\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.address}\r\n            onChange={onChangeData}\r\n            name=\"address\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"url\"\r\n            label=\"Map Link\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.url}\r\n            onChange={onChangeData}\r\n            name=\"url\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"contactNo\"\r\n            label=\"Contact No\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.contactNo}\r\n            onChange={onChangeData}\r\n            name=\"contactNo\"\r\n            required\r\n          />\r\n          <TextField\r\n            margin=\"dense\"\r\n            id=\"key\"\r\n            label=\"Store Id\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            value={state.key}\r\n            onChange={onChangeData}\r\n            name=\"key\"\r\n            required\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onsubmitvalue}>Add</Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default StoreLocatorDetailsCMS;\r\n","import React from \"react\";\r\nimport { useStyles } from \"./style\";\r\nimport BannerCMS from \"./components/bannerCMS\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_URL } from \"../../config\";\r\nimport { CDNPAGES, CMS_UPDATE, CREATE_CMS } from \"../../graphql/cmsQuery\";\r\nimport StoreLocatorCMS from \"./components/storeLocatorCMS\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { AlertContext } from \"../../context\";\r\nimport TitleDescriptionCMS from \"./components/titleDescriptionCMS\";\r\nimport QueryFormCMS from \"./components/queryFormCMS\";\r\nimport SlidingImageCardCMS from \"./components/slidingImageCardCMS\";\r\nimport CustomCareerBannerCMS from \"./components/customCareerBannerCMS\";\r\nimport CustomCareerCardCMS from \"./components/customCareerCardCMS\";\r\nimport CustomCollectionHeaderCMS from \"./components/customCollectionHeaderCMS\";\r\nimport CustomCollectionCardsCMS from \"./components/customCollectionCardsCMS\";\r\nimport CustomNewsCMS from \"./components/customNewsCMS\";\r\nimport SpclTitleDescr from \"./components/spclTitleDescrCMS\";\r\nimport BookYourAppointmentCMS from \"./components/bookYourAppointmentCMS\";\r\nimport TestimonialCMS from \"./components/testimonialCMS\";\r\nimport AboutCollection from \"./components/aboutCollectionCMS\";\r\nimport TitleComp from \"./components/titleCompCMS\";\r\nimport TitleWithDescription from \"./components/titleWithDescription\";\r\nimport CustomAdvertisementCMS from \"./components/customAdvertisementCMS\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport ExperienceBannerCMS from \"./components/experienceBannerCMS\";\r\nimport ExperienceCardCMS from \"./components/experienceCardCMS\";\r\nimport ExperienceTableCardCMS from \"./components/experienceTableCards\";\r\nimport StoreLocatorDetailsCMS from \"./components/storeLocatorDetailsCMS\";\r\n\r\nconst CmsComponent = (props) => {\r\n  const classes = useStyles();\r\n  const snack = React.useContext(AlertContext);\r\n  const location = useLocation();\r\n  const [state, setState] = useState([]);\r\n  const [cloneDialog, setCloneDialog] = useState(false);\r\n  const [cloneState, setCloneState] = useState({\r\n    page: null,\r\n  });\r\n  console.log(\"state\", state);\r\n  console.log(\"cloneState\", cloneState);\r\n\r\n  useEffect(() => {\r\n    fetchCall();\r\n  }, []);\r\n\r\n  const handleClone = () => {\r\n    console.log(\"handleClone\", state);\r\n    setCloneDialog(true);\r\n  };\r\n\r\n  const handleCloneSumbit = () => {\r\n    if (cloneState.page) {\r\n      const cloneData = JSON.stringify(state);\r\n      const pageName = cloneState.page;\r\n      fetch(`${API_URL}/graphql`, {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          query: CREATE_CMS,\r\n          variables: {\r\n            cloneData: cloneData,\r\n            page: pageName,\r\n          },\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          handleCloneDialogClose()\r\n          snack.setSnack({\r\n            open: true,\r\n            msg: \"Page Created Successfully\",\r\n          });\r\n        });\r\n    }else{\r\n      snack.setSnack({\r\n        open: true,\r\n        msg: \"Please enter the page Route\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloneDialogClose = () => {\r\n    setCloneDialog(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCloneState({\r\n      ...cloneState,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const fetchCall = () => {\r\n    const pageName = location.state.name;\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CDNPAGES,\r\n        variables: { page: pageName },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const dataRecieved = JSON.parse(data.data.cdnByPage.data);\r\n        setState(dataRecieved);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (data, component, propsKey) => {\r\n    const replaceIndex = state.findIndex((val) => val.component === component);\r\n    const newState = state;\r\n    newState.splice(replaceIndex, 1, data);\r\n    const stringifyState = JSON.stringify(newState);\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: CMS_UPDATE,\r\n        variables: {\r\n          stringifyState: stringifyState,\r\n          page: location.state.name,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Successfully Updated!\",\r\n        });\r\n        const newStateSet = JSON.parse(JSON.stringify(newState));\r\n        setState(newStateSet);\r\n        fetchCall();\r\n      });\r\n  };\r\n\r\n  const getTheTable = (val) => {\r\n    console.log(\"val000\", val);\r\n    switch (val?.component) {\r\n      case \"BannerComponent\": {\r\n        return <BannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Storelocator\": {\r\n        return <StoreLocatorCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndData\": {\r\n        return <TitleDescriptionCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"QueryForm\": {\r\n        return <QueryFormCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SlideImgMediaCard\": {\r\n        return <SlidingImageCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomBanner\": {\r\n        return <CustomCareerBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CareerCard\": {\r\n        return <CustomCareerCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CollectionHeader\": {\r\n        return (\r\n          <CustomCollectionHeaderCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CollectionCards\": {\r\n        return (\r\n          <CustomCollectionCardsCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"CustomNews\": {\r\n        return <CustomNewsCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"SpclTitleDescr\": {\r\n        return <SpclTitleDescr data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"AboutBookAppointment\": {\r\n        return (\r\n          <BookYourAppointmentCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"titleComp\": {\r\n        return <TitleComp data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"Testimonial\": {\r\n        return <TestimonialCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TestimonialTwo\": {\r\n        return <AboutCollection data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"TitleAndDescription\": {\r\n        return <TitleWithDescription data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n      case \"CustomAdvertising\": {\r\n        return (\r\n          <CustomAdvertisementCMS data={val} handleSubmit={handleSubmit} />\r\n        );\r\n      }\r\n      case \"ExperienceCard\": {\r\n        return <ExperienceCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceBanner\": {\r\n        return <ExperienceBannerCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"experienceCard\": {\r\n        return <ExperienceTableCardCMS data={val} handleSubmit={handleSubmit} />;\r\n      }\r\n\r\n      case \"StoreDetailsComponent\":{\r\n        return(\r\n          <StoreLocatorDetailsCMS data={val} handleSubmit={handleSubmit}/>\r\n        )\r\n      }\r\n      default: {\r\n        return <h1></h1>;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justifyContent=\"flex-end\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid>\r\n          <Button variant=\"contained\" onClick={handleClone} color=\"primary\">\r\n            Clone\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {state.map((val, i) => {\r\n        return getTheTable(val);\r\n      })}\r\n      <Dialog\r\n        classes={{ paper: classes.dialogPaperMid }}\r\n        open={cloneDialog}\r\n        onClose={handleCloneDialogClose}\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Clone the current page</DialogTitle>\r\n        <DialogContent>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"page\"\r\n            label=\"Page Route\"\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            onChange={onChangeData}\r\n            value={cloneState.page}\r\n            name=\"page\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloneSumbit}>Clone Data</Button>\r\n          <Button onClick={handleCloneDialogClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CmsComponent;\r\n","import React from 'react';\r\nimport { Grid, Typography, TextField, FormGroup } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './style.css'\r\n\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n    root: {\r\n        width: 42,\r\n        height: 26,\r\n        padding: 0,\r\n        margin: theme.spacing(1),\r\n    },\r\n    switchBase: {\r\n        padding: 1,\r\n        '&$checked': {\r\n            transform: 'translateX(16px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                backgroundColor: '#52d869',\r\n                opacity: 1,\r\n                border: 'none',\r\n            },\r\n        },\r\n        '&$focusVisible $thumb': {\r\n            color: '#52d869',\r\n            border: '6px solid #fff',\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    track: {\r\n        borderRadius: 26 / 2,\r\n        border: `1px solid ${theme.palette.grey[400]}`,\r\n        backgroundColor: theme.palette.grey[50],\r\n        opacity: 1,\r\n        transition: theme.transitions.create(['background-color', 'border']),\r\n    },\r\n    checked: {},\r\n    focusVisible: {},\r\n}))(({ classes, ...props }) => {\r\n    return (\r\n        <Switch\r\n            focusVisibleClassName={classes.focusVisible}\r\n            disableRipple\r\n            classes={{\r\n                root: classes.root,\r\n                switchBase: classes.switchBase,\r\n                thumb: classes.thumb,\r\n                track: classes.track,\r\n                checked: classes.checked,\r\n            }}\r\n            {...props}\r\n        />\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\nexport default function Editcategory(props) {\r\n\r\n    const [state, setState] = React.useState({\r\n        checkedA: true,\r\n        checkedB: true,\r\n        checkedC: true,\r\n    });\r\n\r\n\r\n    const handleChange = name => event => {\r\n        setState({ ...state, [name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Grid>\r\n                <Typography variant=\"h2\" style={{ marginTop: \"25px\", marginBottom: \"50px\", fontWeight: \"400\", fontSize: \"22px\" }}>Edit Category Items</Typography>\r\n            </Grid>\r\n            <Grid container style={{ width: \"80%\", margin: \"auto\" }} >\r\n                <Grid container lg={12} md={12} spaceing={2} justify=\"center\" id=\"margin\" style={{ marginBottom: \"75px\" }}>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"Name\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={6} xs={12}>\r\n                        <TextField id=\"outlined-basic\" label=\"URL\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                    <Grid lg={4} md={4} sm={12} xs={12}>\r\n                        <   TextField id=\"outlined-basic\" label=\"SEO Text\" margin=\"dense\" variant=\"outlined\" color=\"primary\" />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container className=\"switch\" lg={12} md={12} justify=\"center\">\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Filters</Typography>\r\n                        <div className=\"z\">\r\n                            <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                \r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedA}\r\n                                        onChange={ handleChange('checkedA')}\r\n                                        value=\"checkedA\"\r\n                                        \r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                         </div>  \r\n\r\n                        \r\n                    </Grid>\r\n                    <Grid  style={{margin:\"7px auto\"}} lg={4} md={4} sm={6} xs={12}>\r\n                        <Typography className=\"filter-head\" variant=\"h4\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Search</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedB}\r\n                                        onChange={ handleChange('checkedB')}\r\n                                        value=\"checkedB\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                    <Grid style={{margin:\"10px auto\"}} lg={4} md={4} sm={12} xs={12}>\r\n                        <Typography variant=\"h4\" className=\"filter-head\"  style={{ fontWeight: \"400\", fontSize: \"19px\" }}>For Price</Typography>\r\n                        <div className=\"z\">\r\n                        <h4 style={{display:'inline-block',marginRight:\"10px\"}}>N</h4>\r\n                            <FormControlLabel\r\n                                control={\r\n                                    <IOSSwitch\r\n                                        checked={state.checkedC}\r\n                                        onChange={ handleChange('checkedC')}\r\n                                        value=\"checkedC\"\r\n                                    />\r\n                                }\r\n                                label=\"Y\"\r\n                            />\r\n                        </div>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container>\r\n                    <Grid style={{ display: \"flex\", justifyContent: \"flex-end\", width: \"80%\", margin: \"auto\", marginTop: \"50px\" }}>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Cancel\r\n                            </Button>\r\n                        <Button className=\"product\" variant=\"contained\" size=\"medium\" color=\"primary\" backgroundColor=\"secondary\" style={{ margin: \"auto 10px\" }}>\r\n                            Save\r\n                            </Button>\r\n                    </Grid>\r\n                    <Grid>\r\n\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport './table.css'\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    typography: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    conatainerRow:{\r\n        width:\"300px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 256px\",\r\n    fontSize:\"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n        width:\"500px\",\r\n        color:\"#6f6f6f\",\r\n        display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight:\" 270px\",\r\n    fontSize:\"14px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"20px\",\r\n    gridTemplateColumns: \"repeat(3, 1fr)\"\r\n    }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\nexport default function Columns(props) {\r\n    const classes = useStyles();\r\n\r\n    const checkboxrow = [\r\n        {\r\n            id:1,\r\n            name:\"Published\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:2,\r\n            name:\"AVB\",\r\n            isActive:false,      \r\n        },\r\n        {\r\n            id:3,\r\n            name:\"Price\",\r\n            isActive: false,       \r\n        },\r\n        {\r\n            id:4,\r\n            name:\"Type\",\r\n            isActive:  false,      \r\n        },\r\n        {\r\n            id:5,\r\n            name:\"Flavour\",\r\n            isActive: false ,     \r\n        },\r\n        {\r\n            id:6,\r\n            name:\"Flavour\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:7,\r\n            name: \"Material\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:8,\r\n            name:\"Medium\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:9,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:10,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:11,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:12,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:13,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:14,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        },\r\n        {\r\n            id:15,\r\n            name:\"Shoe size\",\r\n            isActive:false,        \r\n        }\r\n        \r\n        \r\n        \r\n        \r\n        \r\n    ]\r\n    const [columns,setColumns ] = React.useState({\r\n        listOfValue:checkboxrow\r\n    })\r\n    function stateChange(id){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n            if(id===data.id){\r\n                data.isActive = data.isActive?false:true;\r\n            }\r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    function resetButton(){\r\n        let listOfValue = columns.listOfValue.map((data,index)=>{\r\n                data.isActive = false;\r\n            \r\n            return data;\r\n        })\r\n        setColumns({\r\n            listOfValue\r\n        })\r\n    }\r\n    // const lists = columns.listOfValue.map((head) =>\r\n    //     (\r\n    //         <Grid conatiner>\r\n    //             <Grid item xs={4}><Checkbox\r\n    //                 value=\"secondary\"\r\n    //                 color=\"primary\"\r\n    //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n    //                 checked = {head.isActive}\r\n    //                 onChange = {()=>stateChange(head.id)}\r\n                \r\n    //             />\r\n    //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n    //             </Grid>\r\n    //         </Grid>\r\n    //     )\r\n\r\n    // );\r\n\r\n   \r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n         <div style={{ maxHeight: \"420px\"}}>\r\n            <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography>\r\n            <Grid style={{ height: \"270px\", borderBottom: \"1px solid #6f6f6f\", borderTop: \"1px solid #6f6f6f\", width: \"95%\", margin: \"auto\", paddingTop: \"5px\", paddingBottom: \"10px\" }}>\r\n                <Grid conatiner>\r\n              <Grid item   className={classes.conatainerRow}>\r\n                   {columns.listOfValue.map((head) =><Grid container>\r\n                        <Checkbox\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n                               checked = {head.isActive}\r\n                    onChange = {()=>stateChange(head.id)}\r\n                            \r\n                        />\r\n                   <h3 style={{fontWeight: \"500\" }}>{head.name}</h3></Grid>)}\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Grid style={{ display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\", width: \"90%\" }}>\r\n                <Grid>\r\n                    <Button size=\"large\" onClick={()=>resetButton()}>RESET</Button>\r\n                </Grid>\r\n                <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    <Button size=\"large\" onClick={()=>props.columnclose()}>cancel</Button>\r\n                    <Button color=\"primary\" backgroundColor=\"secondary\" size=\"large\" variant=\"contained\" className={classes.margin}>\r\n                        SAVE\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        \r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Form, Grid,Select } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport Columns from \"./columns\"\r\nimport './table.css'\r\n\r\n\r\n\r\n\r\nconst useStyless = makeStyles(theme => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    '&:hover': {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    }\r\n  },\r\n}));\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n\r\n}));\r\n\r\nconst options = [\r\n  \"Show some love to Material-UI\",\r\n  \"Show all notification content\",\r\n  \"Hide sensitive notification content\",\r\n  \"Hide all notification content\"\r\n];\r\n\r\nexport default function FormPropsTextFields() {\r\n  const classess = useStyless();\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClickListItem = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuItemClick = (event, index) => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? 'simple-popover' : undefined;\r\n\r\n\r\n  return (\r\n    <div className=\"search\" style={{ display: \"flex\", justifyContent: \"space-around\", background: \"white\", borderTop: \"1px solid #e4e4e4\", borderBottom: \"1px solid #e4e4e4\" }}>\r\n      <Grid lg={2} md={2} sm={3}>\r\n        <Button onClick={handleClick} variant=\"outlined\" color=\"primary\" backgroundColor=\"secondary\" size=\"large\"  style={{ fontSize: \"15px\", width: \"95%\", marginLeft: \"15px\", marginTop: \"18px\", marginBottom: \"10px\", padding: \"6px 0px\" }}>\r\n          ADD FILTER<ArrowDownwardIcon fontSize=\"inherit\" />\r\n\r\n        </Button>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'center',\r\n          }}\r\n          transformOrigin={{\r\n            vertical: 'top',\r\n            horizontal: 'center',\r\n          }}\r\n        >\r\n          <Typography style={{ paddingBottom: \"0px\", FontWeight: \"400\", color: \"#6f6f6f\" }} className={classes.typography} variant=\"h5\">Select all products where:</Typography>\r\n\r\n          <div className={classes.root} style={{padding:\"4px 10px 10px 10px\"}}>\r\n          \r\n              <Select\r\n              className={classes.notchedOutline}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                margin=\"dense\"\r\n                labelId=\"demo-controlled-open-select-label\"\r\n                id=\"demo-controlled-open-select\"\r\n                \r\n        >\r\n         \r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Visibility</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Stock</MenuItem>\r\n          <MenuItem style={{backgroundColor:\"white\",color:\"#6f6f6f\",padding:\"15px 20px\",fontSize:\"17px\"}}>Price</MenuItem>\r\n        </Select>\r\n         \r\n            <Menu\r\n              id=\"lock-menu\"\r\n              // anchorEl={anchorEl}\r\n\r\n              keepMounted\r\n              // open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              {options.map((option, index) => (\r\n                <MenuItem\r\n                  key={option}\r\n\r\n\r\n                  onClick={event => handleMenuItemClick(event, index)}\r\n                >\r\n                  {option}\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </div>\r\n\r\n\r\n\r\n        </Popover>\r\n\r\n      </Grid>\r\n      <Grid lg={10} md={10} sm={9}>\r\n        <form noValidate autoComplete=\"off\" style={{ width: \"97%\", margin: \"auto\", marginTop: \"10px\", marginBottom: \"10px\" }}>\r\n          <TextField fullWidth margin=\"dense\" id=\"outlined-basic\" variant=\"outlined\"  />\r\n        </form>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        marginBottom: \"17px\",\r\n        marginTop: \"25px\",\r\n      }}\r\n    >\r\n      <Grid xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h2\r\n          className=\"products\"\r\n          style={{ fontSize: \"24px\", fontWeight: \"400\" }}\r\n        >\r\n          Products\r\n        </h2>\r\n      </Grid>\r\n      <Grid\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        lassName=\"column\"\r\n        style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n      >\r\n        <Grid className=\"column-btn\" lg={5} md={5} sm={5} xs={5}>\r\n          <Button\r\n            className=\"product\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns columnclose={handleClose} />\r\n          </Popover>\r\n        </Grid>\r\n        <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n          <Button\r\n            id=\"create\"\r\n            className=\"product\"\r\n            variant=\"contained\"\r\n            size=\"large\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n          >\r\n            CREATE PRODUCT\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport {TableBody,Grid} from '@material-ui/core';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton'; \r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Filterandsearch from './filterandsearch';\r\nimport SortHeader from './SortHeader';\r\nimport './table.css';\r\n\r\n\r\nfunction createData(name, calories, fat, carbs, protein, protein1, protein2) {\r\n  return { name, calories, fat, carbs, protein , protein1, protein2};\r\n}\r\n\r\nconst rows = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9, 67, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 67, 4.3),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 67, 4.3),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5, 67, 4.3),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 67, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0, 67, 4.3),\r\n  createData('KitKat', 518, 26.0, 65, 7.0, 67, 4.3),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0, 67, 4.3),\r\n  createData('Marshmallow', 318, 0, 81, 2.0, 67, 4.3),\r\n  createData('Nougat', 360, 19.0, 9, 37.0, 67, 4.3),\r\n  createData('Oreo', 437, 18.0, 63, 4.0, 67, 4.3),\r\n];\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n  { id: 'protein1', numeric: true, disablePadding: false, label: 'Protein1 (g)' },\r\n  { id: 'protein2', numeric: true, disablePadding: false, label: 'Protein2 (g)' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = property => event => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n\r\n   <React.Fragment >\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map(headCell => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n    </React.Fragment> \r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n     \r\n    <Toolbar\r\n    \r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} style={{fontWeight:\"400\"}} variant=\"h4\" id=\"tableTitle\">\r\n          Nutrition\r\n          \r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            {/* <FilterListIcon /> */}\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(0),\r\n  },\r\n  table: {\r\n    // minWidth: 750,\r\n    width:\"100%\", \r\n    overflowX:\"scroll\"\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable() {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map(n => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n      \r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = event => {\r\n    setDense(event.target.checked);\r\n  };    \r\n\r\n  const isSelected = name => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n        {/* <div className=\"nightmode\" style={{textAlign:\"right\"}}>                \r\n                <FormControlLabel\r\n               \r\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n                // label=\"Dense padding\"\r\n            />\r\n        </div>    */}\r\n\r\n\r\n        <SortHeader lg={12} md={12} sm={12}  />\r\n\r\n<Grid container lg={12} md={12} sm={12} xs={12} style={{overflowX:'auto'}}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n        <Filterandsearch/>\r\n\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n            \r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                        .map((row, index) => {\r\n                        const isItemSelected = isSelected(row.name);\r\n                        const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={event => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          checked={isItemSelected}\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.calories}</TableCell>\r\n                      <TableCell align=\"right\">{row.fat}</TableCell>\r\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein1}</TableCell>\r\n                      <TableCell align=\"right\">{row.protein2}</TableCell>\r\n                    </TableRow>\r\n                    \r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n        \r\n              )}\r\n                   \r\n                     \r\n              \r\n              \r\n            </TableBody>\r\n          </Table>\r\n        \r\n        \r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      </Grid>  \r\n    </div>\r\n\r\n    \r\n  );\r\n}\r\n","import React from 'react';\r\nimport ProductTable from './ProductTable';\r\nimport './table.css'\r\nfunction newmaterial1() {\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <ProductTable />\r\n        </div>\r\n    )\r\n}\r\nexport default newmaterial1","import { FormControlLabel, Switch } from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { API_URL } from \"../../config\";\r\nimport { AlertContext } from \"../../context\";\r\nimport { ALLCDNPAGES, UPDATE_STATUS_CMS } from \"../../graphql/cmsQuery\";\r\n\r\nconst CmsHome = (props) => {\r\n  let history = useHistory();\r\n  const snack = React.useContext(AlertContext);\r\n\r\n  const [state, setState] = useState([]);\r\n  console.log(\"fetchedPages\", state);\r\n\r\n  const handleClick = (name) => {\r\n    history.push({\r\n      pathname: \"/cmsComponent\",\r\n      state: {\r\n        name: name,\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }, []);\r\n\r\n  const fetchData = () => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: ALLCDNPAGES,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        const dataRecieved = data.data.allCdns.nodes;\r\n        setState(dataRecieved);\r\n      });\r\n  }\r\n\r\n  const getThePageTitle = (name) => {\r\n    let createdName =  name.replace(/[A-Z]/g, val => \" \"  + `${val.toLowerCase()}`);\r\n    if(name === \"loc\"){\r\n      return createdName = \"Store Locator Details\"\r\n    }else{\r\n      return createdName\r\n    }\r\n  };\r\n\r\n  const handleChangeActive = (page,isActive) => {\r\n    fetch(`${API_URL}/graphql`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        query: UPDATE_STATUS_CMS,\r\n        variables: {\r\n          isActive: !isActive,\r\n          page: page,\r\n        },\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // debugger;\r\n        snack.setSnack({\r\n          open: true,\r\n          msg: \"Status Updated Successfully\",\r\n        });\r\n        fetchData()\r\n      });\r\n  }\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {/* <AddContact contactlist={[]}/> */}\r\n      <Grid container item xs={12} sm={12} spacing={2}>\r\n        <Typography component=\"h5\" variant=\"h5\">\r\n          CMS Complete List\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/silverbanner\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                NAC Banners\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/featuredproduct\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Featured Product\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/comments\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                Customers Reviews\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item xs={6} sm={4} lg={3}>\r\n        <Link underline=\"none\" component={RouterLink} to=\"/newarrival\">\r\n          <Card fullwidth className=\"card2\">\r\n            <CardContent>\r\n              <Typography\r\n                style={{ textAlign: \"center\", marginTop: 8 }}\r\n                component=\"h6\"\r\n                variant=\"h5\"\r\n              >\r\n                New Arrival\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n\r\n      {/* cms page */}\r\n      {state.map((val) => (\r\n        <Grid item xs={6} sm={4} lg={3}>\r\n          {/* <Link underline=\"none\" component={RouterLink} to=\"/cmsComponent\"> */}\r\n          <div>\r\n            <Card fullwidth className=\"card2\">\r\n              <CardContent>\r\n                <Typography\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    margin: \"8px 0px\",\r\n                    textTransform: \"capitalize\",\r\n                    cursor: \"pointer\",\r\n                    borderRadius:\"8px\",\r\n                    backgroundColor:\"#3f51b5\",\r\n                    padding:\"8px\",\r\n                    color:\"#fff\"\r\n                  }}\r\n                  component=\"h6\"\r\n                  variant=\"h5\"\r\n                  onClick={() => handleClick(val.page)}\r\n                >\r\n                  {getThePageTitle(val.page)}\r\n                </Typography>\r\n                <FormControlLabel\r\n                  style={{ display:\"flex\", alignItems:\"center\",justifyContent:\"center\" }}\r\n                  control={\r\n                    <Switch\r\n                      checked={val.isActive}\r\n                      onChange={() => handleChangeActive(val.page,val.isActive)}\r\n                      name=\"checkedB\"\r\n                      color=\"primary\"\r\n                    />\r\n                  }\r\n                  label=\"Is Page Active?\"\r\n                />\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          {/* </Link> */}\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CmsHome;\r\n","import React, { useEffect, useState , useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport {\r\n  ALLSTYLORISILVERLANDINGBANNERS,\r\n  CREATESILVERLANDINGBANNER,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport { AlertContext } from \"../../../../context\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverLandingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const alert = useContext(AlertContext);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLANDINGBANNERS,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLANDINGBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            [name]: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, [name]: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Landing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            {\" \"}\r\n            - Landing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n                        <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Mobile Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  className={classes.input}\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-files\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-files\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    disabled={disableButton.web}\r\n                    startIcon={<CloudUploadIcon />}\r\n                  >\r\n                    Desktop Image\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Mobile Image</TableCell>\r\n                <TableCell>Desktop Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.mobile}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.mobile} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.mobile}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverLandingPage;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Grid,\r\n  Link,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React, { useEffect, useState, useContext } from \"react\";\r\nimport { APP_URL, GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGPAGE,\r\n  CREATESILVERLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.position &&\r\n      createlandingbanner.link &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        position: +createlandingbanner.position,\r\n        url: createlandingbanner.link,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Banner's Redirect Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            />\r\n            <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                     \r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {/* {val.web} */}\r\n                      <img\r\n                        src={val.web}\r\n                        alt=\"nacimages\"\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingPage;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport {\r\n  CREATESPECIFICLISTINGPAGE,\r\n  ALLSPECIFICLISTINGPAGE,\r\n  DELETESILVERLANDINGBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\n\r\nfunction SpecificListPages(props) {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSPECIFICLISTINGPAGE,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const onsubmitvalue = async () => {\r\n    if (\r\n      createlandingbanner.urlParam &&\r\n      createlandingbanner.mobile &&\r\n      createlandingbanner.web\r\n    ) {\r\n      let create_banner_data = {\r\n        urlParam: createlandingbanner.urlParam,\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESPECIFICLISTINGPAGE,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          ClearState();\r\n          styloribannerfetch();\r\n          setOpen(false);\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            mobile: res?.data?.web,\r\n            web: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, mobile: true, web: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Specific Listing Page - Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Specific Listing Page - Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Banner's Page Link (Routes Only)\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n                   <Grid\r\n              container\r\n              justifyContent=\"space-around\"\r\n              style={{ padding: \"16px 0px\" }}\r\n            >\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"web\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                {/* <TableCell>Mobile Image</TableCell> */}\r\n                <TableCell>Banner Image</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL + val.urlParam}`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL + val.urlParam}`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SpecificListPages;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n  CREATESILVERLISTINGBOTTOMBANNER,\r\n  DELETESILVERLISTINGBOTTOMBANNER,\r\n} from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT, APP_URL } from \"../../../../config\";\r\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\r\nimport { UploadImage } from \"../../../../utils/imageUpload\";\r\nimport { AlertContext } from \"../../../../context\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: \"60px\",\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingBottom = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    link: \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  const [disableButton, setDisable] = useState({\r\n    web: false,\r\n    mobile: false,\r\n  });\r\n  const alert = useContext(AlertContext);\r\n\r\n  useEffect(() => {\r\n    styloribannerfetch();\r\n  }, []);\r\n  const styloribannerfetch = async () => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: ALLSTYLORISILVERLISTINGBOTTOMBANNERS,\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        let data = fatchvalue.data.allBanners.nodes;\r\n        data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n        setalllandingbanner(data);\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n    ClearState();\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    ClearState();\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({\r\n      ...createlandingbanner,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLISTINGBOTTOMBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        styloribannerfetch();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    if (createlandingbanner.mobile && createlandingbanner.web) {\r\n      let create_banner_data = {\r\n        position: +\"1\",\r\n        url: \"#\",\r\n        mobile: createlandingbanner.mobile,\r\n        web: createlandingbanner.web,\r\n        now: new Date().toISOString(),\r\n      };\r\n\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: CREATESILVERLISTINGBOTTOMBANNER,\r\n          variables: create_banner_data,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          setOpen(false);\r\n          window.location.reload();\r\n        })\r\n        .catch(console.error);\r\n    } else {\r\n      alert.setSnack({\r\n        open: true,\r\n        severity: \"warning\",\r\n        msg: \"Data is Missing!\",\r\n      });\r\n    }\r\n  };\r\n  const handleChange = (file, name) => {\r\n    UploadImage(file)\r\n      .then((res) => {\r\n        if (res?.data?.web) {\r\n          setCreatelandingbanner({\r\n            ...createlandingbanner,\r\n            web: res?.data?.web,\r\n            mobile: res?.data?.web,\r\n          });\r\n          setDisable({ ...disableButton, web: true, mobile: true });\r\n\r\n          alert.setSnack({\r\n            open: true,\r\n            severity: \"success\",\r\n            msg: \"Image Uploaded Successfully\",\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const ClearState = () => {\r\n    setCreatelandingbanner({\r\n      position: \"\",\r\n      link: \"\",\r\n      mobile: \"\",\r\n      web: \"\",\r\n    });\r\n    setDisable({\r\n      web: false,\r\n      mobile: false,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid\r\n          container\r\n          item\r\n          xs={12}\r\n          style={{ padding: \"16px\" }}\r\n          sm={12}\r\n          alignItems={\"flex-end\"}\r\n        >\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography\r\n              component=\"h6\"\r\n              variant=\"h6\"\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              NAC - Listing Page - Bottom Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClickOpen}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">\r\n            NAC - Listing Page - Bottom Banners :{\" \"}\r\n          </DialogTitle>\r\n          <DialogContent>\r\n            {/* <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            /> */}\r\n            {/* <TextField\r\n              margin=\"dense\"\r\n              id=\"link\"\r\n              label=\"Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.link}\r\n              name=\"link\"\r\n            /> */}\r\n            <Grid container justifyContent=\"space-around\"  style={{ padding: \"16px 0px\" }}>\r\n              <Grid item>\r\n                <input\r\n                  accept=\"image/*\"\r\n                  style={{ display: \"none\" }}\r\n                  id=\"button-file\"\r\n                  multiple\r\n                  type=\"file\"\r\n                  onChange={(e) => handleChange(e.target.files[0], \"mobile\")}\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    component=\"span\"\r\n                    startIcon={<CloudUploadIcon />}\r\n                    disabled={disableButton.mobile}\r\n                  >\r\n                    Upload Banner\r\n                  </Button>\r\n                </label>\r\n              </Grid>\r\n              </Grid>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table\r\n            className={classes.table}\r\n            border={1}\r\n            borderColor={\"#ddd\"}\r\n            size=\"small\"\r\n            stickyHeader\r\n          >\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>S.No</TableCell>\r\n                <TableCell>Link to Check</TableCell>\r\n                <TableCell>Banner Image</TableCell>\r\n                {/* <TableCell>Desktop Image</TableCell> */}\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{index + 1}</TableCell>\r\n                  <TableCell>\r\n                    <Link\r\n                      href={`${APP_URL}/silver-jewellery`}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      {`${APP_URL}/silver-jewellery`}\r\n                    </Link>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                    <img src={val.mobile} style={{ width: \"150px\", height: \"auto\" }} />\r\n                    </Link>\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Link\r\n                      href={val.web}\r\n                      target=\"_blank\"\r\n                      className={classes.link_style}\r\n                    >\r\n                      <img\r\n                        alt=\"nacimages\"\r\n                        src={val.web}\r\n                        style={{ width: \"150px\", height: \"auto\" }}\r\n                      />\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button\r\n                      onClick={() => handleDelete(val.id)}\r\n                      style={{ color: \"#fff\", backgroundColor: \"red\" }}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingBottom;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow,\r\n  Link,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ALLSTYLORISILVERROUTINGPAGE, CREATESTYLORISILVERROUTINGPAGE, DELETESILVERLANDINGBANNER } from \"../../../../graphql/query\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../../../config\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingRoutingPage = (props) => {\r\n  const classes = useStyles2();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [alllandingbanner, setalllandingbanner] = useState([]);\r\n  const [createlandingbanner, setCreatelandingbanner] = useState({\r\n    position: \"\",\r\n    urlParam : \"\",\r\n    mobile: \"\",\r\n    web: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    async function styloribannerfetch() {\r\n      const url = GRAPHQL_DEV_CLIENT;\r\n      const opts = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          query: ALLSTYLORISILVERROUTINGPAGE,\r\n        }),\r\n      };\r\n\r\n      await fetch(url, opts)\r\n        .then((res) => res.json())\r\n        .then((fatchvalue) => {\r\n          let data = fatchvalue.data.allBanners.nodes;\r\n          data.sort((a, b) => parseFloat(a.position) - parseFloat(b.position));\r\n\r\n          setalllandingbanner(data);\r\n        })\r\n        .catch(console.error);\r\n    }\r\n    styloribannerfetch();\r\n  }, []);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const onChangeData = (event) => {\r\n    setCreatelandingbanner({ ...createlandingbanner, [event.target.name]: event.target.value });\r\n  };\r\n  const handleDelete = async (id) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: DELETESILVERLANDINGBANNER,\r\n        variables: { id: id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const onsubmitvalue = async () => {\r\n    let create_banner_data = {\r\n      position: +createlandingbanner.position,\r\n      urlParam: createlandingbanner.urlParam,\r\n      mobile: createlandingbanner.mobile,\r\n      web: createlandingbanner.web,\r\n      now: new Date().toISOString(),\r\n    };\r\n\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: CREATESTYLORISILVERROUTINGPAGE,\r\n        variables: create_banner_data,\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        setOpen(false);\r\n        window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Grid container item xs={12} style={{ padding: \"16px\" }} sm={12} alignItems={\"flex-end\"}>\r\n          <Grid fullwidth item xs={9} sm={9}>\r\n            <Typography component=\"h6\" variant=\"h6\" style={{ fontWeight: \"bold\" }}>\r\n              NAC Listing Routing Banners\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid fullwidth item xs={3} sm={3} style={{ \"text-align\": \"right\" }}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\r\n              Add New\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Dialog open={open} onClose={handleClose}>\r\n          <DialogTitle id=\"form-dialog-title\">Stylori Landing Page : </DialogTitle>\r\n          <DialogContent>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"position\"\r\n              label=\"Position\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.position}\r\n              name=\"position\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"urlParam\"\r\n              label=\"Router Link\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.urlParam}\r\n              name=\"urlParam\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"mobile\"\r\n              label=\"Mobile Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.mobile}\r\n              name=\"mobile\"\r\n            />\r\n            <TextField\r\n              margin=\"dense\"\r\n              id=\"web\"\r\n              label=\"Web Image\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onChange={onChangeData}\r\n              value={createlandingbanner.web}\r\n              name=\"web\"\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onsubmitvalue}>Submit</Button>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Position</TableCell>\r\n                <TableCell>Router Link</TableCell>\r\n                <TableCell>Mobile URL</TableCell>\r\n                <TableCell>Web URL</TableCell>\r\n                <TableCell>Action</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {alllandingbanner.map((val, index) => (\r\n                <TableRow key={val.id}>\r\n                  <TableCell>{val.position}</TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.urlParam} target=\"_blank\" className={classes.link_style}>\r\n                      {val.urlParam}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.mobile} target=\"_blank\" className={classes.link_style}>\r\n                      {val.mobile}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Link href={val.web} target=\"_blank\" className={classes.link_style}>\r\n                      {val.web}\r\n                    </Link>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Button onClick={() => handleDelete(val.id)} style={{ color: \"#fff\", backgroundColor: \"red\" }}>\r\n                      Delete\r\n                    </Button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingRoutingPage;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { Breadcrumbs } from \"../../../components\";\r\nimport SilverLandingPage from \"./components/silverlandingpage\";\r\nimport SilverListingPage from \"./components/silverlistingpage\";\r\nimport SpecificListPages from \"./components/specificListPages\";\r\nimport SilverListingRoutingPage from \"./components/silverlistingroutingpage\";\r\nimport SilverListingBottom from \"./components/silverbottmpage\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst Silverbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"/cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverLandingPage />\r\n      <SilverListingPage />\r\n      <SpecificListPages />\r\n      <SilverListingBottom />\r\n      {/* <SilverListingRoutingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default Silverbanner;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SilverListingPage from \"../components/silverlistingpage\";\r\nimport { Breadcrumbs } from \"../../../../components\";\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  imagecontainer: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  link: {\r\n    display: \"flex\",\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n  link_style: {\r\n    color: \"#000\",\r\n  },\r\n}));\r\nconst SilverListingbanner = (props) => {\r\n  const classes = useStyles2();\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumbs url=\"cmshome\" name=\"CMS Home Page\"></Breadcrumbs>\r\n      <SilverListingPage />\r\n      {/* <SilverListingRoutingPage /> */}\r\n      {/* <SilverLandingPage /> */}\r\n    </>\r\n  );\r\n};\r\nexport default SilverListingbanner;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport { API_URL } from \"../../config\";\r\nimport { isString } from \"util\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FilePond, registerPlugin } from \"react-filepond\";\r\nimport \"filepond/dist/filepond.min.css\";\r\nimport FilePondPluginImageExifOrientation from \"filepond-plugin-image-exif-orientation\";\r\nimport FilePondPluginImagePreview from \"filepond-plugin-image-preview\";\r\nimport \"filepond-plugin-image-preview/dist/filepond-plugin-image-preview.css\";\r\nimport FilePondPluginImageValidateSize from \"filepond-plugin-image-validate-size\";\r\nimport FilePondPluginFileRename from \"filepond-plugin-file-rename\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nimport { Chip } from \"@material-ui/core\";\r\n\r\nregisterPlugin(\r\n  FilePondPluginImageExifOrientation,\r\n  FilePondPluginImagePreview,\r\n  FilePondPluginImageValidateSize,\r\n  FilePondPluginFileRename\r\n);\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  variantFontSize: {\r\n    fontSize: \".9rem\",\r\n  },\r\n  variantMarginTop: {\r\n    marginTop: \"20px\",\r\n  },\r\n}));\r\nexport function CreateVariant(props) {\r\n  const classes = useStyle();\r\n  let prod_id = props.productId;\r\n  let colors = [];\r\n  let purities = [];\r\n  let diamondtypes = [];\r\n  let oldpurity = [];\r\n\r\n  const TOKEN = \"token\";\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [metalcolor, setMetalcolor] = useState(productCtx.productMetalColor);\r\n  productCtx.oldproductMetalColor.forEach((colorobj) => {\r\n    colors.push(colorobj.productColor);\r\n  });\r\n  productCtx.oldproductMetalPurity.forEach((colorobj) => {\r\n    purities.push(colorobj.purity);\r\n    oldpurity.push(colorobj);\r\n  });\r\n\r\n  productCtx.oldproductDiamondTypesArray.forEach((diamondobj) => {\r\n    diamondtypes.push(diamondobj.diamondType);\r\n  });\r\n\r\n  const [variant, setVariant] = useState({\r\n    metal_color: [],\r\n    metal_purity: [],\r\n    diamond_color: [],\r\n    diamond_clarity: [],\r\n    variant_diamond_type: [],\r\n    product_images: {},\r\n    size: [],\r\n  });\r\n\r\n  function handleMetalColor(status_data) {\r\n    let color = variant.metal_color;\r\n    color.some((color_data) => color_data.id === status_data.id)\r\n      ? (color = color.filter((color_fil) => color_fil.id !== status_data.id))\r\n      : color.push(status_data);\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color,\r\n    });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    let color_arr = [];\r\n    value.map((color, index) => {\r\n      if (\r\n        productCtx.productMetalColor.some(\r\n          (item) => item.productColor === color.productColor\r\n        )\r\n      ) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          metal_color: color.productColor,\r\n        };\r\n        color_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_color: color_arr,\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n  };\r\n  const sendNetworkRequest = async (url, params, data, auth = false) => {\r\n    alert(url);\r\n    url = API_URL + url;\r\n    console.info(\"URL\", url, data);\r\n    const method = data ? \"POST\" : \"GET\",\r\n      headers = {\r\n        \"Content-Type\": \"application/json\",\r\n      };\r\n    let resdata = null;\r\n    if (auth) {\r\n      const token = localStorage.getItem(TOKEN);\r\n      if (token) headers[\"auth\"] = token;\r\n      else window.location = \"/\";\r\n    }\r\n    const response = await fetch(url, {\r\n      method,\r\n      body: isString(data) ? data : JSON.stringify(data),\r\n      headers,\r\n    });\r\n\r\n    if (response.status < 400) {\r\n      resdata = await response.json();\r\n    } else {\r\n      alert(\r\n        `${response.status}:${response.statusText} - Unable to complete your request to \\n${url}`\r\n      );\r\n    }\r\n    return resdata;\r\n  };\r\n\r\n  const handleMetalPurity = (type) => (event, value) => {\r\n    let purity_arr = [];\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: value,\r\n    });\r\n    value.map((color, index) => {\r\n      let color_obj = {\r\n        ...color,\r\n        purity: color.purity,\r\n      };\r\n      purity_arr.push(color_obj);\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: purity_arr,\r\n    });\r\n  };\r\n  // function handleMetalPurity(status_data) {\r\n  //     status_data.metal_weight = \"\";\r\n  //     status_data.error_message = false;\r\n  //     // alert(JSON.stringify(status_data));\r\n  //     let purity = variant.metal_purity;\r\n  //     purity.some(purity_data => purity_data.id === status_data.id) ? purity = purity.filter(purity_fil => purity_fil.id !== status_data.id) : purity.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         metal_purity: purity\r\n  //     })\r\n  // }\r\n  const diamondTypeChange = (type) => (event, value) => {\r\n    let diamondtype_arr = [];\r\n    value.map((color, index) => {\r\n      if (color.label) {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.label,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          diamondType: color.diamondType,\r\n        };\r\n        diamondtype_arr.push(color_obj);\r\n      }\r\n\r\n      //   if(productCtx.productDiamondTypes.some(item => item.label === color.label)){\r\n      //    }else{ let color_obj = {\r\n      //         ...color,\r\n      //         diamondType: color.label\r\n      //     }\r\n      //     diamondtype_arr.push(color_obj)\r\n      //   }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      variant_diamond_type: diamondtype_arr,\r\n    });\r\n    alert(JSON.stringify(value));\r\n    setProductCtx({\r\n      ...productCtx,\r\n      [type]: diamondtype_arr,\r\n    });\r\n  };\r\n\r\n  // function diamondTypeChange(status_data){\r\n  //     let diamond__type = variant.variant_diamond_type;\r\n  //     diamond__type.some(diamond_type_data => diamond_type_data.id === status_data.id) ? diamond__type = diamond__type.filter(diamond_type_fil => diamond_type_fil.id !== status_data.id) : diamond__type.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         variant_diamond_type: diamond__type\r\n  //     })\r\n  // }\r\n\r\n  const sizeChange = (type) => (event, value) => {\r\n    let size_arr = [];\r\n    value.map((color, index) => {\r\n      if (productCtx.productDiamondTypes.some((item) => item === color)) {\r\n      } else {\r\n        let color_obj = {\r\n          ...color,\r\n          label: color,\r\n        };\r\n        size_arr.push(color_obj);\r\n      }\r\n    });\r\n    setVariant({\r\n      ...variant,\r\n      size: size_arr,\r\n    });\r\n  };\r\n  // function sizeChange(status_data) {\r\n  //     let variantSize = variant.size;\r\n  //     variantSize.some(variant_size_data => variant_size_data === status_data) ? variantSize = variantSize.filter(variant_size_fil => variant_size_fil !== status_data) : variantSize.push(status_data)\r\n  //     setVariant({\r\n  //         ...variant,\r\n  //         size: variantSize\r\n  //     })\r\n\r\n  // }\r\n\r\n  function setMetalWeightInput(e, metalPurityId) {\r\n    // alert(e.target.value)\r\n    let metalWeight = variant.metal_purity;\r\n    metalWeight =\r\n      metalWeight &&\r\n      metalWeight.map((metal_weight, index) => {\r\n        if (metalPurityId === metal_weight.id) {\r\n          metal_weight.metal_weight = e.target.value;\r\n        }\r\n        return metal_weight;\r\n      });\r\n    setVariant({\r\n      ...variant,\r\n      metal_purity: metalWeight,\r\n    });\r\n  }\r\n  function saveCreateVariant() {\r\n    let createVariant = {\r\n      productId: prod_id,\r\n      productMetalcoloursByProductId: variant.metal_color,\r\n      productPuritiesByProductId: variant.metal_purity,\r\n      productDiamondTypes: variant.variant_diamond_type,\r\n      productSize: variant.size,\r\n      product_images: variant.product_images,\r\n      // productImage:variant.product_images\r\n    };\r\n\r\n    let metal_color_image_length = Object.entries(variant.product_images);\r\n    let metal_purity_weight = false;\r\n    let metal_purity =\r\n      variant.metal_purity &&\r\n      variant.metal_purity.map((metal_weight_check) => {\r\n        if (metal_weight_check.metal_weight === \"\") {\r\n          metal_weight_check.error_message = true;\r\n          metal_purity_weight = true;\r\n        }\r\n        return metal_weight_check;\r\n      });\r\n    variant[\"metal_purity\"] = metal_purity;\r\n    setVariant({\r\n      ...variant,\r\n      variant,\r\n    });\r\n    if (metal_color_image_length.length !== variant.metal_color.length) {\r\n      alert(\"Select Metal Color Images\");\r\n    }\r\n    if (\r\n      (variant.metal_color.length > 0 &&\r\n        variant.metal_color.length === metal_color_image_length.length) ||\r\n      (variant.metal_purity.length > 0 && metal_purity_weight === false) ||\r\n      variant.size.length > 0 ||\r\n      variant.variant_diamond_type.length > 0\r\n    ) {\r\n      let createVariants = productCtx.createVariantList;\r\n      let editVariants = productCtx.editVariants;\r\n      let variants = productCtx.variants;\r\n      let productImages = productCtx.productImages;\r\n      productImages = [...productImages, variant.product_images];\r\n      createVariants.push(createVariant);\r\n      let params = {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(createVariant),\r\n      };\r\n    } else {\r\n      alert(\"please fill the Create variant\");\r\n    }\r\n  }\r\n  function backToProductAttribute() {\r\n    props.changeVariant();\r\n  }\r\n  async function uploadimagetoserver(\r\n    bodaydata,\r\n    imageposition,\r\n    imagecolor,\r\n    uploadtype\r\n  ) {\r\n    let prodimages = variant.product_images;\r\n    // if(true)\r\n    // {\r\n    var prodid = prod_id;\r\n    let imagecolourobj = variant.product_images[imagecolor];\r\n    var imagecount = 1;\r\n    if (imagecolourobj) {\r\n      imagecount = imagecolourobj.length + 1;\r\n    }\r\n\r\n    let imagename = prodid + \"_\" + imagecount + imagecolor.charAt(0);\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      {\r\n        image: bodaydata.fileExtension,\r\n        filename: imagename,\r\n        product_id: prodid,\r\n      },\r\n      false\r\n    );\r\n    var returnData =\r\n      responsedata && responsedata.data && responsedata.data.returnData;\r\n    var signedRequest = returnData && returnData.signedRequest;\r\n    var url = returnData && returnData.url;\r\n    console.log(\"responseurl\" + url);\r\n    var filepathname = returnData && returnData.filepath;\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": bodaydata.fileExtension,\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (imagecolourobj) {\r\n      const imageobj = {\r\n        name: prodid + \"_\" + (imagecolourobj.length + 1) + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      if (uploadtype === \"edit\") {\r\n        imagecolourobj[imageposition] = imageobj;\r\n      } else {\r\n        imagecolourobj.push(imageobj);\r\n      }\r\n      prodimages[imagecolor] = imagecolourobj;\r\n    } else {\r\n      const imageobj = {\r\n        name: prodid + \"_1\" + imagecolor.charAt(0),\r\n        position: imageposition,\r\n        color: imagecolor,\r\n        image_url: filepathname,\r\n        url:\r\n          \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" +\r\n          filepathname,\r\n      };\r\n      imagecolourobj = [];\r\n      imagecolourobj.push(imageobj);\r\n    }\r\n    prodimages[imagecolor] = imagecolourobj;\r\n    setVariant({ ...variant, product_images: prodimages });\r\n    // setFiles([])\r\n    // }\r\n\r\n    await axios.put(signedRequest, bodaydata.file, options);\r\n  }\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          fullWidth\r\n          margin=\"dense\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.productColor}\r\n          getOptionDisabled={(option) =>\r\n            colors.indexOf(option.productColor) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductMetalColor}\r\n          options={productCtx.masterData.metalcolour}\r\n          value={productCtx.productMetalColor}\r\n          onChange={handleoptionChange(\"productMetalColor\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.productColor}\r\n                {...getTagProps({ index })}\r\n                disabled={colors.indexOf(option.productColor) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Colours\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {/* <Grid item>\r\n                            <FormGroup row>\r\n                                {\r\n                                    productCtx.masterData && productCtx.masterData.metalpurity.map((data, index) => (\r\n\r\n                                        productCtx.productMetalColor && productCtx.productMetalPurity.some((prod_metal_purity) => prod_metal_purity.purity === data.name) ?\r\n                                            <FormControlLabel\r\n                                                disabled\r\n                                                control={\r\n                                                    <Checkbox checked={true} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            /> :\r\n                                            <FormControlLabel\r\n                                                control={\r\n                                                    <Checkbox checked={variant.metal_purity && variant.metal_purity.some(met_purity => met_purity.id == data.id) ? true : false} onChange={() => handleMetalPurity(data)} value=\"checkedA\" />\r\n                                                }\r\n                                                label={data.name}\r\n                                            />\r\n\r\n                                    ))\r\n                                }\r\n                            </FormGroup>\r\n                            {\r\n                                variant.metal_purity && variant.metal_purity.map(metal_purity => (\r\n                                    <TextField\r\n                                        className={classes.helperinput}\r\n                                        style={{ width: \"124px\" }}\r\n                                        variant=\"outlined\"\r\n                                        margin=\"dense\"\r\n                                        fullWidth\r\n                                        type=\"number\"\r\n                                        value={metal_purity.metal_weight}\r\n                                        id=\"metal_weight\"\r\n                                        error={metal_purity && metal_purity.error_message }\r\n                                        name=\"metal_weight\"\r\n                                        label={`Metal Weight${metal_purity.name}`}\r\n                                        onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n                                    />\r\n                                ))\r\n                            }\r\n                        </Grid>\r\n                     */}\r\n\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          margin=\"dense\"\r\n          getOptionLabel={(option) => option.name}\r\n          getOptionDisabled={(option) => purities.indexOf(option.name) > -1}\r\n          defaultValue={productCtx.oldproductMetalPurity}\r\n          options={productCtx.masterData.metalpurity}\r\n          value={productCtx.productMetalPurity}\r\n          onChange={handleMetalPurity(\"productMetalPurity\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.purity}\r\n                {...getTagProps({ index })}\r\n                disabled={purities.indexOf(option.purity) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Metal Purity\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n\r\n        {productCtx.productMetalPurity &&\r\n          productCtx.productMetalPurity.map((metal_purity) => (\r\n            <TextField\r\n              key={metal_purity.id}\r\n              className={classes.helperinput}\r\n              style={{ width: \"100px\", marginLeft: \"8px\" }}\r\n              variant=\"outlined\"\r\n              margin=\"dense\"\r\n              fullWidth\r\n              type=\"number\"\r\n              value={metal_purity.metal_weight}\r\n              id=\"metal_weight\"\r\n              error={metal_purity && metal_purity.error_message}\r\n              name=\"metal_weight\"\r\n              label={`Weight ${metal_purity.purity}`}\r\n              onChange={(e) => setMetalWeightInput(e, metal_purity.id)}\r\n            />\r\n          ))}\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        <Autocomplete\r\n          multiple\r\n          id=\"free-solo-2-demo\"\r\n          className={classes.fixedTag}\r\n          getOptionLabel={(option) => option.label}\r\n          getOptionDisabled={(option) =>\r\n            diamondtypes.indexOf(option.label) > -1\r\n          }\r\n          defaultValue={productCtx.oldproductDiamondTypesArray}\r\n          options={productCtx.masterData.diamondtypes}\r\n          value={\r\n            productCtx.productDiamondTypesArray\r\n              ? productCtx.productDiamondTypesArray\r\n              : []\r\n          }\r\n          onChange={diamondTypeChange(\"productDiamondTypesArray\")}\r\n          renderTags={(value, getTagProps) =>\r\n            value.map((option, index) => (\r\n              <Chip\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                label={option.diamondType}\r\n                {...getTagProps({ index })}\r\n                disabled={diamondtypes.indexOf(option.diamondType) > -1}\r\n              />\r\n            ))\r\n          }\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Diamond Types\"\r\n              margin=\"dense\"\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              InputProps={{ ...params.InputProps, type: \"search\" }}\r\n            />\r\n          )}\r\n        />\r\n      </Grid>\r\n\r\n      <Grid item xs={6} sm={6} md={6} lg={6}>\r\n        {productCtx.variant_size && productCtx.variant_size.length > 0 ? (\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            fullWidth\r\n            getOptionLabel={(option) => option}\r\n            options={productCtx.productVariantSize}\r\n            value={productCtx.variant_size}\r\n            onChange={sizeChange(\"productSizes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Sizes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        ) : null}\r\n      </Grid>\r\n\r\n      {/* {\r\n                    productCtx.diamondlist && productCtx.diamondlist.length>0 ?<Grid container className={classes.variantMarginTop}>\r\n                    <Grid item>\r\n                       \r\n                        <Grid item>\r\n                            <FormGroup row>\r\n                            <Autocomplete\r\n                    multiple\r\n                    id=\"free-solo-2-demo\"\r\n                    className={classes.fixedTag}\r\n                    getOptionLabel={option => option.label}\r\n                    options={productCtx.masterData.diamondtypes}\r\n                    defaultValue={productCtx.productDiamondTypes}\r\n                    onChange={handleoptionChange('productMetalColor')}\r\n                    renderTags={(value, getTagProps) =>\r\n                    value.map((option, index) => (\r\n                    <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })}  disabled={index < productCtx.productMetalColor.length}/>\r\n                    ))\r\n                    }\r\n                    renderInput={params => (\r\n                    <TextField\r\n                    {...params}\r\n                    label=\"Diamond Types\"\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    InputProps={{ ...params.InputProps, type: 'search' }}\r\n                    />\r\n                    )}\r\n                    />\r\n\r\n                              \r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid> : ''\r\n                } */}\r\n\r\n      <Grid container>\r\n        {variant.metal_color === undefined\r\n          ? null\r\n          : variant.metal_color.map((value, index) => (\r\n              <Grid xs={12} container spacing={1} item>\r\n                <Grid xs={12} item>\r\n                  <Typography component=\"h6\" variant=\"h6\" align=\"left\">\r\n                    {value.productColor}\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid xs={12} sm={12} md={12} item>\r\n                  <FilePond\r\n                    allowImageValidateSize\r\n                    imageValidateSizeMinWidth=\"2400\"\r\n                    imageValidateSizeMinHeight=\"2400\"\r\n                    imageValidateSizeMeasure={(file) =>\r\n                      new Promise((resolve, reject) => {})\r\n                    }\r\n                    labelIdle=\"Upload Image\"\r\n                    allowMultiple={true}\r\n                    //files = {files}\r\n                    onupdatefiles={(fileItem) => {\r\n                      // Set currently active file objectsfiles to this.state\r\n                    }}\r\n                    onaddfile={(error, fileItem) => {\r\n                      uploadimagetoserver(fileItem, index, value.name, \"add\");\r\n                    }}\r\n                    onremovefile={(error, fileItem) => {}}\r\n                    fileRenameFunction={(file) =>\r\n                      new Promise((resolve) => {\r\n                        var prodid = prod_id;\r\n                        let imagecolourobj = variant.product_images[value.name];\r\n                        var imagecount = 1;\r\n                        if (imagecolourobj) {\r\n                          imagecount = imagecolourobj.length + 1;\r\n                        }\r\n                        let imagename =\r\n                          prodid +\r\n                          \"_\" +\r\n                          imagecount +\r\n                          value.name.charAt(0) +\r\n                          file.extension;\r\n                        resolve(imagename);\r\n                      })\r\n                    }\r\n                  ></FilePond>\r\n                </Grid>\r\n              </Grid>\r\n            ))}\r\n      </Grid>\r\n      {\r\n        <Grid\r\n          container\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"16px\",\r\n          }}\r\n        >\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={(e) => saveCreateVariant()}\r\n            >\r\n              Save\r\n            </Button>\r\n          </Grid>\r\n          <Grid item>\r\n            {/* <Button  style={{background: \"#ffffff\",marginLeft:\"16px\"}} variant=\"contained\" onClick={(e) => backToProductAttribute()}>\r\n                Back\r\n                </Button> */}\r\n          </Grid>\r\n        </Grid>\r\n      }\r\n    </Grid>\r\n  );\r\n}\r\nexport default CreateVariant;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport React from \"react\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  typography: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  conatainerRow: {\r\n    width: \"300px\",\r\n    color: \"#6f6f6f\",\r\n    display: \"grid\",\r\n    padding: \"16px 24px\",\r\n    maxHeight: \" 256px\",\r\n    fontSize: \"9px\",\r\n    overflowX: \"visible\",\r\n    overflowY: \"scroll\",\r\n    gridColumnGap: \"24px\",\r\n    gridTemplateColumns: \"repeat(2, 1fr)\",\r\n\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"500px\",\r\n      color: \"#6f6f6f\",\r\n      display: \"grid\",\r\n      padding: \"16px 24px\",\r\n      maxHeight: \" 270px\",\r\n      fontSize: \"14px\",\r\n      overflowX: \"visible\",\r\n      overflowY: \"scroll\",\r\n      gridColumnGap: \"20px\",\r\n      gridTemplateColumns: \"repeat(2, 1fr)\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Columns(props) {\r\n  const classes = useStyles();\r\n\r\n  const checkboxrow = props.columns;\r\n  const [columns, setColumns] = React.useState({\r\n    listOfValue: checkboxrow,\r\n  });\r\n  const [showcolumns, setshowColumns] = React.useState();\r\n\r\n  function stateChange(id) {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (id === data.id) {\r\n        data.isActive = data.isActive ? false : true;\r\n      }\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function resetButton() {\r\n    let listOfValue = columns.listOfValue.map((data, index) => {\r\n      if (!data.disabled) {\r\n        data.isActive = false;\r\n      }\r\n\r\n      return data;\r\n    });\r\n    setColumns({\r\n      listOfValue,\r\n    });\r\n  }\r\n  function saveaction() {\r\n    // let listOfValue = columns.listOfValue.map((data,index)=>{\r\n    //     if(data.isActive){\r\n    //               }\r\n    //               return data;\r\n\r\n    // })\r\n    let columnnames = [];\r\n    columns.listOfValue.forEach((element) => {\r\n      if (element.isActive) {\r\n        columnnames.push(element);\r\n      }\r\n    });\r\n    props.selectcolumnfilter(columnnames, props.displytype);\r\n    props.columnclose();\r\n  }\r\n  // const lists = columns.listOfValue.map((head) =>\r\n  //     (\r\n  //         <Grid conatiner>\r\n  //             <Grid item xs={4}><Checkbox\r\n  //                 value=\"secondary\"\r\n  //                 color=\"primary\"\r\n  //                 inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n  //                 checked = {head.isActive}\r\n  //                 onChange = {()=>stateChange(head.id)}\r\n\r\n  //             />\r\n  //                 <h3 style={{ display: \"inline-block\", fontWeight: \"500\" }}>{head}</h3>\r\n  //             </Grid>\r\n  //         </Grid>\r\n  //     )\r\n\r\n  // );\r\n\r\n  return (\r\n    <div style={{ maxHeight: \"420px\" }}>\r\n      {/* <Typography style={{ fontWeight: \"400\", color: \"#6f6f6f\", width: \"90%\", margin: \"6px auto\" }} className={classes.typography} variant=\"h5\">(number) columns selected out of (total number)</Typography> */}\r\n      <Grid\r\n        style={{\r\n          height: \"270px\",\r\n          borderBottom: \"1px solid #ddd\",\r\n          width: \"100%\",\r\n          margin: \"auto\",\r\n          paddingTop: \"5px\",\r\n          paddingBottom: \"10px\",\r\n        }}\r\n      >\r\n        <Grid conatiner>\r\n          <Grid item className={classes.conatainerRow}>\r\n            {columns.listOfValue.map((head) => (\r\n              <Grid container>\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                  checked={head.isActive}\r\n                  disabled={head.disabled}\r\n                  onChange={() => stateChange(head.id)}\r\n                />\r\n                <h3 style={{ fontWeight: \"500\" }}>{head.name}</h3>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          margin: \"10px auto\",\r\n          width: \"90%\",\r\n        }}\r\n      >\r\n        <Grid>\r\n          <Button size=\"large\" onClick={() => resetButton()}>\r\n            RESET\r\n          </Button>\r\n        </Grid>\r\n        <Grid style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button size=\"small\" onClick={() => props.columnclose()}>\r\n            cancel\r\n          </Button>\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => saveaction()}\r\n            backgroundColor=\"secondary\"\r\n            size=\"large\"\r\n            variant=\"contained\"\r\n            className={classes.margin}\r\n          >\r\n            SAVE\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport Columns from \"./columns\";\r\nimport Popover from \"@material-ui/core/Popover\";\r\nimport \"./table.css\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    color: \"#06847B\",\r\n    border: \"1px solid #7bbcb7\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(6, 132, 123, 0.1)\",\r\n      border: \"1px solid #06847B\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SortHeader(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [options, setOptions] = React.useState(props.columnnames);\r\n\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(false);\r\n  };\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  return (\r\n    <Grid\r\n      item\r\n      container\r\n      lg={12}\r\n      md={12}\r\n      sm={12}\r\n      xs={12}\r\n      style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n    >\r\n      <Grid item xl={8} lg={9} md={8} sm={7} xs={12}>\r\n        <h4 className=\"products\">\r\n          {props.title ? props.title : \"Variants Table\"}{\" \"}\r\n        </h4>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xl={4}\r\n        lg={3}\r\n        md={4}\r\n        sm={5}\r\n        xs={12}\r\n        style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n      >\r\n        <Grid\r\n          item\r\n          className=\"column-btn\"\r\n          lg={5}\r\n          md={5}\r\n          sm={5}\r\n          xs={5}\r\n          style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n        >\r\n          <Button\r\n            className=\"product\"\r\n            size=\"small\"\r\n            id=\"one\"\r\n            color=\"primary\"\r\n            backgroundColor=\"secondary\"\r\n            onClick={handleClick}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            style={{ fontSize: \"15px\", padding: \"6px 6px\" }}\r\n          >\r\n            COLUMNS\r\n            <ArrowDownwardIcon fontSize=\"inherit\" />\r\n          </Button>\r\n          <Popover\r\n            id={id}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            onClose={handleClose}\r\n            anchorOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"center\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"center\",\r\n            }}\r\n          >\r\n            <Columns\r\n              columns={options}\r\n              selectcolumnfilter={props.getColumnnames}\r\n              displytype={props.displytype}\r\n              columnclose={handleClose}\r\n            />\r\n          </Popover>\r\n        </Grid>\r\n        {/* <Grid className=\"column-btn\" lg={7} md={7} sm={7} xs={7}>\r\n                        <Button id=\"create\"  className=\"product\" variant=\"contained\" size=\"large\" color=\"primary\" backgroundColor=\"secondary\">\r\n                        CREATE PRODUCT\r\n                        </Button>\r\n                    </Grid> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default SortHeader;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditDiamond = (props) => {\r\n\r\n\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    diamondweight: diamond.diamondweight ? diamond.diamondweight : \"\",\r\n    diamondcount: diamond.diamondcount ? diamond.diamondcount : \"\",\r\n    diamondsettings: diamond.diamondsettings ? diamond.diamondsettings : null,\r\n    diamondshape: diamond.diamondshape ? diamond.diamondshape : null,\r\n    diamonditemname: diamond.diamonditemname ?? \"\",\r\n    diamondsubitemname: diamond.diamondsubitemname ?? \"\",\r\n    diamonddescription: diamond.diamonddescription ?? \"\",\r\n    diamondclarity: diamond.diamondClarity ?? \"\",\r\n    diamondtype: diamond.diamondType ?? \"\",\r\n    diamondcolor: diamond.diamondColour ?? \"\",\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n \r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {}, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Diamond Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonditemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonditemname\")}\r\n          />{\" \"}\r\n          {/* <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondsubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondsubitemname\")}\r\n          />{\" \"} */}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamonddescription}\r\n            placeholder={\"Diamond Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamonddescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.diamondweight}\r\n            placeholder={\"Weight\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            label=\"Weight\"\r\n            onChange={handleInputChange(\"diamondweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"diamondcount\")}\r\n            value={editcontent.diamondcount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.diamondsettings}\r\n            value={editcontent.diamondsettings}\r\n            onChange={handleoptionChange(\"diamondsettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondshape}\r\n            options={productCtx.masterData.diamondshapes}\r\n            onChange={handleoptionChange(\"diamondshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Shape\"\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondcolor}\r\n            options={productCtx.masterData.diamondcolors}\r\n            onChange={handleoptionChange(\"diamondcolor\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />{\" \"}\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondclarity}\r\n            options={productCtx.masterData.diamondclarities}\r\n            onChange={handleoptionChange(\"diamondclarity\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Clarity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.diamondtype}\r\n            options={productCtx.masterData.diamondtypes}\r\n            onChange={handleoptionChange(\"diamondtype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Diamond Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditDiamond.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditDiamond;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { Typography, Button, Chip, TextField, Input } from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport EditDiamond from \"./Components/EditDiamond/EditDiamond\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Diamond Type\", label: \"Diamond Type\" },\r\n  { id: \"Diamond Name\", label: \"Diamond Name\" },\r\n  { id: \" SubItemName\", label: \"  Sub Item Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n  { id: \"Colour\", label: \"Colour\" },\r\n  { id: \"Clarity\", label: \"Clarity\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 80,\r\n    maxWidth: 80,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    display: \"flex\",\r\n\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    //marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function DiamondDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [diamondEditObject, setDiamondEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.diamond && props.diamond.length - page * rowsPerPage);\r\n  function DiamondEdit(diamondData) {\r\n    setDiamondEditObject({\r\n      ...diamondEditObject,\r\n      edit: JSON.parse(JSON.stringify(diamondData)),\r\n    });\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.id,\r\n      diamondsettings: productCtx.masterData.diamondsettings.filter(\r\n        (settingData, index) => settingData.name === diamondData.diamondSettings\r\n      )[0],\r\n      diamondshape: productCtx.masterData.diamondshapes.filter(\r\n        (shapeData, index) => shapeData.name === diamondData.diamondShape\r\n      )[0],\r\n      diamondcount: diamondData.stoneCount,\r\n      diamondweight: diamondData.stoneWeight,\r\n      diamonditemname: diamondData.itemName,\r\n      diamondsubitemname: diamondData.subItemName,\r\n      diamonddescription: diamondData.description,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n  async function DiamondSave(diamondobj) {\r\n    // alert(JSON.stringify(productCtx.diamondsettings))\r\n    // alert(JSON.stringify(productCtx.diamondshape))\r\n    // alert(JSON.stringify(productCtx.diamondcount))\r\n    // alert(JSON.stringify(id))\r\n    var bodydata = {};\r\n    if (diamondobj.diamondsettings && diamondobj.diamondshape && diamondobj.diamondcount && diamondobj.diamondweight) {\r\n      let list_data = props.diamond;\r\n      let DiamondChangeData = list_data.map((diamondListData, index) => {\r\n        if (diamondobj.id === diamondListData.id) {\r\n          diamondListData.diamondSettings = diamondobj.diamondsettings.name;\r\n          diamondListData.diamondShape = diamondobj.diamondshape.name;\r\n          diamondListData.stoneCount = diamondobj.diamondcount;\r\n          diamondListData.stoneWeight = diamondobj.diamondweight;\r\n          bodydata[\"diamondSettings\"] = diamondobj.diamondsettings.name;\r\n          bodydata[\"diamondShape\"] = diamondobj.diamondshape.name;\r\n          bodydata[\"stoneCount\"] = diamondobj.diamondcount;\r\n          bodydata[\"stoneWeight\"] = diamondobj.diamondweight;\r\n          bodydata[\"diamondid\"] = diamondobj.id;\r\n          bodydata[\"itemname\"] = diamondobj.diamonditemname;\r\n          bodydata[\"subitemname\"] = diamondobj.diamondsubitemname;\r\n          bodydata[\"description\"] = diamondobj.diamonddescription;\r\n          bodydata[\"color\"] = diamondobj.diamondcolor?.label;\r\n          bodydata[\"clarity\"] = diamondobj?.diamondclarity?.label;\r\n          bodydata[\"diamondtype\"] = diamondobj.diamondtype?.label;\r\n          return diamondListData;\r\n        }\r\n        return diamondListData;\r\n      });\r\n      let response = await sendNetworkRequest(\"/editproductdiamond\", {}, bodydata);\r\n\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n\r\n      // let editDiamondList = DiamondChangeData && DiamondChangeData.filter((edit_data,index)=>edit_data.id===id)[0];\r\n      // let editDiamondLists = productCtx.editDiamondLists;\r\n      // if(JSON.stringify(editDiamondList)!==JSON.stringify(diamondEditObject.edit)){\r\n      //   let status = editDiamondLists&& editDiamondLists.some((check_edit,index)=>check_edit.id===editDiamondList.id) ?\r\n      //   editDiamondLists = editDiamondLists && editDiamondLists\r\n      //   .map((diamond_list,index)=>{\r\n      //     if(diamond_list.id === editDiamondList.id){\r\n      //       return editDiamondList;\r\n      //     }\r\n      //     return diamond_list;\r\n      //   })\r\n      //   : editDiamondLists.push(editDiamondList);\r\n      // }\r\n      // // console.log(editDiamondLists,'editDiamondList')\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      // handleClick();\r\n      // setProductCtx({\r\n      //   ...productCtx,\r\n      //   diamondlist:DiamondChangeData,\r\n      //   editDiamondLists,\r\n      //   diamondsettings:\"\",\r\n      //   diamondshape: \"\",\r\n      //   diamondcount:\"\",\r\n      //   diamondweight:\"\",\r\n      // })\r\n      // setBtnEdit({ ...btnEdit, id:\"\", action: false })\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n    window.location.reload();\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        {/* <CircularProgress color=\"secondary\"/> */}\r\n\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.diamond &&\r\n              props.diamond.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondColour}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.diamondClarity}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align={\"center\"} component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondweight\")}\r\n                        value={productCtx.diamondweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneWeight}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        style={{ width: 40 }}\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        type=\"number\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"diamondcount\")}\r\n                        value={productCtx.diamondcount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                      {row.stoneCount}\r\n                    </TableCell>\r\n                  )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondsettings}\r\n                        options={productCtx.masterData.diamondsettings}\r\n                        onChange={handleoptionChange(\"diamondsettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondSettings}\r\n                    </TableCell>\r\n                  )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.diamondshape}\r\n                        options={productCtx.masterData.diamondshapes}\r\n                        onChange={handleoptionChange(\"diamondshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Diamond Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.diamondShape}\r\n                    </TableCell>\r\n                  )}\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                      <Button onClick={(e) => CancelEdit(row)}>\r\n                        <CancelIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                    <TableCell align=\"center\" style={{ width: 80 }}>\r\n                      <Button onClick={(e) => DiamondEdit(row)}>\r\n                        <EditIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 ? (\r\n              <>\r\n                <TableRow style={{ height: 1 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              </>\r\n            ) : null}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.diamond && props.diamond.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditDiamond diamond={editcontent} onApply={DiamondSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Avatar, Button, Dialog, Chip, TextField, Typography, colors, Input } from \"@material-ui/core\";\r\nimport { ProductContext } from \"../../../../context\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 960,\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  content: {\r\n    padding: theme.spacing(0, 2),\r\n    maxWidth: 720,\r\n    margin: \"0 auto\",\r\n  },\r\n  helperText: {\r\n    textAlign: \"right\",\r\n    marginRight: 0,\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    \"&:hover\": {\r\n      backgroundColor: colors.green[900],\r\n    },\r\n  },\r\n}));\r\n\r\nconst EditGemstone = (props) => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id: diamond.id,\r\n    gemstonesettings: diamond?.gemstonesettings ?? null,\r\n    gemstonecount: diamond?.gemstonecount ?? \"\",\r\n    gemstoneweight: diamond?.gemstoneweight ?? \"\",\r\n    gemstonesize: diamond?.gemstonesize ?? \"\",\r\n    gemstoneitemname: diamond?.gemstoneitemname ?? \"\",\r\n    gemstonesubitemname: diamond?.gemstonesubitemname ?? \"\",\r\n    gemstonedescription: diamond?.gemstonedescription ?? \"\",\r\n    gemstoneshape: diamond?.gemstoneshape ?? null,\r\n    gemstonetype: diamond?.gemstonetype ?? null,\r\n  };\r\n  const [value, setValue] = useState(\"\");\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues,\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value });\r\n  };\r\n  const handleChange = (event) => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n    // alert(JSON.stringify(editcontent.gemstonecount))\r\n  }, [editcontent]);\r\n\r\n  return (\r\n    <Dialog maxWidth=\"lg\" onClose={onClose} open={open}>\r\n      <div {...rest} className={clsx(classes.root, className)}>\r\n        <div className={classes.header}>\r\n          <Typography align=\"center\" className={classes.title} gutterBottom variant=\"h3\">\r\n            Gemstone Details\r\n          </Typography>\r\n        </div>\r\n        <div className={classes.content}>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneitemname}\r\n            placeholder={\"Item Name\"}\r\n            name=\"size\"\r\n            label=\"Item Name\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesubitemname}\r\n            label=\"SubItem Name\"\r\n            placeholder={\"Diamond SubItem Name\"}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesubitemname\")}\r\n          />{\" \"}\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonedescription}\r\n            placeholder={\" Description\"}\r\n            name=\"size\"\r\n            label=\"Description\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonedescription\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstonesize}\r\n            label=\"Size\"\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonesize\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            label=\"Weight\"\r\n            margin=\"dense\"\r\n            value={editcontent.gemstoneweight}\r\n            name=\"size\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstoneweight\")}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            fullWidth\r\n            id=\"size\"\r\n            margin=\"dense\"\r\n            label=\"#of Stones\"\r\n            placeholder=\"#of Stones\"\r\n            name=\"size\"\r\n            type=\"number\"\r\n            autoComplete=\"size\"\r\n            onChange={handleInputChange(\"gemstonecount\")}\r\n            value={editcontent.gemstonecount}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            options={productCtx.masterData.gemstonesettings}\r\n            value={editcontent.gemstonesettings}\r\n            onChange={handleoptionChange(\"gemstonesettings\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\" Setting\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.name}\r\n            value={editcontent.gemstoneshape}\r\n            options={productCtx.masterData.gemstonshapes}\r\n            onChange={handleoptionChange(\"gemstoneshape\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.name} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Shape\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            value={editcontent.gemstonetype}\r\n            options={productCtx.masterData.gemstontypes}\r\n            onChange={handleoptionChange(\"gemstonetype\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button className={classes.applyButton} onClick={() => onApply(editcontent)} variant=\"contained\">\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditGemstone.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default EditGemstone;\r\n","import { Button, Chip, Input, TextField } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport EditGemstone from \"./Components/EditGemstone/EditGemstone\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\nconst columns = [\r\n  { id: \"Gemstone Type\", label: \"Gemstone Type\" },\r\n  { id: \"Gemstone Name\", label: \"Gemstone Name\" },\r\n  { id: \"SubItemName\", label: \"SubItem Name\" },\r\n  { id: \"Description\", label: \"Description\" },\r\n\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Weight\", label: \"Weight\" },\r\n  { id: \"Number\", label: \"Number\" },\r\n  { id: \"Amount\", label: \"Amount\" },\r\n  { id: \"Carat\", label: \"Per Carat\" },\r\n  { id: \"Setting\", label: \"Setting\" },\r\n  { id: \"Shape\", label: \"Shape\" },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    minWidth: 120,\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={handleFirstPageButtonClick} disabled={page === 0} aria-label=\"first page\">\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton onClick={handleNextButtonClick} disabled={page >= Math.ceil(count / rowsPerPage) - 1} aria-label=\"next page\">\r\n        {theme.direction === \"rtl\" ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function GemstoneDetails(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  let [gemstoneEditObject, setGemstoneEditObject] = React.useState({\r\n    edit: \"\",\r\n  });\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.gemstone && props.gemstone.length - page * rowsPerPage);\r\n  function GemstoneEdit(gemstoneData) {\r\n\r\n    setGemstoneEditObject({\r\n      ...gemstoneEditObject,\r\n      edit: JSON.parse(JSON.stringify(gemstoneData)),\r\n    });\r\n    setProductCtx({\r\n      ...productCtx,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    setEditcontent({\r\n      id: gemstoneData.id,\r\n      gemstonesettings: productCtx.masterData.gemstonesettings.filter(\r\n        (settingData, index) => settingData.name === gemstoneData.gemstoneSetting\r\n      )[0],\r\n      gemstoneshape: productCtx.masterData.gemstonshapes.filter(\r\n        (shapeData, index) => shapeData.name === gemstoneData.gemstoneShape\r\n      )[0],\r\n      gemstonecount: gemstoneData.stoneCount,\r\n      gemstoneweight: gemstoneData.stoneWeight,\r\n      gemstonesize: gemstoneData.gemstoneSize,\r\n      gemstoneitemname: gemstoneData.itemName,\r\n      gemstonesubitemname: gemstoneData.subItemName,\r\n      gemstonedescription: gemstoneData.description,\r\n      gemstonetype: gemstoneData.gemstoneType,\r\n    });\r\n    // setBtnEdit({ ...btnEdit, id: gemstoneData.id, action: true })\r\n    setOpenedit(true);\r\n  }\r\n\r\n  async function GemstoneSave(gemdata) {\r\n\r\n    if (\r\n      gemdata.gemstonesettings &&\r\n      gemdata.gemstoneshape &&\r\n      gemdata.gemstonecount &&\r\n      gemdata.gemstoneweight &&\r\n      gemdata.gemstonesize\r\n    ) {\r\n\r\n      let list_data = props.gemstone;\r\n      var bodydata = {};\r\n      let gemstoneChangeData = list_data.map((gemstoneListData, index) => {\r\n        if (gemdata.id === gemstoneListData.id) {\r\n          gemstoneListData.gemstoneSetting = gemdata.gemstonesettings.name;\r\n          gemstoneListData.gemstoneShape = gemdata.gemstoneshape.name;\r\n          gemstoneListData.stoneCount = gemdata.gemstonecount;\r\n          gemstoneListData.stoneWeight = gemdata.gemstoneweight;\r\n          gemstoneListData.gemstoneSize = gemdata.gemstonesize;\r\n          bodydata[\"gemstoneSetting\"] = gemdata.gemstonesettings.name;\r\n          bodydata[\"gemstoneShape\"] = gemdata.gemstoneshape.name;\r\n          bodydata[\"stoneCount\"] = gemdata.gemstonecount;\r\n          bodydata[\"gemstoneSize\"] = gemdata.gemstonesize;\r\n          bodydata[\"stoneWeight\"] = gemdata.gemstoneweight;\r\n          bodydata[\"id\"] = gemdata.id;\r\n          bodydata[\"itemname\"] = gemdata.gemstoneitemname;\r\n          bodydata[\"subitemname\"] = gemdata.gemstonesubitemname;\r\n          bodydata[\"description\"] = gemdata.gemstonedescription;\r\n          bodydata[\"gemstonetype\"] = gemdata.gemstonetype.label;\r\n\r\n          return gemstoneListData;\r\n        }\r\n\r\n        return gemstoneListData;\r\n      });\r\n\r\n      let response = await sendNetworkRequest(\"/editproductgemstone\", {}, bodydata);\r\n      let editGemstoneList =\r\n        gemstoneChangeData && gemstoneChangeData.filter((edit_data, index) => edit_data.id === gemdata.id)[0];\r\n      let editGemstoneLists = productCtx.editGemstoneLists;\r\n      if (JSON.stringify(editGemstoneList) !== JSON.stringify(gemstoneEditObject.edit)) {\r\n        let status =\r\n          editGemstoneLists && editGemstoneLists.some((check_edit, index) => check_edit.id === editGemstoneList.id)\r\n            ? (editGemstoneLists =\r\n              editGemstoneLists &&\r\n              editGemstoneLists.map((gemstone_list, index) => {\r\n                if (gemstone_list.id === editGemstoneList.id) {\r\n                  return editGemstoneList;\r\n                }\r\n                return gemstone_list;\r\n              }))\r\n            : editGemstoneLists.push(editGemstoneList);\r\n      }\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n      setProductCtx({\r\n        ...productCtx,\r\n        gemstonelist: gemstoneChangeData,\r\n        editGemstoneLists,\r\n        gemstonesettings: \"\",\r\n        gemstoneshape: \"\",\r\n        gemstonecount: \"\",\r\n        gemstoneweight: \"\",\r\n        gemstonesize: \"\",\r\n      });\r\n      setEditcontent(null);\r\n      setOpenedit(false);\r\n      //  setBtnEdit({ ...btnEdit, id: \"\", action: false })\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not fill all item\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n      window.location.reload();\r\n    }\r\n\r\n  }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n   \r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n  const handleInputChange = (type) => (e) => {\r\n  \r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth }}>\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.gemstone &&\r\n              props.gemstone.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.gemstoneType}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.itemName}\r\n                  </TableCell>\r\n\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.subItemName}\r\n                  </TableCell>\r\n                  <TableCell align={\"center\"} style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.description}\r\n                  </TableCell>\r\n\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Gemstone Size\"\r\n                        name=\"size\"\r\n                        onChange={handleInputChange(\"gemstonesize\")}\r\n                        autoComplete=\"size\"\r\n                        value={productCtx.gemstonesize}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSize}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"Weight\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstoneweight\")}\r\n                        value={productCtx.gemstoneweight}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneWeight}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Input\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        id=\"size\"\r\n                        margin=\"dense\"\r\n                        label=\"#of Stones\"\r\n                        name=\"size\"\r\n                        autoComplete=\"size\"\r\n                        onChange={handleInputChange(\"gemstonecount\")}\r\n                        value={productCtx.gemstonecount}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.stoneCount}\r\n                      </TableCell>\r\n                    )}\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneWeight}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 40 }} component=\"th\" scope=\"row\">\r\n                    {row.stoneAmount}\r\n                  </TableCell>\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstonesettings}\r\n                        options={productCtx.masterData.gemstonesettings}\r\n                        onChange={handleoptionChange(\"gemstonesettings\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Setting\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneSetting}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      <Autocomplete\r\n                        id=\"free-solo-2-demo\"\r\n                        className={classes.fixedTag}\r\n                        getOptionLabel={(option) => option.label}\r\n                        value={productCtx.gemstoneshape}\r\n                        options={productCtx.masterData.gemstonshapes}\r\n                        onChange={handleoptionChange(\"gemstoneshape\")}\r\n                        renderTags={(value, getTagProps) =>\r\n                          value.map((option, index) => (\r\n                            <Chip variant=\"outlined\" size=\"small\" label={option.label} {...getTagProps({ index })} />\r\n                          ))\r\n                        }\r\n                        renderInput={(params) => (\r\n                          <TextField\r\n                            {...params}\r\n                            label=\"Gemstone Shape\"\r\n                            margin=\"dense\"\r\n                            variant=\"outlined\"\r\n                            fullWidth\r\n                            InputProps={{\r\n                              ...params.InputProps,\r\n                              type: \"search\",\r\n                            }}\r\n                          />\r\n                        )}\r\n                      />\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.gemstoneShape}\r\n                      </TableCell>\r\n                    )}\r\n                  {btnEdit.action && btnEdit.id == row.id ? (\r\n                    <TableCell align=\"center\">\r\n                      <Button onClick={(e) => GemstoneSave(row.id)}>\r\n                        <SaveIcon />\r\n                      </Button>\r\n                    </TableCell>\r\n                  ) : (\r\n                      <TableCell align=\"center\">\r\n                        <Button onClick={(e) => GemstoneEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                </TableRow>\r\n              ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.gemstone && props.gemstone.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditGemstone diamond={editcontent} onApply={GemstoneSave} onClose={handleApplicationClose} open={openedit} />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react';\r\n\r\nimport clsx from 'clsx';\r\nimport {lighten, makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\nimport Table from '@material-ui/core/Table';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {Paper, TextField} from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Link from '@material-ui/core/Link'\r\nimport { Query, withApollo } from 'react-apollo';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Switch,Grid,FormControlLabel } from '@material-ui/core';\r\nimport { useMutation,useQuery } from '@apollo/react-hooks';\r\nimport Moment from 'react-moment';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport CancelIcon from '@material-ui/icons/CancelOutlined';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport EnhancedTableHead from '../../../../components/EnhancedTableHead'\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n// const columns = [\r\n//   { id: 'name', label: 'Name' },\r\n//   { id: 'vendorcode', label: 'Vendor Code' },\r\n//   { id: 'Address', label: 'Address' },\r\n//   { id: 'City', label: 'City' },\r\n//   { id: 'gstNo', label: 'gstNo' },\r\n//   { id: 'vendorDelivaryDays', label: 'vendorDelivaryDays' },\r\n//   { id: 'updatedAt', label: 'updated on' },\r\n//   { id: 'actions', label: 'actions' }\r\n\r\n// ];\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n  { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n  { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n  { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n  { id: 'protein', numeric: true, disablePadding: false, label: 'Protein (g)' },\r\n];\r\n\r\n\r\n\r\nconst useToolbarStyles = makeStyles(theme => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = props => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\r\n          Nutrition\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n          \r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: 'auto',\r\n  },\r\n  link: {\r\n    display: 'flex',\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(0.5),\r\n    width: 20,\r\n    height: 20,\r\n  },\r\n}));\r\n\r\nconst   Vendor=(props)=> {\r\n  let history = useHistory();\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(50);\r\n  const [pageCount,setPageCount] = React.useState(0);\r\n  const [offsetValue,setOffsetValue] = React.useState(0)\r\n  const [masterlist,setMasterlist] = React.useState(props.values)\r\n\r\n  const [productlists,setProductlists] = React.useState([])\r\n  const [allproductlists,setAllProductlists] = React.useState([])\r\n  const [mastercategories,setMastercategories] = React.useState([])\r\n  const [masterproducttypes,setMasterproducttypes] = React.useState([])\r\n  const [searchtext,setSearchtext] = React.useState('')\r\n  const [editcontent,setEditcontent] = React.useState({})\r\n  const [isadd,setIsadd] = React.useState(false)\r\n  const [isedit,setIsedit] = React.useState(false)\r\n\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: ''\r\n  })\r\n  function addnewvendor()\r\n  {\r\n    setEditcontent({\r\n      ...editcontent,\r\n      isedit : false\r\n    })\r\n    let masters = masterlist;\r\n    masters.insert(0, []);\r\n\r\n    setMasterlist(masters)\r\n     setIsadd(true)\r\n     setBtnEdit({ ...btnEdit, id:null, action: true })\r\n\r\n  }\r\n  Array.prototype.insert = function ( index, item ) {\r\n    this.splice( index, 0, item );\r\n};\r\n  function Editvendor(vendordata) {\r\n    delete vendordata['action'];\r\n\r\n    \r\n    setEditcontent({\r\n      ...editcontent,\r\n      ...vendordata,\r\n      isedit : true\r\n    })\r\n\r\n    setBtnEdit({ ...btnEdit, id:vendordata.id, action: true })\r\n\r\n  }\r\n  async function Savevendor(refetch) {\r\n      props.onCreate(editcontent)\r\n      setIsadd(false)\r\n  //  let response =  await sendNetworkRequest('/updatetax', {}, editcontent)\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n   // refetch()\r\n  }\r\n  function Cancelcreate() {\r\n\r\n    props.onCancel();\r\n\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  function searrchcontent()\r\n  {\r\n    props.onSearch(editcontent.searchcontent)\r\n\r\n  }\r\n  \r\n  function CancelEdit(diamondData) {\r\n   if(isadd)\r\n   {\r\n     let masters = masterlist;\r\n\r\n    masters.splice(0, 1)\r\n    setMasterlist(masterlist)\r\n\r\n   }\r\n      setIsadd(false)\r\n    setEditcontent({})\r\n    setBtnEdit({ ...btnEdit, id:'', action: false })\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n}\r\nconst handleoptionChange = type => (event, value) => {\r\n  setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n}\r\nconst handleSearchChange = type => e => {\r\n  props.onSearch(e.target.value)\r\n}\r\nconst handleChange = type => (event) => {\r\n  setEditcontent({ ...editcontent, [type]: event.target.checked  })\r\n\r\n};\r\n  // const emptyRows = rowsPerPage - Math.min(rowsPerPage, props.contactlist.length - page * rowsPerPage);\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('hsnNumber');\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n    setOffsetValue(newPage*rowsPerPage)\r\n\r\n  }\r\n\r\n  useEffect( () => {\r\n  \r\n    setMasterlist(props.values)\r\n  }, [props.values])\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n\r\n  }\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    console.info('You clicked a breadcrumb.');\r\n  }\r\n  \r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    \r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n\r\n\r\n\r\n  };\r\n  \r\n  return (\r\n    <Paper className={classes.root}>\r\n      \r\n      \r\n      {/* <Filterandsearch applyfilter={applyfilter} mastercategory={mastercategories} masterproducttype={masterproducttypes} searchproduct={searchproduct} /> */}\r\n      <div className={classes.tableWrapper}>\r\n        <Table className={classes.table} border={1} borderColor={\"#ddd\"} size=\"small\" stickyHeader>\r\n        {/* <TableHead>\r\n            <TableRow>\r\n              {columns.map(column => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead> */}\r\n           <EnhancedTableHead\r\n              columns={props.columns}\r\n              classes={classes}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n            />\r\n          <TableBody>\r\n          {masterlist.map((row, index) => (\r\n            <>\r\n           \r\n            \r\n            <TableRow>\r\n              {props.columns.map((columnname, index) => (\r\n                <>\r\n                {columnname.key === 'action' ?                  \r\n                <TableCell align=\"center\" style = {{width: 20}}>\r\n                   {\r\n                    btnEdit.action && btnEdit.id == row.id  ?  <>\r\n                    <Button  onClick={(e) => Savevendor()}><SaveIcon />\r\n                     </Button>\r\n                     <Button onClick={(e) => CancelEdit(row)}><CancelIcon />\r\n                     </Button></> : <Button onClick={(e) => Editvendor(row)} ><EditIcon />\r\n                </Button>\r\n                    } \r\n              </TableCell> :\r\n                <>\r\n                {btnEdit.action && btnEdit.id == row.id  ?\r\n                <TableCell align=\"left\">\r\n                {columnname.type === 2 ?  <Switch\r\n                  onChange={handleChange(columnname.key)}\r\n                  checked={editcontent[columnname.key]}\r\n                  color=\"primary\"\r\n                  name=\"checkedB\"\r\n                  inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                /> : null}  \r\n                 {columnname.type === 6 ?     <Button variant=\"outlined\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                {columnname.type == 3 ? \r\n                  <Autocomplete\r\n                  multiple\r\n                  id=\"combo-box-demo\"\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                 {columnname.type == 5 ? \r\n                  <Autocomplete\r\n                  \r\n                  id=\"combo-box-demo\"\r\n                  options={props.masters[columnname.mastervaluekey]}\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  options={columnname.mastervaluekey ? props.masters[columnname.mastervaluekey] : props.masters}\r\n                  onChange={handleoptionChange(columnname.defaultkey)}\r\n                  value={editcontent[columnname.defaultkey]}\r\n                  getOptionLabel={(option) => option.name}\r\n                  renderInput={(params) => <TextField {...params} label={columnname.label} variant=\"outlined\" />}\r\n                /> : null }\r\n                {columnname.type == 4 ?\r\n                <Typography> {row[columnname.key]}</Typography> : null}\r\n                 {columnname.type == 8 ?\r\n                <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                View\r\n               </Button> \r\n                : null}\r\n                {!columnname.type || columnname.type == 1 ? <TextField\r\n                      variant=\"outlined\"\r\n                      margin=\"dense\"\r\n                      \r\n                      id={columnname.key}\r\n                      name={columnname.key}\r\n                      value={editcontent[columnname.key]}\r\n                      onChange={handleInputChange(columnname.key)}\r\n  \r\n                      label={columnname.label}\r\n                     />:null }  </TableCell>  :\r\n                   <TableCell>\r\n                {/* {columnname.type === 8 ?\r\n                  <Button\r\n                  color=\"primary\"\r\n                  component={RouterLink}\r\n                  size=\"small\"\r\n                  to={'/management/invoices/1'}\r\n                  variant=\"outlined\"\r\n                >\r\n                  View\r\n                </Button>\r\n                : null} */}\r\n\r\n                          {columnname.type == 8 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                 View\r\n                                                </Button> : null}  \r\n                      {columnname.type === 6 ?     <Button onClick={() => props.onPermissionadd(row)} variant=\"outlined\" size=\"small\" color=\"primary\">\r\n                                                  {columnname.controllabel}\r\n                                                </Button> : null}  \r\n                      {columnname.type === 2 ?  <Switch\r\n                        color=\"primary\"\r\n                        name=\"checkedB\"\r\n                        onChange={handleInputChange(columnname.key)}\r\n                        checked={row[columnname.key]}\r\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                      /> : null}  \r\n         {columnname.type != 2 && columnname.type != 6 &&  columnname.type != 8  ?  <Typography> {isNaN(row[columnname.key]) ? row[columnname.key] :  parseFloat(row[columnname.key]).toFixed(2) }</Typography> : null}  \r\n\r\n                     \r\n                    </TableCell>\r\n                }\r\n                    </>\r\n                \r\n\r\n                }\r\n                </>\r\n              ))}\r\n            </TableRow>\r\n            </>\r\n          ))}\r\n\r\n          \r\n          {/* {emptyRows > 0 && (\r\n              <TableRow style={{ height: 48 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}  */}\r\n          </TableBody>\r\n         \r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\nexport default withApollo(Vendor);\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport Mastercontent from './Components/Mastercontent/Mastercontent';\r\nimport columnnames from './columnnames.json';\r\n\r\nexport default function ResponsiveDialog(props) {\r\n  const [open, setOpen] = React.useState(true);\r\n  const theme = useTheme();\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState('lg');\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    props.onClose()\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <Dialog\r\n      fullWidth={fullWidth}\r\n      maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">{\"Price Summary\"}</DialogTitle>\r\n        <DialogContent>\r\n        <Mastercontent title= {\"Metal Colours\"} button_title=\"\"   columns={columnnames.pricesummary} values={props.values}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n       \r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport { Paper, Card, CardHeader, CardContent, Grid, Snackbar, Button } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport \"./upload.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { IMAGEDELETE } from \"../../graphql/query\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { GRAPHQL_DEV_CLIENT } from \"../../config\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    height: 100,\r\n    marginTop: theme.spacing(3),\r\n  },\r\n\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n  styleFile: {\r\n    paddingTop: \"10px\",\r\n  },\r\n  card: {\r\n    minHeight: \"150px\",\r\n    textAlign: \"left\",\r\n    boxShadow: \"0 1px 2px 0 rgba(60,64,67,.3), 0 1px 3px 1px rgba(60,64,67,.15)\",\r\n  },\r\n  formContainer: {\r\n    paddingLeft: 40,\r\n    paddingRight: 40,\r\n    paddingTop: 20,\r\n    paddingBottom: 30,\r\n  },\r\n}));\r\n\r\nexport default function Productimages(props) {\r\n  const classes = useStyles2();\r\n  let image_count = 0;\r\n  let product_id = \"\";\r\n  const [success, setSuccess] = React.useState(false);\r\n  const [productimages, setProductimages] = React.useState(props.prodimages);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  product_id = useLocation().pathname.split('/').pop()\r\n\r\n  React.useEffect(() => {\r\n    setProductimages(props.prodimages);\r\n  }, [props.prodimages]);\r\n\r\n  productimages.forEach((imgobj) => {\r\n    console.log();\r\n    image_count = image_count + 1;\r\n    if (imgobj.productId) {\r\n      product_id = imgobj.productId;\r\n    }\r\n  });\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    setSuccess(false);\r\n  };\r\n  const deleteImage = async (imageData) => {\r\n    const url = GRAPHQL_DEV_CLIENT;\r\n    const opts = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        query: IMAGEDELETE,\r\n        variables: { productimageid: imageData.id },\r\n      }),\r\n    };\r\n\r\n    await fetch(url, opts)\r\n      .then((res) => res.json())\r\n      .then((fatchvalue) => {\r\n        fatchvalue.statuscode = 200 && window.location.reload();\r\n      })\r\n      .catch(console.error);\r\n  };\r\n  const handlenewAssetChange = (e) => {\r\n    const files = e.target.files;\r\n    Object.keys(files).map((file, index) => {\r\n      var imagecount = 1;\r\n      if (productimages) {\r\n        imagecount = image_count + 1;\r\n      }\r\n      let imagename = product_id + \"-\" + imagecount;\r\n      const fileParts = files[index].type.split(\"/\");\r\n      const fileType = fileParts[1];\r\n\r\n      uploadimagetoserver(files[index], fileType, imagename, product_id, {}, false);\r\n    });\r\n  };\r\n\r\n  async function uploadimagetoserver(fileobj, filetype, imagename, prodid, imagecontent, isedit) {\r\n    let responsedata = await sendNetworkRequest(\r\n      \"/uploadimage\",\r\n      {},\r\n      { image: filetype, filename: imagename, product_id: prodid },\r\n      false\r\n    );\r\n\r\n    var returnData = responsedata.data.returnData;\r\n    var signedRequest = returnData.signedRequest;\r\n    var url = returnData.url;\r\n    var filepathname = returnData.filepath;\r\n    filepathname = filepathname.replace(\"base_images\", \"product/\" + prodid);\r\n    var options = {\r\n      headers: {\r\n        \"Content-Type\": filetype,\r\n        // \"Access-Control-Allow-Origin\": \"*\",\r\n      },\r\n    };\r\n\r\n    if (!isedit) {\r\n      const imageobj = {\r\n        name: product_id + \"_\" + (image_count + 1),\r\n        imagePosition: image_count + 1,\r\n        productColor: props.color,\r\n        productId: product_id,\r\n        imageUrl: url,\r\n        url: \"https://s3.ap-south-1.amazonaws.com/styloribaseimages/\" + filepathname,\r\n      };\r\n      imagecontent = imageobj;\r\n    }\r\n\r\n    if (!isedit) {\r\n      var productimgs = [];\r\n      productimages.forEach((img) => {\r\n        productimgs.push(img);\r\n      });\r\n      productimgs.push(imagecontent);\r\n    }\r\n\r\n    await axios.put(signedRequest, fileobj, options);\r\n    let responsecontent = await sendNetworkRequest(\"/updateproductimage\", {}, { imageobj: imagecontent, isedit: isedit }, false);\r\n    responsecontent.statuscode === 200 && setSuccess(true);\r\n    setTimeout(function () {\r\n      responsecontent.statuscode === 200 && window.location.reload();\r\n    }, 2500);\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardHeader title={props.color && props.isdefault ? props.color + \" (Default Colour)\" : props.color} />\r\n        <CardContent>\r\n          <Grid container spacing={2} className={classes.styleFile}>\r\n            {productimages.map((url, index) => (\r\n              <React.Fragment key={url.id}>\r\n                <div style={{ position: \"relative\" }}>\r\n                  <i\r\n                    className=\"fa fa-window-edit\"\r\n                    style={{\r\n                      position: \"absolute\",\r\n                      right: 10,\r\n                      top: 11,\r\n                      color: \"red\",\r\n                      zIndex: \"12\",\r\n                    }}\r\n                  />\r\n\r\n                  <Grid\r\n                    item\r\n                    style={{\r\n                      width: \"150px\",\r\n                      wordBreak: \"break-all\",\r\n                      height: \"150px\",\r\n                      padding: \"8px\",\r\n                      margin: \"0\",\r\n                      // cursor: \"pointer\",\r\n                      position: \"relative\",\r\n                    }}\r\n                    className=\"container\"\r\n                  >\r\n                    <img\r\n                      src={url.imageUrl}\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        borderRadius: \"4px\",\r\n                      }}\r\n                      alt=\"product images\"\r\n                    />\r\n                  </Grid>\r\n                  <Button variant=\"outlined\" style={{ margin: \"auto\", display: \"flex\" }} onClick={() => deleteImage(url)}>\r\n                    <DeleteIcon style={{ color: \"grey\" }} />\r\n                  </Button>\r\n                  <br />\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h5\">\r\n                    {\" \"}\r\n                    {index + 1}{\" \"}\r\n                  </Typography>\r\n\r\n                  <Typography style={{ textAlign: \"center\" }} variant=\"h6\">\r\n                    {\" \"}\r\n                    {url.ishover ? \"hover\" : \"\"}{\" \"}\r\n                  </Typography>\r\n                </div>\r\n                {/* ) : null} */}\r\n              </React.Fragment>\r\n            ))}\r\n            <Grid\r\n              item\r\n              style={{\r\n                width: \"150px\",\r\n                wordBreak: \"break-all\",\r\n                height: \"150px\",\r\n                padding: \"8px\",\r\n                margin: \"0\",\r\n                cursor: \"pointer\",\r\n                textAlign: \"center\",\r\n                position: \"relative\",\r\n              }}\r\n              className=\"container\"\r\n            >\r\n              {\r\n                <label className=\"custom-file-upload\" style={{ display: \"flex\" }}>\r\n                  <i\r\n                    className=\"fa fa-plus\"\r\n                    aria-hidden=\"true\"\r\n                    style={{\r\n                      color: \"rgba(60,64,67,.15)\",\r\n                      fontSize: \"45px\",\r\n                      margin: \"auto\",\r\n                    }}\r\n                  ></i>\r\n                  <input type=\"file\" className=\"custom-file-input\" onChange={(e) => handlenewAssetChange(e)}></input>\r\n                </label>\r\n              }\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      <Snackbar open={success} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose}>Image Upload Successfully...</Alert>\r\n      </Snackbar>\r\n    </Paper>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  Chip,\r\n  TextField,\r\n  Typography,\r\n  colors,\r\n  Input\r\n} from '@material-ui/core';\r\nimport { ProductContext } from '../../../../context';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\n//import getInitials from 'utils/getInitials';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: 960\r\n  },\r\n  header: {\r\n    padding: theme.spacing(3),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  content: {\r\n    padding: theme.spacing(2, 2),\r\n    maxWidth: 720,\r\n    margin: '0 auto'\r\n  },\r\n  helperText: {\r\n    textAlign: 'right',\r\n    marginRight: 0\r\n  },\r\n  author: {\r\n    margin: theme.spacing(4, 0),\r\n    display: 'flex'\r\n  },\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  actions: {\r\n    backgroundColor: colors.grey[100],\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    justifyContent: 'center'\r\n  },\r\n  applyButton: {\r\n    color: theme.palette.white,\r\n    backgroundColor: colors.green[600],\r\n    '&:hover': {\r\n      backgroundColor: colors.green[900]\r\n    }\r\n  }\r\n}));\r\n\r\nconst EditPrice = props => {\r\n  const { diamond, open, onClose, onApply, className, ...rest } = props;\r\n  const initialValues = {\r\n    id : diamond.id,\r\n    editcostprice:diamond.editcostprice,\r\n    editcostpricetax: diamond.editcostpricetax,\r\n    editsellingprice:diamond.editsellingprice,\r\n    editsellingpricetax:diamond.editsellingpricetax,\r\n    editmarkupprice: diamond.editmarkupprice,\r\n    editmarkuppricetax : diamond.editmarkuppricetax,\r\n    editdiscountprice: diamond.editdiscountprice,\r\n    editdiscountpricetax: diamond.editdiscountpricetax\r\n  }\r\n  const [value, setValue] = useState('');\r\n  const { productCtx, setProductCtx} = React.useContext(ProductContext);\r\n  const [editcontent, setEditcontent] = React.useState({\r\n    ...initialValues\r\n  });\r\n\r\n  const classes = useStyles();\r\n  const handleoptionChange = type => (event, value) => {\r\n    setEditcontent({ ...editcontent, [type]: value  })\r\n\r\n  }\r\n  const handleInputChange = type => e => {\r\n    setEditcontent({ ...editcontent, [type]: e.target.value  })\r\n  }\r\n  const handleChange = event => {\r\n    event.persist();\r\n\r\n    setValue(event.target.value);\r\n  };\r\n  React.useEffect(() => {\r\n  },[editcontent])\r\n \r\n  return (\r\n    <Dialog\r\n      maxWidth=\"lg\"\r\n      onClose={onClose}\r\n      open={open}\r\n    >\r\n      <div\r\n        {...rest}\r\n        className={clsx(classes.root, className)}\r\n      >\r\n        <div className={classes.header}>\r\n          <Typography\r\n            align=\"center\"\r\n            className={classes.title}\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n           Price Details\r\n          </Typography>\r\n          \r\n        </div>\r\n        <div className={classes.content}>\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editcostprice}\r\n              placeholder={\"costPrice\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"costPriceTax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editcostpricetax')}\r\n              value={editcontent.editcostpricetax}\r\n              />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editsellingprice}\r\n              placeholder={\"Selling Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"Selling Pricetax\"\r\n              placeholder=\"Selling Pricetax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editsellingpricetax')}\r\n              value={editcontent.editsellingpricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editmarkupprice}\r\n              placeholder={\"Markup Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkupprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Markup Price Tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editmarkuppricetax')}\r\n              value={editcontent.editmarkuppricetax}\r\n              />\r\n\r\n               <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              value={editcontent.editdiscountprice}\r\n              placeholder={\"Discount Price\"}\r\n              name=\"size\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountprice')}\r\n              />\r\n        <TextField\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              id=\"size\"\r\n              margin=\"dense\"\r\n              label=\"#of Stones\"\r\n              placeholder=\"Discount Price tax\"\r\n              name=\"size\"\r\n              type=\"number\"\r\n              autoComplete=\"size\"\r\n              onChange={handleInputChange('editdiscountpricetax')}\r\n              value={editcontent.editdiscountpricetax}\r\n              />\r\n                 \r\n          \r\n          \r\n        </div>\r\n        <div className={classes.actions}>\r\n          <Button\r\n            className={classes.applyButton}\r\n            onClick={() => onApply(editcontent)}\r\n            variant=\"contained\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nEditPrice.propTypes = {\r\n  diamond: PropTypes.object.isRequired,\r\n  className: PropTypes.string,\r\n  onApply: PropTypes.func,\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default EditPrice;\r\n","import React from \"react\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {\r\n  Typography,\r\n  Button,\r\n  Chip,\r\n  Input,\r\n  CircularProgress,\r\n} from \"@material-ui/core\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditPrice from \"./Components/EditPrice/EditPrice\";\r\n\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { ProductContext } from \"../../context\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Cost Price\", label: \"Cost Price\" },\r\n  { id: \"Cost Price Tax\", label: \"Cost Price Tax\" },\r\n  { id: \"Selling Price\", label: \"Selling Price\" },\r\n  { id: \"Selling Price Tax\", label: \"Selling Price Tax\" },\r\n  { id: \"Markup Price\", label: \"Markup Price\" },\r\n  { id: \"Markup Price Tax\", label: \"Markup Price Tax\" },\r\n  { id: \"Discount Price\", label: \"Discount Price\" },\r\n  { id: \"Discount Price Tax\", label: \"Discount Price Tax\" },\r\n  { id: \"Margin On Sale\", label: \"Margin On Sale\" },\r\n  { id: \"Discount\", label: \"Discount\" },\r\n\r\n  {\r\n    id: \"Disable\",\r\n    label: \"Price Update\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [openedit, setOpenedit] = React.useState(false);\r\n  const [editcontent, setEditcontent] = React.useState(null);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    pricerun: false,\r\n    id: \"\",\r\n  });\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  const handleApplicationOpen = () => {\r\n    setOpenedit(true);\r\n  };\r\n\r\n  const handleApplicationClose = () => {\r\n    setEditcontent(null);\r\n    setOpenedit(false);\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n  // function VariantEdit(id) {\r\n  //   alert(id)\r\n  //   setBtnEdit({ ...btnEdit, id, action: true })\r\n  // }\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    // const re = /^[a-zA-Z \\b]+$/;\r\n    // if (e.target.value === '' || re.test(e.target.value)) {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n    // }\r\n  };\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  async function Skupricesync(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, pricerun: true });\r\n\r\n    let bodydata = {\r\n      req_product_id: diamondData.productId,\r\n      generatedSku: diamondData.generatedSku,\r\n    };\r\n    console.log(JSON.stringify(bodydata));\r\n    await sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n    setBtnEdit({ ...btnEdit, id: \"\", pricerun: false });\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    setEditcontent({\r\n      id: diamondData.generatedSku,\r\n      editcostprice: diamondData.costPrice,\r\n      editcostpricetax: diamondData.costPriceTax,\r\n      editsellingprice: diamondData.sellingPrice,\r\n      editsellingpricetax: diamondData.sellingPriceTax,\r\n      editmarkupprice: diamondData.markupPrice,\r\n      editmarkuppricetax: diamondData.markupPriceTax,\r\n      editdiscountprice: diamondData.discountPrice,\r\n      editdiscountpricetax: diamondData.discountPriceTax,\r\n    });\r\n    //setBtnEdit({ ...btnEdit, id:diamondData.id, action: true })\r\n    // setOpenedit(true)\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(priceobj) {\r\n    var bodydata = {};\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (priceobj.id === skulistdata.generatedSku) {\r\n        skulistdata.costPrice = priceobj.editcostprice;\r\n        skulistdata.costPriceTax = priceobj.editcostpricetax;\r\n        skulistdata.sellingPrice = priceobj.editsellingprice;\r\n        skulistdata.sellingPriceTax = priceobj.editsellingpricetax;\r\n        skulistdata.markupPrice = priceobj.editmarkupprice;\r\n        skulistdata.markupPriceTax = priceobj.editmarkuppricetax;\r\n        skulistdata.discountPrice = priceobj.editdiscountprice;\r\n        skulistdata.discountPriceTax = priceobj.editdiscountpricetax;\r\n\r\n        bodydata[\"costPrice\"] = parseFloat(priceobj.editcostprice);\r\n        bodydata[\"costPriceTax\"] = parseFloat(priceobj.editcostpricetax);\r\n        bodydata[\"sellingPrice\"] = parseFloat(priceobj.editsellingprice);\r\n        bodydata[\"sellingPriceTax\"] = parseFloat(priceobj.editsellingpricetax);\r\n        bodydata[\"markupPrice\"] = parseFloat(priceobj.editmarkupprice);\r\n        bodydata[\"markupPriceTax\"] = parseFloat(priceobj.editmarkuppricetax);\r\n        bodydata[\"discountPrice\"] = parseFloat(priceobj.editdiscountprice);\r\n        bodydata[\"discountPriceTax\"] = parseFloat(\r\n          priceobj.editdiscountpricetax\r\n        );\r\n        bodydata[\"marginOnSalePercentage\"] = parseFloat(\r\n          priceobj.marginOnSalePercentage\r\n        );\r\n\r\n        bodydata[\"generatedSku\"] = priceobj.id;\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    alert(JSON.stringify(bodydata));\r\n    // sendNetworkRequest('/updateskupriceinfo', {}, bodydata)\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n    // setEditcontent(null)\r\n    // setOpenedit(false)\r\n  }\r\n  //   const handleoptionChange = type => (event, value) => {\r\n\r\n  //     setProductCtx({ ...productCtx, [type]: value})\r\n\r\n  // }\r\n  // const handleInputChange = type => e => {\r\n  //   setProductCtx({ ...productCtx, [type]: e.target.value  })\r\n  // }\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {row.generatedSku}\r\n                    </TableCell>\r\n                    {props.displycolumns.indexOf(\"Cost Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editcostprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price\"\r\n                            onChange={handleinputChange(\"editcostprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPrice}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Cost Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editcostpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Cost Price Tax\"\r\n                            onChange={handleinputChange(\"editcostpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {\" \"}\r\n                            {row.costPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Selling Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price\"\r\n                            onChange={handleinputChange(\"editsellingprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Selling Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editsellingpricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Selling Price Tax\"\r\n                            onChange={handleinputChange(\"editsellingpricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            //onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.sellingPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkupprice}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price\"\r\n                            onChange={handleinputChange(\"editmarkupprice\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Markup Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editmarkuppricetax}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Markup Price Tax\"\r\n                            onChange={handleinputChange(\"editmarkuppricetax\")}\r\n\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.markupPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount Price\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountprice}\r\n                            id=\"productname\"\r\n                            onChange={handleinputChange(\"editdiscountprice\")}\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPrice}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount Price Tax\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            fullWidth\r\n                            value={productCtx.editdiscountpricetax}\r\n                            onChange={handleinputChange(\"editdiscountpricetax\")}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount Price Tax\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            // onChange={handleinputChange('productname')}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountPriceTax}{\" \"}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Margin on Sale\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.marginOnSalePercentage}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.discount}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"View\") > -1 ? (\r\n                      <TableCell\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                          onClick={(e) => props.onShow(row.generatedSku)}\r\n                        >\r\n                          Summary\r\n                        </Button>{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Button\r\n                          onClick={(e) => Skupricesync(row)}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          color=\"primary\"\r\n                        >\r\n                          ₹ Run\r\n                        </Button>\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        {btnEdit.pricerun && btnEdit.id == row.generatedSku ? (\r\n                          <CircularProgress size={15} />\r\n                        ) : (\r\n                          <Button\r\n                            onClick={(e) => Skupricesync(row)}\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                          >\r\n                            ₹ Run\r\n                          </Button>\r\n                        )}\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n        {editcontent && (\r\n          <EditPrice\r\n            diamond={editcontent}\r\n            onApply={DiamondSave}\r\n            onClose={handleApplicationClose}\r\n            open={openedit}\r\n          />\r\n        )}\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import { Button, Input, Typography } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport CancelIcon from \"@material-ui/icons/CancelOutlined\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\n\r\nconst columns = [\r\n  { id: \"SKU\", label: \"SKU\" },\r\n  { id: \"Metal Colour\", label: \"Metal Colour\" },\r\n  { id: \"Metal Purity\", label: \"Metal Purity\" },\r\n  { id: \"Gold Weight\", label: \"Gold Weight\" },\r\n  { id: \"Size\", label: \"Size\" },\r\n  { id: \"Vendor lead Time\", label: \"Vendor lead Time\" },\r\n  { id: \"Ready to Ship\", label: \"Ready to Ship\" },\r\n\r\n  { id: \"Default\", label: \"Default\" },\r\n  { id: \"Show PriceBreakup\", label: \"Show PriceBreakup\" },\r\n  {\r\n    id: \"Active\",\r\n    label: \"Active\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n  {\r\n    id: \"Edit\",\r\n    label: \"Edit\",\r\n    align: \"center\",\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  function handleFirstPageButtonClick(event) {\r\n    onChangePage(event, 0);\r\n  }\r\n\r\n  function handleBackButtonClick(event) {\r\n    onChangePage(event, page - 1);\r\n  }\r\n\r\n  function handleNextButtonClick(event) {\r\n    onChangePage(event, page + 1);\r\n  }\r\n\r\n  function handleLastPageButtonClick(event) {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  table: {\r\n    minWidth: 500,\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\",\r\n  },\r\n  fixedTag: {\r\n    padding: 0,\r\n    \"& .MuiOutlinedInput-root\": {\r\n      padding: 0,\r\n    },\r\n  },\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    // marginTop: theme.spacing(2)\r\n  },\r\n  button: {\r\n    margin: theme.spacing(0),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  gempapper: {\r\n    padding: theme.spacing(2),\r\n    marginTop: theme.spacing(2),\r\n    width: \"100%\",\r\n  },\r\n  leftIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  rightIcon: {\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  },\r\n}));\r\n\r\nexport default function Variants(props) {\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const [btnEdit, setBtnEdit] = React.useState({\r\n    action: false,\r\n    id: \"\",\r\n  });\r\n  function CancelEdit(diamondData) {\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n  });\r\n  function handleChangeisdefault(variantId) {}\r\n\r\n  const handleChangeswitch = (name) => (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n\r\n    //  setState({ ...state, [name]: event.target.checked });\r\n  };\r\n  function handleChange(variantId) {\r\n    let variantslist = productCtx.variants;\r\n    variantslist =\r\n      productCtx.variants &&\r\n      productCtx.variants.map((variant, index) => {\r\n        if (variant.id === variantId) {\r\n          let status = variant.isActive\r\n            ? (variant.isActive = false)\r\n            : (variant.isActive = true);\r\n        }\r\n        return variant;\r\n      });\r\n    let filterVariant =\r\n      variantslist &&\r\n      variantslist.filter(\r\n        (filter_data, index) => filter_data.id === variantId\r\n      )[0];\r\n    let editVaraint = {\r\n      id: filterVariant.id,\r\n      isActive: filterVariant.isActive,\r\n    };\r\n    let editVariants = productCtx.editVariants;\r\n    let editStatus =\r\n      editVariants &&\r\n      editVariants.some(\r\n        (check_variant, index) => check_variant.id === variantId\r\n      )\r\n        ? (editVariants =\r\n            editVariants &&\r\n            editVariants.filter(\r\n              (edit_variant_filter, index) =>\r\n                edit_variant_filter.id !== variantId\r\n            ))\r\n        : editVariants.push(editVaraint);\r\n    setProductCtx({\r\n      ...productCtx,\r\n      variants: variantslist,\r\n      editVariants,\r\n    });\r\n  }\r\n  const emptyRows =\r\n    rowsPerPage -\r\n    Math.min(\r\n      rowsPerPage,\r\n      props.variants && props.variants.length - page * rowsPerPage\r\n    );\r\n\r\n  function handleChangePage(event, newPage) {\r\n    setPage(newPage);\r\n  }\r\n  const handleinputChange = (type) => (e) => {\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function handleChangeRowsPerPage(event) {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  }\r\n  function DiamondEdit(diamondData) {\r\n    console.log(diamondData);\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      editleadtime: diamondData.vendorDeliveryTime,\r\n      discount: diamondData.discountDesc,\r\n      editreadytoship: diamondData.isReadyToShip,\r\n      editisdefault: diamondData.isdefault,\r\n      editisactive: diamondData.isActive,\r\n    });\r\n    setBtnEdit({ ...btnEdit, id: diamondData.generatedSku, action: true });\r\n  }\r\n  function DiamondSave(id) {\r\n    var bodydata = {};\r\n\r\n    let list_data = props.variants;\r\n    let Skuchangedata = list_data.map((skulistdata, index) => {\r\n      if (id === skulistdata.generatedSku) {\r\n        skulistdata.vendorDeliveryTime = productCtx.editleadtime;\r\n        skulistdata.isdefault = productCtx.editisdefault;\r\n        skulistdata.isActive = productCtx.editisactive;\r\n        skulistdata.isReadyToShip = productCtx.editreadytoship;\r\n        skulistdata.discountDesc = productCtx.discount;\r\n        bodydata[\"vendorDeliveryTime\"] = productCtx.editleadtime;\r\n        bodydata[\"isdefault\"] = productCtx.editisdefault;\r\n        bodydata[\"isActive\"] = productCtx.editisactive;\r\n        bodydata[\"discount\"] = productCtx.discount;\r\n        bodydata[\"isReadyToShip\"] = productCtx.editreadytoship;\r\n        bodydata[\"generatedSku\"] = id;\r\n        bodydata[\"showPriceBreakup\"] = productCtx.showPriceBreakup;\r\n\r\n        return skulistdata;\r\n      }\r\n      return skulistdata;\r\n    });\r\n    sendNetworkRequest(\"/updateskuinfo\", {}, bodydata);\r\n\r\n    setBtnEdit({ ...btnEdit, id: \"\", action: false });\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <div className={classes.tableWrapper}>\r\n        <Table\r\n          className={classes.table}\r\n          border={1}\r\n          borderColor={\"#ddd\"}\r\n          size=\"small\"\r\n          stickyHeader\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              {props.columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.name === \"Gold Weight\" ? \"Metal Weight\" : column.name}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {props.variants &&\r\n              props.variants\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row) => (\r\n                  <TableRow key={row.id}>\r\n                    {props.displycolumns.indexOf(\"SKU\") > -1 ? (\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {row.generatedSku}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Colour\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.metalColor}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Metal Purity\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.purity}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Gold Weight\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuWeight}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {/* <TableCell align=\"center\" style = {{width: 20}} component=\"th\" scope=\"row\">\r\n                    {row.diamondType}\r\n                  </TableCell> */}\r\n                    {props.displycolumns.indexOf(\"Size\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {row.skuSize}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Vendor lead Time\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.editleadtime}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Vendor Lead Time\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"editleadtime\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.vendorDeliveryTime}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {props.displycolumns.indexOf(\"Discount\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                          <Input\r\n                            className={classes.helperinput}\r\n                            variant=\"outlined\"\r\n                            margin=\"dense\"\r\n                            style={{ width: 40 }}\r\n                            value={productCtx.discount}\r\n                            id=\"productname\"\r\n                            error={\r\n                              productCtx &&\r\n                              productCtx.error_message &&\r\n                              productCtx.error_message.productname\r\n                            }\r\n                            name=\"productname\"\r\n                            label=\"Discount\"\r\n                            //onInput={keyPress.bind(this)}\r\n                            onChange={handleinputChange(\"discount\")}\r\n\r\n                            //onChange={(e)=>handleinputChange(e,'productname')}\r\n                          />\r\n                        ) : (\r\n                          <Typography className={classes.heading}>\r\n                            {row.discountDesc}\r\n                          </Typography>\r\n                        )}{\" \"}\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Ready To Ship\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editreadytoship\r\n                              : row.isReadyToShip\r\n                          }\r\n                          // onChange={()=>handleChange(row.id)}\r\n                          value=\"checkedA\"\r\n                          // onChange={handleChangeswitch('editreadytoship')}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editreadytoship\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Default\") > -1 ? (\r\n                      <TableCell\r\n                        align=\"center\"\r\n                        style={{ width: 40 }}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                      >\r\n                        <Switch\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisdefault\r\n                              : row.isdefault\r\n                          }\r\n                          value=\"checkedA\"\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisdefault\")\r\n                              : null\r\n                          }\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Active\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          // checked={row.showPriceBreakup}\r\n                          checked={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? productCtx.editisactive\r\n                              : row.isActive\r\n                          }\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"editisactive\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n                    {props.displycolumns.indexOf(\"Show PriceBreakup\") > -1 ? (\r\n                      <TableCell style={{ width: 40 }} align=\"center\">\r\n                        <Switch\r\n                          checked={productCtx.showPriceBreakup}\r\n                          onChange={\r\n                            btnEdit.action && btnEdit.id == row.generatedSku\r\n                              ? handleChangeswitch(\"showPriceBreakup\")\r\n                              : null\r\n                          }\r\n                          value=\"checkedA\"\r\n                          inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n                        />\r\n                      </TableCell>\r\n                    ) : null}\r\n\r\n                    {btnEdit.action && btnEdit.id == row.generatedSku ? (\r\n                      <TableCell style={{ width: 20 }} align=\"center\">\r\n                        <Button onClick={(e) => DiamondSave(row.generatedSku)}>\r\n                          <SaveIcon />\r\n                        </Button>\r\n                        <Button onClick={(e) => CancelEdit(row)}>\r\n                          <CancelIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    ) : (\r\n                      <TableCell align=\"center\" style={{ width: 20 }}>\r\n                        <Button onClick={(e) => DiamondEdit(row)}>\r\n                          <EditIcon />\r\n                        </Button>\r\n                      </TableCell>\r\n                    )}\r\n                  </TableRow>\r\n                ))}\r\n            {emptyRows == 0 && (\r\n              <TableRow style={{ height: 1 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25]}\r\n                count={props.variants && props.variants.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </div>\r\n    </Paper>\r\n  );\r\n}\r\n","import {\r\n  Button,\r\n  Chip,\r\n  FormControlLabel,\r\n  Grid,\r\n  Switch,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { useApolloClient, useQuery } from \"react-apollo\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport FullLoader from \"../../components/Loader\";\r\nimport { ProductContext, ProductProvider } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport { PRODUCTDIAMONDTYPES, PRODUCTEDIT } from \"../../graphql/query\";\r\nimport { productCategory } from \"../../services/mapper\";\r\nimport \"../Productupload/Productupload.css\";\r\nimport columnnames from \"./columnnames.json\";\r\nimport SortHeader from \"./Components/SortHeader\";\r\nimport CreateVariant from \"./CreateVariant\";\r\nimport DiamondDetails from \"./DiamondDetails\";\r\nimport GemstoneDetails from \"./GemstoneDetails\";\r\nimport Pricedetails from \"./Pricedetails\";\r\nimport Productimages from \"./Productimages\";\r\nimport Skupricing from \"./Skupricing\";\r\nimport Variants from \"./Variants\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  helperinput: {\r\n    \"& .MuiFormHelperText-root\": {\r\n      color: \"#e53935\",\r\n    },\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n  },\r\n  secondaryHeading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  icon: {\r\n    verticalAlign: \"bottom\",\r\n    height: 20,\r\n    width: 20,\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  column: {\r\n    flexBasis: \"33.33%\",\r\n  },\r\n  helper: {\r\n    borderLeft: `2px solid ${theme.palette.divider}`,\r\n    padding: theme.spacing(1, 2),\r\n  },\r\n  link: {\r\n    color: theme.palette.primary.main,\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      textDecoration: \"underline\",\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Component(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [expand, setExpand] = React.useState(false);\r\n  const [varientcolumns, setVarientcolumns] = React.useState(\r\n    columnnames.defaultvarients\r\n  );\r\n  const [displycolumns, setDisplycolumns] = React.useState(\r\n    columnnames.defaultvarientnames\r\n  );\r\n  const [pricingcolumns, setPricingcolumns] = React.useState(\r\n    columnnames.pricing\r\n  );\r\n  const [displypricingcolumns, setDisplypricingcolumns] = React.useState(\r\n    columnnames.defaultpricing\r\n  );\r\n  const [displycolumnnames, setDisplycolumnnames] = React.useState(\r\n    columnnames.defaultpricingnames\r\n  );\r\n  const [isshowpricesummary, setIsshowpricesummary] = React.useState(false);\r\n  const [pricesummaryvalues, setPricesummaryvalue] = React.useState([]);\r\n\r\n  const [loadopen, setLoadopen] = React.useState(true);\r\n\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const [snackMessage, setSnackMessage] = React.useState({\r\n    message: \"\",\r\n    severity: \"\",\r\n  });\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    createVariant();\r\n    setExpand(isExpanded ? true : false);\r\n  };\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const { productCtx, setProductCtx } = useContext(ProductContext);\r\n\r\n  console.log(productCtx);\r\n  const [state, setstate] = useState({\r\n    create_variant: false,\r\n    duplicate_productName: \"\",\r\n  });\r\n\r\n  let prod_id = props.location.pathname.split(\"/\")[2];\r\n  let product_sku = \"\";\r\n  const classes = useStyle();\r\n  function keyPress(evt) {\r\n    const productname = evt.target.validity.valid\r\n      ? evt.target.value\r\n      : productCtx.productname;\r\n    setProductCtx({ ...productCtx, productname });\r\n  }\r\n  function changeVariant() {\r\n    setstate({ ...state, create_variant: false });\r\n  }\r\n  const handleoptionChange = (type) => (event, value) => {\r\n    setProductCtx({ ...productCtx, [type]: value });\r\n  };\r\n\r\n  const handleinputChange = (type) => (e) => {\r\n    const re = /^[a-zA-Z \\b]+$/;\r\n\r\n    setProductCtx({ ...productCtx, [type]: e.target.value });\r\n  };\r\n\r\n  function dismisspricesummary() {\r\n    setIsshowpricesummary(false);\r\n  }\r\n  function getColumnnames(columnnames, displytype) {\r\n    let displycolumns = [];\r\n    let displycolumnnames = [];\r\n\r\n    columnnames.forEach((element) => {\r\n      displycolumnnames.push(element.name);\r\n      displycolumns.push(element);\r\n    });\r\n    if (displytype === 1) {\r\n      setDisplycolumns(displycolumnnames);\r\n      setVarientcolumns(columnnames);\r\n    } else {\r\n      setPricingcolumns(columnnames);\r\n      setDisplypricingcolumns(displycolumns);\r\n      setDisplycolumnnames(displycolumnnames);\r\n    }\r\n  }\r\n\r\n  let client = useApolloClient();\r\n\r\n  function createVariant() {\r\n    let diamondTypesArray = [];\r\n    productCtx.diamondlist &&\r\n      productCtx.diamondlist.map((diamond_type) => {\r\n        let diamond_data = {\r\n          id: diamond_type.id,\r\n          diamondType: diamond_type.diamondType,\r\n        };\r\n        let status = diamondTypesArray.some(\r\n          (store_dia) => store_dia.diamondType == diamond_type.diamondType\r\n        )\r\n          ? \"\"\r\n          : diamondTypesArray.push(diamond_data);\r\n        return diamond_type;\r\n      });\r\n    productCtx[\"productDiamondTypesArray\"] = diamondTypesArray;\r\n    productCtx[\"oldproductDiamondTypesArray\"] = diamondTypesArray;\r\n\r\n    setProductCtx({\r\n      ...productCtx,\r\n      productCtx,\r\n    });\r\n\r\n    client\r\n      .query({ query: PRODUCTDIAMONDTYPES })\r\n      .then((res) => {\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productDiamondTypes: res.data.allMasterDiamondTypes.nodes,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  async function saveProductEditItem() {\r\n    console.log(productCtx.product_type);\r\n    let productEditItem = {\r\n      productId: prod_id,\r\n      productCategory: productCtx.product_categoy,\r\n      productName: productCtx.productname,\r\n      themes: productCtx.themes,\r\n      styles: productCtx.prod_styles,\r\n      occassions: productCtx.occassions,\r\n      collections: productCtx.collections,\r\n      stonecount: productCtx.stonecount,\r\n      stonecolour: productCtx.stonecolour,\r\n      gender: productCtx.product_gender,\r\n      hashtags: productCtx.hashtags,\r\n      description: productCtx.description,\r\n      minOrderQty: productCtx.minOrderQty,\r\n      maxOrderQty: productCtx.maxOrderQty,\r\n      length: productCtx.length,\r\n      height: productCtx.height,\r\n\r\n      productType: productCtx?.product_type?.label ?? null,\r\n      productMetalColor: productCtx?.productMetalColor ?? null,\r\n      vendorCode: productCtx?.vendorcode?.name ?? null,\r\n      earingBacking: productCtx?.earringbacking?.label ?? null,\r\n      // productSize: \"12,13,14,15\",\r\n    };\r\n    let response = await sendNetworkRequest(\r\n      \"/editproduct\",\r\n      {},\r\n      productEditItem\r\n    );\r\n    window.location.reload();\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(productEditItem));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n\r\n      handleClick();\r\n      console.log(JSON.stringify(productEditItem));\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  }\r\n\r\n  const handledisableproduct = (name) => async (event) => {\r\n    setProductCtx({ ...productCtx, [name]: event.target.checked });\r\n    let bodycontent = {\r\n      productid: prod_id,\r\n      isactive: event.target.checked,\r\n    };\r\n    let esbody = {\r\n      product_id: prod_id,\r\n    };\r\n    var endpoint = \"/reindex\";\r\n    if (event.target.checked) {\r\n      endpoint = \"/esearch_forceindex\";\r\n    }\r\n\r\n    let response = await sendNetworkRequest(\"/disableproduct\", {}, bodycontent);\r\n\r\n    let esresponse = await sendNetworkRequest(endpoint, {}, esbody);\r\n    let updateproductattr = await sendNetworkRequest(\r\n      \"/updateproductattribute\",\r\n      {},\r\n      esbody\r\n    );\r\n\r\n    console.log(\"************\");\r\n    console.log(JSON.stringify(bodycontent));\r\n    if (response) {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"This is successfully saved\",\r\n        severity: \"success\",\r\n      });\r\n      handleClick();\r\n    } else {\r\n      setSnackMessage({\r\n        ...snackMessage,\r\n        message: \"You are not edit product\",\r\n        severity: \"info\",\r\n      });\r\n      handleClick();\r\n    }\r\n  };\r\n  async function showpricesummary(sku) {\r\n    let response = await sendNetworkRequest(\r\n      \"/viewskupricesummary/\" + sku,\r\n      {},\r\n      null\r\n    );\r\n    let price_summary = [];\r\n    let skuprice = response.price_summary.skuprice;\r\n\r\n    let metalprice = response.price_summary.metals;\r\n    metalprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n\r\n    let mateialprice = response.price_summary.materials;\r\n    mateialprice.forEach((element) => {\r\n      let obj = {\r\n        component: element.material_name,\r\n        cost_price: element.cost_price,\r\n        selling_price: element.selling_price,\r\n        markup_price: element.markup,\r\n        discount_price: element.discount_price,\r\n      };\r\n      price_summary.push(obj);\r\n    });\r\n    let obj = {\r\n      component: \"SKU Price\",\r\n      cost_price: skuprice.cost_price,\r\n      selling_price: skuprice.selling_price,\r\n      markup_price: skuprice.markup_price,\r\n      discount_price: skuprice.discount_price,\r\n    };\r\n    price_summary.push(obj);\r\n\r\n    setPricesummaryvalue(price_summary);\r\n    setIsshowpricesummary(true);\r\n  }\r\n  function Skupricesync(product_id) {\r\n    let bodydata = {\r\n      product_sku: [product_id],\r\n    };\r\n    sendNetworkRequest(\"/price_run_latest\", {}, bodydata);\r\n  }\r\n  function Skumarkupsync(diamondData) {\r\n    let bodydata = {\r\n      req_product_id: diamondData,\r\n      pricingcomponent: \"updateskuprice\",\r\n    };\r\n    sendNetworkRequest(\"/productpriceupdate\", {}, bodydata);\r\n  }\r\n  function backProductList() {\r\n    window.location = \"/productlist\";\r\n  }\r\n  useEffect(() => {\r\n    client\r\n      .query({ query: PRODUCTEDIT, variables: { productId: prod_id } })\r\n      .then((res) => {\r\n        setLoadopen(false);\r\n\r\n        var { productListByProductId } = res.data;\r\n        var genders = productListByProductId.gender;\r\n        var productTypes = productListByProductId.productType;\r\n        var earringBackings = productListByProductId.earringBacking;\r\n        var size_obj = productListByProductId.sizeVarient;\r\n        var vendorCodes = productListByProductId.vendorCode;\r\n\r\n        // var productSizes = productListByProductId?.transSkuListsByProductId?.nodes[0]?.skuSize;\r\n        // let productSize_arr = [];\r\n        // if (productSizes != null && productSizes != undefined) {\r\n        //\r\n        //   let productSizeArray = productSizes.split(\",\");\r\n        //   for (let i = 0; i < productSizeArray.length; i++) {\r\n        //\r\n        //     let obj_size = {\r\n        //       sizeValue: productSizeArray[i],\r\n        //     };\r\n        //     productSize_arr.push(obj_size);\r\n        //   }\r\n        // }\r\n\r\n        let sizes_arr = [];\r\n        if (size_obj) {\r\n          let sizes = size_obj.split(\",\");\r\n          sizes.forEach((element) => {\r\n            sizes_arr.push(element);\r\n          });\r\n        }\r\n        let gender_arr = [];\r\n        if (genders) {\r\n          genders = genders.split(\",\");\r\n          genders.forEach((element) => {\r\n            let gender_obj = {\r\n              label: element,\r\n            };\r\n            gender_arr.push(gender_obj);\r\n          });\r\n        }\r\n        let product_type = null;\r\n        if (productTypes !== null && productTypes !== undefined) {\r\n          productTypes = productTypes.split(\",\");\r\n          productTypes.forEach((element) => {\r\n            product_type = {\r\n              label: element,\r\n            };\r\n          });\r\n        }\r\n\r\n        let earring_backing = null;\r\n        if (earringBackings !== null && earringBackings !== undefined) {\r\n          earring_backing = {\r\n            label: earringBackings,\r\n          };\r\n        }\r\n\r\n        let vendor_code = null;\r\n        if (vendorCodes !== null && vendorCodes !== undefined) {\r\n          vendorCodes = vendorCodes.split(\",\");\r\n          vendorCodes.forEach((element) => {\r\n            vendor_code = {\r\n              name: element,\r\n            };\r\n          });\r\n        }\r\n        let defaultcolour = \"\";\r\n        var images_arr = productListByProductId.productImagesByProductId.nodes;\r\n        images_arr.forEach((element) => {\r\n          if (element.isdefault) {\r\n            defaultcolour = element.productColor;\r\n          }\r\n        });\r\n        var metalcolors = [];\r\n        Array.prototype.insert = function (index, item) {\r\n          this.splice(index, 0, item);\r\n        };\r\n\r\n        var unfilterMetalColor =\r\n          productListByProductId?.productMetalcoloursByProductId?.nodes ?? null;\r\n        var metalColor = unfilterMetalColor;\r\n        var metalColor = unfilterMetalColor.filter(function (el) {\r\n          return el.productColor != null;\r\n        });\r\n\r\n        if (\r\n          typeof metalColor !== undefined &&\r\n          metalColor !== null &&\r\n          metalColor !== undefined\r\n        ) {\r\n        } else {\r\n          metalColor = {};\r\n        }\r\n\r\n        let metalcolor =\r\n          productListByProductId.productMetalcoloursByProductId.nodes;\r\n        metalcolor.forEach((colorobj) => {\r\n          if (colorobj.productColor === defaultcolour) {\r\n            colorobj[\"isdefault\"] = true;\r\n            metalcolors.insert(0, colorobj);\r\n          } else {\r\n            colorobj[\"isdefault\"] = false;\r\n            metalcolors.push(colorobj);\r\n          }\r\n        });\r\n\r\n        setProductCtx({\r\n          ...productCtx,\r\n          productname: productListByProductId.productName,\r\n          isactive: productListByProductId.isactive,\r\n          product_type: product_type,\r\n          product_categoy: productListByProductId.productCategory,\r\n          gemstonelist:\r\n            productListByProductId.productGemstonesByProductSku.nodes,\r\n          diamondlist: productListByProductId.productDiamondsByProductSku.nodes,\r\n          variants: productListByProductId.transSkuListsByProductId.nodes,\r\n          productImages: productListByProductId.productImagesByProductId.nodes,\r\n          productMetalColor: metalColor,\r\n          // oldproductMetalColor: metalColor,\r\n          productMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          oldproductMetalPurity:\r\n            productListByProductId.productPuritiesByProductId.nodes,\r\n          variant_size: sizes_arr,\r\n          productmaterials:\r\n            productListByProductId.productMaterialsByProductSku.nodes,\r\n          vendorcode: vendor_code,\r\n          product_gender: gender_arr,\r\n          themes: productListByProductId.productThemesByProductId.nodes,\r\n          prod_styles: productListByProductId.productStylesByProductId.nodes, // productDiamondColor:diamondTypesArray,\r\n          occassions: productListByProductId.productOccassionsByProductId.nodes,\r\n          collections:\r\n            productListByProductId.productCollectionsByProductId.nodes,\r\n          stonecount:\r\n            productListByProductId.productStonecountsByProductId.nodes,\r\n          stonecolour:\r\n            productListByProductId.productStonecolorsByProductId.nodes,\r\n          description:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.transSkuDescriptionsBySkuId?.nodes[0]?.skuDescription,\r\n          minOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.minOrderQty,\r\n          maxOrderQty:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.maxOrderQty,\r\n          height: productListByProductId?.height,\r\n          length: productListByProductId?.length,\r\n          earringbacking: earring_backing,\r\n          hashtags: productListByProductId?.productHashTagsByProductId?.nodes,\r\n          showPriceBreakup:\r\n            productListByProductId?.transSkuListsByProductId?.nodes[0]\r\n              ?.showPriceBreakup,\r\n          // productSize: productSize_arr ?? [{}],\r\n          // productDiamondClarity:diamondClaritySku,\r\n        });\r\n\r\n        setstate({\r\n          ...state,\r\n          duplicate_productName: JSON.parse(\r\n            JSON.stringify(productListByProductId.productName)\r\n          ),\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  }, []);\r\n  // useEffect(() => {\r\n  //   client\r\n  //     .query({ query: ALLMASTERPRODUCTSIZE, variables: { productType: productCtx?.product_type?.label } })\r\n  //     .then((res) => {\r\n  //\r\n  //       let ProductSizeFullData = res?.data?.allMasterRingsSizes?.nodes;\r\n\r\n  //       //\r\n  //       // let FilteredProductSize = null;\r\n  //       // if (productCtx?.product_type?.label !== undefined && productCtx.product_type?.label !== null) {\r\n  //       //   FilteredProductSize = ProductSizeFullData.filter((val) => {\r\n  //       //     return val.productType === productCtx?.product_type?.label;\r\n  //       //   });\r\n  //       // }\r\n  //\r\n  //       setProductCtx({ ...productCtx, masterProductSize: ProductSizeFullData ?? null });\r\n  //       console.log(ProductSizeFullData);\r\n  //     })\r\n  //     .catch(console.error);\r\n  // }, [productCtx?.product_type?.label]);\r\n  return state.create_variant ? (\r\n    <CreateVariant\r\n      productMetalColor={productCtx.productMetalColor}\r\n      productMetalPurity={productCtx.productMetalPurity}\r\n      changeVariant={changeVariant}\r\n      productId={prod_id}\r\n    />\r\n  ) : (\r\n    <Grid container>\r\n      <FullLoader title=\"Getting Product Details\" isopen={loadopen} />\r\n      <React.Fragment>\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackMessage.severity}>\r\n            {snackMessage.message}\r\n          </Alert>\r\n        </Snackbar>\r\n      </React.Fragment>\r\n      <Grid item container spacing={1}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={3}\r\n          lg={3}\r\n          spacing={2}\r\n          style={{ padding: \"15px\", backgroundColor: \"#FFFFFF\" }}\r\n        >\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.productname}\r\n            id=\"productname\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.productname\r\n            }\r\n            name=\"productname\"\r\n            label=\"Product Name\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"productname\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          {/* <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            value={productCtx.product_categoy}\r\n            id=\"product_category\"\r\n            InputProps={{\r\n              readOnly: true,\r\n            }}\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.product_categoy\r\n            }\r\n            name=\"product_category\"\r\n            label=\"Product Category\"\r\n          /> */}\r\n          <Autocomplete\r\n            id=\"product_category\"\r\n            className={classes.helperinput}\r\n            value={productCtx.product_categoy}\r\n            // getOptionLabel={(option) => option.name}\r\n            onChange={handleoptionChange(\"product_categoy\")}\r\n            options={productCtx.masterData.category.map((i) => i.name)}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Category\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.description}\r\n            id=\"description\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.description\r\n            }\r\n            name=\"description\"\r\n            label=\"Description\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"description\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_type}\r\n            getOptionLabel={(option) => option.label}\r\n            onChange={handleoptionChange(\"product_type\")}\r\n            options={productCtx.masterData.product_type}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Type\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            disabled\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.vendorcode}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            onChange={handleoptionChange(\"vendorcode\")}\r\n            options={productCtx?.masterData?.vendorcode}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Ventor Name\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          {productCtx?.product_type?.label === \"Earrings\" ||\r\n          productCtx?.product_type?.label === \"earrings\" ? (\r\n            <Autocomplete\r\n              id=\"free-solo-2-demos\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.earringbacking}\r\n              getOptionLabel={(option) => option.label}\r\n              onChange={handleoptionChange(\"earringbacking\")}\r\n              options={productCtx.masterData.earringbacking}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    label={option.label}\r\n                    {...getTagProps({ index })}\r\n                  />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Earring Backing\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {/* {productCtx?.product_type?.label === \"Rings\" ? (\r\n            <Autocomplete\r\n              mutiple\r\n              id=\"free-solo-2-demo\"\r\n              className={classes.fixedTag}\r\n              value={productCtx.productSize}\r\n              defaultValue={productCtx.productSize}\r\n              getOptionLabel={(option) => (option.sizeValue ? option.sizeValue : \"\")}\r\n              onChange={handleoptionChange(\"productSize\")}\r\n              options={productCtx?.masterProductSize}\r\n              renderTags={(value, getTagProps) =>\r\n                value.map((option, index) => (\r\n                  <Chip variant=\"outlined\" size=\"small\" label={option.sizeValue} {...getTagProps({ index })} />\r\n                ))\r\n              }\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Product Size\"\r\n                  margin=\"dense\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  InputProps={{ ...params.InputProps, type: \"search\" }}\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )} */}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.height}\r\n            id=\"height\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.height\r\n            }\r\n            name=\"height\"\r\n            label=\"Height \"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"height\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.length}\r\n            id=\"length\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.length\r\n            }\r\n            name=\"length\"\r\n            label=\"Width\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"length\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.minOrderQty}\r\n            id=\"minOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.minOrderQty\r\n            }\r\n            name=\"minOrderQty\"\r\n            label=\"Minimum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"minOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />{\" \"}\r\n          <TextField\r\n            className={classes.helperinput}\r\n            variant=\"outlined\"\r\n            margin=\"dense\"\r\n            fullWidth\r\n            // pattern=\"[a-zA-Z]*\"\r\n            value={productCtx.maxOrderQty}\r\n            id=\"maxOrderQty\"\r\n            error={\r\n              productCtx &&\r\n              productCtx.error_message &&\r\n              productCtx.error_message.maxOrderQty\r\n            }\r\n            name=\"maxOrderQty\"\r\n            label=\"Maximum Order Quantity\"\r\n            //onInput={keyPress.bind(this)}\r\n            onChange={handleinputChange(\"maxOrderQty\")}\r\n\r\n            //onChange={(e)=>handleinputChange(e,'productname')}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productmaterials}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.materialName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Product Materials\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{\r\n                  ...params.InputProps,\r\n                  readOnly: true,\r\n                  type: \"search\",\r\n                }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            getOptionLabel={(option) => option.productColor}\r\n            getOptionSelected={(option, value) =>\r\n              option.productColor === value.productColor\r\n            }\r\n            onChange={handleoptionChange(\"productMetalColor\")}\r\n            options={productCtx.masterData.metalcolour}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalColor}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.productColor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Color\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            disabled\r\n            options={[]}\r\n            className={classes.fixedTag}\r\n            value={productCtx.productMetalPurity}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.purity}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Metal Purity\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.product_gender}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) => option.label === value.label}\r\n            onChange={handleoptionChange(\"product_gender\")}\r\n            options={productCtx.masterData.gender}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.label}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Gender\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.themeName\r\n            }\r\n            defaultValue={productCtx.themes}\r\n            options={productCtx.masterData.themes}\r\n            value={productCtx.themes}\r\n            onChange={handleoptionChange(\"themes\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.themeName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            style={{ display: \"none\" }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Themes\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.styleName\r\n            }\r\n            defaultValue={productCtx.prod_styles}\r\n            options={productCtx.masterData.styles}\r\n            onChange={handleoptionChange(\"prod_styles\")}\r\n            value={productCtx.prod_styles}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.styleName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Styles\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.occassions}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.occassionName\r\n            }\r\n            defaultValue={productCtx.occassions}\r\n            options={productCtx.masterData.occasions}\r\n            onChange={handleoptionChange(\"occassions\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.occassionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Occasions\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.collections}\r\n            getOptionLabel={(option) => option.label}\r\n            getOptionSelected={(option, value) =>\r\n              option.label === value.collectionName\r\n            }\r\n            defaultValue={productCtx.collections}\r\n            options={productCtx.masterData.collections}\r\n            onChange={handleoptionChange(\"collections\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.collectionName}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Collections\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"hashtags\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.hashtags}\r\n            getOptionLabel={(option) => option.name}\r\n            getOptionSelected={(option, value) => option.name === value.name}\r\n            options={productCtx.masterData.hashtags}\r\n            onChange={handleoptionChange(\"hashtags\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.name}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Hash Tags\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecount}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecount}\r\n            options={productCtx.masterData.stones}\r\n            onChange={handleoptionChange(\"stonecount\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecount}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"No of Stones\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <Autocomplete\r\n            multiple\r\n            id=\"free-solo-2-demo\"\r\n            className={classes.fixedTag}\r\n            value={productCtx.stonecolour}\r\n            getOptionLabel={(option) => option.label}\r\n            defaultValue={productCtx.stonecolour}\r\n            options={productCtx.masterData.gemstonecolor}\r\n            onChange={handleoptionChange(\"stonecolour\")}\r\n            renderTags={(value, getTagProps) =>\r\n              value.map((option, index) => (\r\n                <Chip\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  label={option.stonecolor}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              ))\r\n            }\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Stone Colour\"\r\n                margin=\"dense\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                InputProps={{ ...params.InputProps, type: \"search\" }}\r\n              />\r\n            )}\r\n          />\r\n          <FormControlLabel\r\n            label={\r\n              productCtx.isactive\r\n                ? \"Disable this product\"\r\n                : \"Enable this product\"\r\n            }\r\n            control={\r\n              <Switch\r\n                checked={productCtx.isactive}\r\n                onChange={handledisableproduct(\"isactive\")}\r\n                value=\"checkedA\"\r\n              />\r\n            }\r\n          />\r\n          <Grid\r\n            item\r\n            container\r\n            style={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"16px\",\r\n            }}\r\n          >\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={(e) => saveProductEditItem()}\r\n              >\r\n                Update\r\n              </Button>\r\n              {/* <Button color=\"default\" style={{  marginLeft:\"16px\" }} variant=\"contained\" onClick={(e) => backProductList()}>\r\n                  Back\r\n              </Button> */}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={9}\r\n          lg={9}\r\n          spacing={2}\r\n          style={{ padding: \"15px\" }}\r\n        >\r\n          <Grid container item md={6}></Grid>\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Diamond Table\r\n          </Grid>\r\n          <DiamondDetails diamond={productCtx.diamondlist} />\r\n          {productCtx.gemstonelist.length > 0 ? (\r\n            <>\r\n              {\" \"}\r\n              <Grid\r\n                style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"28px\" }}\r\n              >\r\n                Gemstone Table\r\n              </Grid>\r\n              <GemstoneDetails gemstone={productCtx.gemstonelist} />{\" \"}\r\n            </>\r\n          ) : null}\r\n\r\n          <Grid style={{}}></Grid>\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              columnnames={columnnames.varients}\r\n              getColumnnames={getColumnnames}\r\n              displytype={1}\r\n            />{\" \"}\r\n          </Grid>\r\n\r\n          <Variants\r\n            variants={productCtx.variants}\r\n            columns={varientcolumns}\r\n            displycolumns={displycolumns}\r\n          />\r\n\r\n          <Grid\r\n            style={{ fontSize: \".9rem\", padding: \"8px\", marginTop: \"16px\" }}\r\n          >\r\n            <SortHeader\r\n              title={\"Pricing Table\"}\r\n              columnnames={pricingcolumns}\r\n              displycolumns={displypricingcolumns}\r\n              getColumnnames={getColumnnames}\r\n              displytype={2}\r\n            />\r\n            <Button\r\n              onClick={(e) => Skupricesync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n            >\r\n              Price Run For This Product\r\n            </Button>\r\n            <span>&nbsp;&nbsp;&nbsp;</span>\r\n            <Button\r\n              onClick={(e) => Skumarkupsync(prod_id)}\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              disabled={true}\r\n            >\r\n              Run Markup For This Product\r\n            </Button>\r\n          </Grid>\r\n          {isshowpricesummary ? (\r\n            <Pricedetails\r\n              onClose={dismisspricesummary}\r\n              values={pricesummaryvalues}\r\n            />\r\n          ) : null}\r\n          <Skupricing\r\n            variants={productCtx.variants}\r\n            onShow={showpricesummary}\r\n            columns={displypricingcolumns}\r\n            displycolumns={displycolumnnames}\r\n          />\r\n          <Grid style={{ fontSize: \".9rem\", padding: \"8px\" }}>\r\n            Product Images\r\n          </Grid>\r\n          {/* {productCtx.productMetalColor.map((colors) => ( */}\r\n          <Productimages\r\n            //color={colors.productColor}\r\n            //isdefault={colors.isdefault}\r\n            prodimages={productCtx.productImages}\r\n          />\r\n          {/* ))} */}\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst useStyles2 = makeStyles((theme) => ({\r\n  progress: {\r\n    margin: \"auto\",\r\n  },\r\n}));\r\n\r\nexport const ProductAttributes = withRouter((props) => {\r\n  const classes = useStyles2();\r\n\r\n  const { data, loading, error } = useQuery(productCategory.query);\r\n\r\n  if (loading)\r\n    return (\r\n      <div className=\"loaderdiv\">\r\n        <CircularProgress className={classes.progress} />\r\n      </div>\r\n    );\r\n  if (error) return <div>error</div>;\r\n\r\n  const _content = (\r\n    <ProductProvider\r\n      value={{ data, mapper: productCategory.mapper, mappertype: \"masterData\" }}\r\n    >\r\n      <Component {...props} />\r\n    </ProductProvider>\r\n  );\r\n  return _content;\r\n});\r\nexport default withRouter(ProductAttributes);\r\n","const route = {\r\n  login: \"/login\",\r\n  dashboard: \"/dashboard\",\r\n  profile: \"/profile\",\r\n  productupload: \"/productupload\",\r\n  configuration: \"/Configuration\",\r\n  vendor: \"/vendorlist\",\r\n  productlist: \"/productlist\",\r\n  orderlist: \"/orderlist\",\r\n  orderdetails: \"/orderdetails/:id\",\r\n  appointmentdetails: \"/appointmentdetails/:id\",\r\n  userorders: \"/orderlist/:userid\",\r\n  userwishlist: \"/userwishlist/:userid\",\r\n  address: \"/address/:userid\",\r\n  cmshome: \"/cmshome\",\r\n\r\n  materiallist: \"/material\",\r\n  mastermaterial: \"/materialmaster\",\r\n  mastercolors: \"/mastercolors\",\r\n  masterpurities: \"/masterpurities\",\r\n  salediscountlist: \"/salediscountlist\",\r\n  voucherdiscountlist: \"/voucherdiscountlist\",\r\n\r\n  producttypes: \"/producttypes\",\r\n  voucherdiscount: \"/voucherdiscount\",\r\n  salediscount: \"/salediscount\",\r\n  priceupdate: \"/priceupdate\",\r\n  priceupload: \"/price_upload\",\r\n  productAttributes: \"/product_attributes\",\r\n  diamondDetails: \"/diamond_details\",\r\n  gemstoneDetails: \"/gemstone-details\",\r\n  variants: \"/variants\",\r\n  images: \"/images\",\r\n  createVariant: \"/create_variant\",\r\n  materiallistpage: \"/newmaterial\",\r\n  editCategory: \"/editcategory\",\r\n  vendorPrice: \"/vendorpricesetup\",\r\n  markupPrice: \"/markuppricesetup\",\r\n  taxsetup: \"/taxsetup\",\r\n  editdiscount: \"/salediscount/:id\",\r\n  editvoucher: \"/voucherdiscount/:id\",\r\n  masterstyles: \"/masterstyles\",\r\n  masterthemes: \"/masterthemes\",\r\n  masteroccassions: \"/masteroccassions\",\r\n  masterpaymentstatus: \"/paymentstatus\",\r\n  mastercollections: \"/collections\",\r\n  masterdesigns: \"/designs\",\r\n  masterorderstatus: \"/orderstatus\",\r\n  shippingzones: \"/zones\",\r\n  shipmentsettings: \"/shipmensettings\",\r\n  shippingattributes: \"/shippingattributes\",\r\n  masterdiamonds: \"/diamonds\",\r\n  diamondsettings: \"/diamondsettings\",\r\n  diamondshapes: \"/diamondshapes\",\r\n  earringbacking: \"/earringbacking\",\r\n  addshippingattributes: \"/addshippingattributes\",\r\n  addtaxattributes: \"/addtaxattributes\",\r\n  userconfiguration: \"/userconfiguration\",\r\n  masterroles: \"/masterroles\",\r\n  manageadminusers: \"/manageadminusers\",\r\n  goldpriceupdate: \"/goldpriceupdate\",\r\n\r\n  manageusers: \"/manageusers\",\r\n\r\n  masterpages: \"/masterpages\",\r\n\r\n  gemsettings: \"/gemstonesettings\",\r\n  gemshapes: \"/gemstoneshapes\",\r\n  gemtypes: \"/gemstonetypes\",\r\n  gender: \"/genders\",\r\n  seo: \"/seopriority\",\r\n  taxsettings: \"/taxsettings\",\r\n  masterattributes: \"/masterattributes\",\r\n  mastercountries: \"/countries\",\r\n  dailyMetalRate: \"/daily_metal_rate\",\r\n\r\n  masterstones: \"/masterstones\",\r\n  masterstonecolors: \"/masterstonecolors\",\r\n  masterstoneshapes: \"/masterstoneshapes\",\r\n  weights: \"/weights\",\r\n  customerdetails: \"/customerdetails/:id\",\r\n\r\n  category: \"/categories\",\r\n\r\n  warehouse: \"/warehouse\",\r\n  holiday_manager: \"/holiday-manager\",\r\n  inventory: \"/inventory\",\r\n\r\n  silverbanner: \"/silverbanner\",\r\n  silverlistingbanner: \"/listingPage\",\r\n  FeaturedProduct: \"/featuredproduct\",\r\n\r\n  Comments: \"/comments\",\r\n  Newarrival: \"/newarrival\",\r\n  Manageappoinment: \"/manageappoinment\",\r\n  Manageshedule: \"/manageshedule\",\r\n  abandoned_cart: \"/cart-details\",\r\n  pricelogs: \"/price-logs\",\r\n  imageUpload:\"/imageUpload\",\r\n\r\n  cmsComponents:\"/cmsComponent\"\r\n};\r\n\r\nexport default route;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    menuButton: {\r\n      marginRight: 36,\r\n     \r\n    },\r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        flex: \"1 0 auto\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        outline: 0,\r\n        zIndex: 1200,\r\n        position: \"fixed\",\r\n        overflowY: \"auto\",\r\n        flexDirection: \"column\",\r\n       \r\n      },\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      padding: theme.spacing(3),\r\n    },\r\n    profile: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      minHeight: 'fit-content'\r\n    },\r\n    avatar: {\r\n      width: 60,\r\n      height: 60\r\n    },\r\n    name: {\r\n      marginTop: theme.spacing(1)\r\n    },\r\n    divider: {\r\n      marginTop: theme.spacing(2)\r\n    },\r\n  }));","import Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { Link as RouterLink, withRouter } from \"react-router-dom\";\r\nimport { GlobalContext, ProductContext } from \"../../context\";\r\nimport { NetworkContext } from \"../../context/NetworkContext\";\r\nimport data from \"../menupages.json\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction SideBar() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx, setProductCtx } = React.useContext(ProductContext);\r\n  const { sendNetworkRequest } = React.useContext(NetworkContext);\r\n  const { isreload, setIsreload } = React.useState(false);\r\n  let accesspages = localStorage.getItem(\"accesspages\");\r\n\r\n  const handleDrawer = () => {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  };\r\n  const handleClick = (type) => (e) => {\r\n    if (\r\n      type === \"Pricing\" ||\r\n      type == \"Inventory & Shipping Setup\" ||\r\n      type == \"Appoinment Management\" ||\r\n      type === \"Orders\"\r\n    ) {\r\n      setGlobalCtx({\r\n        ...globalCtx,\r\n        optionname: type,\r\n        selectedIndex: 5,\r\n        isExpand: !globalCtx.isExpand,\r\n      });\r\n    } else {\r\n      setGlobalCtx({ ...globalCtx, optionname: type, isExpand: false });\r\n    }\r\n  };\r\n  async function getmasterpages() {\r\n    let pageaccess = await sendNetworkRequest(\"/getpageaccess\", {}, {}, true);\r\n    let pages = [];\r\n    let pagepermissions = [];\r\n\r\n    pageaccess.pages.forEach((element) => {\r\n      pages.push(element.pageurl);\r\n      if (element.is_write) {\r\n        pagepermissions.push(element.pageurl);\r\n      }\r\n    });\r\n    // setPages(pageaccess)\r\n    // setGlobalCtx({ ...globalCtx, pageaccess: pages })\r\n    //setIsreload(true)\r\n\r\n    localStorage.setItem(\"accesspages\", pages);\r\n    localStorage.setItem(\"pagepermissions\", pagepermissions);\r\n\r\n    window.location.reload();\r\n  }\r\n  React.useEffect(() => {\r\n    //alert(globalCtx.accesspages)\r\n    if (!accesspages) {\r\n      // getmasterpages()\r\n    } else {\r\n      //  setIsreload(true)\r\n    }\r\n    //setGlobalCtx({...globalCtx,\"accesspages\":pages})\r\n\r\n    console.log(\"pagess\", globalCtx);\r\n  }, []);\r\n  function handleListItemClick(event, index) {\r\n    setGlobalCtx({ ...globalCtx, selectedIndex: index });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n          [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: globalCtx.sideBarOpen,\r\n            [classes.drawerClose]: !globalCtx.sideBarOpen,\r\n          }),\r\n        }}\r\n        open={globalCtx.sideBarOpen}\r\n      >\r\n        <div className={classes.toolbar}>\r\n          <IconButton onClick={handleDrawer}>\r\n            {theme.direction === \"rtl\" ? (\r\n              <ChevronRightIcon />\r\n            ) : (\r\n              <ChevronLeftIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n\r\n        <List>\r\n          {data.menus.map((menuobj, index) => (\r\n            <React.Fragment key={index}>\r\n              {menuobj.submenu ? (\r\n                <>\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <>\r\n                      <ListItem button onClick={handleClick(menuobj.name)}>\r\n                        <ListItemIcon>\r\n                          {/* <InboxIcon /> */}\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Console\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n\r\n                        {globalCtx.isExpand &&\r\n                        globalCtx.optionname === menuobj.name ? (\r\n                          <ExpandLess />\r\n                        ) : (\r\n                          <ExpandMore />\r\n                        )}\r\n                      </ListItem>\r\n                      <Collapse\r\n                        in={\r\n                          globalCtx.isExpand &&\r\n                          globalCtx.optionname === menuobj.name\r\n                        }\r\n                        timeout=\"auto\"\r\n                        unmountOnExit\r\n                      >\r\n                        <List component=\"div\" disablePadding>\r\n                          {menuobj.submenu.map((submenuobj, subindex) => (\r\n                            <React.Fragment key={subindex}>\r\n                              {accesspages &&\r\n                              accesspages.indexOf(submenuobj.url) > -1 ? (\r\n                                <Link\r\n                                  underline=\"none\"\r\n                                  component={RouterLink}\r\n                                  to={submenuobj.url}\r\n                                >\r\n                                  <ListItem\r\n                                    button\r\n                                    className={classes.nested}\r\n                                    selected={\r\n                                      globalCtx.selectedIndex === subindex\r\n                                    }\r\n                                    onClick={(event) =>\r\n                                      handleListItemClick(event, subindex)\r\n                                    }\r\n                                  >\r\n                                    <ListItemIcon>\r\n                                      <img\r\n                                        style={{ width: \"18px\" }}\r\n                                        src={submenuobj.icons}\r\n                                        alt=\"NAC Console\"\r\n                                      ></img>\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary={submenuobj.name} />\r\n                                  </ListItem>\r\n                                </Link>\r\n                              ) : null}\r\n                            </React.Fragment>\r\n                          ))}\r\n                        </List>\r\n                      </Collapse>{\" \"}\r\n                    </>\r\n                  ) : null}\r\n                </>\r\n              ) : (\r\n                <>\r\n                  {\" \"}\r\n                  {accesspages && accesspages.indexOf(menuobj.url) > -1 ? (\r\n                    <Link\r\n                      underline=\"none\"\r\n                      component={RouterLink}\r\n                      to={menuobj.url}\r\n                    >\r\n                      <ListItem\r\n                        button\r\n                        key={\"Product List\"}\r\n                        selected={globalCtx.optionname === menuobj.name}\r\n                        onClick={handleClick(menuobj.name)}\r\n                      >\r\n                        <ListItemIcon>\r\n                          <img\r\n                            style={{ width: \"18px\" }}\r\n                            src={menuobj.icon}\r\n                            alt=\"NAC Icon\"\r\n                          ></img>\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={menuobj.name} />\r\n                      </ListItem>\r\n                    </Link>\r\n                  ) : null}{\" \"}\r\n                </>\r\n              )}\r\n            </React.Fragment>\r\n          ))}\r\n          {/* <Link underline='none' component={RouterLink} to={'/productlist'}>\r\n\r\n            <ListItem button key={\"Product List\"} selected={globalCtx.optionname === 'productlist'} onClick={handleClick('productlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Product List\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <ListItem button  onClick={handleClick('Pricing')}>\r\n              <ListItemIcon>\r\n                <InboxIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Pricing\" />\r\n              {globalCtx.isExpand  && globalCtx.optionname === 'Pricing' ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={globalCtx.isExpand  && globalCtx.optionname === 'Pricing'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/goldpriceupdate'}>\r\n\r\n<ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 5} onClick={event => handleListItemClick(event, 5)}>\r\n  <ListItemIcon>\r\n    <StarBorder />\r\n  </ListItemIcon>\r\n  <ListItemText primary=\"Gold Price Setup\" />\r\n</ListItem>\r\n</Link>\r\n        <Link underline='none' component={RouterLink} to={'/vendorpricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Vendor Price Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/markuppricesetup'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Selling Price Markup Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/salediscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 3} onClick={event => handleListItemClick(event, 3)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Discount Setup\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/priceupdate'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 4} onClick={event => handleListItemClick(event, 4)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Price Run\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse>\r\n      <Link underline='none' component={RouterLink} to={'/manageusers'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Users'} onClick={handleClick('Users')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User List\" />\r\n      </ListItem> \r\n      </Link>\r\n          <Link underline='none' component={RouterLink} to={'/vendorlist'}>\r\n            <ListItem button key={\"Vendorlist\"} selected={globalCtx.optionname === 'vendorlist'} onClick={handleClick('vendorlist')}  >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Vendorlist\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/orderlist'}>\r\n\r\n            <ListItem button key={\"Order List\"}  selected={globalCtx.optionname === 'orderlist'} onClick={handleClick('orderlist')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Order List\"} />\r\n            </ListItem>\r\n            </Link>\r\n          <Link underline='none' component={RouterLink} to={'/configuration'}  >\r\n\r\n            <ListItem button key={\"Configuration\"} selected={globalCtx.optionname === 'configuration'} onClick={handleClick('configuration')} >\r\n            <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n              <ListItemText primary={\"Configuration\"} />\r\n            </ListItem>\r\n            </Link>\r\n            <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n                <ListItem button key={\"Vouchers\"}  selected={globalCtx.optionname === 'Vouchers'} onClick={handleClick('Vouchers')}>\r\n                <ListItemIcon><InboxIcon /> </ListItemIcon>\r\n\r\n                  <ListItemText primary={\"Vouchers\"} />\r\n                </ListItem>\r\n                </Link>\r\n      <Link underline='none' component={RouterLink} to={'/userconfiguration'}>\r\n       <ListItem button selected={globalCtx.optionname === 'Usermanagement'} onClick={handleClick('Usermanagement')}>\r\n        <ListItemIcon>\r\n          <InboxIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary=\"User and Roles Management\" />\r\n      </ListItem> \r\n      </Link> */}\r\n          {/* <Collapse in={globalCtx.isExpand && globalCtx.optionname === 'Discounts'} timeout=\"auto\" unmountOnExit>\r\n        <List component=\"div\" disablePadding>\r\n        <Link underline='none' component={RouterLink} to={'/voucherdiscount'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 1} onClick={event => handleListItemClick(event, 1)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Sales Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n          <Link underline='none' component={RouterLink} to={'/voucherdiscountlist'}>\r\n\r\n          <ListItem button className={classes.nested} selected={globalCtx.selectedIndex === 2} onClick={event => handleListItemClick(event, 2)}>\r\n            <ListItemIcon>\r\n              <StarBorder />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Voucher Discount\" />\r\n          </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Collapse> */}\r\n        </List>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default withRouter(SideBar);\r\n","import { makeStyles, fade } from '@material-ui/core/styles';\r\nconst drawerWidth = 240;\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      color: 'red',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing(7),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 7),\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n    root: {\r\n      display: 'flex',\r\n    },\r\n    appBar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n    },\r\n    appBarShift: {\r\n      marginLeft: drawerWidth,\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n      transition: theme.transitions.create(['width', 'margin'], {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      [theme.breakpoints.down('md')]: {\r\n        marginLeft: \"0px\",\r\n        width:\"100%\"\r\n      },\r\n    },\r\n \r\n    hide: {\r\n      display: 'none',\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n      whiteSpace: 'nowrap',\r\n    },\r\n    drawerOpen: {\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n    },\r\n    drawerClose: {\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.leavingScreen,\r\n      }),\r\n      overflowX: 'hidden',\r\n      width: theme.spacing(7) + 1,\r\n      [theme.breakpoints.up('sm')]: {\r\n        width: theme.spacing(9) + 1,\r\n      },\r\n    },\r\n    toolbar: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'flex-end',\r\n      padding: '0 8px',\r\n      ...theme.mixins.toolbar,\r\n    },\r\n    content: {\r\n      flexGrow: 1,\r\n      width:\"100%\",\r\n      overflow:\"auto\",\r\n      padding: theme.spacing(3),\r\n    },\r\n  }));","import { CssBaseline } from \"@material-ui/core\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { GlobalContext } from \"../../context\";\r\nimport SideBar from \"../SideBar\";\r\nimport \"./style.css\";\r\nimport { useStyles } from \"./styles\";\r\n\r\nfunction PAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const { globalCtx, setGlobalCtx } = React.useContext(GlobalContext);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  function handleProfileMenuOpen(event) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMobileMenuClose() {\r\n    setMobileMoreAnchorEl(null);\r\n  }\r\n\r\n  function handleMenuClose() {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  }\r\n  function handlelogout() {\r\n    localStorage.removeItem(\"accesstoken\");\r\n    window.location = \"/\";\r\n  }\r\n\r\n  function handleDrawer() {\r\n    setGlobalCtx({ ...globalCtx, sideBarOpen: !globalCtx.sideBarOpen });\r\n  }\r\n\r\n  function handleMobileMenuOpen(event) {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem onClick={handlelogout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  const mobileMenuId = \"primary-search-account-menu-mobile\";\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem> */}\r\n      {/* <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem> */}\r\n      <MenuItem onClick={handleProfileMenuOpen}>\r\n        <IconButton\r\n          aria-label=\"account of current user\"\r\n          aria-controls=\"primary-search-account-menu\"\r\n          aria-haspopup=\"true\"\r\n          color=\"inherit\"\r\n        >\r\n          <AccountCircle />\r\n        </IconButton>\r\n        <p>Profile</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: globalCtx.sideBarOpen,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            className=\"hide\"\r\n            edge=\"start\"\r\n            className={classes.hide}\r\n            className={clsx(classes.menuButton, {\r\n              [classes.hide]: globalCtx.sideBarOpen,\r\n            })}\r\n            onClick={handleDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography style={{ color: \"#fff\" }} variant=\"h4\" noWrap>\r\n            NAC jewellery\r\n          </Typography>\r\n\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            {/* <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n      {renderMenu}\r\n    </>\r\n  );\r\n}\r\n\r\nconst PrimaryAppBar = withRouter(PAppBar);\r\n\r\nconst MainWrapper = (props) => {\r\n  const classes = useStyles();\r\n  let { component: Component, ...rest } = props;\r\n\r\n  return (\r\n    <main className={classes.content}>\r\n      <div className={classes.toolbar} />\r\n      <Component {...rest} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport const withAppBar = (component, props) => {\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <PrimaryAppBar {...props} />\r\n      <SideBar {...props} />\r\n      <MainWrapper component={component} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrimaryAppBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport route from \"./route\";\r\nimport { withAppBar } from \"../components/PrimaryAppBar\";\r\n\r\nconst PrivateRoute = (props) => {\r\n  const { component, ...rest } = props;\r\n\r\n  const checkAuth = () => {\r\n    let accesstoken = localStorage.getItem(\"accesstoken\");\r\n    if (accesstoken) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const Component = (props) => withAppBar(component, props);\r\n  return checkAuth() ? (\r\n    rest.path === \"/\" || rest.path === \"/login\" ? (\r\n      <Redirect to={route.productlist} />\r\n    ) : (\r\n      <Component {...rest} />\r\n    )\r\n  ) : (\r\n    <Redirect to={route.login} />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import ApolloClient from \"apollo-boost\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport FeaturedProduct from \"../components/FeaturedProduct/FeaturedProduct.js\";\r\nimport Newarrival from \"../components/Newarrival/NewArrival\";\r\nimport Review from \"../components/Review/Review\";\r\nimport { GlobalContext } from \"../context\";\r\nimport { NetworkProvider } from \"../context/NetworkContext\";\r\nimport { ProductContext } from \"../context/ProductuploadContext\";\r\nimport {\r\n  Addshippingattributes,\r\n  Addtaxattributes,\r\n  CategoryList,\r\n  Configuration,\r\n  Customerdetails,\r\n  Dashboard,\r\n  DiscountList,\r\n  Earringbacking,\r\n  Goldpriceupdate,\r\n  HolidayManager,\r\n  Inventory,\r\n  Login,\r\n  Manageadminusers,\r\n  Manageappoinment,\r\n  ManageShedule,\r\n  Manageusers,\r\n  Markupprice,\r\n  Masterattribute,\r\n  Mastercategories,\r\n  Mastercollections,\r\n  Masterdesigns,\r\n  Masterdiamonds,\r\n  Masterdiamondsettings,\r\n  Masterdiamondshapes,\r\n  Mastergemsettings,\r\n  Mastergemshapes,\r\n  Mastergemtypes,\r\n  Mastergenders,\r\n  Mastermetalcolors,\r\n  Masteroccassions,\r\n  Masterorderstatus,\r\n  Masterpaymentstatus,\r\n  Masterproducttypes,\r\n  Masterpurities,\r\n  Masterroles,\r\n  Masterscreens,\r\n  Masterstonecolors,\r\n  Masterstones,\r\n  Masterstoneshapes,\r\n  Masterstyles,\r\n  Masterthemes,\r\n  Masterweights,\r\n  Materialmaster,\r\n  OrderList,\r\n  OrderManagementDetails,\r\n  Priceupdate,\r\n  Productlist,\r\n  Productupload,\r\n  Salediscount,\r\n  Seopriority,\r\n  Shipmentsettings,\r\n  Shippingattributes,\r\n  Shippingzones,\r\n  Taxsettings,\r\n  Taxsetup,\r\n  Useraddresses,\r\n  Userconfiguration,\r\n  Userwishlist,\r\n  Vendorlist,\r\n  Vendorprice,\r\n  Voucherdiscount,\r\n  VoucherdiscountListing,\r\n  Warehouse,\r\n  AbandonedCart,\r\n  PriceUpload,\r\n  MasterCountry,\r\n  DailyMetalRate,\r\n  PriceLogs,\r\n  ImageUpload,\r\n  AppointmentManagementDetails,\r\n  CmsComponent\r\n} from \"../screens\";\r\nimport Editcategory from \"../screens/CategoryList/components/editpage/editcategory\";\r\nimport newmaterial from \"../screens/CategoryList/components/newmaterial/newmaterial\";\r\nimport cmshome from \"../screens/cms/cmshome\";\r\nimport Silverbanner from \"../screens/cms/silverbanner/silverbanner\";\r\nimport SilverListingbanner from \"../screens/cms/silverbanner/silverListingBanner/silverListingBanner\";\r\nimport { CreateVariant } from \"../screens/ProductEdit/CreateVariant\";\r\nimport { ProductAttributes } from \"../screens/ProductEdit/ProductAttributes\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport route from \"./route\";\r\n\r\nconst MainApp = () => {\r\n  const { globalCtx } = React.useContext(GlobalContext);\r\n  const { productCtx } = React.useContext(ProductContext);\r\n  const client = new ApolloClient({ uri: globalCtx.gqlClient });\r\n\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      {/* <ProductProvider > */}\r\n      <NetworkProvider>\r\n        <Switch>\r\n          <PrivateRoute exact path=\"/\" component={Login} />\r\n          <Route path={route.login} component={Login} />\r\n          <PrivateRoute path={route.dashboard} component={Dashboard} />\r\n          <PrivateRoute path={route.productupload} component={Productupload} />\r\n          <PrivateRoute path={route.configuration} component={Configuration} />\r\n          <PrivateRoute path={route.vendor} component={Vendorlist} />\r\n          <PrivateRoute path={route.productlist} component={Productlist} />\r\n          <PrivateRoute path={route.materiallist} component={CategoryList} />\r\n          <PrivateRoute path={route.editCategory} component={Editcategory} />\r\n          <PrivateRoute path={route.materiallistpage} component={newmaterial} />\r\n          <PrivateRoute path={route.cmshome} component={cmshome} />\r\n          <PrivateRoute\r\n            path={route.producttypes}\r\n            component={Masterproducttypes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.Manageappoinment}\r\n            component={Manageappoinment}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscount}\r\n            component={Voucherdiscount}\r\n          />\r\n          <PrivateRoute path={route.pricelogs} component={PriceLogs} />\r\n          <PrivateRoute path={route.priceupdate} component={Priceupdate} />\r\n          <PrivateRoute path={route.orderlist} component={OrderList} />\r\n          <PrivateRoute path={route.userorders} component={OrderList} />\r\n          <PrivateRoute path={route.address} component={Useraddresses} />\r\n          <PrivateRoute path={route.imageUpload} component={ImageUpload} />\r\n\r\n          <PrivateRoute path={route.vendorPrice} component={Vendorprice} />\r\n          <PrivateRoute path={route.markupPrice} component={Markupprice} />\r\n          <PrivateRoute path={route.salediscount} component={Salediscount} />\r\n          <PrivateRoute path={route.taxsetup} component={Taxsetup} />\r\n          <PrivateRoute path={route.taxsettings} component={Taxsettings} />\r\n          <PrivateRoute path={route.category} component={Mastercategories} />\r\n          <PrivateRoute\r\n            path={route.masterattributes}\r\n            component={Masterattribute}\r\n          />\r\n          <PrivateRoute path={route.masterstones} component={Masterstones} />\r\n          <PrivateRoute\r\n            path={route.masterstonecolors}\r\n            component={Masterstonecolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterstoneshapes}\r\n            component={Masterstoneshapes}\r\n          />\r\n          <PrivateRoute path={route.weights} component={Masterweights} />\r\n          <PrivateRoute\r\n            path={route.masteroccassions}\r\n            component={Masteroccassions}\r\n          />\r\n          <PrivateRoute path={route.masterroles} component={Masterroles} />\r\n          <PrivateRoute path={route.masterpages} component={Masterscreens} />\r\n          <PrivateRoute\r\n            path={route.manageadminusers}\r\n            component={Manageadminusers}\r\n          />\r\n          <PrivateRoute\r\n            path={route.goldpriceupdate}\r\n            component={Goldpriceupdate}\r\n          />\r\n          <PrivateRoute path={route.manageusers} component={Manageusers} />\r\n          <PrivateRoute\r\n            path={route.customerdetails}\r\n            component={Customerdetails}\r\n          />\r\n          <PrivateRoute path={route.userwishlist} component={Userwishlist} />\r\n          <PrivateRoute\r\n            path={route.orderdetails}\r\n            component={OrderManagementDetails}\r\n          />\r\n\r\n         <PrivateRoute\r\n            path={route.appointmentdetails}\r\n            component={AppointmentManagementDetails}\r\n          />\r\n\r\n          <PrivateRoute\r\n            path={route.userconfiguration}\r\n            component={Userconfiguration}\r\n          />\r\n\r\n          <PrivateRoute path={route.masterstyles} component={Masterstyles} />\r\n          <PrivateRoute path={route.masterthemes} component={Masterthemes} />\r\n\r\n          <PrivateRoute\r\n            path={route.mastermaterial}\r\n            component={Materialmaster}\r\n          />\r\n          <PrivateRoute\r\n            path={route.mastercolors}\r\n            component={Mastermetalcolors}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterpurities}\r\n            component={Masterpurities}\r\n          />\r\n          <PrivateRoute\r\n            path={route.salediscountlist}\r\n            component={DiscountList}\r\n          />\r\n          <PrivateRoute\r\n            path={route.voucherdiscountlist}\r\n            component={VoucherdiscountListing}\r\n          />\r\n          <PrivateRoute path={route.editvoucher} component={Voucherdiscount} />\r\n          <PrivateRoute\r\n            path={route.mastercollections}\r\n            component={Mastercollections}\r\n          />\r\n          <PrivateRoute path={route.masterdesigns} component={Masterdesigns} />\r\n          <PrivateRoute\r\n            path={route.masterdiamonds}\r\n            component={Masterdiamonds}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondsettings}\r\n            component={Masterdiamondsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.diamondshapes}\r\n            component={Masterdiamondshapes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.earringbacking}\r\n            component={Earringbacking}\r\n          />\r\n          <PrivateRoute\r\n            path={route.gemsettings}\r\n            component={Mastergemsettings}\r\n          />\r\n          <PrivateRoute path={route.gemshapes} component={Mastergemshapes} />\r\n          <PrivateRoute\r\n            path={route.masterpaymentstatus}\r\n            component={Masterpaymentstatus}\r\n          />\r\n          <PrivateRoute\r\n            path={route.masterorderstatus}\r\n            component={Masterorderstatus}\r\n          />\r\n          <PrivateRoute path={route.shippingzones} component={Shippingzones} />\r\n          <PrivateRoute\r\n            path={route.shippingattributes}\r\n            component={Shippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addshippingattributes}\r\n            component={Addshippingattributes}\r\n          />\r\n          <PrivateRoute\r\n            path={route.addtaxattributes}\r\n            component={Addtaxattributes}\r\n          />\r\n\r\n          <PrivateRoute path={route.gender} component={Mastergenders} />\r\n          <PrivateRoute path={route.seo} component={Seopriority} />\r\n\r\n          <PrivateRoute path={route.gemtypes} component={Mastergemtypes} />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={route.editdiscount}\r\n            component={Salediscount}\r\n          />\r\n\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.productAttributes}/:id`}\r\n            component={ProductAttributes}\r\n          />\r\n          <PrivateRoute\r\n            exact\r\n            path={`${route.createVariant}`}\r\n            component={CreateVariant}\r\n          />\r\n          <PrivateRoute\r\n            path={route.shipmentsettings}\r\n            component={Shipmentsettings}\r\n          />\r\n          <PrivateRoute\r\n            path={route.holiday_manager}\r\n            component={HolidayManager}\r\n          />\r\n          <PrivateRoute path={route.warehouse} component={Warehouse} />\r\n          <PrivateRoute path={route.inventory} component={Inventory} />\r\n          <PrivateRoute path={route.silverbanner} component={Silverbanner} />\r\n          <PrivateRoute path={route.Manageshedule} component={ManageShedule} />\r\n          <PrivateRoute\r\n            path={route.silverlistingbanner}\r\n            component={SilverListingbanner}\r\n          />\r\n          <PrivateRoute\r\n            path={route.FeaturedProduct}\r\n            component={FeaturedProduct}\r\n          />\r\n          <PrivateRoute path={route.Comments} component={Review} />\r\n          <PrivateRoute path={route.Newarrival} component={Newarrival} />\r\n          <PrivateRoute path={route.abandoned_cart} component={AbandonedCart} />\r\n          <PrivateRoute path={route.priceupload} component={PriceUpload} />\r\n          <PrivateRoute\r\n            path={route.mastercountries}\r\n            component={MasterCountry}\r\n          />\r\n          <PrivateRoute\r\n            path={route.dailyMetalRate}\r\n            component={DailyMetalRate}\r\n          />\r\n          <PrivateRoute\r\n            path={route.cmsComponents}\r\n            component={CmsComponent}\r\n          />\r\n        </Switch>\r\n      </NetworkProvider>\r\n      {/* </ProductProvider> */}\r\n    </ApolloProvider>\r\n  );\r\n};\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\nimport { Alerts as Alert } from \"./components\";\r\nimport { AlertProps, AlertContext } from \"./context\";\r\n\r\nclass AppAlert extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    };\r\n  }\r\n\r\n  close = () => {\r\n    this.setState({\r\n      open: false,\r\n      severity: AlertProps.severity.success,\r\n      msg: \"\",\r\n      vertical: AlertProps.vertical.top,\r\n      horizontal: AlertProps.horizontal.center,\r\n    });\r\n  };\r\n\r\n  set = (props) => {\r\n    this.setState({ ...props });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <AlertContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          onclose: this.close,\r\n          setSnack: this.set,\r\n        }}\r\n      >\r\n        {this.state.open ? <Alert {...this.state} onclose={this.close} /> : \"\"}\r\n        {this.props.children}\r\n      </AlertContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppAlert;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport MainApp from \"./routes\";\r\nimport { GlobalProvider } from \"./context\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"./theme\";\r\nimport AppAlert from \"./App.Alert\";\r\n\r\nimport {\r\n  MuiThemeProvider,\r\n  createMuiTheme,\r\n  makeStyles,\r\n} from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// const theme = createMuiTheme({\r\n//   typography: {\r\n//     fontFamily: [\r\n\r\n//       'Roboto'\r\n\r\n//     ].join(','),\r\n//   },\r\n// });\r\nfunction App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <MuiThemeProvider theme={theme}>\r\n        <div className=\"App\">\r\n          <CssBaseline />\r\n          <Router >\r\n            <AppAlert>\r\n              <MainApp />\r\n            </AppAlert>\r\n          </Router>\r\n        </div>\r\n      </MuiThemeProvider>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}